/*! For license information please see bundle.4035a919c6118ff3903a.js.LICENSE.txt */
(()=>{var e={8249:(e,t,n)=>{"use strict";n.r(t),n.d(t,{userAgent:()=>r});const r=""},858:(e,t,n)=>{"use strict";n.r(t),n.d(t,{now:()=>i,timing:()=>s});const r=n.g.process.hrtime(),i=()=>{const e=n.g.process.hrtime(r);return e[0]+e[1]/1e9},s={navigationStart:Date.now()}},5202:(e,t,n)=>{var r=n(176),i=n(5780),s=n(4410),a=n(4853),o=n(4648),l=n(8596),u=n(6397);u.alea=r,u.xor128=i,u.xorwow=s,u.xorshift7=a,u.xor4096=o,u.tychei=l,e.exports=u},176:function(e,t,n){var r;!function(e,i,s){function a(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new a(e),r=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,r&&("object"==typeof r&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,i))||(i.exports=r):this.alea=l}(0,e=n.nmd(e),n.amdD)},8596:function(e,t,n){var r;!function(e,i,s){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,i=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^i,i=i-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^i,t.a=i-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new a(e),r=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,r&&("object"==typeof r&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,i))||(i.exports=r):this.tychei=l}(0,e=n.nmd(e),n.amdD)},5780:function(e,t,n){var r;!function(e,i,s){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new a(e),r=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,r&&("object"==typeof r&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,i))||(i.exports=r):this.xor128=l}(0,e=n.nmd(e),n.amdD)},4648:function(e,t,n){var r;!function(e,i,s){function a(e){var t=this;t.next=function(){var e,n,r=t.w,i=t.X,s=t.i;return t.w=r=r+1640531527|0,n=i[s+34&127],e=i[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=i[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,i,s,a,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),i=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(a=a+1640531527|0,i=0==(n=o[127&s]^=r+a)?i+1:0);for(i>=128&&(o[127&(t&&t.length||0)]=-1),i=127,s=512;s>0;--s)r=o[i+34&127],n=o[i=i+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[i]=r^n;e.w=a,e.X=o,e.i=i}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,r&&(r.X&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,i))||(i.exports=r):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},4853:function(e,t,n){var r;!function(e,i,s){function a(e){var t=this;t.next=function(){var e,n,r=t.x,i=t.i;return e=r[i],n=(e^=e>>>7)^e<<24,n^=(e=r[i+1&7])^e>>>10,n^=(e=r[i+3&7])^e>>>3,n^=(e=r[i+4&7])^e<<7,e=r[i+7&7],n^=(e^=e<<13)^e<<9,r[i]=n,t.i=i+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,r&&(r.x&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,i))||(i.exports=r):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},4410:function(e,t,n){var r;!function(e,i,s){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new a(e),r=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,r&&("object"==typeof r&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,i))||(i.exports=r):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},6397:(e,t,n)=>{var r;!function(i,s){var a,o=this,l=256,u=s.pow(l,6),c=s.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=x(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(i)]:null==e?function(){try{var e;return a&&(e=a.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(i)]}}():e,3),r),p=new f(r),v=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|p.g(4)},v.quick=function(){return p.g(4)/4294967296},v.double=v,x(b(p.S),i),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(s.random=e,t):e})(v,d,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,r=this,i=0,s=r.i=r.j=0,a=r.S=[];for(n||(e=[n++]);i<l;)a[i]=i++;for(i=0;i<l;i++)a[i]=a[s=d&s+e[i%n]+(t=a[i])],a[s]=t;(r.g=function(e){for(var t,n=0,i=r.i,s=r.j,a=r.S;e--;)t=a[i=d&i+1],n=n*l+a[d&(a[i]=a[s=d&s+t])+(a[s]=t)];return r.i=i,r.j=s,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],i=typeof e;if(t&&"object"==i)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==i?e:e+"\0"}function x(e,t){for(var n,r=e+"",i=0;i<r.length;)t[d&i]=d&(n^=19*t[d&i])+r.charCodeAt(i++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=p,x(s.random(),i),e.exports){e.exports=p;try{a=n(6470)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}([],Math)},6823:(e,t,n)=>{var r=n(5948),i=n(3926),s=n(7686),a=n(5265),o=n(1144),l=n(8709),u=n(5068);u.alea=r,u.xor128=i,u.xorwow=s,u.xorshift7=a,u.xor4096=o,u.tychei=l,e.exports=u},5948:function(e,t,n){var r;!function(e,i,s){function a(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new a(e),r=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,r&&("object"==typeof r&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,i))||(i.exports=r):this.alea=l}(0,e=n.nmd(e),n.amdD)},8709:function(e,t,n){var r;!function(e,i,s){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,i=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^i,i=i-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^i,t.a=i-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new a(e),r=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,r&&("object"==typeof r&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,i))||(i.exports=r):this.tychei=l}(0,e=n.nmd(e),n.amdD)},3926:function(e,t,n){var r;!function(e,i,s){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new a(e),r=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,r&&("object"==typeof r&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,i))||(i.exports=r):this.xor128=l}(0,e=n.nmd(e),n.amdD)},1144:function(e,t,n){var r;!function(e,i,s){function a(e){var t=this;t.next=function(){var e,n,r=t.w,i=t.X,s=t.i;return t.w=r=r+1640531527|0,n=i[s+34&127],e=i[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=i[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,i,s,a,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),i=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(a=a+1640531527|0,i=0==(n=o[127&s]^=r+a)?i+1:0);for(i>=128&&(o[127&(t&&t.length||0)]=-1),i=127,s=512;s>0;--s)r=o[i+34&127],n=o[i=i+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[i]=r^n;e.w=a,e.X=o,e.i=i}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,r&&(r.X&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,i))||(i.exports=r):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},5265:function(e,t,n){var r;!function(e,i,s){function a(e){var t=this;t.next=function(){var e,n,r=t.x,i=t.i;return e=r[i],n=(e^=e>>>7)^e<<24,n^=(e=r[i+1&7])^e>>>10,n^=(e=r[i+3&7])^e>>>3,n^=(e=r[i+4&7])^e<<7,e=r[i+7&7],n^=(e^=e<<13)^e<<9,r[i]=n,t.i=i+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,r&&(r.x&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,i))||(i.exports=r):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},7686:function(e,t,n){var r;!function(e,i,s){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new a(e),r=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,r&&("object"==typeof r&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,i))||(i.exports=r):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},5068:(e,t,n)=>{var r;!function(i,s){var a,o=this,l=256,u=s.pow(l,6),c=s.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=x(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(i)]:null==e?function(){try{var e;return a&&(e=a.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(i)]}}():e,3),r),p=new f(r),v=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|p.g(4)},v.quick=function(){return p.g(4)/4294967296},v.double=v,x(b(p.S),i),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(s.random=e,t):e})(v,d,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,r=this,i=0,s=r.i=r.j=0,a=r.S=[];for(n||(e=[n++]);i<l;)a[i]=i++;for(i=0;i<l;i++)a[i]=a[s=d&s+e[i%n]+(t=a[i])],a[s]=t;(r.g=function(e){for(var t,n=0,i=r.i,s=r.j,a=r.S;e--;)t=a[i=d&i+1],n=n*l+a[d&(a[i]=a[s=d&s+t])+(a[s]=t)];return r.i=i,r.j=s,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],i=typeof e;if(t&&"object"==i)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==i?e:e+"\0"}function x(e,t){for(var n,r=e+"",i=0;i<r.length;)t[d&i]=d&(n^=19*t[d&i])+r.charCodeAt(i++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=p,x(s.random(),i),e.exports){e.exports=p;try{a=n(3522)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}([],Math)},719:(e,t,n)=>{var r=n(758),i=n(1167),s=n(6037),a=n(7470),o=n(3624),l=n(7021),u=n(3423);u.alea=r,u.xor128=i,u.xorwow=s,u.xorshift7=a,u.xor4096=o,u.tychei=l,e.exports=u},758:function(e,t,n){var r;!function(e,i,s){function a(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new a(e),r=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,r&&("object"==typeof r&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,i))||(i.exports=r):this.alea=l}(0,e=n.nmd(e),n.amdD)},7021:function(e,t,n){var r;!function(e,i,s){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,i=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^i,i=i-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^i,t.a=i-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new a(e),r=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,r&&("object"==typeof r&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,i))||(i.exports=r):this.tychei=l}(0,e=n.nmd(e),n.amdD)},1167:function(e,t,n){var r;!function(e,i,s){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new a(e),r=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,r&&("object"==typeof r&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,i))||(i.exports=r):this.xor128=l}(0,e=n.nmd(e),n.amdD)},3624:function(e,t,n){var r;!function(e,i,s){function a(e){var t=this;t.next=function(){var e,n,r=t.w,i=t.X,s=t.i;return t.w=r=r+1640531527|0,n=i[s+34&127],e=i[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=i[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,i,s,a,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),i=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(a=a+1640531527|0,i=0==(n=o[127&s]^=r+a)?i+1:0);for(i>=128&&(o[127&(t&&t.length||0)]=-1),i=127,s=512;s>0;--s)r=o[i+34&127],n=o[i=i+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[i]=r^n;e.w=a,e.X=o,e.i=i}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,r&&(r.X&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,i))||(i.exports=r):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},7470:function(e,t,n){var r;!function(e,i,s){function a(e){var t=this;t.next=function(){var e,n,r=t.x,i=t.i;return e=r[i],n=(e^=e>>>7)^e<<24,n^=(e=r[i+1&7])^e>>>10,n^=(e=r[i+3&7])^e>>>3,n^=(e=r[i+4&7])^e<<7,e=r[i+7&7],n^=(e^=e<<13)^e<<9,r[i]=n,t.i=i+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,r&&(r.x&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,i))||(i.exports=r):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},6037:function(e,t,n){var r;!function(e,i,s){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new a(e),r=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,r&&("object"==typeof r&&o(r,n),i.state=function(){return o(n,{})}),i}i&&i.exports?i.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,i))||(i.exports=r):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},3423:(e,t,n)=>{var r;!function(i,s){var a,o=(0,eval)("this"),l=256,u=s.pow(l,6),c=s.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=x(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(i)]:null==e?function(){try{var e;return a&&(e=a.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(i)]}}():e,3),r),p=new f(r),v=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|p.g(4)},v.quick=function(){return p.g(4)/4294967296},v.double=v,x(b(p.S),i),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(s.random=e,t):e})(v,d,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,r=this,i=0,s=r.i=r.j=0,a=r.S=[];for(n||(e=[n++]);i<l;)a[i]=i++;for(i=0;i<l;i++)a[i]=a[s=d&s+e[i%n]+(t=a[i])],a[s]=t;(r.g=function(e){for(var t,n=0,i=r.i,s=r.j,a=r.S;e--;)t=a[i=d&i+1],n=n*l+a[d&(a[i]=a[s=d&s+t])+(a[s]=t)];return r.i=i,r.j=s,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],i=typeof e;if(t&&"object"==i)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==i?e:e+"\0"}function x(e,t){for(var n,r=e+"",i=0;i<r.length;)t[d&i]=d&(n^=19*t[d&i])+r.charCodeAt(i++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=p,x(s.random(),i),e.exports){e.exports=p;try{a=n(2967)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}([],Math)},9742:(e,t)=>{"use strict";t.byteLength=function(e){var t=l(e),n=t[0],r=t[1];return 3*(n+r)/4-r},t.toByteArray=function(e){var t,n,s=l(e),a=s[0],o=s[1],u=new i(function(e,t,n){return 3*(t+n)/4-n}(0,a,o)),c=0,h=o>0?a-4:a;for(n=0;n<h;n+=4)t=r[e.charCodeAt(n)]<<18|r[e.charCodeAt(n+1)]<<12|r[e.charCodeAt(n+2)]<<6|r[e.charCodeAt(n+3)],u[c++]=t>>16&255,u[c++]=t>>8&255,u[c++]=255&t;return 2===o&&(t=r[e.charCodeAt(n)]<<2|r[e.charCodeAt(n+1)]>>4,u[c++]=255&t),1===o&&(t=r[e.charCodeAt(n)]<<10|r[e.charCodeAt(n+1)]<<4|r[e.charCodeAt(n+2)]>>2,u[c++]=t>>8&255,u[c++]=255&t),u},t.fromByteArray=function(e){for(var t,r=e.length,i=r%3,s=[],a=16383,o=0,l=r-i;o<l;o+=a)s.push(u(e,o,o+a>l?l:o+a));return 1===i?(t=e[r-1],s.push(n[t>>2]+n[t<<4&63]+"==")):2===i&&(t=(e[r-2]<<8)+e[r-1],s.push(n[t>>10]+n[t>>4&63]+n[t<<2&63]+"=")),s.join("")};for(var n=[],r=[],i="undefined"!=typeof Uint8Array?Uint8Array:Array,s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",a=0,o=s.length;a<o;++a)n[a]=s[a],r[s.charCodeAt(a)]=a;function l(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function u(e,t,r){for(var i,s,a=[],o=t;o<r;o+=3)i=(e[o]<<16&16711680)+(e[o+1]<<8&65280)+(255&e[o+2]),a.push(n[(s=i)>>18&63]+n[s>>12&63]+n[s>>6&63]+n[63&s]);return a.join("")}r["-".charCodeAt(0)]=62,r["_".charCodeAt(0)]=63},746:(e,t)=>{"use strict";function n(e){var t=32;return(e&=-e)&&t--,65535&e&&(t-=16),16711935&e&&(t-=8),252645135&e&&(t-=4),858993459&e&&(t-=2),1431655765&e&&(t-=1),t}t.INT_BITS=32,t.INT_MAX=2147483647,t.INT_MIN=-1<<31,t.sign=function(e){return(e>0)-(e<0)},t.abs=function(e){var t=e>>31;return(e^t)-t},t.min=function(e,t){return t^(e^t)&-(e<t)},t.max=function(e,t){return e^(e^t)&-(e<t)},t.isPow2=function(e){return!(e&e-1||!e)},t.log2=function(e){var t,n;return t=(e>65535)<<4,t|=n=((e>>>=t)>255)<<3,t|=n=((e>>>=n)>15)<<2,(t|=n=((e>>>=n)>3)<<1)|(e>>>=n)>>1},t.log10=function(e){return e>=1e9?9:e>=1e8?8:e>=1e7?7:e>=1e6?6:e>=1e5?5:e>=1e4?4:e>=1e3?3:e>=100?2:e>=10?1:0},t.popCount=function(e){return 16843009*((e=(858993459&(e-=e>>>1&1431655765))+(e>>>2&858993459))+(e>>>4)&252645135)>>>24},t.countTrailingZeros=n,t.nextPow2=function(e){return e+=0===e,--e,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,1+(e|=e>>>16)},t.prevPow2=function(e){return e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,(e|=e>>>16)-(e>>>1)},t.parity=function(e){return e^=e>>>16,e^=e>>>8,e^=e>>>4,27030>>>(e&=15)&1};var r=new Array(256);!function(e){for(var t=0;t<256;++t){var n=t,r=t,i=7;for(n>>>=1;n;n>>>=1)r<<=1,r|=1&n,--i;e[t]=r<<i&255}}(r),t.reverse=function(e){return r[255&e]<<24|r[e>>>8&255]<<16|r[e>>>16&255]<<8|r[e>>>24&255]},t.interleave2=function(e,t){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e&=65535)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t&=65535)|t<<8))|t<<4))|t<<2))|t<<1))<<1},t.deinterleave2=function(e,t){return(e=65535&((e=16711935&((e=252645135&((e=858993459&((e=e>>>t&1431655765)|e>>>1))|e>>>2))|e>>>4))|e>>>16))<<16>>16},t.interleave3=function(e,t,n){return e=1227133513&((e=3272356035&((e=251719695&((e=4278190335&((e&=1023)|e<<16))|e<<8))|e<<4))|e<<2),(e|=(t=1227133513&((t=3272356035&((t=251719695&((t=4278190335&((t&=1023)|t<<16))|t<<8))|t<<4))|t<<2))<<1)|(n=1227133513&((n=3272356035&((n=251719695&((n=4278190335&((n&=1023)|n<<16))|n<<8))|n<<4))|n<<2))<<2},t.deinterleave3=function(e,t){return(e=1023&((e=4278190335&((e=251719695&((e=3272356035&((e=e>>>t&1227133513)|e>>>2))|e>>>4))|e>>>8))|e>>>16))<<22>>22},t.nextCombination=function(e){var t=e|e-1;return t+1|(~t&-~t)-1>>>n(e)+1}},8764:(e,t,n)=>{"use strict";const r=n(9742),i=n(645),s="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.lW=l,t.h2=50;const a=2147483647;function o(e){if(e>a)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,l.prototype),t}function l(e,t,n){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return h(e)}return u(e,t,n)}function u(e,t,n){if("string"==typeof e)return function(e,t){if("string"==typeof t&&""!==t||(t="utf8"),!l.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const n=0|m(e,t);let r=o(n);const i=r.write(e,t);return i!==n&&(r=r.slice(0,i)),r}(e,t);if(ArrayBuffer.isView(e))return function(e){if(K(e,Uint8Array)){const t=new Uint8Array(e);return p(t.buffer,t.byteOffset,t.byteLength)}return d(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(K(e,ArrayBuffer)||e&&K(e.buffer,ArrayBuffer))return p(e,t,n);if("undefined"!=typeof SharedArrayBuffer&&(K(e,SharedArrayBuffer)||e&&K(e.buffer,SharedArrayBuffer)))return p(e,t,n);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const r=e.valueOf&&e.valueOf();if(null!=r&&r!==e)return l.from(r,t,n);const i=function(e){if(l.isBuffer(e)){const t=0|f(e.length),n=o(t);return 0===n.length||e.copy(n,0,0,t),n}return void 0!==e.length?"number"!=typeof e.length||Y(e.length)?o(0):d(e):"Buffer"===e.type&&Array.isArray(e.data)?d(e.data):void 0}(e);if(i)return i;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return l.from(e[Symbol.toPrimitive]("string"),t,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function c(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function h(e){return c(e),o(e<0?0:0|f(e))}function d(e){const t=e.length<0?0:0|f(e.length),n=o(t);for(let r=0;r<t;r+=1)n[r]=255&e[r];return n}function p(e,t,n){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(n||0))throw new RangeError('"length" is outside of buffer bounds');let r;return r=void 0===t&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,t):new Uint8Array(e,t,n),Object.setPrototypeOf(r,l.prototype),r}function f(e){if(e>=a)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+a.toString(16)+" bytes");return 0|e}function m(e,t){if(l.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||K(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const n=e.length,r=arguments.length>2&&!0===arguments[2];if(!r&&0===n)return 0;let i=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return j(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return q(e).length;default:if(i)return r?-1:j(e).length;t=(""+t).toLowerCase(),i=!0}}function g(e,t,n){let r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return A(this,t,n);case"utf8":case"utf-8":return E(this,t,n);case"ascii":return C(this,t,n);case"latin1":case"binary":return M(this,t,n);case"base64":return I(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return N(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function x(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function b(e,t,n,r,i){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),Y(n=+n)&&(n=i?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(i)return-1;n=e.length-1}else if(n<0){if(!i)return-1;n=0}if("string"==typeof t&&(t=l.from(t,r)),l.isBuffer(t))return 0===t.length?-1:v(e,t,n,r,i);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):v(e,[t],n,r,i);throw new TypeError("val must be string, number or Buffer")}function v(e,t,n,r,i){let s,a=1,o=e.length,l=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;a=2,o/=2,l/=2,n/=2}function u(e,t){return 1===a?e[t]:e.readUInt16BE(t*a)}if(i){let r=-1;for(s=n;s<o;s++)if(u(e,s)===u(t,-1===r?0:s-r)){if(-1===r&&(r=s),s-r+1===l)return r*a}else-1!==r&&(s-=s-r),r=-1}else for(n+l>o&&(n=o-l),s=n;s>=0;s--){let n=!0;for(let r=0;r<l;r++)if(u(e,s+r)!==u(t,r)){n=!1;break}if(n)return s}return-1}function y(e,t,n,r){n=Number(n)||0;const i=e.length-n;r?(r=Number(r))>i&&(r=i):r=i;const s=t.length;let a;for(r>s/2&&(r=s/2),a=0;a<r;++a){const r=parseInt(t.substr(2*a,2),16);if(Y(r))return a;e[n+a]=r}return a}function w(e,t,n,r){return X(j(t,e.length-n),e,n,r)}function _(e,t,n,r){return X(function(e){const t=[];for(let n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function S(e,t,n,r){return X(q(t),e,n,r)}function k(e,t,n,r){return X(function(e,t){let n,r,i;const s=[];for(let a=0;a<e.length&&!((t-=2)<0);++a)n=e.charCodeAt(a),r=n>>8,i=n%256,s.push(i),s.push(r);return s}(t,e.length-n),e,n,r)}function I(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function E(e,t,n){n=Math.min(e.length,n);const r=[];let i=t;for(;i<n;){const t=e[i];let s=null,a=t>239?4:t>223?3:t>191?2:1;if(i+a<=n){let n,r,o,l;switch(a){case 1:t<128&&(s=t);break;case 2:n=e[i+1],128==(192&n)&&(l=(31&t)<<6|63&n,l>127&&(s=l));break;case 3:n=e[i+1],r=e[i+2],128==(192&n)&&128==(192&r)&&(l=(15&t)<<12|(63&n)<<6|63&r,l>2047&&(l<55296||l>57343)&&(s=l));break;case 4:n=e[i+1],r=e[i+2],o=e[i+3],128==(192&n)&&128==(192&r)&&128==(192&o)&&(l=(15&t)<<18|(63&n)<<12|(63&r)<<6|63&o,l>65535&&l<1114112&&(s=l))}}null===s?(s=65533,a=1):s>65535&&(s-=65536,r.push(s>>>10&1023|55296),s=56320|1023&s),r.push(s),i+=a}return function(e){const t=e.length;if(t<=T)return String.fromCharCode.apply(String,e);let n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=T));return n}(r)}l.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),l.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(l.prototype,"parent",{enumerable:!0,get:function(){if(l.isBuffer(this))return this.buffer}}),Object.defineProperty(l.prototype,"offset",{enumerable:!0,get:function(){if(l.isBuffer(this))return this.byteOffset}}),l.poolSize=8192,l.from=function(e,t,n){return u(e,t,n)},Object.setPrototypeOf(l.prototype,Uint8Array.prototype),Object.setPrototypeOf(l,Uint8Array),l.alloc=function(e,t,n){return function(e,t,n){return c(e),e<=0?o(e):void 0!==t?"string"==typeof n?o(e).fill(t,n):o(e).fill(t):o(e)}(e,t,n)},l.allocUnsafe=function(e){return h(e)},l.allocUnsafeSlow=function(e){return h(e)},l.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==l.prototype},l.compare=function(e,t){if(K(e,Uint8Array)&&(e=l.from(e,e.offset,e.byteLength)),K(t,Uint8Array)&&(t=l.from(t,t.offset,t.byteLength)),!l.isBuffer(e)||!l.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let n=e.length,r=t.length;for(let i=0,s=Math.min(n,r);i<s;++i)if(e[i]!==t[i]){n=e[i],r=t[i];break}return n<r?-1:r<n?1:0},l.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},l.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return l.alloc(0);let n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;const r=l.allocUnsafe(t);let i=0;for(n=0;n<e.length;++n){let t=e[n];if(K(t,Uint8Array))i+t.length>r.length?(l.isBuffer(t)||(t=l.from(t)),t.copy(r,i)):Uint8Array.prototype.set.call(r,t,i);else{if(!l.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(r,i)}i+=t.length}return r},l.byteLength=m,l.prototype._isBuffer=!0,l.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)x(this,t,t+1);return this},l.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)x(this,t,t+3),x(this,t+1,t+2);return this},l.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)x(this,t,t+7),x(this,t+1,t+6),x(this,t+2,t+5),x(this,t+3,t+4);return this},l.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?E(this,0,e):g.apply(this,arguments)},l.prototype.toLocaleString=l.prototype.toString,l.prototype.equals=function(e){if(!l.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===l.compare(this,e)},l.prototype.inspect=function(){let e="";const n=t.h2;return e=this.toString("hex",0,n).replace(/(.{2})/g,"$1 ").trim(),this.length>n&&(e+=" ... "),"<Buffer "+e+">"},s&&(l.prototype[s]=l.prototype.inspect),l.prototype.compare=function(e,t,n,r,i){if(K(e,Uint8Array)&&(e=l.from(e,e.offset,e.byteLength)),!l.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===i&&(i=this.length),t<0||n>e.length||r<0||i>this.length)throw new RangeError("out of range index");if(r>=i&&t>=n)return 0;if(r>=i)return-1;if(t>=n)return 1;if(this===e)return 0;let s=(i>>>=0)-(r>>>=0),a=(n>>>=0)-(t>>>=0);const o=Math.min(s,a),u=this.slice(r,i),c=e.slice(t,n);for(let e=0;e<o;++e)if(u[e]!==c[e]){s=u[e],a=c[e];break}return s<a?-1:a<s?1:0},l.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},l.prototype.indexOf=function(e,t,n){return b(this,e,t,n,!0)},l.prototype.lastIndexOf=function(e,t,n){return b(this,e,t,n,!1)},l.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}const i=this.length-t;if((void 0===n||n>i)&&(n=i),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");let s=!1;for(;;)switch(r){case"hex":return y(this,e,t,n);case"utf8":case"utf-8":return w(this,e,t,n);case"ascii":case"latin1":case"binary":return _(this,e,t,n);case"base64":return S(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return k(this,e,t,n);default:if(s)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),s=!0}},l.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const T=4096;function C(e,t,n){let r="";n=Math.min(e.length,n);for(let i=t;i<n;++i)r+=String.fromCharCode(127&e[i]);return r}function M(e,t,n){let r="";n=Math.min(e.length,n);for(let i=t;i<n;++i)r+=String.fromCharCode(e[i]);return r}function A(e,t,n){const r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);let i="";for(let r=t;r<n;++r)i+=Z[e[r]];return i}function N(e,t,n){const r=e.slice(t,n);let i="";for(let e=0;e<r.length-1;e+=2)i+=String.fromCharCode(r[e]+256*r[e+1]);return i}function R(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function D(e,t,n,r,i,s){if(!l.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>i||t<s)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function L(e,t,n,r,i){W(t,r,i,e,n,7);let s=Number(t&BigInt(4294967295));e[n++]=s,s>>=8,e[n++]=s,s>>=8,e[n++]=s,s>>=8,e[n++]=s;let a=Number(t>>BigInt(32)&BigInt(4294967295));return e[n++]=a,a>>=8,e[n++]=a,a>>=8,e[n++]=a,a>>=8,e[n++]=a,n}function F(e,t,n,r,i){W(t,r,i,e,n,7);let s=Number(t&BigInt(4294967295));e[n+7]=s,s>>=8,e[n+6]=s,s>>=8,e[n+5]=s,s>>=8,e[n+4]=s;let a=Number(t>>BigInt(32)&BigInt(4294967295));return e[n+3]=a,a>>=8,e[n+2]=a,a>>=8,e[n+1]=a,a>>=8,e[n]=a,n+8}function $(e,t,n,r,i,s){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function O(e,t,n,r,s){return t=+t,n>>>=0,s||$(e,0,n,4),i.write(e,t,n,r,23,4),n+4}function P(e,t,n,r,s){return t=+t,n>>>=0,s||$(e,0,n,8),i.write(e,t,n,r,52,8),n+8}l.prototype.slice=function(e,t){const n=this.length;(e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e);const r=this.subarray(e,t);return Object.setPrototypeOf(r,l.prototype),r},l.prototype.readUintLE=l.prototype.readUIntLE=function(e,t,n){e>>>=0,t>>>=0,n||R(e,t,this.length);let r=this[e],i=1,s=0;for(;++s<t&&(i*=256);)r+=this[e+s]*i;return r},l.prototype.readUintBE=l.prototype.readUIntBE=function(e,t,n){e>>>=0,t>>>=0,n||R(e,t,this.length);let r=this[e+--t],i=1;for(;t>0&&(i*=256);)r+=this[e+--t]*i;return r},l.prototype.readUint8=l.prototype.readUInt8=function(e,t){return e>>>=0,t||R(e,1,this.length),this[e]},l.prototype.readUint16LE=l.prototype.readUInt16LE=function(e,t){return e>>>=0,t||R(e,2,this.length),this[e]|this[e+1]<<8},l.prototype.readUint16BE=l.prototype.readUInt16BE=function(e,t){return e>>>=0,t||R(e,2,this.length),this[e]<<8|this[e+1]},l.prototype.readUint32LE=l.prototype.readUInt32LE=function(e,t){return e>>>=0,t||R(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},l.prototype.readUint32BE=l.prototype.readUInt32BE=function(e,t){return e>>>=0,t||R(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},l.prototype.readBigUInt64LE=J((function(e){V(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||G(e,this.length-8);const r=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,i=this[++e]+256*this[++e]+65536*this[++e]+n*2**24;return BigInt(r)+(BigInt(i)<<BigInt(32))})),l.prototype.readBigUInt64BE=J((function(e){V(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||G(e,this.length-8);const r=t*2**24+65536*this[++e]+256*this[++e]+this[++e],i=this[++e]*2**24+65536*this[++e]+256*this[++e]+n;return(BigInt(r)<<BigInt(32))+BigInt(i)})),l.prototype.readIntLE=function(e,t,n){e>>>=0,t>>>=0,n||R(e,t,this.length);let r=this[e],i=1,s=0;for(;++s<t&&(i*=256);)r+=this[e+s]*i;return i*=128,r>=i&&(r-=Math.pow(2,8*t)),r},l.prototype.readIntBE=function(e,t,n){e>>>=0,t>>>=0,n||R(e,t,this.length);let r=t,i=1,s=this[e+--r];for(;r>0&&(i*=256);)s+=this[e+--r]*i;return i*=128,s>=i&&(s-=Math.pow(2,8*t)),s},l.prototype.readInt8=function(e,t){return e>>>=0,t||R(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},l.prototype.readInt16LE=function(e,t){e>>>=0,t||R(e,2,this.length);const n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},l.prototype.readInt16BE=function(e,t){e>>>=0,t||R(e,2,this.length);const n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},l.prototype.readInt32LE=function(e,t){return e>>>=0,t||R(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},l.prototype.readInt32BE=function(e,t){return e>>>=0,t||R(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},l.prototype.readBigInt64LE=J((function(e){V(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||G(e,this.length-8);const r=this[e+4]+256*this[e+5]+65536*this[e+6]+(n<<24);return(BigInt(r)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),l.prototype.readBigInt64BE=J((function(e){V(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||G(e,this.length-8);const r=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(r)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+n)})),l.prototype.readFloatLE=function(e,t){return e>>>=0,t||R(e,4,this.length),i.read(this,e,!0,23,4)},l.prototype.readFloatBE=function(e,t){return e>>>=0,t||R(e,4,this.length),i.read(this,e,!1,23,4)},l.prototype.readDoubleLE=function(e,t){return e>>>=0,t||R(e,8,this.length),i.read(this,e,!0,52,8)},l.prototype.readDoubleBE=function(e,t){return e>>>=0,t||R(e,8,this.length),i.read(this,e,!1,52,8)},l.prototype.writeUintLE=l.prototype.writeUIntLE=function(e,t,n,r){e=+e,t>>>=0,n>>>=0,r||D(this,e,t,n,Math.pow(2,8*n)-1,0);let i=1,s=0;for(this[t]=255&e;++s<n&&(i*=256);)this[t+s]=e/i&255;return t+n},l.prototype.writeUintBE=l.prototype.writeUIntBE=function(e,t,n,r){e=+e,t>>>=0,n>>>=0,r||D(this,e,t,n,Math.pow(2,8*n)-1,0);let i=n-1,s=1;for(this[t+i]=255&e;--i>=0&&(s*=256);)this[t+i]=e/s&255;return t+n},l.prototype.writeUint8=l.prototype.writeUInt8=function(e,t,n){return e=+e,t>>>=0,n||D(this,e,t,1,255,0),this[t]=255&e,t+1},l.prototype.writeUint16LE=l.prototype.writeUInt16LE=function(e,t,n){return e=+e,t>>>=0,n||D(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},l.prototype.writeUint16BE=l.prototype.writeUInt16BE=function(e,t,n){return e=+e,t>>>=0,n||D(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},l.prototype.writeUint32LE=l.prototype.writeUInt32LE=function(e,t,n){return e=+e,t>>>=0,n||D(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},l.prototype.writeUint32BE=l.prototype.writeUInt32BE=function(e,t,n){return e=+e,t>>>=0,n||D(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},l.prototype.writeBigUInt64LE=J((function(e,t=0){return L(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),l.prototype.writeBigUInt64BE=J((function(e,t=0){return F(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),l.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t>>>=0,!r){const r=Math.pow(2,8*n-1);D(this,e,t,n,r-1,-r)}let i=0,s=1,a=0;for(this[t]=255&e;++i<n&&(s*=256);)e<0&&0===a&&0!==this[t+i-1]&&(a=1),this[t+i]=(e/s>>0)-a&255;return t+n},l.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t>>>=0,!r){const r=Math.pow(2,8*n-1);D(this,e,t,n,r-1,-r)}let i=n-1,s=1,a=0;for(this[t+i]=255&e;--i>=0&&(s*=256);)e<0&&0===a&&0!==this[t+i+1]&&(a=1),this[t+i]=(e/s>>0)-a&255;return t+n},l.prototype.writeInt8=function(e,t,n){return e=+e,t>>>=0,n||D(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},l.prototype.writeInt16LE=function(e,t,n){return e=+e,t>>>=0,n||D(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},l.prototype.writeInt16BE=function(e,t,n){return e=+e,t>>>=0,n||D(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},l.prototype.writeInt32LE=function(e,t,n){return e=+e,t>>>=0,n||D(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},l.prototype.writeInt32BE=function(e,t,n){return e=+e,t>>>=0,n||D(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},l.prototype.writeBigInt64LE=J((function(e,t=0){return L(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),l.prototype.writeBigInt64BE=J((function(e,t=0){return F(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),l.prototype.writeFloatLE=function(e,t,n){return O(this,e,t,!0,n)},l.prototype.writeFloatBE=function(e,t,n){return O(this,e,t,!1,n)},l.prototype.writeDoubleLE=function(e,t,n){return P(this,e,t,!0,n)},l.prototype.writeDoubleBE=function(e,t,n){return P(this,e,t,!1,n)},l.prototype.copy=function(e,t,n,r){if(!l.isBuffer(e))throw new TypeError("argument should be a Buffer");if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);const i=r-n;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,n,r):Uint8Array.prototype.set.call(e,this.subarray(n,r),t),i},l.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!l.isEncoding(r))throw new TypeError("Unknown encoding: "+r);if(1===e.length){const t=e.charCodeAt(0);("utf8"===r&&t<128||"latin1"===r)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;let i;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(i=t;i<n;++i)this[i]=e;else{const s=l.isBuffer(e)?e:l.from(e,r),a=s.length;if(0===a)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(i=0;i<n-t;++i)this[i+t]=s[i%a]}return this};const z={};function B(e,t,n){z[e]=class extends n{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function U(e){let t="",n=e.length;const r="-"===e[0]?1:0;for(;n>=r+4;n-=3)t=`_${e.slice(n-3,n)}${t}`;return`${e.slice(0,n)}${t}`}function W(e,t,n,r,i,s){if(e>n||e<t){const r="bigint"==typeof t?"n":"";let i;throw i=s>3?0===t||t===BigInt(0)?`>= 0${r} and < 2${r} ** ${8*(s+1)}${r}`:`>= -(2${r} ** ${8*(s+1)-1}${r}) and < 2 ** ${8*(s+1)-1}${r}`:`>= ${t}${r} and <= ${n}${r}`,new z.ERR_OUT_OF_RANGE("value",i,e)}!function(e,t,n){V(t,"offset"),void 0!==e[t]&&void 0!==e[t+n]||G(t,e.length-(n+1))}(r,i,s)}function V(e,t){if("number"!=typeof e)throw new z.ERR_INVALID_ARG_TYPE(t,"number",e)}function G(e,t,n){if(Math.floor(e)!==e)throw V(e,n),new z.ERR_OUT_OF_RANGE(n||"offset","an integer",e);if(t<0)throw new z.ERR_BUFFER_OUT_OF_BOUNDS;throw new z.ERR_OUT_OF_RANGE(n||"offset",`>= ${n?1:0} and <= ${t}`,e)}B("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),B("ERR_INVALID_ARG_TYPE",(function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),B("ERR_OUT_OF_RANGE",(function(e,t,n){let r=`The value of "${e}" is out of range.`,i=n;return Number.isInteger(n)&&Math.abs(n)>2**32?i=U(String(n)):"bigint"==typeof n&&(i=String(n),(n>BigInt(2)**BigInt(32)||n<-(BigInt(2)**BigInt(32)))&&(i=U(i)),i+="n"),r+=` It must be ${t}. Received ${i}`,r}),RangeError);const H=/[^+/0-9A-Za-z-_]/g;function j(e,t){let n;t=t||1/0;const r=e.length;let i=null;const s=[];for(let a=0;a<r;++a){if(n=e.charCodeAt(a),n>55295&&n<57344){if(!i){if(n>56319){(t-=3)>-1&&s.push(239,191,189);continue}if(a+1===r){(t-=3)>-1&&s.push(239,191,189);continue}i=n;continue}if(n<56320){(t-=3)>-1&&s.push(239,191,189),i=n;continue}n=65536+(i-55296<<10|n-56320)}else i&&(t-=3)>-1&&s.push(239,191,189);if(i=null,n<128){if((t-=1)<0)break;s.push(n)}else if(n<2048){if((t-=2)<0)break;s.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;s.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;s.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return s}function q(e){return r.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(H,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function X(e,t,n,r){let i;for(i=0;i<r&&!(i+n>=t.length||i>=e.length);++i)t[i+n]=e[i];return i}function K(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function Y(e){return e!=e}const Z=function(){const e="0123456789abcdef",t=new Array(256);for(let n=0;n<16;++n){const r=16*n;for(let i=0;i<16;++i)t[r+i]=e[n]+e[i]}return t}();function J(e){return"undefined"==typeof BigInt?Q:e}function Q(){throw new Error("BigInt not supported")}},6239:(e,t,n)=>{"use strict";var r=n(5081);function i(){this.argTypes=[],this.shimArgs=[],this.arrayArgs=[],this.arrayBlockIndices=[],this.scalarArgs=[],this.offsetArgs=[],this.offsetArgIndex=[],this.indexArgs=[],this.shapeArgs=[],this.funcName="",this.pre=null,this.body=null,this.post=null,this.debug=!1}e.exports=function(e){var t=new i;t.pre=e.pre,t.body=e.body,t.post=e.post;var n=e.args.slice(0);t.argTypes=n;for(var s=0;s<n.length;++s){var a=n[s];if("array"===a||"object"==typeof a&&a.blockIndices){if(t.argTypes[s]="array",t.arrayArgs.push(s),t.arrayBlockIndices.push(a.blockIndices?a.blockIndices:0),t.shimArgs.push("array"+s),s<t.pre.args.length&&t.pre.args[s].count>0)throw new Error("cwise: pre() block may not reference array args");if(s<t.post.args.length&&t.post.args[s].count>0)throw new Error("cwise: post() block may not reference array args")}else if("scalar"===a)t.scalarArgs.push(s),t.shimArgs.push("scalar"+s);else if("index"===a){if(t.indexArgs.push(s),s<t.pre.args.length&&t.pre.args[s].count>0)throw new Error("cwise: pre() block may not reference array index");if(s<t.body.args.length&&t.body.args[s].lvalue)throw new Error("cwise: body() block may not write to array index");if(s<t.post.args.length&&t.post.args[s].count>0)throw new Error("cwise: post() block may not reference array index")}else if("shape"===a){if(t.shapeArgs.push(s),s<t.pre.args.length&&t.pre.args[s].lvalue)throw new Error("cwise: pre() block may not write to array shape");if(s<t.body.args.length&&t.body.args[s].lvalue)throw new Error("cwise: body() block may not write to array shape");if(s<t.post.args.length&&t.post.args[s].lvalue)throw new Error("cwise: post() block may not write to array shape")}else{if("object"!=typeof a||!a.offset)throw new Error("cwise: Unknown argument type "+n[s]);t.argTypes[s]="offset",t.offsetArgs.push({array:a.array,offset:a.offset}),t.offsetArgIndex.push(s)}}if(t.arrayArgs.length<=0)throw new Error("cwise: No array arguments specified");if(t.pre.args.length>n.length)throw new Error("cwise: Too many arguments in pre() block");if(t.body.args.length>n.length)throw new Error("cwise: Too many arguments in body() block");if(t.post.args.length>n.length)throw new Error("cwise: Too many arguments in post() block");return t.debug=!!e.printCode||!!e.debug,t.funcName=e.funcName||"cwise",t.blockSize=e.blockSize||64,r(t)}},1984:(e,t,n)=>{"use strict";var r=n(8706);function i(e,t,n){var r,i,s=e.length,a=t.arrayArgs.length,o=t.indexArgs.length>0,l=[],u=[],c=0,h=0;for(r=0;r<s;++r)u.push(["i",r,"=0"].join(""));for(i=0;i<a;++i)for(r=0;r<s;++r)h=c,c=e[r],0===r?u.push(["d",i,"s",r,"=t",i,"p",c].join("")):u.push(["d",i,"s",r,"=(t",i,"p",c,"-s",h,"*t",i,"p",h,")"].join(""));for(u.length>0&&l.push("var "+u.join(",")),r=s-1;r>=0;--r)c=e[r],l.push(["for(i",r,"=0;i",r,"<s",c,";++i",r,"){"].join(""));for(l.push(n),r=0;r<s;++r){for(h=c,c=e[r],i=0;i<a;++i)l.push(["p",i,"+=d",i,"s",r].join(""));o&&(r>0&&l.push(["index[",h,"]-=s",h].join("")),l.push(["++index[",c,"]"].join(""))),l.push("}")}return l.join("\n")}function s(e,t,n){for(var r=e.body,i=[],s=[],a=0;a<e.args.length;++a){var o=e.args[a];if(!(o.count<=0)){var l=new RegExp(o.name,"g"),u="",c=t.arrayArgs.indexOf(a);switch(t.argTypes[a]){case"offset":var h=t.offsetArgIndex.indexOf(a);c=t.offsetArgs[h].array,u="+q"+h;case"array":u="p"+c+u;var d="l"+a,p="a"+c;if(0===t.arrayBlockIndices[c])1===o.count?"generic"===n[c]?o.lvalue?(i.push(["var ",d,"=",p,".get(",u,")"].join("")),r=r.replace(l,d),s.push([p,".set(",u,",",d,")"].join(""))):r=r.replace(l,[p,".get(",u,")"].join("")):r=r.replace(l,[p,"[",u,"]"].join("")):"generic"===n[c]?(i.push(["var ",d,"=",p,".get(",u,")"].join("")),r=r.replace(l,d),o.lvalue&&s.push([p,".set(",u,",",d,")"].join(""))):(i.push(["var ",d,"=",p,"[",u,"]"].join("")),r=r.replace(l,d),o.lvalue&&s.push([p,"[",u,"]=",d].join("")));else{for(var f=[o.name],m=[u],g=0;g<Math.abs(t.arrayBlockIndices[c]);g++)f.push("\\s*\\[([^\\]]+)\\]"),m.push("$"+(g+1)+"*t"+c+"b"+g);if(l=new RegExp(f.join(""),"g"),u=m.join("+"),"generic"===n[c])throw new Error("cwise: Generic arrays not supported in combination with blocks!");r=r.replace(l,[p,"[",u,"]"].join(""))}break;case"scalar":r=r.replace(l,"Y"+t.scalarArgs.indexOf(a));break;case"index":r=r.replace(l,"index");break;case"shape":r=r.replace(l,"shape")}}}return[i.join("\n"),r,s.join("\n")].join("\n").trim()}function a(e){for(var t=new Array(e.length),n=!0,r=0;r<e.length;++r){var i=e[r],s=i.match(/\d+/);s=s?s[0]:"",0===i.charAt(0)?t[r]="u"+i.charAt(1)+s:t[r]=i.charAt(0)+s,r>0&&(n=n&&t[r]===t[r-1])}return n?t[0]:t.join("")}e.exports=function(e,t){for(var n=t[1].length-Math.abs(e.arrayBlockIndices[0])|0,o=new Array(e.arrayArgs.length),l=new Array(e.arrayArgs.length),u=0;u<e.arrayArgs.length;++u)l[u]=t[2*u],o[u]=t[2*u+1];var c=[],h=[],d=[],p=[],f=[];for(u=0;u<e.arrayArgs.length;++u){e.arrayBlockIndices[u]<0?(d.push(0),p.push(n),c.push(n),h.push(n+e.arrayBlockIndices[u])):(d.push(e.arrayBlockIndices[u]),p.push(e.arrayBlockIndices[u]+n),c.push(0),h.push(e.arrayBlockIndices[u]));for(var m=[],g=0;g<o[u].length;g++)d[u]<=o[u][g]&&o[u][g]<p[u]&&m.push(o[u][g]-d[u]);f.push(m)}var x=["SS"],b=["'use strict'"],v=[];for(g=0;g<n;++g)v.push(["s",g,"=SS[",g,"]"].join(""));for(u=0;u<e.arrayArgs.length;++u){for(x.push("a"+u),x.push("t"+u),x.push("p"+u),g=0;g<n;++g)v.push(["t",u,"p",g,"=t",u,"[",d[u]+g,"]"].join(""));for(g=0;g<Math.abs(e.arrayBlockIndices[u]);++g)v.push(["t",u,"b",g,"=t",u,"[",c[u]+g,"]"].join(""))}for(u=0;u<e.scalarArgs.length;++u)x.push("Y"+u);if(e.shapeArgs.length>0&&v.push("shape=SS.slice(0)"),e.indexArgs.length>0){var y=new Array(n);for(u=0;u<n;++u)y[u]="0";v.push(["index=[",y.join(","),"]"].join(""))}for(u=0;u<e.offsetArgs.length;++u){var w=e.offsetArgs[u],_=[];for(g=0;g<w.offset.length;++g)0!==w.offset[g]&&(1===w.offset[g]?_.push(["t",w.array,"p",g].join("")):_.push([w.offset[g],"*t",w.array,"p",g].join("")));0===_.length?v.push("q"+u+"=0"):v.push(["q",u,"=",_.join("+")].join(""))}var S=r([].concat(e.pre.thisVars).concat(e.body.thisVars).concat(e.post.thisVars));for((v=v.concat(S)).length>0&&b.push("var "+v.join(",")),u=0;u<e.arrayArgs.length;++u)b.push("p"+u+"|=0");e.pre.body.length>3&&b.push(s(e.pre,e,l));var k=s(e.body,e,l),I=function(e){for(var t=0,n=e[0].length;t<n;){for(var r=1;r<e.length;++r)if(e[r][t]!==e[0][t])return t;++t}return t}(f);I<n?b.push(function(e,t,n,r){for(var s=t.length,a=n.arrayArgs.length,o=n.blockSize,l=n.indexArgs.length>0,u=[],c=0;c<a;++c)u.push(["var offset",c,"=p",c].join(""));for(c=e;c<s;++c)u.push(["for(var j"+c+"=SS[",t[c],"]|0;j",c,">0;){"].join("")),u.push(["if(j",c,"<",o,"){"].join("")),u.push(["s",t[c],"=j",c].join("")),u.push(["j",c,"=0"].join("")),u.push(["}else{s",t[c],"=",o].join("")),u.push(["j",c,"-=",o,"}"].join("")),l&&u.push(["index[",t[c],"]=j",c].join(""));for(c=0;c<a;++c){for(var h=["offset"+c],d=e;d<s;++d)h.push(["j",d,"*t",c,"p",t[d]].join(""));u.push(["p",c,"=(",h.join("+"),")"].join(""))}for(u.push(i(t,n,r)),c=e;c<s;++c)u.push("}");return u.join("\n")}(I,f[0],e,k)):b.push(i(f[0],e,k)),e.post.body.length>3&&b.push(s(e.post,e,l)),e.debug&&console.log("-----Generated cwise routine for ",t,":\n"+b.join("\n")+"\n----------");var E=[e.funcName||"unnamed","_cwise_loop_",o[0].join("s"),"m",I,a(l)].join("");return new Function(["function ",E,"(",x.join(","),"){",b.join("\n"),"} return ",E].join(""))()}},5081:(e,t,n)=>{"use strict";var r=n(1984);e.exports=function(e){var t=["'use strict'","var CACHED={}"],n=[],i=e.funcName+"_cwise_thunk";t.push(["return function ",i,"(",e.shimArgs.join(","),"){"].join(""));for(var s=[],a=[],o=[["array",e.arrayArgs[0],".shape.slice(",Math.max(0,e.arrayBlockIndices[0]),e.arrayBlockIndices[0]<0?","+e.arrayBlockIndices[0]+")":")"].join("")],l=[],u=[],c=0;c<e.arrayArgs.length;++c){var h=e.arrayArgs[c];n.push(["t",h,"=array",h,".dtype,","r",h,"=array",h,".order"].join("")),s.push("t"+h),s.push("r"+h),a.push("t"+h),a.push("r"+h+".join()"),o.push("array"+h+".data"),o.push("array"+h+".stride"),o.push("array"+h+".offset|0"),c>0&&(l.push("array"+e.arrayArgs[0]+".shape.length===array"+h+".shape.length+"+(Math.abs(e.arrayBlockIndices[0])-Math.abs(e.arrayBlockIndices[c]))),u.push("array"+e.arrayArgs[0]+".shape[shapeIndex+"+Math.max(0,e.arrayBlockIndices[0])+"]===array"+h+".shape[shapeIndex+"+Math.max(0,e.arrayBlockIndices[c])+"]"))}for(e.arrayArgs.length>1&&(t.push("if (!("+l.join(" && ")+")) throw new Error('cwise: Arrays do not all have the same dimensionality!')"),t.push("for(var shapeIndex=array"+e.arrayArgs[0]+".shape.length-"+Math.abs(e.arrayBlockIndices[0])+"; shapeIndex--\x3e0;) {"),t.push("if (!("+u.join(" && ")+")) throw new Error('cwise: Arrays do not all have the same shape!')"),t.push("}")),c=0;c<e.scalarArgs.length;++c)o.push("scalar"+e.scalarArgs[c]);return n.push(["type=[",a.join(","),"].join()"].join("")),n.push("proc=CACHED[type]"),t.push("var "+n.join(",")),t.push(["if(!proc){","CACHED[type]=proc=compile([",s.join(","),"])}","return proc(",o.join(","),")}"].join("")),e.debug&&console.log("-----Generated thunk:\n"+t.join("\n")+"\n----------"),new Function("compile",t.join("\n"))(r.bind(void 0,e))}},6615:(e,t,n)=>{"use strict";var r=n(987),i=n(8706),s=0;function a(e,t,n){this.name=e,this.lvalue=t,this.rvalue=n,this.count=0}function o(e,t,n,r){this.body=e,this.args=t,this.thisVars=n,this.localVars=r}e.exports=function(e){for(var t=["(",e,")()"].join(""),l=r.parse(t,{range:!0}),u="_inline_"+s+++"_",c=function(e){for(var t=e.body[0].expression.callee.params,n=new Array(t.length),r=0;r<t.length;++r)n[r]=t[r].name;return n}(l),h=new Array(c.length),d=0;d<c.length;++d)h[d]=new a([u,"arg",d,"_"].join(""),!1,!1);for(var p=new Array(t.length),f=(d=0,t.length);d<f;++d)p[d]=t.charAt(d);var m,g=[],x=[];function b(e,t){for(var n=e.range[0],r=e.range[1],i=n+1;i<r;++i)p[i]="";p[n]=t}return function e(t,r){if(t.parent=r,"MemberExpression"===t.type)t.computed?(e(t.object,t),e(t.property,t)):"ThisExpression"===t.object.type?b(t,(v="this_"+t.property.name.replace(/\_/g,"__"),x.push(v),v)):e(t.object,t);else{if("ThisExpression"===t.type)throw new Error("cwise-parser: Computed this is not allowed");if("Identifier"===t.type){var i=t.name,s=c.indexOf(i);if(s>=0){var a=h[s],o=function(e){return"AssignmentExpression"===e.parent.type&&e.parent.left===e?"="===e.parent.operator?1:3:"UpdateExpression"===e.parent.type?3:2}(t);1&o&&(a.lvalue=!0),2&o&&(a.rvalue=!0),++a.count,b(t,a.name)}else(function(e){if("eval"===e)throw new Error("cwise-parser: eval() not allowed");return"undefined"!=typeof window?e in window:void 0!==n.g?e in n.g:"undefined"!=typeof self&&e in self})(i)||b(t,function(e){var t=u+e.replace(/\_/g,"__");return g.push(t),t}(i))}else if("Literal"===t.type)"string"==typeof t.value&&b(t,"'"+t.value.replace(/\_/g,"\\_").replace(/\'/g,"'")+"'");else{if("WithStatement"===t.type)throw new Error("cwise-parser: with() statements not allowed");for(var l=Object.keys(t),d=0,p=l.length;d<p;++d)if("parent"!==l[d]){var f=t[l[d]];if(f)if(f instanceof Array)for(var m=0;m<f.length;++m)f[m]&&"string"==typeof f[m].type&&e(f[m],t);else"string"==typeof f.type&&e(f,t)}}}var v}(l.body[0].expression.callee.body,void 0),i(g),i(x),new o((m=l.body[0].expression.callee.body,p.slice(m.range[0],m.range[1]).join("")),h,x,g)}},6780:(e,t,n)=>{"use strict";var r=n(6615),i=n(6239),s=["args","body"],a=["pre","post","printCode","funcName","blockSize"];e.exports=function(e){for(var t in e)s.indexOf(t)<0&&a.indexOf(t)<0&&console.warn("cwise: Unknown argument '"+t+"' passed to expression compiler");for(var n=0;n<s.length;++n)if(!e[s[n]])throw new Error("cwise: Missing argument: "+s[n]);return i({args:e.args,pre:r(e.pre||function(){}),body:r(e.body),post:r(e.post||function(){}),debug:!!e.printCode,funcName:e.funcName||e.body.name||"cwise",blockSize:e.blockSize||64})}},6841:e=>{"use strict";function t(e,n,r){var i=0|e[r];if(i<=0)return[];var s,a=new Array(i);if(r===e.length-1)for(s=0;s<i;++s)a[s]=n;else for(s=0;s<i;++s)a[s]=t(e,n,r+1);return a}e.exports=function(e,n){switch(void 0===n&&(n=0),typeof e){case"number":if(e>0)return function(e,t){var n,r;for(n=new Array(e),r=0;r<e;++r)n[r]=t;return n}(0|e,n);break;case"object":if("number"==typeof e.length)return t(e,n,0)}return[]}},987:function(e,t){var n,r;!function(i,s){"use strict";n=function(e){var t,n,r,i,s,a,o,l,u,c,h,d,p,f,m,g,x,b;function v(e,t){if(!e)throw new Error("ASSERT: "+t)}function y(e){return e>=48&&e<=57}function w(e){return"0123456789abcdefABCDEF".indexOf(e)>=0}function _(e){return"01234567".indexOf(e)>=0}function S(e){return 32===e||9===e||11===e||12===e||160===e||e>=5760&&[5760,6158,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279].indexOf(e)>=0}function k(e){return 10===e||13===e||8232===e||8233===e}function I(e){return 36===e||95===e||e>=65&&e<=90||e>=97&&e<=122||92===e||e>=128&&o.NonAsciiIdentifierStart.test(String.fromCharCode(e))}function E(e){return 36===e||95===e||e>=65&&e<=90||e>=97&&e<=122||e>=48&&e<=57||92===e||e>=128&&o.NonAsciiIdentifierPart.test(String.fromCharCode(e))}function T(e){switch(e){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"yield":case"let":return!0;default:return!1}}function C(e){return"eval"===e||"arguments"===e}function M(e){if(c&&T(e))return!0;switch(e.length){case 2:return"if"===e||"in"===e||"do"===e;case 3:return"var"===e||"for"===e||"new"===e||"try"===e||"let"===e;case 4:return"this"===e||"else"===e||"case"===e||"void"===e||"with"===e||"enum"===e;case 5:return"while"===e||"break"===e||"catch"===e||"throw"===e||"const"===e||"yield"===e||"class"===e||"super"===e;case 6:return"return"===e||"typeof"===e||"delete"===e||"switch"===e||"export"===e||"import"===e;case 7:return"default"===e||"finally"===e||"extends"===e;case 8:return"function"===e||"continue"===e||"debugger"===e;case 10:return"instanceof"===e;default:return!1}}function A(e,t,n,r,i){var s;v("number"==typeof n,"Comment must have valid position"),x.lastCommentStart>=n||(x.lastCommentStart=n,s={type:e,value:t},b.range&&(s.range=[n,r]),b.loc&&(s.loc=i),b.comments.push(s),b.attachComment&&(b.leadingComments.push(s),b.trailingComments.push(s)))}function N(e){var t,n,r,i;for(t=h-e,n={start:{line:d,column:h-p-e}};h<f;)if(r=u.charCodeAt(h),++h,k(r))return b.comments&&(i=u.slice(t+e,h-1),n.end={line:d,column:h-p-1},A("Line",i,t,h-1,n)),13===r&&10===u.charCodeAt(h)&&++h,++d,void(p=h);b.comments&&(i=u.slice(t+e,h),n.end={line:d,column:h-p},A("Line",i,t,h,n))}function R(){var e,t,n,r;for(b.comments&&(e=h-2,t={start:{line:d,column:h-p-2}});h<f;)if(k(n=u.charCodeAt(h)))13===n&&10===u.charCodeAt(h+1)&&++h,++d,++h,p=h,h>=f&&X({},a.UnexpectedToken,"ILLEGAL");else if(42===n){if(47===u.charCodeAt(h+1))return++h,++h,void(b.comments&&(r=u.slice(e+2,h-2),t.end={line:d,column:h-p},A("Block",r,e,h,t)));++h}else++h;X({},a.UnexpectedToken,"ILLEGAL")}function D(){var e,t;for(t=0===h;h<f;)if(S(e=u.charCodeAt(h)))++h;else if(k(e))++h,13===e&&10===u.charCodeAt(h)&&++h,++d,p=h,t=!0;else if(47===e)if(47===(e=u.charCodeAt(h+1)))++h,++h,N(2),t=!0;else{if(42!==e)break;++h,++h,R()}else if(t&&45===e){if(45!==u.charCodeAt(h+1)||62!==u.charCodeAt(h+2))break;h+=3,N(3)}else{if(60!==e)break;if("!--"!==u.slice(h+1,h+4))break;++h,++h,++h,++h,N(4)}}function L(e){var t,n,r,i=0;for(n="u"===e?4:2,t=0;t<n;++t){if(!(h<f&&w(u[h])))return"";r=u[h++],i=16*i+"0123456789abcdef".indexOf(r.toLowerCase())}return String.fromCharCode(i)}function F(){var e,t;for(e=u.charCodeAt(h++),t=String.fromCharCode(e),92===e&&(117!==u.charCodeAt(h)&&X({},a.UnexpectedToken,"ILLEGAL"),++h,(e=L("u"))&&"\\"!==e&&I(e.charCodeAt(0))||X({},a.UnexpectedToken,"ILLEGAL"),t=e);h<f&&E(e=u.charCodeAt(h));)++h,t+=String.fromCharCode(e),92===e&&(t=t.substr(0,t.length-1),117!==u.charCodeAt(h)&&X({},a.UnexpectedToken,"ILLEGAL"),++h,(e=L("u"))&&"\\"!==e&&E(e.charCodeAt(0))||X({},a.UnexpectedToken,"ILLEGAL"),t+=e);return t}function $(){var e,t;for(e=h++;h<f;){if(92===(t=u.charCodeAt(h)))return h=e,F();if(!E(t))break;++h}return u.slice(e,h)}function O(){var e,n,r,i,s=h,o=u.charCodeAt(h),l=u[h];switch(o){case 46:case 40:case 41:case 59:case 44:case 123:case 125:case 91:case 93:case 58:case 63:case 126:return++h,b.tokenize&&(40===o?b.openParenToken=b.tokens.length:123===o&&(b.openCurlyToken=b.tokens.length)),{type:t.Punctuator,value:String.fromCharCode(o),lineNumber:d,lineStart:p,start:s,end:h};default:if(61===(e=u.charCodeAt(h+1)))switch(o){case 43:case 45:case 47:case 60:case 62:case 94:case 124:case 37:case 38:case 42:return h+=2,{type:t.Punctuator,value:String.fromCharCode(o)+String.fromCharCode(e),lineNumber:d,lineStart:p,start:s,end:h};case 33:case 61:return h+=2,61===u.charCodeAt(h)&&++h,{type:t.Punctuator,value:u.slice(s,h),lineNumber:d,lineStart:p,start:s,end:h}}}return">>>="===(i=u.substr(h,4))?(h+=4,{type:t.Punctuator,value:i,lineNumber:d,lineStart:p,start:s,end:h}):">>>"===(r=i.substr(0,3))||"<<="===r||">>="===r?(h+=3,{type:t.Punctuator,value:r,lineNumber:d,lineStart:p,start:s,end:h}):l===(n=r.substr(0,2))[1]&&"+-<>&|".indexOf(l)>=0||"=>"===n?(h+=2,{type:t.Punctuator,value:n,lineNumber:d,lineStart:p,start:s,end:h}):"<>=!+-*%&|^/".indexOf(l)>=0?(++h,{type:t.Punctuator,value:l,lineNumber:d,lineStart:p,start:s,end:h}):void X({},a.UnexpectedToken,"ILLEGAL")}function P(){var e,n,r;if(v(y((r=u[h]).charCodeAt(0))||"."===r,"Numeric literal must start with a decimal digit or a decimal point"),n=h,e="","."!==r){if(e=u[h++],r=u[h],"0"===e){if("x"===r||"X"===r)return++h,function(e){for(var n="";h<f&&w(u[h]);)n+=u[h++];return 0===n.length&&X({},a.UnexpectedToken,"ILLEGAL"),I(u.charCodeAt(h))&&X({},a.UnexpectedToken,"ILLEGAL"),{type:t.NumericLiteral,value:parseInt("0x"+n,16),lineNumber:d,lineStart:p,start:e,end:h}}(n);if(_(r)&&function(){var e,t;for(e=h+1;e<f;++e){if("8"===(t=u[e])||"9"===t)return!1;if(!_(t))return!0}return!0}())return function(e){for(var n="0"+u[h++];h<f&&_(u[h]);)n+=u[h++];return(I(u.charCodeAt(h))||y(u.charCodeAt(h)))&&X({},a.UnexpectedToken,"ILLEGAL"),{type:t.NumericLiteral,value:parseInt(n,8),octal:!0,lineNumber:d,lineStart:p,start:e,end:h}}(n)}for(;y(u.charCodeAt(h));)e+=u[h++];r=u[h]}if("."===r){for(e+=u[h++];y(u.charCodeAt(h));)e+=u[h++];r=u[h]}if("e"===r||"E"===r)if(e+=u[h++],"+"!==(r=u[h])&&"-"!==r||(e+=u[h++]),y(u.charCodeAt(h)))for(;y(u.charCodeAt(h));)e+=u[h++];else X({},a.UnexpectedToken,"ILLEGAL");return I(u.charCodeAt(h))&&X({},a.UnexpectedToken,"ILLEGAL"),{type:t.NumericLiteral,value:parseFloat(e),lineNumber:d,lineStart:p,start:n,end:h}}function z(){var e,n,r,i;return g=null,D(),e=h,n=function(){var e,t,n,r;for(v("/"===(e=u[h]),"Regular expression literal must start with a slash"),t=u[h++],n=!1,r=!1;h<f;)if(t+=e=u[h++],"\\"===e)k((e=u[h++]).charCodeAt(0))&&X({},a.UnterminatedRegExp),t+=e;else if(k(e.charCodeAt(0)))X({},a.UnterminatedRegExp);else if(n)"]"===e&&(n=!1);else{if("/"===e){r=!0;break}"["===e&&(n=!0)}return r||X({},a.UnterminatedRegExp),{value:t.substr(1,t.length-2),literal:t}}(),r=function(){var e,t,n,r;for(t="",n="";h<f&&E((e=u[h]).charCodeAt(0));)if(++h,"\\"===e&&h<f)if("u"===(e=u[h])){if(r=++h,e=L("u"))for(n+=e,t+="\\u";r<h;++r)t+=u[r];else h=r,n+="u",t+="\\u";K({},a.UnexpectedToken,"ILLEGAL")}else t+="\\",K({},a.UnexpectedToken,"ILLEGAL");else n+=e,t+=e;return{value:n,literal:t}}(),i=function(e,t){var n;try{n=new RegExp(e,t)}catch(e){X({},a.InvalidRegExp)}return n}(n.value,r.value),b.tokenize?{type:t.RegularExpression,value:i,lineNumber:d,lineStart:p,start:e,end:h}:{literal:n.literal+r.literal,value:i,start:e,end:h}}function B(){var e,t,n,r;return D(),e=h,t={start:{line:d,column:h-p}},n=z(),t.end={line:d,column:h-p},b.tokenize||(b.tokens.length>0&&(r=b.tokens[b.tokens.length-1]).range[0]===e&&"Punctuator"===r.type&&("/"!==r.value&&"/="!==r.value||b.tokens.pop()),b.tokens.push({type:"RegularExpression",value:n.literal,range:[e,h],loc:t})),n}function U(){var e,n,i;return D(),h>=f?{type:t.EOF,lineNumber:d,lineStart:p,start:h,end:h}:I(e=u.charCodeAt(h))?(n=h,{type:1===(i=92===u.charCodeAt(h)?F():$()).length?t.Identifier:M(i)?t.Keyword:"null"===i?t.NullLiteral:"true"===i||"false"===i?t.BooleanLiteral:t.Identifier,value:i,lineNumber:d,lineStart:p,start:n,end:h}):40===e||41===e||59===e?O():39===e||34===e?function(){var e,n,r,i,s,o,l,c,m="",g=!1;for(l=d,c=p,v("'"===(e=u[h])||'"'===e,"String literal must starts with a quote"),n=h,++h;h<f;){if((r=u[h++])===e){e="";break}if("\\"===r)if((r=u[h++])&&k(r.charCodeAt(0)))++d,"\r"===r&&"\n"===u[h]&&++h,p=h;else switch(r){case"u":case"x":o=h,(s=L(r))?m+=s:(h=o,m+=r);break;case"n":m+="\n";break;case"r":m+="\r";break;case"t":m+="\t";break;case"b":m+="\b";break;case"f":m+="\f";break;case"v":m+="\v";break;default:_(r)?(0!==(i="01234567".indexOf(r))&&(g=!0),h<f&&_(u[h])&&(g=!0,i=8*i+"01234567".indexOf(u[h++]),"0123".indexOf(r)>=0&&h<f&&_(u[h])&&(i=8*i+"01234567".indexOf(u[h++]))),m+=String.fromCharCode(i)):m+=r}else{if(k(r.charCodeAt(0)))break;m+=r}}return""!==e&&X({},a.UnexpectedToken,"ILLEGAL"),{type:t.StringLiteral,value:m,octal:g,startLineNumber:l,startLineStart:c,lineNumber:d,lineStart:p,start:n,end:h}}():46===e?y(u.charCodeAt(h+1))?P():O():y(e)?P():b.tokenize&&47===e?function(){var e,t;if(!(e=b.tokens[b.tokens.length-1]))return B();if("Punctuator"===e.type){if("]"===e.value)return O();if(")"===e.value)return!(t=b.tokens[b.openParenToken-1])||"Keyword"!==t.type||"if"!==t.value&&"while"!==t.value&&"for"!==t.value&&"with"!==t.value?O():B();if("}"===e.value){if(b.tokens[b.openCurlyToken-3]&&"Keyword"===b.tokens[b.openCurlyToken-3].type){if(!(t=b.tokens[b.openCurlyToken-4]))return O()}else{if(!b.tokens[b.openCurlyToken-4]||"Keyword"!==b.tokens[b.openCurlyToken-4].type)return O();if(!(t=b.tokens[b.openCurlyToken-5]))return B()}return r.indexOf(t.value)>=0?O():B()}return B()}return"Keyword"===e.type&&"this"!==e.value?B():O()}():O()}function W(){var e,r,i;return D(),e={start:{line:d,column:h-p}},r=U(),e.end={line:d,column:h-p},r.type!==t.EOF&&(i=u.slice(r.start,r.end),b.tokens.push({type:n[r.type],value:i,range:[r.start,r.end],loc:e})),r}function V(){var e;return h=(e=g).end,d=e.lineNumber,p=e.lineStart,g=void 0!==b.tokens?W():U(),h=e.end,d=e.lineNumber,p=e.lineStart,e}function G(){var e,t,n;e=h,t=d,n=p,g=void 0!==b.tokens?W():U(),h=e,d=t,p=n}function H(e,t){this.line=e,this.column=t}function j(e,t,n,r){this.start=new H(e,t),this.end=new H(n,r)}function q(){var e,t,n,r;return e=h,t=d,n=p,D(),r=d!==t,h=e,d=t,p=n,r}function X(e,t){var n,r=Array.prototype.slice.call(arguments,2),i=t.replace(/%(\d)/g,(function(e,t){return v(t<r.length,"Message reference must be in range"),r[t]}));throw"number"==typeof e.lineNumber?((n=new Error("Line "+e.lineNumber+": "+i)).index=e.start,n.lineNumber=e.lineNumber,n.column=e.start-p+1):((n=new Error("Line "+d+": "+i)).index=h,n.lineNumber=d,n.column=h-p+1),n.description=i,n}function K(){try{X.apply(null,arguments)}catch(e){if(!b.errors)throw e;b.errors.push(e)}}function Y(e){if(e.type===t.EOF&&X(e,a.UnexpectedEOS),e.type===t.NumericLiteral&&X(e,a.UnexpectedNumber),e.type===t.StringLiteral&&X(e,a.UnexpectedString),e.type===t.Identifier&&X(e,a.UnexpectedIdentifier),e.type===t.Keyword){if(function(e){switch(e){case"class":case"enum":case"export":case"extends":case"import":case"super":return!0;default:return!1}}(e.value))X(e,a.UnexpectedReserved);else if(c&&T(e.value))return void K(e,a.StrictReservedWord);X(e,a.UnexpectedToken,e.value)}X(e,a.UnexpectedToken,e.value)}function Z(e){var n=V();n.type===t.Punctuator&&n.value===e||Y(n)}function J(e){var n=V();n.type===t.Keyword&&n.value===e||Y(n)}function Q(e){return g.type===t.Punctuator&&g.value===e}function ee(e){return g.type===t.Keyword&&g.value===e}function te(){var e,n=h,r=d,i=p,s=g;if(59===u.charCodeAt(h)||Q(";"))V();else{if(e=d,D(),d!==e)return h=n,d=r,p=i,void(g=s);g.type===t.EOF||Q("}")||Y(g)}}function ne(e){return e.type===i.Identifier||e.type===i.MemberExpression}function re(e,t){var n,r,i;return n=c,i=g,r=Ee(),t&&c&&C(e[0].name)&&K(t,a.StrictParamName),c=n,m.markEnd(m.createFunctionExpression(null,e,[],r),i)}function ie(){var e,n;return n=g,(e=V()).type===t.StringLiteral||e.type===t.NumericLiteral?(c&&e.octal&&K(e,a.StrictOctalLiteral),m.markEnd(m.createLiteral(e),n)):m.markEnd(m.createIdentifier(e.value),n)}function se(){var e,n,r,i,s,o;return o=g,(e=g).type===t.Identifier?(r=ie(),"get"!==e.value||Q(":")?"set"!==e.value||Q(":")?(Z(":"),i=ge(),m.markEnd(m.createProperty("init",r,i),o)):(n=ie(),Z("("),(e=g).type!==t.Identifier?(Z(")"),K(e,a.UnexpectedToken,e.value),i=re([])):(s=[ve()],Z(")"),i=re(s,e)),m.markEnd(m.createProperty("set",n,i),o)):(n=ie(),Z("("),Z(")"),i=re([]),m.markEnd(m.createProperty("get",n,i),o))):e.type!==t.EOF&&e.type!==t.Punctuator?(n=ie(),Z(":"),i=ge(),m.markEnd(m.createProperty("init",n,i),o)):void Y(e)}function ae(){var e,n,r,o;if(Q("("))return function(){var e;return Z("("),e=xe(),Z(")"),e}();if(Q("["))return function(){var e,t=[];for(e=g,Z("[");!Q("]");)Q(",")?(V(),t.push(null)):(t.push(ge()),Q("]")||Z(","));return V(),m.markEnd(m.createArrayExpression(t),e)}();if(Q("{"))return function(){var e,t,n,r,o,l=[],u={},h=String;for(o=g,Z("{");!Q("}");)t=(e=se()).key.type===i.Identifier?e.key.name:h(e.key.value),r="init"===e.kind?s.Data:"get"===e.kind?s.Get:s.Set,n="$"+t,Object.prototype.hasOwnProperty.call(u,n)?(u[n]===s.Data?c&&r===s.Data?K({},a.StrictDuplicateProperty):r!==s.Data&&K({},a.AccessorDataProperty):r===s.Data?K({},a.AccessorDataProperty):u[n]&r&&K({},a.AccessorGetSet),u[n]|=r):u[n]=r,l.push(e),Q("}")||Z(",");return Z("}"),m.markEnd(m.createObjectExpression(l),o)}();if(e=g.type,o=g,e===t.Identifier)r=m.createIdentifier(V().value);else if(e===t.StringLiteral||e===t.NumericLiteral)c&&g.octal&&K(g,a.StrictOctalLiteral),r=m.createLiteral(V());else if(e===t.Keyword){if(ee("function"))return function(){var e,t,n,r,i,s,o,l,u=null,h=[];return l=g,J("function"),Q("(")||(e=g,u=ve(),c?C(e.value)&&K(e,a.StrictFunctionName):C(e.value)?(n=e,r=a.StrictFunctionName):T(e.value)&&(n=e,r=a.StrictReservedWord)),h=(i=Te(n)).params,t=i.stricted,n=i.firstRestricted,i.message&&(r=i.message),o=c,s=Ee(),c&&n&&X(n,r),c&&t&&K(t,r),c=o,m.markEnd(m.createFunctionExpression(u,h,[],s),l)}();ee("this")?(V(),r=m.createThisExpression()):Y(V())}else e===t.BooleanLiteral?((n=V()).value="true"===n.value,r=m.createLiteral(n)):e===t.NullLiteral?((n=V()).value=null,r=m.createLiteral(n)):Q("/")||Q("/=")?(r=void 0!==b.tokens?m.createLiteral(B()):m.createLiteral(z()),G()):Y(V());return m.markEnd(r,o)}function oe(){var e=[];if(Z("("),!Q(")"))for(;h<f&&(e.push(ge()),!Q(")"));)Z(",");return Z(")"),e}function le(){var e,n;return n=g,function(e){return e.type===t.Identifier||e.type===t.Keyword||e.type===t.BooleanLiteral||e.type===t.NullLiteral}(e=V())||Y(e),m.markEnd(m.createIdentifier(e.value),n)}function ue(){return Z("."),le()}function ce(){var e;return Z("["),e=xe(),Z("]"),e}function he(){var e,t,n;return n=g,J("new"),e=function(){var e,t,n;for(v(x.allowIn,"callee of new expression always allow in keyword."),n=g,e=ee("new")?he():ae();Q(".")||Q("[");)Q("[")?(t=ce(),e=m.createMemberExpression("[",e,t)):(t=ue(),e=m.createMemberExpression(".",e,t)),m.markEnd(e,n);return e}(),t=Q("(")?oe():[],m.markEnd(m.createNewExpression(e,t),n)}function de(){var e,n,r=g;return e=function(){var e,t,n,r,i=x.allowIn;for(r=g,x.allowIn=!0,e=ee("new")?he():ae();;){if(Q("."))n=ue(),e=m.createMemberExpression(".",e,n);else if(Q("("))t=oe(),e=m.createCallExpression(e,t);else{if(!Q("["))break;n=ce(),e=m.createMemberExpression("[",e,n)}m.markEnd(e,r)}return x.allowIn=i,e}(),g.type===t.Punctuator&&(!Q("++")&&!Q("--")||q()||(c&&e.type===i.Identifier&&C(e.name)&&K({},a.StrictLHSPostfix),ne(e)||K({},a.InvalidLHSInAssignment),n=V(),e=m.markEnd(m.createPostfixExpression(n.value,e),r))),e}function pe(){var e,n,r;return g.type!==t.Punctuator&&g.type!==t.Keyword?n=de():Q("++")||Q("--")?(r=g,e=V(),n=pe(),c&&n.type===i.Identifier&&C(n.name)&&K({},a.StrictLHSPrefix),ne(n)||K({},a.InvalidLHSInAssignment),n=m.createUnaryExpression(e.value,n),n=m.markEnd(n,r)):Q("+")||Q("-")||Q("~")||Q("!")?(r=g,e=V(),n=pe(),n=m.createUnaryExpression(e.value,n),n=m.markEnd(n,r)):ee("delete")||ee("void")||ee("typeof")?(r=g,e=V(),n=pe(),n=m.createUnaryExpression(e.value,n),n=m.markEnd(n,r),c&&"delete"===n.operator&&n.argument.type===i.Identifier&&K({},a.StrictDelete)):n=de(),n}function fe(e,n){var r=0;if(e.type!==t.Punctuator&&e.type!==t.Keyword)return 0;switch(e.value){case"||":r=1;break;case"&&":r=2;break;case"|":r=3;break;case"^":r=4;break;case"&":r=5;break;case"==":case"!=":case"===":case"!==":r=6;break;case"<":case">":case"<=":case">=":case"instanceof":r=7;break;case"in":r=n?7:0;break;case"<<":case">>":case">>>":r=8;break;case"+":case"-":r=9;break;case"*":case"/":case"%":r=11}return r}function me(){var e,t,n,r,i;return i=g,e=function(){var e,t,n,r,i,s,a,o,l,u;if(e=g,l=pe(),0===(i=fe(r=g,x.allowIn)))return l;for(r.prec=i,V(),t=[e,g],s=[l,r,a=pe()];(i=fe(g,x.allowIn))>0;){for(;s.length>2&&i<=s[s.length-2].prec;)a=s.pop(),o=s.pop().value,l=s.pop(),n=m.createBinaryExpression(o,l,a),t.pop(),e=t[t.length-1],m.markEnd(n,e),s.push(n);(r=V()).prec=i,s.push(r),t.push(g),n=pe(),s.push(n)}for(n=s[u=s.length-1],t.pop();u>1;)n=m.createBinaryExpression(s[u-1].value,s[u-2],n),u-=2,e=t.pop(),m.markEnd(n,e);return n}(),Q("?")&&(V(),t=x.allowIn,x.allowIn=!0,n=ge(),x.allowIn=t,Z(":"),r=ge(),e=m.createConditionalExpression(e,n,r),m.markEnd(e,i)),e}function ge(){var e,n,r,s,o,l;return e=g,o=g,s=n=me(),g.type===t.Punctuator&&("="===(l=g.value)||"*="===l||"/="===l||"%="===l||"+="===l||"-="===l||"<<="===l||">>="===l||">>>="===l||"&="===l||"^="===l||"|="===l)&&(ne(n)||K({},a.InvalidLHSInAssignment),c&&n.type===i.Identifier&&C(n.name)&&K(e,a.StrictLHSAssignment),e=V(),r=ge(),s=m.markEnd(m.createAssignmentExpression(e.value,n,r),o)),s}function xe(){var e,t=g;if(e=ge(),Q(",")){for(e=m.createSequenceExpression([e]);h<f&&Q(",");)V(),e.expressions.push(ge());m.markEnd(e,t)}return e}function be(){var e,t;return t=g,Z("{"),e=function(){for(var e,t=[];h<f&&!Q("}")&&void 0!==(e=Me());)t.push(e);return t}(),Z("}"),m.markEnd(m.createBlockStatement(e),t)}function ve(){var e,n;return n=g,(e=V()).type!==t.Identifier&&Y(e),m.markEnd(m.createIdentifier(e.value),n)}function ye(e){var t,n,r=null;return n=g,t=ve(),c&&C(t.name)&&K({},a.StrictVarName),"const"===e?(Z("="),r=ge()):Q("=")&&(V(),r=ge()),m.markEnd(m.createVariableDeclarator(t,r),n)}function we(e){var t=[];do{if(t.push(ye(e)),!Q(","))break;V()}while(h<f);return t}function _e(){var e,t,n,r,i,s,o,l,u,c,h=x.allowIn;return e=t=n=null,J("for"),Z("("),Q(";")?V():(ee("var")||ee("let")?(x.allowIn=!1,c=g,l=V(),u=we(),e=m.markEnd(m.createVariableDeclaration(u,l.value),c),x.allowIn=h,1===e.declarations.length&&ee("in")&&(V(),r=e,i=xe(),e=null)):(x.allowIn=!1,e=xe(),x.allowIn=h,ee("in")&&(ne(e)||K({},a.InvalidLHSInForIn),V(),r=e,i=xe(),e=null)),void 0===r&&Z(";")),void 0===r&&(Q(";")||(t=xe()),Z(";"),Q(")")||(n=xe())),Z(")"),o=x.inIteration,x.inIteration=!0,s=Ie(),x.inIteration=o,void 0===r?m.createForStatement(e,t,n,s):m.createForInStatement(r,i,s)}function Se(){var e,t,n,r=[];for(n=g,ee("default")?(V(),e=null):(J("case"),e=xe()),Z(":");h<f&&!(Q("}")||ee("default")||ee("case"));)t=Ie(),r.push(t);return m.markEnd(m.createSwitchCase(e,r),n)}function ke(){var e,t,n,r,i=[],s=null;return J("try"),e=be(),ee("catch")&&i.push((r=g,J("catch"),Z("("),Q(")")&&Y(g),t=ve(),c&&C(t.name)&&K({},a.StrictCatchVariable),Z(")"),n=be(),m.markEnd(m.createCatchClause(t,n),r))),ee("finally")&&(V(),s=be()),0!==i.length||s||X({},a.NoCatchOrFinally),m.createTryStatement(e,[],i,s)}function Ie(){var e,n,r,s,o,l,d,p,b,v=g.type;if(v===t.EOF&&Y(g),v===t.Punctuator&&"{"===g.value)return be();if(s=g,v===t.Punctuator)switch(g.value){case";":return m.markEnd((Z(";"),m.createEmptyStatement()),s);case"(":return m.markEnd(function(){var e=xe();return te(),m.createExpressionStatement(e)}(),s)}if(v===t.Keyword)switch(g.value){case"break":return m.markEnd(function(){var e,n=null;return J("break"),59===u.charCodeAt(h)?(V(),x.inIteration||x.inSwitch||X({},a.IllegalBreak),m.createBreakStatement(null)):q()?(x.inIteration||x.inSwitch||X({},a.IllegalBreak),m.createBreakStatement(null)):(g.type===t.Identifier&&(e="$"+(n=ve()).name,Object.prototype.hasOwnProperty.call(x.labelSet,e)||X({},a.UnknownLabel,n.name)),te(),null!==n||x.inIteration||x.inSwitch||X({},a.IllegalBreak),m.createBreakStatement(n))}(),s);case"continue":return m.markEnd(function(){var e,n=null;return J("continue"),59===u.charCodeAt(h)?(V(),x.inIteration||X({},a.IllegalContinue),m.createContinueStatement(null)):q()?(x.inIteration||X({},a.IllegalContinue),m.createContinueStatement(null)):(g.type===t.Identifier&&(e="$"+(n=ve()).name,Object.prototype.hasOwnProperty.call(x.labelSet,e)||X({},a.UnknownLabel,n.name)),te(),null!==n||x.inIteration||X({},a.IllegalContinue),m.createContinueStatement(n))}(),s);case"debugger":return m.markEnd((J("debugger"),te(),m.createDebuggerStatement()),s);case"do":return m.markEnd((J("do"),b=x.inIteration,x.inIteration=!0,d=Ie(),x.inIteration=b,J("while"),Z("("),p=xe(),Z(")"),Q(";")&&V(),m.createDoWhileStatement(d,p)),s);case"for":return m.markEnd(_e(),s);case"function":return m.markEnd(Ce(),s);case"if":return m.markEnd(function(){var e,t,n;return J("if"),Z("("),e=xe(),Z(")"),t=Ie(),ee("else")?(V(),n=Ie()):n=null,m.createIfStatement(e,t,n)}(),s);case"return":return m.markEnd((l=null,J("return"),x.inFunctionBody||K({},a.IllegalReturn),32===u.charCodeAt(h)&&I(u.charCodeAt(h+1))?(l=xe(),te(),m.createReturnStatement(l)):q()?m.createReturnStatement(null):(Q(";")||Q("}")||g.type===t.EOF||(l=xe()),te(),m.createReturnStatement(l))),s);case"switch":return m.markEnd(function(){var e,t,n,r,i;if(J("switch"),Z("("),e=xe(),Z(")"),Z("{"),t=[],Q("}"))return V(),m.createSwitchStatement(e,t);for(r=x.inSwitch,x.inSwitch=!0,i=!1;h<f&&!Q("}");)null===(n=Se()).test&&(i&&X({},a.MultipleDefaultsInSwitch),i=!0),t.push(n);return x.inSwitch=r,Z("}"),m.createSwitchStatement(e,t)}(),s);case"throw":return m.markEnd(function(){var e;return J("throw"),q()&&X({},a.NewlineAfterThrow),e=xe(),te(),m.createThrowStatement(e)}(),s);case"try":return m.markEnd(ke(),s);case"var":return m.markEnd((J("var"),o=we(),te(),m.createVariableDeclaration(o,"var")),s);case"while":return m.markEnd(function(){var e,t,n;return J("while"),Z("("),e=xe(),Z(")"),n=x.inIteration,x.inIteration=!0,t=Ie(),x.inIteration=n,m.createWhileStatement(e,t)}(),s);case"with":return m.markEnd(function(){var e,t;return c&&(D(),K({},a.StrictModeWith)),J("with"),Z("("),e=xe(),Z(")"),t=Ie(),m.createWithStatement(e,t)}(),s)}return(e=xe()).type===i.Identifier&&Q(":")?(V(),r="$"+e.name,Object.prototype.hasOwnProperty.call(x.labelSet,r)&&X({},a.Redeclaration,"Label",e.name),x.labelSet[r]=!0,n=Ie(),delete x.labelSet[r],m.markEnd(m.createLabeledStatement(e,n),s)):(te(),m.markEnd(m.createExpressionStatement(e),s))}function Ee(){var e,n,r,s,o,l,d,p,b=[];for(p=g,Z("{");h<f&&g.type===t.StringLiteral&&(n=g,e=Me(),b.push(e),e.expression.type===i.Literal);)"use strict"===u.slice(n.start+1,n.end-1)?(c=!0,r&&K(r,a.StrictOctalLiteral)):!r&&n.octal&&(r=n);for(s=x.labelSet,o=x.inIteration,l=x.inSwitch,d=x.inFunctionBody,x.labelSet={},x.inIteration=!1,x.inSwitch=!1,x.inFunctionBody=!0;h<f&&!Q("}")&&void 0!==(e=Me());)b.push(e);return Z("}"),x.labelSet=s,x.inIteration=o,x.inSwitch=l,x.inFunctionBody=d,m.markEnd(m.createBlockStatement(b),p)}function Te(e){var t,n,r,i,s,o,l=[];if(Z("("),!Q(")"))for(i={};h<f&&(n=g,t=ve(),s="$"+n.value,c?(C(n.value)&&(r=n,o=a.StrictParamName),Object.prototype.hasOwnProperty.call(i,s)&&(r=n,o=a.StrictParamDupe)):e||(C(n.value)?(e=n,o=a.StrictParamName):T(n.value)?(e=n,o=a.StrictReservedWord):Object.prototype.hasOwnProperty.call(i,s)&&(e=n,o=a.StrictParamDupe)),l.push(t),i[s]=!0,!Q(")"));)Z(",");return Z(")"),{params:l,stricted:r,firstRestricted:e,message:o}}function Ce(){var e,t,n,r,i,s,o,l,u,h;return u=g,J("function"),n=g,e=ve(),c?C(n.value)&&K(n,a.StrictFunctionName):C(n.value)?(s=n,o=a.StrictFunctionName):T(n.value)&&(s=n,o=a.StrictReservedWord),h=(i=Te(s)).params,r=i.stricted,s=i.firstRestricted,i.message&&(o=i.message),l=c,t=Ee(),c&&s&&X(s,o),c&&r&&K(r,o),c=l,m.markEnd(m.createFunctionDeclaration(e,h,[],t),u)}function Me(){if(g.type===t.Keyword)switch(g.value){case"const":case"let":return e=g.value,r=g,J(e),n=we(e),te(),m.markEnd(m.createVariableDeclaration(n,e),r);case"function":return Ce();default:return Ie()}var e,n,r;if(g.type!==t.EOF)return Ie()}function Ae(){var e,n;return D(),G(),n=g,c=!1,e=function(){for(var e,n,r,s=[];h<f&&(n=g).type===t.StringLiteral&&(e=Me(),s.push(e),e.expression.type===i.Literal);)"use strict"===u.slice(n.start+1,n.end-1)?(c=!0,r&&K(r,a.StrictOctalLiteral)):!r&&n.octal&&(r=n);for(;h<f&&void 0!==(e=Me());)s.push(e);return s}(),m.markEnd(m.createProgram(e),n)}function Ne(){var e,t,n,r=[];for(e=0;e<b.tokens.length;++e)n={type:(t=b.tokens[e]).type,value:t.value},b.range&&(n.range=t.range),b.loc&&(n.loc=t.loc),r.push(n);b.tokens=r}(n={})[(t={BooleanLiteral:1,EOF:2,Identifier:3,Keyword:4,NullLiteral:5,NumericLiteral:6,Punctuator:7,StringLiteral:8,RegularExpression:9}).BooleanLiteral]="Boolean",n[t.EOF]="<end>",n[t.Identifier]="Identifier",n[t.Keyword]="Keyword",n[t.NullLiteral]="Null",n[t.NumericLiteral]="Numeric",n[t.Punctuator]="Punctuator",n[t.StringLiteral]="String",n[t.RegularExpression]="RegularExpression",r=["(","{","[","in","typeof","instanceof","new","return","case","delete","throw","void","=","+=","-=","*=","/=","%=","<<=",">>=",">>>=","&=","|=","^=",",","+","-","*","/","%","++","--","<<",">>",">>>","&","|","^","!","~","&&","||","?",":","===","==",">=","<=","<",">","!=","!=="],i={AssignmentExpression:"AssignmentExpression",ArrayExpression:"ArrayExpression",BlockStatement:"BlockStatement",BinaryExpression:"BinaryExpression",BreakStatement:"BreakStatement",CallExpression:"CallExpression",CatchClause:"CatchClause",ConditionalExpression:"ConditionalExpression",ContinueStatement:"ContinueStatement",DoWhileStatement:"DoWhileStatement",DebuggerStatement:"DebuggerStatement",EmptyStatement:"EmptyStatement",ExpressionStatement:"ExpressionStatement",ForStatement:"ForStatement",ForInStatement:"ForInStatement",FunctionDeclaration:"FunctionDeclaration",FunctionExpression:"FunctionExpression",Identifier:"Identifier",IfStatement:"IfStatement",Literal:"Literal",LabeledStatement:"LabeledStatement",LogicalExpression:"LogicalExpression",MemberExpression:"MemberExpression",NewExpression:"NewExpression",ObjectExpression:"ObjectExpression",Program:"Program",Property:"Property",ReturnStatement:"ReturnStatement",SequenceExpression:"SequenceExpression",SwitchStatement:"SwitchStatement",SwitchCase:"SwitchCase",ThisExpression:"ThisExpression",ThrowStatement:"ThrowStatement",TryStatement:"TryStatement",UnaryExpression:"UnaryExpression",UpdateExpression:"UpdateExpression",VariableDeclaration:"VariableDeclaration",VariableDeclarator:"VariableDeclarator",WhileStatement:"WhileStatement",WithStatement:"WithStatement"},s={Data:1,Get:2,Set:4},a={UnexpectedToken:"Unexpected token %0",UnexpectedNumber:"Unexpected number",UnexpectedString:"Unexpected string",UnexpectedIdentifier:"Unexpected identifier",UnexpectedReserved:"Unexpected reserved word",UnexpectedEOS:"Unexpected end of input",NewlineAfterThrow:"Illegal newline after throw",InvalidRegExp:"Invalid regular expression",UnterminatedRegExp:"Invalid regular expression: missing /",InvalidLHSInAssignment:"Invalid left-hand side in assignment",InvalidLHSInForIn:"Invalid left-hand side in for-in",MultipleDefaultsInSwitch:"More than one default clause in switch statement",NoCatchOrFinally:"Missing catch or finally after try",UnknownLabel:"Undefined label '%0'",Redeclaration:"%0 '%1' has already been declared",IllegalContinue:"Illegal continue statement",IllegalBreak:"Illegal break statement",IllegalReturn:"Illegal return statement",StrictModeWith:"Strict mode code may not include a with statement",StrictCatchVariable:"Catch variable may not be eval or arguments in strict mode",StrictVarName:"Variable name may not be eval or arguments in strict mode",StrictParamName:"Parameter name eval or arguments is not allowed in strict mode",StrictParamDupe:"Strict mode function may not have duplicate parameter names",StrictFunctionName:"Function name may not be eval or arguments in strict mode",StrictOctalLiteral:"Octal literals are not allowed in strict mode.",StrictDelete:"Delete of an unqualified identifier in strict mode.",StrictDuplicateProperty:"Duplicate data property in object literal not allowed in strict mode",AccessorDataProperty:"Object literal may not have data and accessor property with the same name",AccessorGetSet:"Object literal may not have multiple get/set accessors with the same name",StrictLHSAssignment:"Assignment to eval or arguments is not allowed in strict mode",StrictLHSPostfix:"Postfix increment/decrement may not have eval or arguments operand in strict mode",StrictLHSPrefix:"Prefix increment/decrement may not have eval or arguments operand in strict mode",StrictReservedWord:"Use of future reserved word in strict mode"},o={NonAsciiIdentifierStart:new RegExp("[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԧԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠࢢ-ࢬऄ-हऽॐक़-ॡॱ-ॷॹ-ॿঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚗꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꪀ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]"),NonAsciiIdentifierPart:new RegExp("[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮ̀-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁ҃-҇Ҋ-ԧԱ-Ֆՙա-և֑-ׇֽֿׁׂׅׄא-תװ-ײؐ-ؚؠ-٩ٮ-ۓە-ۜ۟-۪ۨ-ۼۿܐ-݊ݍ-ޱ߀-ߵߺࠀ-࠭ࡀ-࡛ࢠࢢ-ࢬࣤ-ࣾऀ-ॣ०-९ॱ-ॷॹ-ॿঁ-ঃঅ-ঌএঐও-নপ-রলশ-হ়-ৄেৈো-ৎৗড়ঢ়য়-ৣ০-ৱਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹ਼ਾ-ੂੇੈੋ-੍ੑਖ਼-ੜਫ਼੦-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૯ଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହ଼-ୄେୈୋ-୍ୖୗଡ଼ଢ଼ୟ-ୣ୦-୯ୱஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௯ఁ-ఃఅ-ఌఎ-ఐఒ-నప-ళవ-హఽ-ౄె-ైొ-్ౕౖౘౙౠ-ౣ౦-౯ಂಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕೖೞೠ-ೣ೦-೯ೱೲംഃഅ-ഌഎ-ഐഒ-ഺഽ-ൄെ-ൈൊ-ൎൗൠ-ൣ൦-൯ൺ-ൿංඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟෲෳก-ฺเ-๎๐-๙ກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟༀ༘༙༠-༩༹༵༷༾-ཇཉ-ཬཱ-྄྆-ྗྙ-ྼ࿆က-၉ၐ-ႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፟ᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-᜔ᜠ-᜴ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲᝳក-៓ៗៜ៝០-៩᠋-᠍᠐-᠙ᠠ-ᡷᢀ-ᢪᢰ-ᣵᤀ-ᤜᤠ-ᤫᤰ-᤻᥆-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧙ᨀ-ᨛᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙ᪧᬀ-ᭋ᭐-᭙᭫-᭳ᮀ-᯳ᰀ-᰷᱀-᱉ᱍ-ᱽ᳐-᳔᳒-ᳶᴀ-ᷦ᷼-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼ‌‍‿⁀⁔ⁱⁿₐ-ₜ⃐-⃥⃜⃡-⃰ℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯ⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿⸯ々-〇〡-〯〱-〵〸-〼ぁ-ゖ゙゚ゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘫꙀ-꙯ꙴ-꙽ꙿ-ꚗꚟ-꛱ꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠧꡀ-ꡳꢀ-꣄꣐-꣙꣠-ꣷꣻ꤀-꤭ꤰ-꥓ꥠ-ꥼꦀ-꧀ꧏ-꧙ꨀ-ꨶꩀ-ꩍ꩐-꩙ꩠ-ꩶꩺꩻꪀ-ꫂꫛ-ꫝꫠ-ꫯꫲ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯪ꯬꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻ︀-️︠-︦︳︴﹍-﹏ﹰ-ﹴﹶ-ﻼ０-９Ａ-Ｚ＿ａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]")},l={name:"SyntaxTree",processComment:function(e){var t,n;if(!(e.type===i.Program&&e.body.length>0)){for(b.trailingComments.length>0?b.trailingComments[0].range[0]>=e.range[1]?(n=b.trailingComments,b.trailingComments=[]):b.trailingComments.length=0:b.bottomRightStack.length>0&&b.bottomRightStack[b.bottomRightStack.length-1].trailingComments&&b.bottomRightStack[b.bottomRightStack.length-1].trailingComments[0].range[0]>=e.range[1]&&(n=b.bottomRightStack[b.bottomRightStack.length-1].trailingComments,delete b.bottomRightStack[b.bottomRightStack.length-1].trailingComments);b.bottomRightStack.length>0&&b.bottomRightStack[b.bottomRightStack.length-1].range[0]>=e.range[0];)t=b.bottomRightStack.pop();t?t.leadingComments&&t.leadingComments[t.leadingComments.length-1].range[1]<=e.range[0]&&(e.leadingComments=t.leadingComments,delete t.leadingComments):b.leadingComments.length>0&&b.leadingComments[b.leadingComments.length-1].range[1]<=e.range[0]&&(e.leadingComments=b.leadingComments,b.leadingComments=[]),n&&(e.trailingComments=n),b.bottomRightStack.push(e)}},markEnd:function(e,t){return b.range&&(e.range=[t.start,h]),b.loc&&(e.loc=new j(void 0===t.startLineNumber?t.lineNumber:t.startLineNumber,t.start-(void 0===t.startLineStart?t.lineStart:t.startLineStart),d,h-p),this.postProcess(e)),b.attachComment&&this.processComment(e),e},postProcess:function(e){return b.source&&(e.loc.source=b.source),e},createArrayExpression:function(e){return{type:i.ArrayExpression,elements:e}},createAssignmentExpression:function(e,t,n){return{type:i.AssignmentExpression,operator:e,left:t,right:n}},createBinaryExpression:function(e,t,n){return{type:"||"===e||"&&"===e?i.LogicalExpression:i.BinaryExpression,operator:e,left:t,right:n}},createBlockStatement:function(e){return{type:i.BlockStatement,body:e}},createBreakStatement:function(e){return{type:i.BreakStatement,label:e}},createCallExpression:function(e,t){return{type:i.CallExpression,callee:e,arguments:t}},createCatchClause:function(e,t){return{type:i.CatchClause,param:e,body:t}},createConditionalExpression:function(e,t,n){return{type:i.ConditionalExpression,test:e,consequent:t,alternate:n}},createContinueStatement:function(e){return{type:i.ContinueStatement,label:e}},createDebuggerStatement:function(){return{type:i.DebuggerStatement}},createDoWhileStatement:function(e,t){return{type:i.DoWhileStatement,body:e,test:t}},createEmptyStatement:function(){return{type:i.EmptyStatement}},createExpressionStatement:function(e){return{type:i.ExpressionStatement,expression:e}},createForStatement:function(e,t,n,r){return{type:i.ForStatement,init:e,test:t,update:n,body:r}},createForInStatement:function(e,t,n){return{type:i.ForInStatement,left:e,right:t,body:n,each:!1}},createFunctionDeclaration:function(e,t,n,r){return{type:i.FunctionDeclaration,id:e,params:t,defaults:n,body:r,rest:null,generator:!1,expression:!1}},createFunctionExpression:function(e,t,n,r){return{type:i.FunctionExpression,id:e,params:t,defaults:n,body:r,rest:null,generator:!1,expression:!1}},createIdentifier:function(e){return{type:i.Identifier,name:e}},createIfStatement:function(e,t,n){return{type:i.IfStatement,test:e,consequent:t,alternate:n}},createLabeledStatement:function(e,t){return{type:i.LabeledStatement,label:e,body:t}},createLiteral:function(e){return{type:i.Literal,value:e.value,raw:u.slice(e.start,e.end)}},createMemberExpression:function(e,t,n){return{type:i.MemberExpression,computed:"["===e,object:t,property:n}},createNewExpression:function(e,t){return{type:i.NewExpression,callee:e,arguments:t}},createObjectExpression:function(e){return{type:i.ObjectExpression,properties:e}},createPostfixExpression:function(e,t){return{type:i.UpdateExpression,operator:e,argument:t,prefix:!1}},createProgram:function(e){return{type:i.Program,body:e}},createProperty:function(e,t,n){return{type:i.Property,key:t,value:n,kind:e}},createReturnStatement:function(e){return{type:i.ReturnStatement,argument:e}},createSequenceExpression:function(e){return{type:i.SequenceExpression,expressions:e}},createSwitchCase:function(e,t){return{type:i.SwitchCase,test:e,consequent:t}},createSwitchStatement:function(e,t){return{type:i.SwitchStatement,discriminant:e,cases:t}},createThisExpression:function(){return{type:i.ThisExpression}},createThrowStatement:function(e){return{type:i.ThrowStatement,argument:e}},createTryStatement:function(e,t,n,r){return{type:i.TryStatement,block:e,guardedHandlers:t,handlers:n,finalizer:r}},createUnaryExpression:function(e,t){return"++"===e||"--"===e?{type:i.UpdateExpression,operator:e,argument:t,prefix:!0}:{type:i.UnaryExpression,operator:e,argument:t,prefix:!0}},createVariableDeclaration:function(e,t){return{type:i.VariableDeclaration,declarations:e,kind:t}},createVariableDeclarator:function(e,t){return{type:i.VariableDeclarator,id:e,init:t}},createWhileStatement:function(e,t){return{type:i.WhileStatement,test:e,body:t}},createWithStatement:function(e,t){return{type:i.WithStatement,object:e,body:t}}},e.version="1.2.5",e.tokenize=function(e,n){var r;"string"==typeof e||e instanceof String||(e=String(e)),m=l,h=0,d=(u=e).length>0?1:0,p=0,f=u.length,g=null,x={allowIn:!0,labelSet:{},inFunctionBody:!1,inIteration:!1,inSwitch:!1,lastCommentStart:-1},b={},(n=n||{}).tokens=!0,b.tokens=[],b.tokenize=!0,b.openParenToken=-1,b.openCurlyToken=-1,b.range="boolean"==typeof n.range&&n.range,b.loc="boolean"==typeof n.loc&&n.loc,"boolean"==typeof n.comment&&n.comment&&(b.comments=[]),"boolean"==typeof n.tolerant&&n.tolerant&&(b.errors=[]);try{if(G(),g.type===t.EOF)return b.tokens;for(V();g.type!==t.EOF;)try{V()}catch(e){if(b.errors){b.errors.push(e);break}throw e}Ne(),r=b.tokens,void 0!==b.comments&&(r.comments=b.comments),void 0!==b.errors&&(r.errors=b.errors)}catch(e){throw e}finally{b={}}return r},e.parse=function(e,t){var n,r;r=String,"string"==typeof e||e instanceof String||(e=r(e)),m=l,h=0,d=(u=e).length>0?1:0,p=0,f=u.length,g=null,x={allowIn:!0,labelSet:{},inFunctionBody:!1,inIteration:!1,inSwitch:!1,lastCommentStart:-1},b={},void 0!==t&&(b.range="boolean"==typeof t.range&&t.range,b.loc="boolean"==typeof t.loc&&t.loc,b.attachComment="boolean"==typeof t.attachComment&&t.attachComment,b.loc&&null!==t.source&&void 0!==t.source&&(b.source=r(t.source)),"boolean"==typeof t.tokens&&t.tokens&&(b.tokens=[]),"boolean"==typeof t.comment&&t.comment&&(b.comments=[]),"boolean"==typeof t.tolerant&&t.tolerant&&(b.errors=[]),b.attachComment&&(b.range=!0,b.comments=[],b.bottomRightStack=[],b.trailingComments=[],b.leadingComments=[]));try{n=Ae(),void 0!==b.comments&&(n.comments=b.comments),void 0!==b.tokens&&(Ne(),n.tokens=b.tokens),void 0!==b.errors&&(n.errors=b.errors)}catch(e){throw e}finally{b={}}return n},e.Syntax=function(){var e,t={};for(e in"function"==typeof Object.create&&(t=Object.create(null)),i)i.hasOwnProperty(e)&&(t[e]=i[e]);return"function"==typeof Object.freeze&&Object.freeze(t),t}()},void 0===(r=n.apply(t,[t]))||(e.exports=r)}()},9645:e=>{"use strict";function t(e){if(this.size=0|e,this.size<=1||0!=(this.size&this.size-1))throw new Error("FFT size must be a power of two and bigger than 1");this._csize=e<<1;for(var t=new Array(2*this.size),n=0;n<t.length;n+=2){const e=Math.PI*n/this.size;t[n]=Math.cos(e),t[n+1]=-Math.sin(e)}this.table=t;for(var r=0,i=1;this.size>i;i<<=1)r++;this._width=r%2==0?r-1:r,this._bitrev=new Array(1<<this._width);for(var s=0;s<this._bitrev.length;s++){this._bitrev[s]=0;for(var a=0;a<this._width;a+=2){var o=this._width-a-2;this._bitrev[s]|=(s>>>a&3)<<o}}this._out=null,this._data=null,this._inv=0}e.exports=t,t.prototype.fromComplexArray=function(e,t){for(var n=t||new Array(e.length>>>1),r=0;r<e.length;r+=2)n[r>>>1]=e[r];return n},t.prototype.createComplexArray=function(){const e=new Array(this._csize);for(var t=0;t<e.length;t++)e[t]=0;return e},t.prototype.toComplexArray=function(e,t){for(var n=t||this.createComplexArray(),r=0;r<n.length;r+=2)n[r]=e[r>>>1],n[r+1]=0;return n},t.prototype.completeSpectrum=function(e){for(var t=this._csize,n=t>>>1,r=2;r<n;r+=2)e[t-r]=e[r],e[t-r+1]=-e[r+1]},t.prototype.transform=function(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._out=e,this._data=t,this._inv=0,this._transform4(),this._out=null,this._data=null},t.prototype.realTransform=function(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._out=e,this._data=t,this._inv=0,this._realTransform4(),this._out=null,this._data=null},t.prototype.inverseTransform=function(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._out=e,this._data=t,this._inv=1,this._transform4();for(var n=0;n<e.length;n++)e[n]/=this.size;this._out=null,this._data=null},t.prototype._transform4=function(){var e,t,n=this._out,r=this._csize,i=1<<this._width,s=r/i<<1,a=this._bitrev;if(4===s)for(e=0,t=0;e<r;e+=s,t++){const n=a[t];this._singleTransform2(e,n,i)}else for(e=0,t=0;e<r;e+=s,t++){const n=a[t];this._singleTransform4(e,n,i)}var o=this._inv?-1:1,l=this.table;for(i>>=2;i>=2;i>>=2){var u=(s=r/i<<1)>>>2;for(e=0;e<r;e+=s)for(var c=e+u,h=e,d=0;h<c;h+=2,d+=i){const e=h,t=e+u,r=t+u,i=r+u,s=n[e],a=n[e+1],c=n[t],p=n[t+1],f=n[r],m=n[r+1],g=n[i],x=n[i+1],b=s,v=a,y=l[d],w=o*l[d+1],_=c*y-p*w,S=c*w+p*y,k=l[2*d],I=o*l[2*d+1],E=f*k-m*I,T=f*I+m*k,C=l[3*d],M=o*l[3*d+1],A=g*C-x*M,N=g*M+x*C,R=b+E,D=v+T,L=b-E,F=v-T,$=_+A,O=S+N,P=o*(_-A),z=o*(S-N),B=R+$,U=D+O,W=R-$,V=D-O,G=L+z,H=F-P,j=L-z,q=F+P;n[e]=B,n[e+1]=U,n[t]=G,n[t+1]=H,n[r]=W,n[r+1]=V,n[i]=j,n[i+1]=q}}},t.prototype._singleTransform2=function(e,t,n){const r=this._out,i=this._data,s=i[t],a=i[t+1],o=i[t+n],l=i[t+n+1],u=s+o,c=a+l,h=s-o,d=a-l;r[e]=u,r[e+1]=c,r[e+2]=h,r[e+3]=d},t.prototype._singleTransform4=function(e,t,n){const r=this._out,i=this._data,s=this._inv?-1:1,a=2*n,o=3*n,l=i[t],u=i[t+1],c=i[t+n],h=i[t+n+1],d=i[t+a],p=i[t+a+1],f=i[t+o],m=i[t+o+1],g=l+d,x=u+p,b=l-d,v=u-p,y=c+f,w=h+m,_=s*(c-f),S=s*(h-m),k=g+y,I=x+w,E=b+S,T=v-_,C=g-y,M=x-w,A=b-S,N=v+_;r[e]=k,r[e+1]=I,r[e+2]=E,r[e+3]=T,r[e+4]=C,r[e+5]=M,r[e+6]=A,r[e+7]=N},t.prototype._realTransform4=function(){var e,t,n=this._out,r=this._csize,i=1<<this._width,s=r/i<<1,a=this._bitrev;if(4===s)for(e=0,t=0;e<r;e+=s,t++){const n=a[t];this._singleRealTransform2(e,n>>>1,i>>>1)}else for(e=0,t=0;e<r;e+=s,t++){const n=a[t];this._singleRealTransform4(e,n>>>1,i>>>1)}var o=this._inv?-1:1,l=this.table;for(i>>=2;i>=2;i>>=2){var u=(s=r/i<<1)>>>1,c=u>>>1,h=c>>>1;for(e=0;e<r;e+=s)for(var d=0,p=0;d<=h;d+=2,p+=i){var f=e+d,m=f+c,g=m+c,x=g+c,b=n[f],v=n[f+1],y=n[m],w=n[m+1],_=n[g],S=n[g+1],k=n[x],I=n[x+1],E=b,T=v,C=l[p],M=o*l[p+1],A=y*C-w*M,N=y*M+w*C,R=l[2*p],D=o*l[2*p+1],L=_*R-S*D,F=_*D+S*R,$=l[3*p],O=o*l[3*p+1],P=k*$-I*O,z=k*O+I*$,B=E+L,U=T+F,W=E-L,V=T-F,G=A+P,H=N+z,j=o*(A-P),q=o*(N-z),X=B+G,K=U+H,Y=W+q,Z=V-j;if(n[f]=X,n[f+1]=K,n[m]=Y,n[m+1]=Z,0!==d){if(d!==h){var J=W+-o*q,Q=-o*j-V,ee=B+-o*G,te=-U- -o*H,ne=e+c-d,re=e+u-d;n[ne]=J,n[ne+1]=Q,n[re]=ee,n[re+1]=te}}else{var ie=B-G,se=U-H;n[g]=ie,n[g+1]=se}}}},t.prototype._singleRealTransform2=function(e,t,n){const r=this._out,i=this._data,s=i[t],a=i[t+n],o=s+a,l=s-a;r[e]=o,r[e+1]=0,r[e+2]=l,r[e+3]=0},t.prototype._singleRealTransform4=function(e,t,n){const r=this._out,i=this._data,s=this._inv?-1:1,a=2*n,o=3*n,l=i[t],u=i[t+n],c=i[t+a],h=i[t+o],d=l+c,p=l-c,f=u+h,m=s*(u-h),g=d+f,x=p,b=-m,v=d-f,y=p,w=m;r[e]=g,r[e+1]=0,r[e+2]=x,r[e+3]=b,r[e+4]=v,r[e+5]=0,r[e+6]=y,r[e+7]=w}},645:(e,t)=>{t.read=function(e,t,n,r,i){var s,a,o=8*i-r-1,l=(1<<o)-1,u=l>>1,c=-7,h=n?i-1:0,d=n?-1:1,p=e[t+h];for(h+=d,s=p&(1<<-c)-1,p>>=-c,c+=o;c>0;s=256*s+e[t+h],h+=d,c-=8);for(a=s&(1<<-c)-1,s>>=-c,c+=r;c>0;a=256*a+e[t+h],h+=d,c-=8);if(0===s)s=1-u;else{if(s===l)return a?NaN:1/0*(p?-1:1);a+=Math.pow(2,r),s-=u}return(p?-1:1)*a*Math.pow(2,s-r)},t.write=function(e,t,n,r,i,s){var a,o,l,u=8*s-i-1,c=(1<<u)-1,h=c>>1,d=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:s-1,f=r?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(o=isNaN(t)?1:0,a=c):(a=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-a))<1&&(a--,l*=2),(t+=a+h>=1?d/l:d*Math.pow(2,1-h))*l>=2&&(a++,l/=2),a+h>=c?(o=0,a=c):a+h>=1?(o=(t*l-1)*Math.pow(2,i),a+=h):(o=t*Math.pow(2,h-1)*Math.pow(2,i),a=0));i>=8;e[n+p]=255&o,p+=f,o/=256,i-=8);for(a=a<<i|o,u+=i;u>0;e[n+p]=255&a,p+=f,a/=256,u-=8);e[n+p-f]|=128*m}},6907:e=>{"use strict";e.exports=function(e){for(var t=new Array(e),n=0;n<e;++n)t[n]=n;return t}},8738:e=>{function t(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}e.exports=function(e){return null!=e&&(t(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&t(e.slice(0,0))}(e)||!!e._isBuffer)}},1587:(e,t,n)=>{"use strict";var r=n(8897),i=n(2861),s=n(316),a=n(5082);e.exports=function(e,t,n){var o,l,u=t.shape,c=u.length,h=1,d=new Array(c),p=0;for(o=c-1;o>=0;--o)if(d[o]=h,h*=u[o],p=Math.max(p,a.scratchMemory(u[o])),t.shape[o]!==n.shape[o])throw new Error("Shape mismatch, real and imaginary arrays must have same size");var f,m=4*h+p;f="array"===t.dtype||"float64"===t.dtype||"custom"===t.dtype?s.mallocDouble(m):s.mallocFloat(m);var g,x,b,v,y=i(f,u.slice(0),d,0),w=i(f,u.slice(0),d.slice(0),h),_=i(f,u.slice(0),d.slice(0),2*h),S=i(f,u.slice(0),d.slice(0),3*h),k=4*h;for(r.assign(y,t),r.assign(w,n),o=c-1;o>=0&&(a(e,h/u[o],u[o],f,y.offset,w.offset,k),0!==o);--o){for(x=1,b=_.stride,v=S.stride,l=o-1;l<c;++l)v[l]=b[l]=x,x*=u[l];for(l=o-2;l>=0;--l)v[l]=b[l]=x,x*=u[l];r.assign(_,y),r.assign(S,w),g=y,y=_,_=g,g=w,w=S,S=g}r.assign(t,y),r.assign(n,w),s.free(f)}},5082:(e,t,n)=>{var r=n(746);function i(e,t,n,i,s,a){var o,l,u,c,h,d,p,f,m,g,x,b,v,y,w,_,S,k,I,E,T,C,M,A;for(e|=0,t|=0,s|=0,a|=0,o=n|=0,l=r.log2(o),k=0;k<t;++k){for(p=o>>1,h=0,u=0;u<o-1;u++){for(u<h&&(v=i[s+u],i[s+u]=i[s+h],i[s+h]=v,v=i[a+u],i[a+u]=i[a+h],i[a+h]=v),d=p;d<=h;)h-=d,d>>=1;h+=d}for(x=-1,b=0,g=1,f=0;f<l;f++){for(m=g,g<<=1,_=1,S=0,h=0;h<m;h++){for(u=h;u<o;u+=g)I=i[s+(c=u+m)],E=i[a+c],T=i[s+u],C=i[a+u],y=(M=_*(I+E))-E*(_+S),w=M+(A=I*(S-_)),i[s+c]=T-y,i[a+c]=C-w,i[s+u]+=y,i[a+u]+=w;A=_*(b-x),_=(M=x*(_+S))-S*(x+b),S=M+A}b=Math.sqrt((1-x)/2),e<0&&(b=-b),x=Math.sqrt((1+x)/2)}if(e<0){var N=1/o;for(u=0;u<o;u++)i[s+u]*=N,i[a+u]*=N}s+=n,a+=n}}e.exports=function(e,t,n,s,a,o,l){e|=0,t|=0,n|=0,a|=0,o|=0,r.isPow2(n)?i(e,t,n,s,a,o):function(e,t,n,s,a,o,l){e|=0,t|=0,n|=0,a|=0,o|=0,l|=0;var u,c,h,d,p,f,m,g,x,b=r.nextPow2(2*n+1),v=l,y=v+n,w=y+n,_=w+b,S=_+b,k=S+b,I=-e*Math.PI/n;for(x=0;x<n;++x)c=I*(x*x%(2*n)),d=Math.cos(c),p=Math.sin(c),s[S+(b-x)]=s[S+x]=s[v+x]=d,s[k+(b-x)]=s[k+x]=s[y+x]=p;for(x=n;x<=b-n;++x)s[S+x]=0;for(x=n;x<=b-n;++x)s[k+x]=0;for(i(1,1,b,s,S,k),I=e<0?1/n:1,u=0;u<t;++u){for(x=0;x<n;++x)c=s[a+x],h=s[o+x],f=(d=s[v+x])*(c+h),m=c*((p=-s[y+x])-d),g=h*(d+p),s[w+x]=f-g,s[_+x]=f+m;for(x=n;x<b;++x)s[w+x]=0;for(x=n;x<b;++x)s[_+x]=0;for(i(1,1,b,s,w,_),x=0;x<b;++x)c=s[w+x],h=s[_+x],f=(d=s[S+x])*(c+h),m=c*((p=s[k+x])-d),g=h*(d+p),s[w+x]=f-g,s[_+x]=f+m;for(i(-1,1,b,s,w,_),x=0;x<n;++x)c=s[w+x],h=s[_+x],f=(d=s[v+x])*(c+h),m=c*((p=-s[y+x])-d),g=h*(d+p),s[a+x]=I*(f-g),s[o+x]=I*(f+m);a+=n,o+=n}}(e,t,n,s,a,o,l)},e.exports.scratchMemory=function(e){return r.isPow2(e)?0:2*e+4*r.nextPow2(2*e+1)}},8897:(e,t,n)=>{"use strict";var r=n(6239),i={body:"",args:[],thisVars:[],localVars:[]};function s(e){if(!e)return i;for(var t=0;t<e.args.length;++t){var n=e.args[t];e.args[t]=0===t?{name:n,lvalue:!0,rvalue:!!e.rvalue,count:e.count||1}:{name:n,lvalue:!1,rvalue:!0,count:1}}return e.thisVars||(e.thisVars=[]),e.localVars||(e.localVars=[]),e}function a(e){for(var t=[],n=0;n<e.args.length;++n)t.push("a"+n);return new Function("P",["return function ",e.funcName,"_ndarrayops(",t.join(","),") {P(",t.join(","),");return a0}"].join(""))(function(e){return r({args:e.args,pre:s(e.pre),body:s(e.body),post:s(e.proc),funcName:e.funcName})}(e))}var o={add:"+",sub:"-",mul:"*",div:"/",mod:"%",band:"&",bor:"|",bxor:"^",lshift:"<<",rshift:">>",rrshift:">>>"};!function(){for(var e in o){var n=o[e];t[e]=a({args:["array","array","array"],body:{args:["a","b","c"],body:"a=b"+n+"c"},funcName:e}),t[e+"eq"]=a({args:["array","array"],body:{args:["a","b"],body:"a"+n+"=b"},rvalue:!0,funcName:e+"eq"}),t[e+"s"]=a({args:["array","array","scalar"],body:{args:["a","b","s"],body:"a=b"+n+"s"},funcName:e+"s"}),t[e+"seq"]=a({args:["array","scalar"],body:{args:["a","s"],body:"a"+n+"=s"},rvalue:!0,funcName:e+"seq"})}}();var l={not:"!",bnot:"~",neg:"-",recip:"1.0/"};!function(){for(var e in l){var n=l[e];t[e]=a({args:["array","array"],body:{args:["a","b"],body:"a="+n+"b"},funcName:e}),t[e+"eq"]=a({args:["array"],body:{args:["a"],body:"a="+n+"a"},rvalue:!0,count:2,funcName:e+"eq"})}}();var u={and:"&&",or:"||",eq:"===",neq:"!==",lt:"<",gt:">",leq:"<=",geq:">="};!function(){for(var e in u){var n=u[e];t[e]=a({args:["array","array","array"],body:{args:["a","b","c"],body:"a=b"+n+"c"},funcName:e}),t[e+"s"]=a({args:["array","array","scalar"],body:{args:["a","b","s"],body:"a=b"+n+"s"},funcName:e+"s"}),t[e+"eq"]=a({args:["array","array"],body:{args:["a","b"],body:"a=a"+n+"b"},rvalue:!0,count:2,funcName:e+"eq"}),t[e+"seq"]=a({args:["array","scalar"],body:{args:["a","s"],body:"a=a"+n+"s"},rvalue:!0,count:2,funcName:e+"seq"})}}();var c=["abs","acos","asin","atan","ceil","cos","exp","floor","log","round","sin","sqrt","tan"];!function(){for(var e=0;e<c.length;++e){var n=c[e];t[n]=a({args:["array","array"],pre:{args:[],body:"this_f=Math."+n,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(b)",thisVars:["this_f"]},funcName:n}),t[n+"eq"]=a({args:["array"],pre:{args:[],body:"this_f=Math."+n,thisVars:["this_f"]},body:{args:["a"],body:"a=this_f(a)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:n+"eq"})}}();var h=["max","min","atan2","pow"];!function(){for(var e=0;e<h.length;++e){var n=h[e];t[n]=a({args:["array","array","array"],pre:{args:[],body:"this_f=Math."+n,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(b,c)",thisVars:["this_f"]},funcName:n}),t[n+"s"]=a({args:["array","array","scalar"],pre:{args:[],body:"this_f=Math."+n,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(b,c)",thisVars:["this_f"]},funcName:n+"s"}),t[n+"eq"]=a({args:["array","array"],pre:{args:[],body:"this_f=Math."+n,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(a,b)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:n+"eq"}),t[n+"seq"]=a({args:["array","scalar"],pre:{args:[],body:"this_f=Math."+n,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(a,b)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:n+"seq"})}}();var d=["atan2","pow"];!function(){for(var e=0;e<d.length;++e){var n=d[e];t[n+"op"]=a({args:["array","array","array"],pre:{args:[],body:"this_f=Math."+n,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(c,b)",thisVars:["this_f"]},funcName:n+"op"}),t[n+"ops"]=a({args:["array","array","scalar"],pre:{args:[],body:"this_f=Math."+n,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(c,b)",thisVars:["this_f"]},funcName:n+"ops"}),t[n+"opeq"]=a({args:["array","array"],pre:{args:[],body:"this_f=Math."+n,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(b,a)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:n+"opeq"}),t[n+"opseq"]=a({args:["array","scalar"],pre:{args:[],body:"this_f=Math."+n,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(b,a)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:n+"opseq"})}}(),t.any=r({args:["array"],pre:i,body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:1}],body:"if(a){return true}",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:"return false"},funcName:"any"}),t.all=r({args:["array"],pre:i,body:{args:[{name:"x",lvalue:!1,rvalue:!0,count:1}],body:"if(!x){return false}",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:"return true"},funcName:"all"}),t.sum=r({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:1}],body:"this_s+=a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"sum"}),t.prod=r({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=1"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:1}],body:"this_s*=a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"prod"}),t.norm2squared=r({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:2}],body:"this_s+=a*a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"norm2squared"}),t.norm2=r({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:2}],body:"this_s+=a*a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return Math.sqrt(this_s)"},funcName:"norm2"}),t.norminf=r({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:4}],body:"if(-a>this_s){this_s=-a}else if(a>this_s){this_s=a}",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"norminf"}),t.norm1=r({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:3}],body:"this_s+=a<0?-a:a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"norm1"}),t.sup=r({args:["array"],pre:{body:"this_h=-Infinity",args:[],thisVars:["this_h"],localVars:[]},body:{body:"if(_inline_1_arg0_>this_h)this_h=_inline_1_arg0_",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_h"],localVars:[]},post:{body:"return this_h",args:[],thisVars:["this_h"],localVars:[]}}),t.inf=r({args:["array"],pre:{body:"this_h=Infinity",args:[],thisVars:["this_h"],localVars:[]},body:{body:"if(_inline_1_arg0_<this_h)this_h=_inline_1_arg0_",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_h"],localVars:[]},post:{body:"return this_h",args:[],thisVars:["this_h"],localVars:[]}}),t.argmin=r({args:["index","array","shape"],pre:{body:"{this_v=Infinity;this_i=_inline_0_arg2_.slice(0)}",args:[{name:"_inline_0_arg0_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg1_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg2_",lvalue:!1,rvalue:!0,count:1}],thisVars:["this_i","this_v"],localVars:[]},body:{body:"{if(_inline_1_arg1_<this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2},{name:"_inline_1_arg1_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_i","this_v"],localVars:["_inline_1_k"]},post:{body:"{return this_i}",args:[],thisVars:["this_i"],localVars:[]}}),t.argmax=r({args:["index","array","shape"],pre:{body:"{this_v=-Infinity;this_i=_inline_0_arg2_.slice(0)}",args:[{name:"_inline_0_arg0_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg1_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg2_",lvalue:!1,rvalue:!0,count:1}],thisVars:["this_i","this_v"],localVars:[]},body:{body:"{if(_inline_1_arg1_>this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2},{name:"_inline_1_arg1_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_i","this_v"],localVars:["_inline_1_k"]},post:{body:"{return this_i}",args:[],thisVars:["this_i"],localVars:[]}}),t.random=a({args:["array"],pre:{args:[],body:"this_f=Math.random",thisVars:["this_f"]},body:{args:["a"],body:"a=this_f()",thisVars:["this_f"]},funcName:"random"}),t.assign=a({args:["array","array"],body:{args:["a","b"],body:"a=b"},funcName:"assign"}),t.assigns=a({args:["array","scalar"],body:{args:["a","b"],body:"a=b"},funcName:"assigns"}),t.equals=r({args:["array","array"],pre:i,body:{args:[{name:"x",lvalue:!1,rvalue:!0,count:1},{name:"y",lvalue:!1,rvalue:!0,count:1}],body:"if(x!==y){return false}",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:"return true"},funcName:"equals"})},906:(e,t,n)=>{"use strict";var r=n(1587),i=n(9219),s=n(8897),a=n(6780)({args:["array","array","scalar","scalar","scalar"],body:function(e,t,n,r,i){var s=t*n;s<r&&(s=r),s>i&&(s=i)}});e.exports=function(e,t,n,o){void 0===n&&(n=-1/0),void 0===o&&(o=1/0);var l=t.shape,u=e.shape;if(t.shape.length!==e.shape.length)throw new Error("ndarray-resample: input and output arrays should have the same dimensions");var c,h=l.map((function(){return 0}));if(1===e.size)return(c=s.sum(t)/t.size)<n&&(c=n),c>o&&(c=o),void e.set.apply(e,h.concat(c));if(1===t.size)return(c=t.get.apply(t,h))<n&&(c=n),c>o&&(c=o),void s.assigns(e,c);for(var d=l.length,p=new Array(d),f=!1,m=0;m<d;m++)p[m]=Math.min(u[m],l[m]),u[m]>l[m]&&(f=!0);var g=i.malloc(l),x=i.malloc(l);s.assign(g,t),s.assigns(x,0),r(1,g,x);var b=g.lo,v=g.hi,y=i.malloc(u),w=i.malloc(u);f&&(s.assigns(y,0),s.assigns(w,0));var _=new Array(d),S=new Array(d),k=new Array(d),I=new Array(d);for(m=0;m<1<<d;++m){for(var E=0;E<d;++E)if(m&1<<E){if(_[E]=p[E]-(p[E]+1>>>1),0===_[E])continue;S[E]=u[E]-_[E],k[E]=l[E]-_[E],I[E]=1&p[E]?0:1}else _[E]=p[E]+1>>>1,S[E]=0,k[E]=0,I[E]=0;s.assign(v.apply(b.apply(y,S),_),v.apply(b.apply(g,k),_)),s.assign(b.apply(v.apply(b.apply(w,S),_),I),b.apply(v.apply(b.apply(x,k),_),I)),s.assigns(v.apply(v.apply(b.apply(w,S),_),I),0)}r(-1,y,w),a(e,y,e.size/t.size,n,o),i.free(g),i.free(x),i.free(y),i.free(w)}},9219:(e,t,n)=>{"use strict";var r=n(2861),i=n(8897),s=n(316);t.clone=function(e){var t=e.dtype;"generic"!==t&&"array"!==t||(t="double");var n=s.malloc(e.size,t),a=r(n,e.shape);return i.assign(a,e),a},t.malloc=function(e,t){t||(t="double");for(var n=1,i=new Array(e.length),a=e.length-1;a>=0;--a)i[a]=n,n*=e[a];return r(s.malloc(n,t),e,i,0)},t.free=function(e){"generic"!==e.dtype&&"array"!==e.dtype&&s.free(e.data)},t.zeros=function(e,t){t||(t="double");for(var n=1,i=new Array(e.length),a=e.length-1;a>=0;--a)i[a]=n,n*=e[a];var o=s.malloc(n,t);for(a=0;a<n;++a)o[a]=0;return r(o,e,i,0)},t.ones=function(e,t){t||(t="double");for(var n=1,i=new Array(e.length),a=e.length-1;a>=0;--a)i[a]=n,n*=e[a];var o=s.malloc(n,t);for(a=0;a<n;++a)o[a]=1;return r(o,e,i,0)},t.eye=function(e,t){var n,i;t||(t="double");var a=1,o=new Array(e.length);for(n=e.length-1;n>=0;--n)o[n]=a,a*=e[n];var l=s.malloc(a,t);for(n=0;n<a;++n)l[n]=0;var u=1/0,c=0;for(n=e.length-1;n>=0;n--)c+=o[n],u=Math.min(u,e[n]);for(n=0,i=0;n<u;n++,i+=c)l[i]=1;return r(l,e,o,0)}},2861:(e,t,n)=>{var r=n(6907),i=n(8738),s="undefined"!=typeof Float64Array;function a(e,t){return e[0]-t[0]}function o(){var e,t=this.stride,n=new Array(t.length);for(e=0;e<n.length;++e)n[e]=[Math.abs(t[e]),e];n.sort(a);var r=new Array(n.length);for(e=0;e<r.length;++e)r[e]=n[e][1];return r}function l(e,t){var n=["View",t,"d",e].join("");t<0&&(n="View_Nil"+e);var i="generic"===e;if(-1===t){var s="function "+n+"(a){this.data=a;};var proto="+n+".prototype;proto.dtype='"+e+"';proto.index=function(){return -1};proto.size=0;proto.dimension=-1;proto.shape=proto.stride=proto.order=[];proto.lo=proto.hi=proto.transpose=proto.step=function(){return new "+n+"(this.data);};proto.get=proto.set=function(){};proto.pick=function(){return null};return function construct_"+n+"(a){return new "+n+"(a);}";return new Function(s)()}if(0===t)return s="function "+n+"(a,d) {this.data = a;this.offset = d};var proto="+n+".prototype;proto.dtype='"+e+"';proto.index=function(){return this.offset};proto.dimension=0;proto.size=1;proto.shape=proto.stride=proto.order=[];proto.lo=proto.hi=proto.transpose=proto.step=function "+n+"_copy() {return new "+n+"(this.data,this.offset)};proto.pick=function "+n+"_pick(){return TrivialArray(this.data);};proto.valueOf=proto.get=function "+n+"_get(){return "+(i?"this.data.get(this.offset)":"this.data[this.offset]")+"};proto.set=function "+n+"_set(v){return "+(i?"this.data.set(this.offset,v)":"this.data[this.offset]=v")+"};return function construct_"+n+"(a,b,c,d){return new "+n+"(a,d)}",new Function("TrivialArray",s)(u[e][0]);s=["'use strict'"];var a=r(t),l=a.map((function(e){return"i"+e})),c="this.offset+"+a.map((function(e){return"this.stride["+e+"]*i"+e})).join("+"),h=a.map((function(e){return"b"+e})).join(","),d=a.map((function(e){return"c"+e})).join(",");s.push("function "+n+"(a,"+h+","+d+",d){this.data=a","this.shape=["+h+"]","this.stride=["+d+"]","this.offset=d|0}","var proto="+n+".prototype","proto.dtype='"+e+"'","proto.dimension="+t),s.push("Object.defineProperty(proto,'size',{get:function "+n+"_size(){return "+a.map((function(e){return"this.shape["+e+"]"})).join("*"),"}})"),1===t?s.push("proto.order=[0]"):(s.push("Object.defineProperty(proto,'order',{get:"),t<4?(s.push("function "+n+"_order(){"),2===t?s.push("return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})"):3===t&&s.push("var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);if(s0>s1){if(s1>s2){return [2,1,0];}else if(s0>s2){return [1,2,0];}else{return [1,0,2];}}else if(s0>s2){return [2,0,1];}else if(s2>s1){return [0,1,2];}else{return [0,2,1];}}})")):s.push("ORDER})")),s.push("proto.set=function "+n+"_set("+l.join(",")+",v){"),i?s.push("return this.data.set("+c+",v)}"):s.push("return this.data["+c+"]=v}"),s.push("proto.get=function "+n+"_get("+l.join(",")+"){"),i?s.push("return this.data.get("+c+")}"):s.push("return this.data["+c+"]}"),s.push("proto.index=function "+n+"_index(",l.join(),"){return "+c+"}"),s.push("proto.hi=function "+n+"_hi("+l.join(",")+"){return new "+n+"(this.data,"+a.map((function(e){return["(typeof i",e,"!=='number'||i",e,"<0)?this.shape[",e,"]:i",e,"|0"].join("")})).join(",")+","+a.map((function(e){return"this.stride["+e+"]"})).join(",")+",this.offset)}");var p=a.map((function(e){return"a"+e+"=this.shape["+e+"]"})),f=a.map((function(e){return"c"+e+"=this.stride["+e+"]"}));s.push("proto.lo=function "+n+"_lo("+l.join(",")+"){var b=this.offset,d=0,"+p.join(",")+","+f.join(","));for(var m=0;m<t;++m)s.push("if(typeof i"+m+"==='number'&&i"+m+">=0){d=i"+m+"|0;b+=c"+m+"*d;a"+m+"-=d}");for(s.push("return new "+n+"(this.data,"+a.map((function(e){return"a"+e})).join(",")+","+a.map((function(e){return"c"+e})).join(",")+",b)}"),s.push("proto.step=function "+n+"_step("+l.join(",")+"){var "+a.map((function(e){return"a"+e+"=this.shape["+e+"]"})).join(",")+","+a.map((function(e){return"b"+e+"=this.stride["+e+"]"})).join(",")+",c=this.offset,d=0,ceil=Math.ceil"),m=0;m<t;++m)s.push("if(typeof i"+m+"==='number'){d=i"+m+"|0;if(d<0){c+=b"+m+"*(a"+m+"-1);a"+m+"=ceil(-a"+m+"/d)}else{a"+m+"=ceil(a"+m+"/d)}b"+m+"*=d}");s.push("return new "+n+"(this.data,"+a.map((function(e){return"a"+e})).join(",")+","+a.map((function(e){return"b"+e})).join(",")+",c)}");var g=new Array(t),x=new Array(t);for(m=0;m<t;++m)g[m]="a[i"+m+"]",x[m]="b[i"+m+"]";for(s.push("proto.transpose=function "+n+"_transpose("+l+"){"+l.map((function(e,t){return e+"=("+e+"===undefined?"+t+":"+e+"|0)"})).join(";"),"var a=this.shape,b=this.stride;return new "+n+"(this.data,"+g.join(",")+","+x.join(",")+",this.offset)}"),s.push("proto.pick=function "+n+"_pick("+l+"){var a=[],b=[],c=this.offset"),m=0;m<t;++m)s.push("if(typeof i"+m+"==='number'&&i"+m+">=0){c=(c+this.stride["+m+"]*i"+m+")|0}else{a.push(this.shape["+m+"]);b.push(this.stride["+m+"])}");return s.push("var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}"),s.push("return function construct_"+n+"(data,shape,stride,offset){return new "+n+"(data,"+a.map((function(e){return"shape["+e+"]"})).join(",")+","+a.map((function(e){return"stride["+e+"]"})).join(",")+",offset)}"),new Function("CTOR_LIST","ORDER",s.join("\n"))(u[e],o)}var u={float32:[],float64:[],int8:[],int16:[],int32:[],uint8:[],uint16:[],uint32:[],array:[],uint8_clamped:[],bigint64:[],biguint64:[],buffer:[],generic:[]};e.exports=function(e,t,n,r){if(void 0===e)return(0,u.array[0])([]);"number"==typeof e&&(e=[e]),void 0===t&&(t=[e.length]);var a=t.length;if(void 0===n){n=new Array(a);for(var o=a-1,c=1;o>=0;--o)n[o]=c,c*=t[o]}if(void 0===r)for(r=0,o=0;o<a;++o)n[o]<0&&(r-=(t[o]-1)*n[o]);for(var h=function(e){if(i(e))return"buffer";if(s)switch(Object.prototype.toString.call(e)){case"[object Float64Array]":return"float64";case"[object Float32Array]":return"float32";case"[object Int8Array]":return"int8";case"[object Int16Array]":return"int16";case"[object Int32Array]":return"int32";case"[object Uint8Array]":return"uint8";case"[object Uint16Array]":return"uint16";case"[object Uint32Array]":return"uint32";case"[object Uint8ClampedArray]":return"uint8_clamped";case"[object BigInt64Array]":return"bigint64";case"[object BigUint64Array]":return"biguint64"}return Array.isArray(e)?"array":"generic"}(e),d=u[h];d.length<=a+1;)d.push(l(h,d.length-1));return(0,d[a+1])(e,t,n,r)}},3300:(e,t)=>{"use strict";var n=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==n)return n;throw new Error("unable to locate global object")}();e.exports=t=n.fetch,n.fetch&&(t.default=n.fetch.bind(n)),t.Headers=n.Headers,t.Request=n.Request,t.Response=n.Response},316:(e,t,n)=>{"use strict";var r=n(746),i=n(6841),s=n(8764).lW;n.g.__TYPEDARRAY_POOL||(n.g.__TYPEDARRAY_POOL={UINT8:i([32,0]),UINT16:i([32,0]),UINT32:i([32,0]),BIGUINT64:i([32,0]),INT8:i([32,0]),INT16:i([32,0]),INT32:i([32,0]),BIGINT64:i([32,0]),FLOAT:i([32,0]),DOUBLE:i([32,0]),DATA:i([32,0]),UINT8C:i([32,0]),BUFFER:i([32,0])});var a="undefined"!=typeof Uint8ClampedArray,o="undefined"!=typeof BigUint64Array,l="undefined"!=typeof BigInt64Array,u=n.g.__TYPEDARRAY_POOL;u.UINT8C||(u.UINT8C=i([32,0])),u.BIGUINT64||(u.BIGUINT64=i([32,0])),u.BIGINT64||(u.BIGINT64=i([32,0])),u.BUFFER||(u.BUFFER=i([32,0]));var c=u.DATA,h=u.BUFFER;function d(e){if(e){var t=e.length||e.byteLength,n=r.log2(t);c[n].push(e)}}function p(e){e=r.nextPow2(e);var t=r.log2(e),n=c[t];return n.length>0?n.pop():new ArrayBuffer(e)}function f(e){return new Uint8Array(p(e),0,e)}function m(e){return new Uint16Array(p(2*e),0,e)}function g(e){return new Uint32Array(p(4*e),0,e)}function x(e){return new Int8Array(p(e),0,e)}function b(e){return new Int16Array(p(2*e),0,e)}function v(e){return new Int32Array(p(4*e),0,e)}function y(e){return new Float32Array(p(4*e),0,e)}function w(e){return new Float64Array(p(8*e),0,e)}function _(e){return a?new Uint8ClampedArray(p(e),0,e):f(e)}function S(e){return o?new BigUint64Array(p(8*e),0,e):null}function k(e){return l?new BigInt64Array(p(8*e),0,e):null}function I(e){return new DataView(p(e),0,e)}function E(e){e=r.nextPow2(e);var t=r.log2(e),n=h[t];return n.length>0?n.pop():new s(e)}t.free=function(e){if(s.isBuffer(e))h[r.log2(e.length)].push(e);else{if("[object ArrayBuffer]"!==Object.prototype.toString.call(e)&&(e=e.buffer),!e)return;var t=e.length||e.byteLength,n=0|r.log2(t);c[n].push(e)}},t.freeUint8=t.freeUint16=t.freeUint32=t.freeBigUint64=t.freeInt8=t.freeInt16=t.freeInt32=t.freeBigInt64=t.freeFloat32=t.freeFloat=t.freeFloat64=t.freeDouble=t.freeUint8Clamped=t.freeDataView=function(e){d(e.buffer)},t.freeArrayBuffer=d,t.freeBuffer=function(e){h[r.log2(e.length)].push(e)},t.malloc=function(e,t){if(void 0===t||"arraybuffer"===t)return p(e);switch(t){case"uint8":return f(e);case"uint16":return m(e);case"uint32":return g(e);case"int8":return x(e);case"int16":return b(e);case"int32":return v(e);case"float":case"float32":return y(e);case"double":case"float64":return w(e);case"uint8_clamped":return _(e);case"bigint64":return k(e);case"biguint64":return S(e);case"buffer":return E(e);case"data":case"dataview":return I(e);default:return null}return null},t.mallocArrayBuffer=p,t.mallocUint8=f,t.mallocUint16=m,t.mallocUint32=g,t.mallocInt8=x,t.mallocInt16=b,t.mallocInt32=v,t.mallocFloat32=t.mallocFloat=y,t.mallocFloat64=t.mallocDouble=w,t.mallocUint8Clamped=_,t.mallocBigUint64=S,t.mallocBigInt64=k,t.mallocDataView=I,t.mallocBuffer=E,t.clearCache=function(){for(var e=0;e<32;++e)u.UINT8[e].length=0,u.UINT16[e].length=0,u.UINT32[e].length=0,u.INT8[e].length=0,u.INT16[e].length=0,u.INT32[e].length=0,u.FLOAT[e].length=0,u.DOUBLE[e].length=0,u.BIGUINT64[e].length=0,u.BIGINT64[e].length=0,u.UINT8C[e].length=0,c[e].length=0,h[e].length=0}},8706:e=>{"use strict";e.exports=function(e,t,n){return 0===e.length?e:t?(n||e.sort(t),function(e,t){for(var n=1,r=e.length,i=e[0],s=e[0],a=1;a<r;++a)if(s=i,t(i=e[a],s)){if(a===n){n++;continue}e[n++]=i}return e.length=n,e}(e,t)):(n||e.sort(),function(e){for(var t=1,n=e.length,r=e[0],i=e[0],s=1;s<n;++s,i=r)if(i=r,(r=e[s])!==i){if(s===t){t++;continue}e[t++]=r}return e.length=t,e}(e))}},6470:()=>{},5751:()=>{},4673:()=>{},3522:()=>{},7159:()=>{},2664:()=>{},2967:()=>{}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var s=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";var e={};n.r(e),n.d(e,{assertParamsValid:()=>Nh,computeFlatOffset:()=>Gh,computeOutShape:()=>Dh,getNormalizedAxes:()=>Oh,isSliceContinous:()=>Vh,maskToAxes:()=>Rh,parseSliceParams:()=>Hh,sliceInfo:()=>jh,startForAxis:()=>Uh,startIndicesWithElidedDims:()=>Ph,stopForAxis:()=>Wh,stopIndicesWithElidedDims:()=>zh,stridesForAxis:()=>Bh,stridesWithElidedDims:()=>Lh});var t={};n.r(t),n.d(t,{collectGatherOpShapeInfo:()=>tg,computeOutShape:()=>eg,segOpComputeOptimalWindowSize:()=>Qm});var r={};n.r(r),n.d(r,{ERF_A1:()=>Om,ERF_A2:()=>Pm,ERF_A3:()=>zm,ERF_A4:()=>Bm,ERF_A5:()=>Um,ERF_P:()=>$m,PARALLELIZE_THRESHOLD:()=>_m,SELU_SCALE:()=>Fm,SELU_SCALEALPHA:()=>Lm,applyActivation:()=>If,assertAndGetBroadcastShape:()=>Xd,assertAxesAreInnerMostDims:()=>Sp,assertParamsConsistent:()=>ym,assignToTypedArray:()=>Km,axesAreInnerMostDims:()=>vp,calculateShapes:()=>Dm,castTensor:()=>ng,combineLocations:()=>yp,complexWithEvenIndex:()=>jm,complexWithOddIndex:()=>qm,computeConv2DInfo:()=>fd,computeConv3DInfo:()=>md,computeDefaultPad:()=>gd,computeDilation2DInfo:()=>hd,computeOptimalWindowSize:()=>Sm,computeOutAndReduceShapes:()=>wp,computeOutShape:()=>wm,computePool2DInfo:()=>dd,computePool3DInfo:()=>pd,convertConv2DDataFormat:()=>Sd,eitherStridesOrDilationsAreOne:()=>_d,expandShapeToKeepDim:()=>_p,exponent:()=>Zm,exponents:()=>Ym,fromStringArrayToUint8:()=>sg,fromUint8ToStringArray:()=>ig,getAxesPermutation:()=>kp,getBroadcastDims:()=>jd,getComplexWithIndex:()=>Xm,getFusedBiasGradient:()=>kf,getFusedDyActivation:()=>Sf,getImageCenter:()=>km,getInnerMostAxes:()=>Ep,getPermuted:()=>Em,getReductionAxes:()=>qd,getReshaped:()=>Im,getReshapedPermuted:()=>Tm,getSliceBeginCoords:()=>Cm,getSliceSize:()=>Mm,getUndoAxesPermutation:()=>Ip,log:()=>Vm,mergeRealAndImagArrays:()=>Gm,prepareAndValidate:()=>Am,prepareSplitSize:()=>Jm,reshapeTensor:()=>rg,segment_util:()=>t,shouldFuse:()=>Ef,slice_util:()=>e,splitRealAndImagArrays:()=>Hm,tupleValuesAreOne:()=>wd,upcastType:()=>kc,validateInput:()=>Rm,validateUpdateShape:()=>Nm,warn:()=>Wm});var i={};n.r(i),n.d(i,{addImpl:()=>CI,bincountImpl:()=>yE,bincountReduceImpl:()=>wE,ceilImpl:()=>kE,concatImpl:()=>AE,expImpl:()=>gT,expm1Impl:()=>wT,floorImpl:()=>WT,gatherV2Impl:()=>ZT,greaterImpl:()=>QT,lessImpl:()=>dC,linSpaceImpl:()=>bC,logImpl:()=>yC,maxImpl:()=>FC,maximumImpl:()=>PC,minimumImpl:()=>YC,multiplyImpl:()=>kT,negImpl:()=>oM,notEqualImpl:()=>mM,prodImpl:()=>CM,rangeImpl:()=>AM,rsqrtImpl:()=>WM,simpleAbsImpl:()=>OI,sliceImpl:()=>gE,squaredDifferenceImpl:()=>mA,stridedSliceImpl:()=>yA,subImpl:()=>NT,tileImpl:()=>IA,topKImpl:()=>EA,transposeImpl:()=>GI,uniqueImpl:()=>TA});const s=100,a=301,o=302,l=306,u=1e3,c=1001,h=1002,d=1003,p=1006,f=1008,m=1009,g=1014,x=1015,b=1016,v=1020,y=1023,w=1026,_=1027,S=33776,k=33777,I=33778,E=33779,T=2300,C=2301,M=2302,A=3e3,N=3001,R="srgb",D="srgb-linear",L=7680,F="300 es",$=1035;class O{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;const n=this._listeners[e];if(void 0!==n){const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}dispatchEvent(e){if(void 0===this._listeners)return;const t=this._listeners[e.type];if(void 0!==t){e.target=this;const n=t.slice(0);for(let t=0,r=n.length;t<r;t++)n[t].call(this,e);e.target=null}}}const P=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],z=Math.PI/180,B=180/Math.PI;function U(){const e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(P[255&e]+P[e>>8&255]+P[e>>16&255]+P[e>>24&255]+"-"+P[255&t]+P[t>>8&255]+"-"+P[t>>16&15|64]+P[t>>24&255]+"-"+P[63&n|128]+P[n>>8&255]+"-"+P[n>>16&255]+P[n>>24&255]+P[255&r]+P[r>>8&255]+P[r>>16&255]+P[r>>24&255]).toLowerCase()}function W(e,t,n){return Math.max(t,Math.min(n,e))}function V(e,t,n){return(1-n)*e+n*t}function G(e){return 0==(e&e-1)&&0!==e}function H(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}class j{constructor(e=0,t=0){j.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),r=Math.sin(t),i=this.x-e.x,s=this.y-e.y;return this.x=i*n-s*r+e.x,this.y=i*r+s*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class q{constructor(){q.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,r,i,s,a,o,l){const u=this.elements;return u[0]=e,u[1]=r,u[2]=a,u[3]=t,u[4]=i,u[5]=o,u[6]=n,u[7]=s,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,i=this.elements,s=n[0],a=n[3],o=n[6],l=n[1],u=n[4],c=n[7],h=n[2],d=n[5],p=n[8],f=r[0],m=r[3],g=r[6],x=r[1],b=r[4],v=r[7],y=r[2],w=r[5],_=r[8];return i[0]=s*f+a*x+o*y,i[3]=s*m+a*b+o*w,i[6]=s*g+a*v+o*_,i[1]=l*f+u*x+c*y,i[4]=l*m+u*b+c*w,i[7]=l*g+u*v+c*_,i[2]=h*f+d*x+p*y,i[5]=h*m+d*b+p*w,i[8]=h*g+d*v+p*_,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],s=e[4],a=e[5],o=e[6],l=e[7],u=e[8];return t*s*u-t*a*l-n*i*u+n*a*o+r*i*l-r*s*o}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],s=e[4],a=e[5],o=e[6],l=e[7],u=e[8],c=u*s-a*l,h=a*o-u*i,d=l*i-s*o,p=t*c+n*h+r*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return e[0]=c*f,e[1]=(r*l-u*n)*f,e[2]=(a*n-r*s)*f,e[3]=h*f,e[4]=(u*t-r*o)*f,e[5]=(r*i-a*t)*f,e[6]=d*f,e[7]=(n*o-l*t)*f,e[8]=(s*t-n*i)*f,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,i,s,a){const o=Math.cos(i),l=Math.sin(i);return this.set(n*o,n*l,-n*(o*s+l*a)+s+e,-r*l,r*o,-r*(-l*s+o*a)+a+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),r=this.elements,i=r[0],s=r[3],a=r[6],o=r[1],l=r[4],u=r[7];return r[0]=t*i+n*o,r[3]=t*s+n*l,r[6]=t*a+n*u,r[1]=-n*i+t*o,r[4]=-n*s+t*l,r[7]=-n*a+t*u,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<9;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}function X(e){for(let t=e.length-1;t>=0;--t)if(e[t]>65535)return!0;return!1}function K(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}function Y(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function Z(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;const J={[R]:{[D]:Y},[D]:{[R]:Z}},Q={legacyMode:!0,get workingColorSpace(){return D},set workingColorSpace(e){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(e,t,n){if(this.legacyMode||t===n||!t||!n)return e;if(J[t]&&void 0!==J[t][n]){const r=J[t][n];return e.r=r(e.r),e.g=r(e.g),e.b=r(e.b),e}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(e,t){return this.convert(e,this.workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this.workingColorSpace)}},ee={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},te={r:0,g:0,b:0},ne={h:0,s:0,l:0},re={h:0,s:0,l:0};function ie(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}function se(e,t){return t.r=e.r,t.g=e.g,t.b=e.b,t}class ae{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===t&&void 0===n?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t="srgb"){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,Q.toWorkingColorSpace(this,t),this}setRGB(e,t,n,r="srgb-linear"){return this.r=e,this.g=t,this.b=n,Q.toWorkingColorSpace(this,r),this}setHSL(e,t,n,r="srgb-linear"){if(e=(e%(i=1)+i)%i,t=W(t,0,1),n=W(n,0,1),0===t)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,i=2*n-r;this.r=ie(i,r,e+1/3),this.g=ie(i,r,e),this.b=ie(i,r,e-1/3)}var i;return Q.toWorkingColorSpace(this,r),this}setStyle(e,t="srgb"){function n(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let e;const i=r[1],s=r[2];switch(i){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,Q.toWorkingColorSpace(this,t),n(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,Q.toWorkingColorSpace(this,t),n(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s)){const r=parseFloat(e[1])/360,i=parseInt(e[2],10)/100,s=parseInt(e[3],10)/100;return n(e[4]),this.setHSL(r,i,s,t)}}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const e=r[1],n=e.length;if(3===n)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,Q.toWorkingColorSpace(this,t),this;if(6===n)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,Q.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t="srgb"){const n=ee[e.toLowerCase()];return void 0!==n?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Y(e.r),this.g=Y(e.g),this.b=Y(e.b),this}copyLinearToSRGB(e){return this.r=Z(e.r),this.g=Z(e.g),this.b=Z(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e="srgb"){return Q.fromWorkingColorSpace(se(this,te),e),W(255*te.r,0,255)<<16^W(255*te.g,0,255)<<8^W(255*te.b,0,255)<<0}getHexString(e="srgb"){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t="srgb-linear"){Q.fromWorkingColorSpace(se(this,te),t);const n=te.r,r=te.g,i=te.b,s=Math.max(n,r,i),a=Math.min(n,r,i);let o,l;const u=(a+s)/2;if(a===s)o=0,l=0;else{const e=s-a;switch(l=u<=.5?e/(s+a):e/(2-s-a),s){case n:o=(r-i)/e+(r<i?6:0);break;case r:o=(i-n)/e+2;break;case i:o=(n-r)/e+4}o/=6}return e.h=o,e.s=l,e.l=u,e}getRGB(e,t="srgb-linear"){return Q.fromWorkingColorSpace(se(this,te),t),e.r=te.r,e.g=te.g,e.b=te.b,e}getStyle(e="srgb"){return Q.fromWorkingColorSpace(se(this,te),e),e!==R?`color(${e} ${te.r} ${te.g} ${te.b})`:`rgb(${255*te.r|0},${255*te.g|0},${255*te.b|0})`}offsetHSL(e,t,n){return this.getHSL(ne),ne.h+=e,ne.s+=t,ne.l+=n,this.setHSL(ne.h,ne.s,ne.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(ne),e.getHSL(re);const n=V(ne.h,re.h,t),r=V(ne.s,re.s,t),i=V(ne.l,re.l,t);return this.setHSL(n,r,i),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}let oe;ae.NAMES=ee;class le{static getDataURL(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===oe&&(oe=K("canvas")),oe.width=e.width,oe.height=e.height;const n=oe.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=oe}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const t=K("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const r=n.getImageData(0,0,e.width,e.height),i=r.data;for(let e=0;e<i.length;e++)i[e]=255*Y(i[e]/255);return n.putImageData(r,0,0),t}if(e.data){const t=e.data.slice(0);for(let e=0;e<t.length;e++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[e]=Math.floor(255*Y(t[e]/255)):t[e]=Y(t[e]);return{data:t,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class ue{constructor(e=null){this.isSource=!0,this.uuid=U(),this.data=e,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];const n={uuid:this.uuid,url:""},r=this.data;if(null!==r){let e;if(Array.isArray(r)){e=[];for(let t=0,n=r.length;t<n;t++)r[t].isDataTexture?e.push(ce(r[t].image)):e.push(ce(r[t]))}else e=ce(r);n.url=e}return t||(e.images[this.uuid]=n),n}}function ce(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?le.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let he=0;class de extends O{constructor(e=de.DEFAULT_IMAGE,t=de.DEFAULT_MAPPING,n=1001,r=1001,i=1006,s=1008,a=1023,o=1009,l=1,u=3e3){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:he++}),this.uuid=U(),this.name="",this.source=new ue(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=r,this.magFilter=i,this.minFilter=s,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new j(0,0),this.repeat=new j(1,1),this.center=new j(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new q,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case u:e.x=e.x-Math.floor(e.x);break;case c:e.x=e.x<0?0:1;break;case h:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case u:e.y=e.y-Math.floor(e.y);break;case c:e.y=e.y<0?0:1;break;case h:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}}de.DEFAULT_IMAGE=null,de.DEFAULT_MAPPING=300;class pe{constructor(e=0,t=0,n=0,r=1){pe.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,i=this.w,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*r+s[12]*i,this.y=s[1]*t+s[5]*n+s[9]*r+s[13]*i,this.z=s[2]*t+s[6]*n+s[10]*r+s[14]*i,this.w=s[3]*t+s[7]*n+s[11]*r+s[15]*i,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,r,i;const s=.01,a=.1,o=e.elements,l=o[0],u=o[4],c=o[8],h=o[1],d=o[5],p=o[9],f=o[2],m=o[6],g=o[10];if(Math.abs(u-h)<s&&Math.abs(c-f)<s&&Math.abs(p-m)<s){if(Math.abs(u+h)<a&&Math.abs(c+f)<a&&Math.abs(p+m)<a&&Math.abs(l+d+g-3)<a)return this.set(1,0,0,0),this;t=Math.PI;const e=(l+1)/2,o=(d+1)/2,x=(g+1)/2,b=(u+h)/4,v=(c+f)/4,y=(p+m)/4;return e>o&&e>x?e<s?(n=0,r=.707106781,i=.707106781):(n=Math.sqrt(e),r=b/n,i=v/n):o>x?o<s?(n=.707106781,r=0,i=.707106781):(r=Math.sqrt(o),n=b/r,i=y/r):x<s?(n=.707106781,r=.707106781,i=0):(i=Math.sqrt(x),n=v/i,r=y/i),this.set(n,r,i,t),this}let x=Math.sqrt((m-p)*(m-p)+(c-f)*(c-f)+(h-u)*(h-u));return Math.abs(x)<.001&&(x=1),this.x=(m-p)/x,this.y=(c-f)/x,this.z=(h-u)/x,this.w=Math.acos((l+d+g-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class fe extends O{constructor(e,t,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new pe(0,0,e,t),this.scissorTest=!1,this.viewport=new pe(0,0,e,t);const r={width:e,height:t,depth:1};this.texture=new de(r,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:p,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null,this.samples=void 0!==n.samples?n.samples:0}setSize(e,t,n=1){this.width===e&&this.height===t&&this.depth===n||(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new ue(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class me extends de{constructor(e=null,t=1,n=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=d,this.minFilter=d,this.wrapR=c,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ge extends de{constructor(e=null,t=1,n=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=d,this.minFilter=d,this.wrapR=c,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class xe{constructor(e=0,t=0,n=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=r}static slerp(e,t,n,r){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,r)}static slerpFlat(e,t,n,r,i,s,a){let o=n[r+0],l=n[r+1],u=n[r+2],c=n[r+3];const h=i[s+0],d=i[s+1],p=i[s+2],f=i[s+3];if(0===a)return e[t+0]=o,e[t+1]=l,e[t+2]=u,void(e[t+3]=c);if(1===a)return e[t+0]=h,e[t+1]=d,e[t+2]=p,void(e[t+3]=f);if(c!==f||o!==h||l!==d||u!==p){let e=1-a;const t=o*h+l*d+u*p+c*f,n=t>=0?1:-1,r=1-t*t;if(r>Number.EPSILON){const i=Math.sqrt(r),s=Math.atan2(i,t*n);e=Math.sin(e*s)/i,a=Math.sin(a*s)/i}const i=a*n;if(o=o*e+h*i,l=l*e+d*i,u=u*e+p*i,c=c*e+f*i,e===1-a){const e=1/Math.sqrt(o*o+l*l+u*u+c*c);o*=e,l*=e,u*=e,c*=e}}e[t]=o,e[t+1]=l,e[t+2]=u,e[t+3]=c}static multiplyQuaternionsFlat(e,t,n,r,i,s){const a=n[r],o=n[r+1],l=n[r+2],u=n[r+3],c=i[s],h=i[s+1],d=i[s+2],p=i[s+3];return e[t]=a*p+u*c+o*d-l*h,e[t+1]=o*p+u*h+l*c-a*d,e[t+2]=l*p+u*d+a*h-o*c,e[t+3]=u*p-a*c-o*h-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,r=e._y,i=e._z,s=e._order,a=Math.cos,o=Math.sin,l=a(n/2),u=a(r/2),c=a(i/2),h=o(n/2),d=o(r/2),p=o(i/2);switch(s){case"XYZ":this._x=h*u*c+l*d*p,this._y=l*d*c-h*u*p,this._z=l*u*p+h*d*c,this._w=l*u*c-h*d*p;break;case"YXZ":this._x=h*u*c+l*d*p,this._y=l*d*c-h*u*p,this._z=l*u*p-h*d*c,this._w=l*u*c+h*d*p;break;case"ZXY":this._x=h*u*c-l*d*p,this._y=l*d*c+h*u*p,this._z=l*u*p+h*d*c,this._w=l*u*c-h*d*p;break;case"ZYX":this._x=h*u*c-l*d*p,this._y=l*d*c+h*u*p,this._z=l*u*p-h*d*c,this._w=l*u*c+h*d*p;break;case"YZX":this._x=h*u*c+l*d*p,this._y=l*d*c+h*u*p,this._z=l*u*p-h*d*c,this._w=l*u*c-h*d*p;break;case"XZY":this._x=h*u*c-l*d*p,this._y=l*d*c-h*u*p,this._z=l*u*p+h*d*c,this._w=l*u*c+h*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],r=t[4],i=t[8],s=t[1],a=t[5],o=t[9],l=t[2],u=t[6],c=t[10],h=n+a+c;if(h>0){const e=.5/Math.sqrt(h+1);this._w=.25/e,this._x=(u-o)*e,this._y=(i-l)*e,this._z=(s-r)*e}else if(n>a&&n>c){const e=2*Math.sqrt(1+n-a-c);this._w=(u-o)/e,this._x=.25*e,this._y=(r+s)/e,this._z=(i+l)/e}else if(a>c){const e=2*Math.sqrt(1+a-n-c);this._w=(i-l)/e,this._x=(r+s)/e,this._y=.25*e,this._z=(o+u)/e}else{const e=2*Math.sqrt(1+c-n-a);this._w=(s-r)/e,this._x=(i+l)/e,this._y=(o+u)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(W(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(0===n)return this;const r=Math.min(1,t/n);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,r=e._y,i=e._z,s=e._w,a=t._x,o=t._y,l=t._z,u=t._w;return this._x=n*u+s*a+r*l-i*o,this._y=r*u+s*o+i*a-n*l,this._z=i*u+s*l+n*o-r*a,this._w=s*u-n*a-r*o-i*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const n=this._x,r=this._y,i=this._z,s=this._w;let a=s*e._w+n*e._x+r*e._y+i*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=s,this._x=n,this._y=r,this._z=i,this;const o=1-a*a;if(o<=Number.EPSILON){const e=1-t;return this._w=e*s+t*this._w,this._x=e*n+t*this._x,this._y=e*r+t*this._y,this._z=e*i+t*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(o),u=Math.atan2(l,a),c=Math.sin((1-t)*u)/l,h=Math.sin(t*u)/l;return this._w=s*c+this._w*h,this._x=n*c+this._x*h,this._y=r*c+this._y*h,this._z=i*c+this._z*h,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),r=2*Math.PI*Math.random(),i=2*Math.PI*Math.random();return this.set(t*Math.cos(r),n*Math.sin(i),n*Math.cos(i),t*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class be{constructor(e=0,t=0,n=0){be.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(ye.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(ye.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6]*r,this.y=i[1]*t+i[4]*n+i[7]*r,this.z=i[2]*t+i[5]*n+i[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,i=e.elements,s=1/(i[3]*t+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*t+i[4]*n+i[8]*r+i[12])*s,this.y=(i[1]*t+i[5]*n+i[9]*r+i[13])*s,this.z=(i[2]*t+i[6]*n+i[10]*r+i[14])*s,this}applyQuaternion(e){const t=this.x,n=this.y,r=this.z,i=e.x,s=e.y,a=e.z,o=e.w,l=o*t+s*r-a*n,u=o*n+a*t-i*r,c=o*r+i*n-s*t,h=-i*t-s*n-a*r;return this.x=l*o+h*-i+u*-a-c*-s,this.y=u*o+h*-s+c*-i-l*-a,this.z=c*o+h*-a+l*-s-u*-i,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[4]*n+i[8]*r,this.y=i[1]*t+i[5]*n+i[9]*r,this.z=i[2]*t+i[6]*n+i[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,r=e.y,i=e.z,s=t.x,a=t.y,o=t.z;return this.x=r*o-i*a,this.y=i*s-n*o,this.z=n*a-r*s,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return ve.copy(this).projectOnVector(e),this.sub(ve)}reflect(e){return this.sub(ve.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(W(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=2*(Math.random()-.5),t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const ve=new be,ye=new xe;class we{constructor(e=new be(1/0,1/0,1/0),t=new be(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,r=1/0,i=-1/0,s=-1/0,a=-1/0;for(let o=0,l=e.length;o<l;o+=3){const l=e[o],u=e[o+1],c=e[o+2];l<t&&(t=l),u<n&&(n=u),c<r&&(r=c),l>i&&(i=l),u>s&&(s=u),c>a&&(a=c)}return this.min.set(t,n,r),this.max.set(i,s,a),this}setFromBufferAttribute(e){let t=1/0,n=1/0,r=1/0,i=-1/0,s=-1/0,a=-1/0;for(let o=0,l=e.count;o<l;o++){const l=e.getX(o),u=e.getY(o),c=e.getZ(o);l<t&&(t=l),u<n&&(n=u),c<r&&(r=c),l>i&&(i=l),u>s&&(s=u),c>a&&(a=c)}return this.min.set(t,n,r),this.max.set(i,s,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Se.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(void 0!==n)if(t&&null!=n.attributes&&void 0!==n.attributes.position){const t=n.attributes.position;for(let n=0,r=t.count;n<r;n++)Se.fromBufferAttribute(t,n).applyMatrix4(e.matrixWorld),this.expandByPoint(Se)}else null===n.boundingBox&&n.computeBoundingBox(),ke.copy(n.boundingBox),ke.applyMatrix4(e.matrixWorld),this.union(ke);const r=e.children;for(let e=0,n=r.length;e<n;e++)this.expandByObject(r[e],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Se),Se.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Ne),Re.subVectors(this.max,Ne),Ie.subVectors(e.a,Ne),Ee.subVectors(e.b,Ne),Te.subVectors(e.c,Ne),Ce.subVectors(Ee,Ie),Me.subVectors(Te,Ee),Ae.subVectors(Ie,Te);let t=[0,-Ce.z,Ce.y,0,-Me.z,Me.y,0,-Ae.z,Ae.y,Ce.z,0,-Ce.x,Me.z,0,-Me.x,Ae.z,0,-Ae.x,-Ce.y,Ce.x,0,-Me.y,Me.x,0,-Ae.y,Ae.x,0];return!!Fe(t,Ie,Ee,Te,Re)&&(t=[1,0,0,0,1,0,0,0,1],!!Fe(t,Ie,Ee,Te,Re)&&(De.crossVectors(Ce,Me),t=[De.x,De.y,De.z],Fe(t,Ie,Ee,Te,Re)))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Se.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=.5*this.getSize(Se).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(_e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),_e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),_e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),_e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),_e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),_e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),_e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),_e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(_e)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const _e=[new be,new be,new be,new be,new be,new be,new be,new be],Se=new be,ke=new we,Ie=new be,Ee=new be,Te=new be,Ce=new be,Me=new be,Ae=new be,Ne=new be,Re=new be,De=new be,Le=new be;function Fe(e,t,n,r,i){for(let s=0,a=e.length-3;s<=a;s+=3){Le.fromArray(e,s);const a=i.x*Math.abs(Le.x)+i.y*Math.abs(Le.y)+i.z*Math.abs(Le.z),o=t.dot(Le),l=n.dot(Le),u=r.dot(Le);if(Math.max(-Math.max(o,l,u),Math.min(o,l,u))>a)return!1}return!0}const $e=new we,Oe=new be,Pe=new be,ze=new be;class Be{constructor(e=new be,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;void 0!==t?n.copy(t):$e.setFromPoints(e).getCenter(n);let r=0;for(let t=0,i=e.length;t<i;t++)r=Math.max(r,n.distanceToSquared(e[t]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){ze.subVectors(e,this.center);const t=ze.lengthSq();if(t>this.radius*this.radius){const e=Math.sqrt(t),n=.5*(e-this.radius);this.center.add(ze.multiplyScalar(n/e)),this.radius+=n}return this}union(e){return!0===this.center.equals(e.center)?Pe.set(0,0,1).multiplyScalar(e.radius):Pe.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Oe.copy(e.center).add(Pe)),this.expandByPoint(Oe.copy(e.center).sub(Pe)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Ue=new be,We=new be,Ve=new be,Ge=new be,He=new be,je=new be,qe=new be;class Xe{constructor(e=new be,t=new be(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ue)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ue.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ue.copy(this.direction).multiplyScalar(t).add(this.origin),Ue.distanceToSquared(e))}distanceSqToSegment(e,t,n,r){We.copy(e).add(t).multiplyScalar(.5),Ve.copy(t).sub(e).normalize(),Ge.copy(this.origin).sub(We);const i=.5*e.distanceTo(t),s=-this.direction.dot(Ve),a=Ge.dot(this.direction),o=-Ge.dot(Ve),l=Ge.lengthSq(),u=Math.abs(1-s*s);let c,h,d,p;if(u>0)if(c=s*o-a,h=s*a-o,p=i*u,c>=0)if(h>=-p)if(h<=p){const e=1/u;c*=e,h*=e,d=c*(c+s*h+2*a)+h*(s*c+h+2*o)+l}else h=i,c=Math.max(0,-(s*h+a)),d=-c*c+h*(h+2*o)+l;else h=-i,c=Math.max(0,-(s*h+a)),d=-c*c+h*(h+2*o)+l;else h<=-p?(c=Math.max(0,-(-s*i+a)),h=c>0?-i:Math.min(Math.max(-i,-o),i),d=-c*c+h*(h+2*o)+l):h<=p?(c=0,h=Math.min(Math.max(-i,-o),i),d=h*(h+2*o)+l):(c=Math.max(0,-(s*i+a)),h=c>0?i:Math.min(Math.max(-i,-o),i),d=-c*c+h*(h+2*o)+l);else h=s>0?-i:i,c=Math.max(0,-(s*h+a)),d=-c*c+h*(h+2*o)+l;return n&&n.copy(this.direction).multiplyScalar(c).add(this.origin),r&&r.copy(Ve).multiplyScalar(h).add(We),d}intersectSphere(e,t){Ue.subVectors(e.center,this.origin);const n=Ue.dot(this.direction),r=Ue.dot(Ue)-n*n,i=e.radius*e.radius;if(r>i)return null;const s=Math.sqrt(i-r),a=n-s,o=n+s;return a<0&&o<0?null:a<0?this.at(o,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,r,i,s,a,o;const l=1/this.direction.x,u=1/this.direction.y,c=1/this.direction.z,h=this.origin;return l>=0?(n=(e.min.x-h.x)*l,r=(e.max.x-h.x)*l):(n=(e.max.x-h.x)*l,r=(e.min.x-h.x)*l),u>=0?(i=(e.min.y-h.y)*u,s=(e.max.y-h.y)*u):(i=(e.max.y-h.y)*u,s=(e.min.y-h.y)*u),n>s||i>r?null:((i>n||n!=n)&&(n=i),(s<r||r!=r)&&(r=s),c>=0?(a=(e.min.z-h.z)*c,o=(e.max.z-h.z)*c):(a=(e.max.z-h.z)*c,o=(e.min.z-h.z)*c),n>o||a>r?null:((a>n||n!=n)&&(n=a),(o<r||r!=r)&&(r=o),r<0?null:this.at(n>=0?n:r,t)))}intersectsBox(e){return null!==this.intersectBox(e,Ue)}intersectTriangle(e,t,n,r,i){He.subVectors(t,e),je.subVectors(n,e),qe.crossVectors(He,je);let s,a=this.direction.dot(qe);if(a>0){if(r)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}Ge.subVectors(this.origin,e);const o=s*this.direction.dot(je.crossVectors(Ge,je));if(o<0)return null;const l=s*this.direction.dot(He.cross(Ge));if(l<0)return null;if(o+l>a)return null;const u=-s*Ge.dot(qe);return u<0?null:this.at(u/a,i)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Ke{constructor(){Ke.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,r,i,s,a,o,l,u,c,h,d,p,f,m){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=r,g[1]=i,g[5]=s,g[9]=a,g[13]=o,g[2]=l,g[6]=u,g[10]=c,g[14]=h,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Ke).fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,r=1/Ye.setFromMatrixColumn(e,0).length(),i=1/Ye.setFromMatrixColumn(e,1).length(),s=1/Ye.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*i,t[5]=n[5]*i,t[6]=n[6]*i,t[7]=0,t[8]=n[8]*s,t[9]=n[9]*s,t[10]=n[10]*s,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,r=e.y,i=e.z,s=Math.cos(n),a=Math.sin(n),o=Math.cos(r),l=Math.sin(r),u=Math.cos(i),c=Math.sin(i);if("XYZ"===e.order){const e=s*u,n=s*c,r=a*u,i=a*c;t[0]=o*u,t[4]=-o*c,t[8]=l,t[1]=n+r*l,t[5]=e-i*l,t[9]=-a*o,t[2]=i-e*l,t[6]=r+n*l,t[10]=s*o}else if("YXZ"===e.order){const e=o*u,n=o*c,r=l*u,i=l*c;t[0]=e+i*a,t[4]=r*a-n,t[8]=s*l,t[1]=s*c,t[5]=s*u,t[9]=-a,t[2]=n*a-r,t[6]=i+e*a,t[10]=s*o}else if("ZXY"===e.order){const e=o*u,n=o*c,r=l*u,i=l*c;t[0]=e-i*a,t[4]=-s*c,t[8]=r+n*a,t[1]=n+r*a,t[5]=s*u,t[9]=i-e*a,t[2]=-s*l,t[6]=a,t[10]=s*o}else if("ZYX"===e.order){const e=s*u,n=s*c,r=a*u,i=a*c;t[0]=o*u,t[4]=r*l-n,t[8]=e*l+i,t[1]=o*c,t[5]=i*l+e,t[9]=n*l-r,t[2]=-l,t[6]=a*o,t[10]=s*o}else if("YZX"===e.order){const e=s*o,n=s*l,r=a*o,i=a*l;t[0]=o*u,t[4]=i-e*c,t[8]=r*c+n,t[1]=c,t[5]=s*u,t[9]=-a*u,t[2]=-l*u,t[6]=n*c+r,t[10]=e-i*c}else if("XZY"===e.order){const e=s*o,n=s*l,r=a*o,i=a*l;t[0]=o*u,t[4]=-c,t[8]=l*u,t[1]=e*c+i,t[5]=s*u,t[9]=n*c-r,t[2]=r*c-n,t[6]=a*u,t[10]=i*c+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Je,e,Qe)}lookAt(e,t,n){const r=this.elements;return nt.subVectors(e,t),0===nt.lengthSq()&&(nt.z=1),nt.normalize(),et.crossVectors(n,nt),0===et.lengthSq()&&(1===Math.abs(n.z)?nt.x+=1e-4:nt.z+=1e-4,nt.normalize(),et.crossVectors(n,nt)),et.normalize(),tt.crossVectors(nt,et),r[0]=et.x,r[4]=tt.x,r[8]=nt.x,r[1]=et.y,r[5]=tt.y,r[9]=nt.y,r[2]=et.z,r[6]=tt.z,r[10]=nt.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,i=this.elements,s=n[0],a=n[4],o=n[8],l=n[12],u=n[1],c=n[5],h=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],x=n[3],b=n[7],v=n[11],y=n[15],w=r[0],_=r[4],S=r[8],k=r[12],I=r[1],E=r[5],T=r[9],C=r[13],M=r[2],A=r[6],N=r[10],R=r[14],D=r[3],L=r[7],F=r[11],$=r[15];return i[0]=s*w+a*I+o*M+l*D,i[4]=s*_+a*E+o*A+l*L,i[8]=s*S+a*T+o*N+l*F,i[12]=s*k+a*C+o*R+l*$,i[1]=u*w+c*I+h*M+d*D,i[5]=u*_+c*E+h*A+d*L,i[9]=u*S+c*T+h*N+d*F,i[13]=u*k+c*C+h*R+d*$,i[2]=p*w+f*I+m*M+g*D,i[6]=p*_+f*E+m*A+g*L,i[10]=p*S+f*T+m*N+g*F,i[14]=p*k+f*C+m*R+g*$,i[3]=x*w+b*I+v*M+y*D,i[7]=x*_+b*E+v*A+y*L,i[11]=x*S+b*T+v*N+y*F,i[15]=x*k+b*C+v*R+y*$,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],r=e[8],i=e[12],s=e[1],a=e[5],o=e[9],l=e[13],u=e[2],c=e[6],h=e[10],d=e[14];return e[3]*(+i*o*c-r*l*c-i*a*h+n*l*h+r*a*d-n*o*d)+e[7]*(+t*o*d-t*l*h+i*s*h-r*s*d+r*l*u-i*o*u)+e[11]*(+t*l*c-t*a*d-i*s*c+n*s*d+i*a*u-n*l*u)+e[15]*(-r*a*u-t*o*c+t*a*h+r*s*c-n*s*h+n*o*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],s=e[4],a=e[5],o=e[6],l=e[7],u=e[8],c=e[9],h=e[10],d=e[11],p=e[12],f=e[13],m=e[14],g=e[15],x=c*m*l-f*h*l+f*o*d-a*m*d-c*o*g+a*h*g,b=p*h*l-u*m*l-p*o*d+s*m*d+u*o*g-s*h*g,v=u*f*l-p*c*l+p*a*d-s*f*d-u*a*g+s*c*g,y=p*c*o-u*f*o-p*a*h+s*f*h+u*a*m-s*c*m,w=t*x+n*b+r*v+i*y;if(0===w)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const _=1/w;return e[0]=x*_,e[1]=(f*h*i-c*m*i-f*r*d+n*m*d+c*r*g-n*h*g)*_,e[2]=(a*m*i-f*o*i+f*r*l-n*m*l-a*r*g+n*o*g)*_,e[3]=(c*o*i-a*h*i-c*r*l+n*h*l+a*r*d-n*o*d)*_,e[4]=b*_,e[5]=(u*m*i-p*h*i+p*r*d-t*m*d-u*r*g+t*h*g)*_,e[6]=(p*o*i-s*m*i-p*r*l+t*m*l+s*r*g-t*o*g)*_,e[7]=(s*h*i-u*o*i+u*r*l-t*h*l-s*r*d+t*o*d)*_,e[8]=v*_,e[9]=(p*c*i-u*f*i-p*n*d+t*f*d+u*n*g-t*c*g)*_,e[10]=(s*f*i-p*a*i+p*n*l-t*f*l-s*n*g+t*a*g)*_,e[11]=(u*a*i-s*c*i-u*n*l+t*c*l+s*n*d-t*a*d)*_,e[12]=y*_,e[13]=(u*f*r-p*c*r+p*n*h-t*f*h-u*n*m+t*c*m)*_,e[14]=(p*a*r-s*f*r-p*n*o+t*f*o+s*n*m-t*a*m)*_,e[15]=(s*c*r-u*a*r+u*n*o-t*c*o-s*n*h+t*a*h)*_,this}scale(e){const t=this.elements,n=e.x,r=e.y,i=e.z;return t[0]*=n,t[4]*=r,t[8]*=i,t[1]*=n,t[5]*=r,t[9]*=i,t[2]*=n,t[6]*=r,t[10]*=i,t[3]*=n,t[7]*=r,t[11]*=i,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),r=Math.sin(t),i=1-n,s=e.x,a=e.y,o=e.z,l=i*s,u=i*a;return this.set(l*s+n,l*a-r*o,l*o+r*a,0,l*a+r*o,u*a+n,u*o-r*s,0,l*o-r*a,u*o+r*s,i*o*o+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,r,i,s){return this.set(1,n,i,0,e,1,s,0,t,r,1,0,0,0,0,1),this}compose(e,t,n){const r=this.elements,i=t._x,s=t._y,a=t._z,o=t._w,l=i+i,u=s+s,c=a+a,h=i*l,d=i*u,p=i*c,f=s*u,m=s*c,g=a*c,x=o*l,b=o*u,v=o*c,y=n.x,w=n.y,_=n.z;return r[0]=(1-(f+g))*y,r[1]=(d+v)*y,r[2]=(p-b)*y,r[3]=0,r[4]=(d-v)*w,r[5]=(1-(h+g))*w,r[6]=(m+x)*w,r[7]=0,r[8]=(p+b)*_,r[9]=(m-x)*_,r[10]=(1-(h+f))*_,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){const r=this.elements;let i=Ye.set(r[0],r[1],r[2]).length();const s=Ye.set(r[4],r[5],r[6]).length(),a=Ye.set(r[8],r[9],r[10]).length();this.determinant()<0&&(i=-i),e.x=r[12],e.y=r[13],e.z=r[14],Ze.copy(this);const o=1/i,l=1/s,u=1/a;return Ze.elements[0]*=o,Ze.elements[1]*=o,Ze.elements[2]*=o,Ze.elements[4]*=l,Ze.elements[5]*=l,Ze.elements[6]*=l,Ze.elements[8]*=u,Ze.elements[9]*=u,Ze.elements[10]*=u,t.setFromRotationMatrix(Ze),n.x=i,n.y=s,n.z=a,this}makePerspective(e,t,n,r,i,s){void 0===s&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,o=2*i/(t-e),l=2*i/(n-r),u=(t+e)/(t-e),c=(n+r)/(n-r),h=-(s+i)/(s-i),d=-2*s*i/(s-i);return a[0]=o,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=l,a[9]=c,a[13]=0,a[2]=0,a[6]=0,a[10]=h,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,r,i,s){const a=this.elements,o=1/(t-e),l=1/(n-r),u=1/(s-i),c=(t+e)*o,h=(n+r)*l,d=(s+i)*u;return a[0]=2*o,a[4]=0,a[8]=0,a[12]=-c,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-h,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<16;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Ye=new be,Ze=new Ke,Je=new be(0,0,0),Qe=new be(1,1,1),et=new be,tt=new be,nt=new be,rt=new Ke,it=new xe;class st{constructor(e=0,t=0,n=0,r=st.DefaultOrder){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r=this._order){return this._x=e,this._y=t,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const r=e.elements,i=r[0],s=r[4],a=r[8],o=r[1],l=r[5],u=r[9],c=r[2],h=r[6],d=r[10];switch(t){case"XYZ":this._y=Math.asin(W(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-s,i)):(this._x=Math.atan2(h,l),this._z=0);break;case"YXZ":this._x=Math.asin(-W(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-c,i),this._z=0);break;case"ZXY":this._x=Math.asin(W(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-c,d),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(o,i));break;case"ZYX":this._y=Math.asin(-W(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(h,d),this._z=Math.atan2(o,i)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(W(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-c,i)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-W(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(h,l),this._y=Math.atan2(a,i)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return rt.makeRotationFromQuaternion(e),this.setFromRotationMatrix(rt,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return it.setFromEuler(this),this.setFromQuaternion(it,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}st.DefaultOrder="XYZ",st.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class at{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}isEnabled(e){return 0!=(this.mask&(1<<e|0))}}let ot=0;const lt=new be,ut=new xe,ct=new Ke,ht=new be,dt=new be,pt=new be,ft=new xe,mt=new be(1,0,0),gt=new be(0,1,0),xt=new be(0,0,1),bt={type:"added"},vt={type:"removed"};class yt extends O{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:ot++}),this.uuid=U(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=yt.DefaultUp.clone();const e=new be,t=new st,n=new xe,r=new be(1,1,1);t._onChange((function(){n.setFromEuler(t,!1)})),n._onChange((function(){t.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Ke},normalMatrix:{value:new q}}),this.matrix=new Ke,this.matrixWorld=new Ke,this.matrixAutoUpdate=yt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new at,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return ut.setFromAxisAngle(e,t),this.quaternion.multiply(ut),this}rotateOnWorldAxis(e,t){return ut.setFromAxisAngle(e,t),this.quaternion.premultiply(ut),this}rotateX(e){return this.rotateOnAxis(mt,e)}rotateY(e){return this.rotateOnAxis(gt,e)}rotateZ(e){return this.rotateOnAxis(xt,e)}translateOnAxis(e,t){return lt.copy(e).applyQuaternion(this.quaternion),this.position.add(lt.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(mt,e)}translateY(e){return this.translateOnAxis(gt,e)}translateZ(e){return this.translateOnAxis(xt,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(ct.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?ht.copy(e):ht.set(e,t,n);const r=this.parent;this.updateWorldMatrix(!0,!1),dt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ct.lookAt(dt,ht,this.up):ct.lookAt(ht,dt,this.up),this.quaternion.setFromRotationMatrix(ct),r&&(ct.extractRotation(r.matrixWorld),ut.setFromRotationMatrix(ct),this.quaternion.premultiply(ut.invert()))}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(bt)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(vt)),this}removeFromParent(){const e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(vt)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),ct.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),ct.multiply(e.parent.matrixWorld)),e.applyMatrix4(ct),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,r=this.children.length;n<r;n++){const r=this.children[n].getObjectByProperty(e,t);if(void 0!==r)return r}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(dt,e,pt),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(dt,ft,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(!0===e&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const e=this.children;for(let t=0,n=e.length;t<n;t++)e[t].updateWorldMatrix(!1,!0)}}toJSON(e){const t=void 0===e||"string"==typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};function i(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(r.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=i(e.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const n=t.shapes;if(Array.isArray(n))for(let t=0,r=n.length;t<r;t++){const r=n[t];i(e.shapes,r)}else i(e.shapes,n)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(i(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let n=0,r=this.material.length;n<r;n++)t.push(i(e.materials,this.material[n]));r.material=t}else r.material=i(e.materials,this.material);if(this.children.length>0){r.children=[];for(let t=0;t<this.children.length;t++)r.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let t=0;t<this.animations.length;t++){const n=this.animations[t];r.animations.push(i(e.animations,n))}}if(t){const t=s(e.geometries),r=s(e.materials),i=s(e.textures),a=s(e.images),o=s(e.shapes),l=s(e.skeletons),u=s(e.animations),c=s(e.nodes);t.length>0&&(n.geometries=t),r.length>0&&(n.materials=r),i.length>0&&(n.textures=i),a.length>0&&(n.images=a),o.length>0&&(n.shapes=o),l.length>0&&(n.skeletons=l),u.length>0&&(n.animations=u),c.length>0&&(n.nodes=c)}return n.object=r,n;function s(e){const t=[];for(const n in e){const r=e[n];delete r.metadata,t.push(r)}return t}}clone(e){return(new this.constructor).copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){const n=e.children[t];this.add(n.clone())}return this}}yt.DefaultUp=new be(0,1,0),yt.DefaultMatrixAutoUpdate=!0;const wt=new be,_t=new be,St=new be,kt=new be,It=new be,Et=new be,Tt=new be,Ct=new be,Mt=new be,At=new be;class Nt{constructor(e=new be,t=new be,n=new be){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,r){r.subVectors(n,t),wt.subVectors(e,t),r.cross(wt);const i=r.lengthSq();return i>0?r.multiplyScalar(1/Math.sqrt(i)):r.set(0,0,0)}static getBarycoord(e,t,n,r,i){wt.subVectors(r,t),_t.subVectors(n,t),St.subVectors(e,t);const s=wt.dot(wt),a=wt.dot(_t),o=wt.dot(St),l=_t.dot(_t),u=_t.dot(St),c=s*l-a*a;if(0===c)return i.set(-2,-1,-1);const h=1/c,d=(l*o-a*u)*h,p=(s*u-a*o)*h;return i.set(1-d-p,p,d)}static containsPoint(e,t,n,r){return this.getBarycoord(e,t,n,r,kt),kt.x>=0&&kt.y>=0&&kt.x+kt.y<=1}static getUV(e,t,n,r,i,s,a,o){return this.getBarycoord(e,t,n,r,kt),o.set(0,0),o.addScaledVector(i,kt.x),o.addScaledVector(s,kt.y),o.addScaledVector(a,kt.z),o}static isFrontFacing(e,t,n,r){return wt.subVectors(n,t),_t.subVectors(e,t),wt.cross(_t).dot(r)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,n,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,r),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return wt.subVectors(this.c,this.b),_t.subVectors(this.a,this.b),.5*wt.cross(_t).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Nt.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Nt.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,r,i){return Nt.getUV(e,this.a,this.b,this.c,t,n,r,i)}containsPoint(e){return Nt.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Nt.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,r=this.b,i=this.c;let s,a;It.subVectors(r,n),Et.subVectors(i,n),Ct.subVectors(e,n);const o=It.dot(Ct),l=Et.dot(Ct);if(o<=0&&l<=0)return t.copy(n);Mt.subVectors(e,r);const u=It.dot(Mt),c=Et.dot(Mt);if(u>=0&&c<=u)return t.copy(r);const h=o*c-u*l;if(h<=0&&o>=0&&u<=0)return s=o/(o-u),t.copy(n).addScaledVector(It,s);At.subVectors(e,i);const d=It.dot(At),p=Et.dot(At);if(p>=0&&d<=p)return t.copy(i);const f=d*l-o*p;if(f<=0&&l>=0&&p<=0)return a=l/(l-p),t.copy(n).addScaledVector(Et,a);const m=u*p-d*c;if(m<=0&&c-u>=0&&d-p>=0)return Tt.subVectors(i,r),a=(c-u)/(c-u+(d-p)),t.copy(r).addScaledVector(Tt,a);const g=1/(m+f+h);return s=f*g,a=h*g,t.copy(n).addScaledVector(It,s).addScaledVector(Et,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Rt=0;class Dt extends O{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Rt++}),this.uuid=U(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=s,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=L,this.stencilZFail=L,this.stencilZPass=L,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const t in e){const n=e[t];if(void 0===n){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if("shading"===t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;continue}const r=this[t];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(e){const t=[];for(const n in e){const r=e[n];delete r.metadata,t.push(r)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t){const t=r(e.textures),i=r(e.images);t.length>0&&(n.textures=t),i.length>0&&(n.images=i)}return n}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(null!==t){const e=t.length;n=new Array(e);for(let r=0;r!==e;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}class Lt extends Dt{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new ae(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Ft=new be,$t=new j;class Ot{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let r=0,i=this.itemSize;r<i;r++)this.array[e+r]=t.array[n+r];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let n=0;for(let r=0,i=e.length;r<i;r++){let i=e[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),i=new ae),t[n++]=i.r,t[n++]=i.g,t[n++]=i.b}return this}copyVector2sArray(e){const t=this.array;let n=0;for(let r=0,i=e.length;r<i;r++){let i=e[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),i=new j),t[n++]=i.x,t[n++]=i.y}return this}copyVector3sArray(e){const t=this.array;let n=0;for(let r=0,i=e.length;r<i;r++){let i=e[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),i=new be),t[n++]=i.x,t[n++]=i.y,t[n++]=i.z}return this}copyVector4sArray(e){const t=this.array;let n=0;for(let r=0,i=e.length;r<i;r++){let i=e[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),i=new pe),t[n++]=i.x,t[n++]=i.y,t[n++]=i.z,t[n++]=i.w}return this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)$t.fromBufferAttribute(this,t),$t.applyMatrix3(e),this.setXY(t,$t.x,$t.y);else if(3===this.itemSize)for(let t=0,n=this.count;t<n;t++)Ft.fromBufferAttribute(this,t),Ft.applyMatrix3(e),this.setXYZ(t,Ft.x,Ft.y,Ft.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Ft.fromBufferAttribute(this,t),Ft.applyMatrix4(e),this.setXYZ(t,Ft.x,Ft.y,Ft.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Ft.fromBufferAttribute(this,t),Ft.applyNormalMatrix(e),this.setXYZ(t,Ft.x,Ft.y,Ft.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Ft.fromBufferAttribute(this,t),Ft.transformDirection(e),this.setXYZ(t,Ft.x,Ft.y,Ft.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this}setXYZW(e,t,n,r,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=i,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),35044!==this.usage&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}}class Pt extends Ot{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class zt extends Ot{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Bt extends Ot{constructor(e,t,n){super(new Float32Array(e),t,n)}}let Ut=0;const Wt=new Ke,Vt=new yt,Gt=new be,Ht=new we,jt=new we,qt=new be;class Xt extends O{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Ut++}),this.uuid=U(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(X(e)?zt:Pt)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const t=(new q).getNormalMatrix(e);n.applyNormalMatrix(t),n.needsUpdate=!0}const r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(e),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return Wt.makeRotationFromQuaternion(e),this.applyMatrix4(Wt),this}rotateX(e){return Wt.makeRotationX(e),this.applyMatrix4(Wt),this}rotateY(e){return Wt.makeRotationY(e),this.applyMatrix4(Wt),this}rotateZ(e){return Wt.makeRotationZ(e),this.applyMatrix4(Wt),this}translate(e,t,n){return Wt.makeTranslation(e,t,n),this.applyMatrix4(Wt),this}scale(e,t,n){return Wt.makeScale(e,t,n),this.applyMatrix4(Wt),this}lookAt(e){return Vt.lookAt(e),Vt.updateMatrix(),this.applyMatrix4(Vt.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Gt).negate(),this.translate(Gt.x,Gt.y,Gt.z),this}setFromPoints(e){const t=[];for(let n=0,r=e.length;n<r;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Bt(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new we);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new be(-1/0,-1/0,-1/0),new be(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];Ht.setFromBufferAttribute(n),this.morphTargetsRelative?(qt.addVectors(this.boundingBox.min,Ht.min),this.boundingBox.expandByPoint(qt),qt.addVectors(this.boundingBox.max,Ht.max),this.boundingBox.expandByPoint(qt)):(this.boundingBox.expandByPoint(Ht.min),this.boundingBox.expandByPoint(Ht.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Be);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new be,1/0);if(e){const n=this.boundingSphere.center;if(Ht.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];jt.setFromBufferAttribute(n),this.morphTargetsRelative?(qt.addVectors(Ht.min,jt.min),Ht.expandByPoint(qt),qt.addVectors(Ht.max,jt.max),Ht.expandByPoint(qt)):(Ht.expandByPoint(jt.min),Ht.expandByPoint(jt.max))}Ht.getCenter(n);let r=0;for(let t=0,i=e.count;t<i;t++)qt.fromBufferAttribute(e,t),r=Math.max(r,n.distanceToSquared(qt));if(t)for(let i=0,s=t.length;i<s;i++){const s=t[i],a=this.morphTargetsRelative;for(let t=0,i=s.count;t<i;t++)qt.fromBufferAttribute(s,t),a&&(Gt.fromBufferAttribute(e,t),qt.add(Gt)),r=Math.max(r,n.distanceToSquared(qt))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=e.array,r=t.position.array,i=t.normal.array,s=t.uv.array,a=r.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Ot(new Float32Array(4*a),4));const o=this.getAttribute("tangent").array,l=[],u=[];for(let e=0;e<a;e++)l[e]=new be,u[e]=new be;const c=new be,h=new be,d=new be,p=new j,f=new j,m=new j,g=new be,x=new be;function b(e,t,n){c.fromArray(r,3*e),h.fromArray(r,3*t),d.fromArray(r,3*n),p.fromArray(s,2*e),f.fromArray(s,2*t),m.fromArray(s,2*n),h.sub(c),d.sub(c),f.sub(p),m.sub(p);const i=1/(f.x*m.y-m.x*f.y);isFinite(i)&&(g.copy(h).multiplyScalar(m.y).addScaledVector(d,-f.y).multiplyScalar(i),x.copy(d).multiplyScalar(f.x).addScaledVector(h,-m.x).multiplyScalar(i),l[e].add(g),l[t].add(g),l[n].add(g),u[e].add(x),u[t].add(x),u[n].add(x))}let v=this.groups;0===v.length&&(v=[{start:0,count:n.length}]);for(let e=0,t=v.length;e<t;++e){const t=v[e],r=t.start;for(let e=r,i=r+t.count;e<i;e+=3)b(n[e+0],n[e+1],n[e+2])}const y=new be,w=new be,_=new be,S=new be;function k(e){_.fromArray(i,3*e),S.copy(_);const t=l[e];y.copy(t),y.sub(_.multiplyScalar(_.dot(t))).normalize(),w.crossVectors(S,t);const n=w.dot(u[e])<0?-1:1;o[4*e]=y.x,o[4*e+1]=y.y,o[4*e+2]=y.z,o[4*e+3]=n}for(let e=0,t=v.length;e<t;++e){const t=v[e],r=t.start;for(let e=r,i=r+t.count;e<i;e+=3)k(n[e+0]),k(n[e+1]),k(n[e+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new Ot(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let e=0,t=n.count;e<t;e++)n.setXYZ(e,0,0,0);const r=new be,i=new be,s=new be,a=new be,o=new be,l=new be,u=new be,c=new be;if(e)for(let h=0,d=e.count;h<d;h+=3){const d=e.getX(h+0),p=e.getX(h+1),f=e.getX(h+2);r.fromBufferAttribute(t,d),i.fromBufferAttribute(t,p),s.fromBufferAttribute(t,f),u.subVectors(s,i),c.subVectors(r,i),u.cross(c),a.fromBufferAttribute(n,d),o.fromBufferAttribute(n,p),l.fromBufferAttribute(n,f),a.add(u),o.add(u),l.add(u),n.setXYZ(d,a.x,a.y,a.z),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(f,l.x,l.y,l.z)}else for(let e=0,a=t.count;e<a;e+=3)r.fromBufferAttribute(t,e+0),i.fromBufferAttribute(t,e+1),s.fromBufferAttribute(t,e+2),u.subVectors(s,i),c.subVectors(r,i),u.cross(c),n.setXYZ(e+0,u.x,u.y,u.z),n.setXYZ(e+1,u.x,u.y,u.z),n.setXYZ(e+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!e||!e.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const r in n){if(void 0===e.attributes[r])continue;const i=n[r].array,s=e.attributes[r],a=s.array,o=s.itemSize*t,l=Math.min(a.length,i.length-o);for(let e=0,t=o;e<l;e++,t++)i[t]=a[e]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)qt.fromBufferAttribute(e,t),qt.normalize(),e.setXYZ(t,qt.x,qt.y,qt.z)}toNonIndexed(){function e(e,t){const n=e.array,r=e.itemSize,i=e.normalized,s=new n.constructor(t.length*r);let a=0,o=0;for(let i=0,l=t.length;i<l;i++){a=e.isInterleavedBufferAttribute?t[i]*e.data.stride+e.offset:t[i]*r;for(let e=0;e<r;e++)s[o++]=n[a++]}return new Ot(s,r,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Xt,n=this.index.array,r=this.attributes;for(const i in r){const s=e(r[i],n);t.setAttribute(i,s)}const i=this.morphAttributes;for(const r in i){const s=[],a=i[r];for(let t=0,r=a.length;t<r;t++){const r=e(a[t],n);s.push(r)}t.morphAttributes[r]=s}t.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let e=0,n=s.length;e<n;e++){const n=s[e];t.addGroup(n.start,n.count,n.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const t in n){const r=n[t];e.data.attributes[t]=r.toJSON(e.data)}const r={};let i=!1;for(const t in this.morphAttributes){const n=this.morphAttributes[t],s=[];for(let t=0,r=n.length;t<r;t++){const r=n[t];s.push(r.toJSON(e.data))}s.length>0&&(r[t]=s,i=!0)}i&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));const a=this.boundingSphere;return null!==a&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return(new this.constructor).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;null!==n&&this.setIndex(n.clone(t));const r=e.attributes;for(const e in r){const n=r[e];this.setAttribute(e,n.clone(t))}const i=e.morphAttributes;for(const e in i){const n=[],r=i[e];for(let e=0,i=r.length;e<i;e++)n.push(r[e].clone(t));this.morphAttributes[e]=n}this.morphTargetsRelative=e.morphTargetsRelative;const s=e.groups;for(let e=0,t=s.length;e<t;e++){const t=s[e];this.addGroup(t.start,t.count,t.materialIndex)}const a=e.boundingBox;null!==a&&(this.boundingBox=a.clone());const o=e.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const Kt=new Ke,Yt=new Xe,Zt=new Be,Jt=new be,Qt=new be,en=new be,tn=new be,nn=new be,rn=new be,sn=new be,an=new be,on=new be,ln=new j,un=new j,cn=new j,hn=new be,dn=new be;class pn extends yt{constructor(e=new Xt,t=new Lt){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}raycast(e,t){const n=this.geometry,r=this.material,i=this.matrixWorld;if(void 0===r)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),Zt.copy(n.boundingSphere),Zt.applyMatrix4(i),!1===e.ray.intersectsSphere(Zt))return;if(Kt.copy(i).invert(),Yt.copy(e.ray).applyMatrix4(Kt),null!==n.boundingBox&&!1===Yt.intersectsBox(n.boundingBox))return;let s;const a=n.index,o=n.attributes.position,l=n.morphAttributes.position,u=n.morphTargetsRelative,c=n.attributes.uv,h=n.attributes.uv2,d=n.groups,p=n.drawRange;if(null!==a)if(Array.isArray(r))for(let n=0,i=d.length;n<i;n++){const i=d[n],f=r[i.materialIndex];for(let n=Math.max(i.start,p.start),r=Math.min(a.count,Math.min(i.start+i.count,p.start+p.count));n<r;n+=3){const r=a.getX(n),d=a.getX(n+1),p=a.getX(n+2);s=fn(this,f,e,Yt,o,l,u,c,h,r,d,p),s&&(s.faceIndex=Math.floor(n/3),s.face.materialIndex=i.materialIndex,t.push(s))}}else for(let n=Math.max(0,p.start),i=Math.min(a.count,p.start+p.count);n<i;n+=3){const i=a.getX(n),d=a.getX(n+1),p=a.getX(n+2);s=fn(this,r,e,Yt,o,l,u,c,h,i,d,p),s&&(s.faceIndex=Math.floor(n/3),t.push(s))}else if(void 0!==o)if(Array.isArray(r))for(let n=0,i=d.length;n<i;n++){const i=d[n],a=r[i.materialIndex];for(let n=Math.max(i.start,p.start),r=Math.min(o.count,Math.min(i.start+i.count,p.start+p.count));n<r;n+=3)s=fn(this,a,e,Yt,o,l,u,c,h,n,n+1,n+2),s&&(s.faceIndex=Math.floor(n/3),s.face.materialIndex=i.materialIndex,t.push(s))}else for(let n=Math.max(0,p.start),i=Math.min(o.count,p.start+p.count);n<i;n+=3)s=fn(this,r,e,Yt,o,l,u,c,h,n,n+1,n+2),s&&(s.faceIndex=Math.floor(n/3),t.push(s))}}function fn(e,t,n,r,i,s,a,o,l,u,c,h){Jt.fromBufferAttribute(i,u),Qt.fromBufferAttribute(i,c),en.fromBufferAttribute(i,h);const d=e.morphTargetInfluences;if(s&&d){sn.set(0,0,0),an.set(0,0,0),on.set(0,0,0);for(let e=0,t=s.length;e<t;e++){const t=d[e],n=s[e];0!==t&&(tn.fromBufferAttribute(n,u),nn.fromBufferAttribute(n,c),rn.fromBufferAttribute(n,h),a?(sn.addScaledVector(tn,t),an.addScaledVector(nn,t),on.addScaledVector(rn,t)):(sn.addScaledVector(tn.sub(Jt),t),an.addScaledVector(nn.sub(Qt),t),on.addScaledVector(rn.sub(en),t)))}Jt.add(sn),Qt.add(an),en.add(on)}e.isSkinnedMesh&&(e.boneTransform(u,Jt),e.boneTransform(c,Qt),e.boneTransform(h,en));const p=function(e,t,n,r,i,s,a,o){let l;if(l=1===t.side?r.intersectTriangle(a,s,i,!0,o):r.intersectTriangle(i,s,a,2!==t.side,o),null===l)return null;dn.copy(o),dn.applyMatrix4(e.matrixWorld);const u=n.ray.origin.distanceTo(dn);return u<n.near||u>n.far?null:{distance:u,point:dn.clone(),object:e}}(e,t,n,r,Jt,Qt,en,hn);if(p){o&&(ln.fromBufferAttribute(o,u),un.fromBufferAttribute(o,c),cn.fromBufferAttribute(o,h),p.uv=Nt.getUV(hn,Jt,Qt,en,ln,un,cn,new j)),l&&(ln.fromBufferAttribute(l,u),un.fromBufferAttribute(l,c),cn.fromBufferAttribute(l,h),p.uv2=Nt.getUV(hn,Jt,Qt,en,ln,un,cn,new j));const e={a:u,b:c,c:h,normal:new be,materialIndex:0};Nt.getNormal(Jt,Qt,en,e.normal),p.face=e}return p}class mn extends Xt{constructor(e=1,t=1,n=1,r=1,i=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:i,depthSegments:s};const a=this;r=Math.floor(r),i=Math.floor(i),s=Math.floor(s);const o=[],l=[],u=[],c=[];let h=0,d=0;function p(e,t,n,r,i,s,p,f,m,g,x){const b=s/m,v=p/g,y=s/2,w=p/2,_=f/2,S=m+1,k=g+1;let I=0,E=0;const T=new be;for(let s=0;s<k;s++){const a=s*v-w;for(let o=0;o<S;o++){const h=o*b-y;T[e]=h*r,T[t]=a*i,T[n]=_,l.push(T.x,T.y,T.z),T[e]=0,T[t]=0,T[n]=f>0?1:-1,u.push(T.x,T.y,T.z),c.push(o/m),c.push(1-s/g),I+=1}}for(let e=0;e<g;e++)for(let t=0;t<m;t++){const n=h+t+S*e,r=h+t+S*(e+1),i=h+(t+1)+S*(e+1),s=h+(t+1)+S*e;o.push(n,r,s),o.push(r,i,s),E+=6}a.addGroup(d,E,x),d+=E,h+=I}p("z","y","x",-1,-1,n,t,e,s,i,0),p("z","y","x",1,-1,n,t,-e,s,i,1),p("x","z","y",1,1,e,n,t,r,s,2),p("x","z","y",1,-1,e,n,-t,r,s,3),p("x","y","z",1,-1,e,t,n,r,i,4),p("x","y","z",-1,-1,e,t,-n,r,i,5),this.setIndex(o),this.setAttribute("position",new Bt(l,3)),this.setAttribute("normal",new Bt(u,3)),this.setAttribute("uv",new Bt(c,2))}static fromJSON(e){return new mn(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function gn(e){const t={};for(const n in e){t[n]={};for(const r in e[n]){const i=e[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?t[n][r]=i.clone():Array.isArray(i)?t[n][r]=i.slice():t[n][r]=i}}return t}function xn(e){const t={};for(let n=0;n<e.length;n++){const r=gn(e[n]);for(const e in r)t[e]=r[e]}return t}const bn={clone:gn,merge:xn};class vn extends Dt{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=gn(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const r=this.uniforms[n].value;r&&r.isTexture?t.uniforms[n]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[n]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[n]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[n]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[n]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[n]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[n]={type:"m4",value:r.toArray()}:t.uniforms[n]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const e in this.extensions)!0===this.extensions[e]&&(n[e]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class yn extends yt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Ke,this.projectionMatrix=new Ke,this.projectionMatrixInverse=new Ke}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}class wn extends yn{constructor(e=50,t=1,n=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*B*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(.5*z*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*B*Math.atan(Math.tan(.5*z*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,r,i,s){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(.5*z*this.fov)/this.zoom,n=2*t,r=this.aspect*n,i=-.5*r;const s=this.view;if(null!==this.view&&this.view.enabled){const e=s.fullWidth,a=s.fullHeight;i+=s.offsetX*r/e,t-=s.offsetY*n/a,r*=s.width/e,n*=s.height/a}const a=this.filmOffset;0!==a&&(i+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const _n=90;class Sn extends yt{constructor(e,t,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const r=new wn(_n,1,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new be(1,0,0)),this.add(r);const i=new wn(_n,1,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new be(-1,0,0)),this.add(i);const s=new wn(_n,1,e,t);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new be(0,1,0)),this.add(s);const a=new wn(_n,1,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new be(0,-1,0)),this.add(a);const o=new wn(_n,1,e,t);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new be(0,0,1)),this.add(o);const l=new wn(_n,1,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new be(0,0,-1)),this.add(l)}update(e,t){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[r,i,s,a,o,l]=this.children,u=e.getRenderTarget(),c=e.toneMapping,h=e.xr.enabled;e.toneMapping=0,e.xr.enabled=!1;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,r),e.setRenderTarget(n,1),e.render(t,i),e.setRenderTarget(n,2),e.render(t,s),e.setRenderTarget(n,3),e.render(t,a),e.setRenderTarget(n,4),e.render(t,o),n.texture.generateMipmaps=d,e.setRenderTarget(n,5),e.render(t,l),e.setRenderTarget(u),e.toneMapping=c,e.xr.enabled=h,n.texture.needsPMREMUpdate=!0}}class kn extends de{constructor(e,t,n,r,i,s,o,l,u,c){super(e=void 0!==e?e:[],t=void 0!==t?t:a,n,r,i,s,o,l,u,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class In extends fe{constructor(e,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},r=[n,n,n,n,n,n];this.texture=new kn(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:p}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={tEquirect:{value:null}},r="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",i="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",s=new mn(5,5,5),a=new vn({name:"CubemapFromEquirect",uniforms:gn(n),vertexShader:r,fragmentShader:i,side:1,blending:0});a.uniforms.tEquirect.value=t;const o=new pn(s,a),l=t.minFilter;return t.minFilter===f&&(t.minFilter=p),new Sn(1,10,this).update(e,o),t.minFilter=l,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,r){const i=e.getRenderTarget();for(let i=0;i<6;i++)e.setRenderTarget(this,i),e.clear(t,n,r);e.setRenderTarget(i)}}const En=new be,Tn=new be,Cn=new q;class Mn{constructor(e=new be(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const r=En.subVectors(n,t).cross(Tn.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(En),r=this.normal.dot(n);if(0===r)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;const i=-(e.start.dot(this.normal)+this.constant)/r;return i<0||i>1?null:t.copy(n).multiplyScalar(i).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Cn.getNormalMatrix(e),r=this.coplanarPoint(En).applyMatrix4(e),i=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(i),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const An=new Be,Nn=new be;class Rn{constructor(e=new Mn,t=new Mn,n=new Mn,r=new Mn,i=new Mn,s=new Mn){this.planes=[e,t,n,r,i,s]}set(e,t,n,r,i,s){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(r),a[4].copy(i),a[5].copy(s),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,r=n[0],i=n[1],s=n[2],a=n[3],o=n[4],l=n[5],u=n[6],c=n[7],h=n[8],d=n[9],p=n[10],f=n[11],m=n[12],g=n[13],x=n[14],b=n[15];return t[0].setComponents(a-r,c-o,f-h,b-m).normalize(),t[1].setComponents(a+r,c+o,f+h,b+m).normalize(),t[2].setComponents(a+i,c+l,f+d,b+g).normalize(),t[3].setComponents(a-i,c-l,f-d,b-g).normalize(),t[4].setComponents(a-s,c-u,f-p,b-x).normalize(),t[5].setComponents(a+s,c+u,f+p,b+x).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),An.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(An)}intersectsSprite(e){return An.center.set(0,0,0),An.radius=.7071067811865476,An.applyMatrix4(e.matrixWorld),this.intersectsSphere(An)}intersectsSphere(e){const t=this.planes,n=e.center,r=-e.radius;for(let e=0;e<6;e++)if(t[e].distanceToPoint(n)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const r=t[n];if(Nn.x=r.normal.x>0?e.max.x:e.min.x,Nn.y=r.normal.y>0?e.max.y:e.min.y,Nn.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Nn)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Dn(){let e=null,t=!1,n=null,r=null;function i(t,s){n(t,s),r=e.requestAnimationFrame(i)}return{start:function(){!0!==t&&null!==n&&(r=e.requestAnimationFrame(i),t=!0)},stop:function(){e.cancelAnimationFrame(r),t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function Ln(e,t){const n=t.isWebGL2,r=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),r.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);const n=r.get(t);n&&(e.deleteBuffer(n.buffer),r.delete(t))},update:function(t,i){if(t.isGLBufferAttribute){const e=r.get(t);return void((!e||e.version<t.version)&&r.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version}))}t.isInterleavedBufferAttribute&&(t=t.data);const s=r.get(t);void 0===s?r.set(t,function(t,r){const i=t.array,s=t.usage,a=e.createBuffer();let o;if(e.bindBuffer(r,a),e.bufferData(r,i,s),t.onUploadCallback(),i instanceof Float32Array)o=5126;else if(i instanceof Uint16Array)if(t.isFloat16BufferAttribute){if(!n)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");o=5131}else o=5123;else if(i instanceof Int16Array)o=5122;else if(i instanceof Uint32Array)o=5125;else if(i instanceof Int32Array)o=5124;else if(i instanceof Int8Array)o=5120;else if(i instanceof Uint8Array)o=5121;else{if(!(i instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+i);o=5121}return{buffer:a,type:o,bytesPerElement:i.BYTES_PER_ELEMENT,version:t.version}}(t,i)):s.version<t.version&&(function(t,r,i){const s=r.array,a=r.updateRange;e.bindBuffer(i,t),-1===a.count?e.bufferSubData(i,0,s):(n?e.bufferSubData(i,a.offset*s.BYTES_PER_ELEMENT,s,a.offset,a.count):e.bufferSubData(i,a.offset*s.BYTES_PER_ELEMENT,s.subarray(a.offset,a.offset+a.count)),a.count=-1)}(s.buffer,t,i),s.version=t.version)}}}class Fn extends Xt{constructor(e=1,t=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};const i=e/2,s=t/2,a=Math.floor(n),o=Math.floor(r),l=a+1,u=o+1,c=e/a,h=t/o,d=[],p=[],f=[],m=[];for(let e=0;e<u;e++){const t=e*h-s;for(let n=0;n<l;n++){const r=n*c-i;p.push(r,-t,0),f.push(0,0,1),m.push(n/a),m.push(1-e/o)}}for(let e=0;e<o;e++)for(let t=0;t<a;t++){const n=t+l*e,r=t+l*(e+1),i=t+1+l*(e+1),s=t+1+l*e;d.push(n,r,s),d.push(r,i,s)}this.setIndex(d),this.setAttribute("position",new Bt(p,3)),this.setAttribute("normal",new Bt(f,3)),this.setAttribute("uv",new Bt(m,2))}static fromJSON(e){return new Fn(e.width,e.height,e.widthSegments,e.heightSegments)}}const $n={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\n#ifdef USE_IRIDESCENCE\nvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = mix(F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence);\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\n#endif\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",iridescence_fragment:"#ifdef USE_IRIDESCENCE\nconst mat3 XYZ_TO_REC709 = mat3(\n    3.2404542, -0.9692660,  0.0556434,\n   -1.5371385,  1.8760108, -0.2040259,\n   -0.4985314,  0.0415560,  1.0572252\n);\nvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n   vec3 sqrtF0 = sqrt( fresnel0 );\n   return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n}\nvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n   return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n}\nfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n   return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n}\nvec3 evalSensitivity( float OPD, vec3 shift ) {\n   float phase = 2.0 * PI * OPD * 1.0e-9;\n   vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n   vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n   vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n   vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( -pow2( phase ) * var );\n   xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[0] ) * exp( -4.5282e+09 * pow2( phase ) );\n   xyz /= 1.0685e-7;\n   vec3 srgb = XYZ_TO_REC709 * xyz;\n   return srgb;\n}\nvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n   vec3 I;\n   float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n   float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n   float cosTheta2Sq = 1.0 - sinTheta2Sq;\n   if ( cosTheta2Sq < 0.0 ) {\n       return vec3( 1.0 );\n   }\n   float cosTheta2 = sqrt( cosTheta2Sq );\n   float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n   float R12 = F_Schlick( R0, 1.0, cosTheta1 );\n   float R21 = R12;\n   float T121 = 1.0 - R12;\n   float phi12 = 0.0;\n   if ( iridescenceIOR < outsideIOR ) phi12 = PI;\n   float phi21 = PI - phi12;\n   vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );   vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n   vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n   vec3 phi23 = vec3( 0.0 );\n   if ( baseIOR[0] < iridescenceIOR ) phi23[0] = PI;\n   if ( baseIOR[1] < iridescenceIOR ) phi23[1] = PI;\n   if ( baseIOR[2] < iridescenceIOR ) phi23[2] = PI;\n   float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n   vec3 phi = vec3( phi21 ) + phi23;\n   vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n   vec3 r123 = sqrt( R123 );\n   vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n   vec3 C0 = R12 + Rs;\n   I = C0;\n   vec3 Cm = Rs - T121;\n   for ( int m = 1; m <= 2; ++m ) {\n       Cm *= r123;\n       vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n       I += Cm * Sm;\n   }\n   return max( I, vec3( 0.0 ) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\n\t#else\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\nfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\nif ( material.iridescenceThickness == 0.0 ) {\n\tmaterial.iridescence = 0.0;\n} else {\n\tmaterial.iridescence = saturate( material.iridescence );\n}\nif ( material.iridescence > 0.0 ) {\n\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n\t#endif\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},On={common:{diffuse:{value:new ae(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new q},uv2Transform:{value:new q},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new j(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ae(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ae(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new q}},sprite:{diffuse:{value:new ae(16777215)},opacity:{value:1},center:{value:new j(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new q}}},Pn={basic:{uniforms:xn([On.common,On.specularmap,On.envmap,On.aomap,On.lightmap,On.fog]),vertexShader:$n.meshbasic_vert,fragmentShader:$n.meshbasic_frag},lambert:{uniforms:xn([On.common,On.specularmap,On.envmap,On.aomap,On.lightmap,On.emissivemap,On.fog,On.lights,{emissive:{value:new ae(0)}}]),vertexShader:$n.meshlambert_vert,fragmentShader:$n.meshlambert_frag},phong:{uniforms:xn([On.common,On.specularmap,On.envmap,On.aomap,On.lightmap,On.emissivemap,On.bumpmap,On.normalmap,On.displacementmap,On.fog,On.lights,{emissive:{value:new ae(0)},specular:{value:new ae(1118481)},shininess:{value:30}}]),vertexShader:$n.meshphong_vert,fragmentShader:$n.meshphong_frag},standard:{uniforms:xn([On.common,On.envmap,On.aomap,On.lightmap,On.emissivemap,On.bumpmap,On.normalmap,On.displacementmap,On.roughnessmap,On.metalnessmap,On.fog,On.lights,{emissive:{value:new ae(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:$n.meshphysical_vert,fragmentShader:$n.meshphysical_frag},toon:{uniforms:xn([On.common,On.aomap,On.lightmap,On.emissivemap,On.bumpmap,On.normalmap,On.displacementmap,On.gradientmap,On.fog,On.lights,{emissive:{value:new ae(0)}}]),vertexShader:$n.meshtoon_vert,fragmentShader:$n.meshtoon_frag},matcap:{uniforms:xn([On.common,On.bumpmap,On.normalmap,On.displacementmap,On.fog,{matcap:{value:null}}]),vertexShader:$n.meshmatcap_vert,fragmentShader:$n.meshmatcap_frag},points:{uniforms:xn([On.points,On.fog]),vertexShader:$n.points_vert,fragmentShader:$n.points_frag},dashed:{uniforms:xn([On.common,On.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:$n.linedashed_vert,fragmentShader:$n.linedashed_frag},depth:{uniforms:xn([On.common,On.displacementmap]),vertexShader:$n.depth_vert,fragmentShader:$n.depth_frag},normal:{uniforms:xn([On.common,On.bumpmap,On.normalmap,On.displacementmap,{opacity:{value:1}}]),vertexShader:$n.meshnormal_vert,fragmentShader:$n.meshnormal_frag},sprite:{uniforms:xn([On.sprite,On.fog]),vertexShader:$n.sprite_vert,fragmentShader:$n.sprite_frag},background:{uniforms:{uvTransform:{value:new q},t2D:{value:null}},vertexShader:$n.background_vert,fragmentShader:$n.background_frag},cube:{uniforms:xn([On.envmap,{opacity:{value:1}}]),vertexShader:$n.cube_vert,fragmentShader:$n.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:$n.equirect_vert,fragmentShader:$n.equirect_frag},distanceRGBA:{uniforms:xn([On.common,On.displacementmap,{referencePosition:{value:new be},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:$n.distanceRGBA_vert,fragmentShader:$n.distanceRGBA_frag},shadow:{uniforms:xn([On.lights,On.fog,{color:{value:new ae(0)},opacity:{value:1}}]),vertexShader:$n.shadow_vert,fragmentShader:$n.shadow_frag}};function zn(e,t,n,r,i,s){const a=new ae(0);let o,u,c=!0===i?0:1,h=null,d=0,p=null;function f(e,t){n.buffers.color.setClear(e.r,e.g,e.b,t,s)}return{getClearColor:function(){return a},setClearColor:function(e,t=1){a.set(e),c=t,f(a,c)},getClearAlpha:function(){return c},setClearAlpha:function(e){c=e,f(a,c)},render:function(n,i){let s=!1,m=!0===i.isScene?i.background:null;m&&m.isTexture&&(m=t.get(m));const g=e.xr,x=g.getSession&&g.getSession();x&&"additive"===x.environmentBlendMode&&(m=null),null===m?f(a,c):m&&m.isColor&&(f(m,1),s=!0),(e.autoClear||s)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),m&&(m.isCubeTexture||m.mapping===l)?(void 0===u&&(u=new pn(new mn(1,1,1),new vn({name:"BackgroundCubeMaterial",uniforms:gn(Pn.cube.uniforms),vertexShader:Pn.cube.vertexShader,fragmentShader:Pn.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(u)),u.material.uniforms.envMap.value=m,u.material.uniforms.flipEnvMap.value=m.isCubeTexture&&!1===m.isRenderTargetTexture?-1:1,h===m&&d===m.version&&p===e.toneMapping||(u.material.needsUpdate=!0,h=m,d=m.version,p=e.toneMapping),u.layers.enableAll(),n.unshift(u,u.geometry,u.material,0,0,null)):m&&m.isTexture&&(void 0===o&&(o=new pn(new Fn(2,2),new vn({name:"BackgroundMaterial",uniforms:gn(Pn.background.uniforms),vertexShader:Pn.background.vertexShader,fragmentShader:Pn.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(o)),o.material.uniforms.t2D.value=m,!0===m.matrixAutoUpdate&&m.updateMatrix(),o.material.uniforms.uvTransform.value.copy(m.matrix),h===m&&d===m.version&&p===e.toneMapping||(o.material.needsUpdate=!0,h=m,d=m.version,p=e.toneMapping),o.layers.enableAll(),n.unshift(o,o.geometry,o.material,0,0,null))}}}function Bn(e,t,n,r){const i=e.getParameter(34921),s=r.isWebGL2?null:t.get("OES_vertex_array_object"),a=r.isWebGL2||null!==s,o={},l=p(null);let u=l,c=!1;function h(t){return r.isWebGL2?e.bindVertexArray(t):s.bindVertexArrayOES(t)}function d(t){return r.isWebGL2?e.deleteVertexArray(t):s.deleteVertexArrayOES(t)}function p(e){const t=[],n=[],r=[];for(let e=0;e<i;e++)t[e]=0,n[e]=0,r[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:r,object:e,attributes:{},index:null}}function f(){const e=u.newAttributes;for(let t=0,n=e.length;t<n;t++)e[t]=0}function m(e){g(e,0)}function g(n,i){const s=u.newAttributes,a=u.enabledAttributes,o=u.attributeDivisors;s[n]=1,0===a[n]&&(e.enableVertexAttribArray(n),a[n]=1),o[n]!==i&&((r.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,i),o[n]=i)}function x(){const t=u.newAttributes,n=u.enabledAttributes;for(let r=0,i=n.length;r<i;r++)n[r]!==t[r]&&(e.disableVertexAttribArray(r),n[r]=0)}function b(t,n,i,s,a,o){!0!==r.isWebGL2||5124!==i&&5125!==i?e.vertexAttribPointer(t,n,i,s,a,o):e.vertexAttribIPointer(t,n,i,a,o)}function v(){y(),c=!0,u!==l&&(u=l,h(u.object))}function y(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(i,l,d,v,y){let w=!1;if(a){const t=function(t,n,i){const a=!0===i.wireframe;let l=o[t.id];void 0===l&&(l={},o[t.id]=l);let u=l[n.id];void 0===u&&(u={},l[n.id]=u);let c=u[a];return void 0===c&&(c=p(r.isWebGL2?e.createVertexArray():s.createVertexArrayOES()),u[a]=c),c}(v,d,l);u!==t&&(u=t,h(u.object)),w=function(e,t,n,r){const i=u.attributes,s=t.attributes;let a=0;const o=n.getAttributes();for(const t in o)if(o[t].location>=0){const n=i[t];let r=s[t];if(void 0===r&&("instanceMatrix"===t&&e.instanceMatrix&&(r=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(r=e.instanceColor)),void 0===n)return!0;if(n.attribute!==r)return!0;if(r&&n.data!==r.data)return!0;a++}return u.attributesNum!==a||u.index!==r}(i,v,d,y),w&&function(e,t,n,r){const i={},s=t.attributes;let a=0;const o=n.getAttributes();for(const t in o)if(o[t].location>=0){let n=s[t];void 0===n&&("instanceMatrix"===t&&e.instanceMatrix&&(n=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(n=e.instanceColor));const r={};r.attribute=n,n&&n.data&&(r.data=n.data),i[t]=r,a++}u.attributes=i,u.attributesNum=a,u.index=r}(i,v,d,y)}else{const e=!0===l.wireframe;u.geometry===v.id&&u.program===d.id&&u.wireframe===e||(u.geometry=v.id,u.program=d.id,u.wireframe=e,w=!0)}null!==y&&n.update(y,34963),(w||c)&&(c=!1,function(i,s,a,o){if(!1===r.isWebGL2&&(i.isInstancedMesh||o.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;f();const l=o.attributes,u=a.getAttributes(),c=s.defaultAttributeValues;for(const t in u){const r=u[t];if(r.location>=0){let s=l[t];if(void 0===s&&("instanceMatrix"===t&&i.instanceMatrix&&(s=i.instanceMatrix),"instanceColor"===t&&i.instanceColor&&(s=i.instanceColor)),void 0!==s){const t=s.normalized,a=s.itemSize,l=n.get(s);if(void 0===l)continue;const u=l.buffer,c=l.type,h=l.bytesPerElement;if(s.isInterleavedBufferAttribute){const n=s.data,l=n.stride,d=s.offset;if(n.isInstancedInterleavedBuffer){for(let e=0;e<r.locationSize;e++)g(r.location+e,n.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=n.meshPerAttribute*n.count)}else for(let e=0;e<r.locationSize;e++)m(r.location+e);e.bindBuffer(34962,u);for(let e=0;e<r.locationSize;e++)b(r.location+e,a/r.locationSize,c,t,l*h,(d+a/r.locationSize*e)*h)}else{if(s.isInstancedBufferAttribute){for(let e=0;e<r.locationSize;e++)g(r.location+e,s.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=s.meshPerAttribute*s.count)}else for(let e=0;e<r.locationSize;e++)m(r.location+e);e.bindBuffer(34962,u);for(let e=0;e<r.locationSize;e++)b(r.location+e,a/r.locationSize,c,t,a*h,a/r.locationSize*e*h)}}else if(void 0!==c){const n=c[t];if(void 0!==n)switch(n.length){case 2:e.vertexAttrib2fv(r.location,n);break;case 3:e.vertexAttrib3fv(r.location,n);break;case 4:e.vertexAttrib4fv(r.location,n);break;default:e.vertexAttrib1fv(r.location,n)}}}}x()}(i,l,d,v),null!==y&&e.bindBuffer(34963,n.get(y).buffer))},reset:v,resetDefaultState:y,dispose:function(){v();for(const e in o){const t=o[e];for(const e in t){const n=t[e];for(const e in n)d(n[e].object),delete n[e];delete t[e]}delete o[e]}},releaseStatesOfGeometry:function(e){if(void 0===o[e.id])return;const t=o[e.id];for(const e in t){const n=t[e];for(const e in n)d(n[e].object),delete n[e];delete t[e]}delete o[e.id]},releaseStatesOfProgram:function(e){for(const t in o){const n=o[t];if(void 0===n[e.id])continue;const r=n[e.id];for(const e in r)d(r[e].object),delete r[e];delete n[e.id]}},initAttributes:f,enableAttribute:m,disableUnusedAttributes:x}}function Un(e,t,n,r){const i=r.isWebGL2;let s;this.setMode=function(e){s=e},this.render=function(t,r){e.drawArrays(s,t,r),n.update(r,s,1)},this.renderInstances=function(r,a,o){if(0===o)return;let l,u;if(i)l=e,u="drawArraysInstanced";else if(l=t.get("ANGLE_instanced_arrays"),u="drawArraysInstancedANGLE",null===l)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[u](s,r,a,o),n.update(a,s,o)}}function Wn(e,t,n){let r;function i(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const s="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext;let a=void 0!==n.precision?n.precision:"highp";const o=i(a);o!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",o,"instead."),a=o);const l=s||t.has("WEBGL_draw_buffers"),u=!0===n.logarithmicDepthBuffer,c=e.getParameter(34930),h=e.getParameter(35660),d=e.getParameter(3379),p=e.getParameter(34076),f=e.getParameter(34921),m=e.getParameter(36347),g=e.getParameter(36348),x=e.getParameter(36349),b=h>0,v=s||t.has("OES_texture_float");return{isWebGL2:s,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===t.has("EXT_texture_filter_anisotropic")){const n=t.get("EXT_texture_filter_anisotropic");r=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:i,precision:a,logarithmicDepthBuffer:u,maxTextures:c,maxVertexTextures:h,maxTextureSize:d,maxCubemapSize:p,maxAttributes:f,maxVertexUniforms:m,maxVaryings:g,maxFragmentUniforms:x,vertexTextures:b,floatFragmentTextures:v,floatVertexTextures:b&&v,maxSamples:s?e.getParameter(36183):0}}function Vn(e){const t=this;let n=null,r=0,i=!1,s=!1;const a=new Mn,o=new q,l={value:null,needsUpdate:!1};function u(){l.value!==n&&(l.value=n,l.needsUpdate=r>0),t.numPlanes=r,t.numIntersection=0}function c(e,n,r,i){const s=null!==e?e.length:0;let u=null;if(0!==s){if(u=l.value,!0!==i||null===u){const t=r+4*s,i=n.matrixWorldInverse;o.getNormalMatrix(i),(null===u||u.length<t)&&(u=new Float32Array(t));for(let t=0,n=r;t!==s;++t,n+=4)a.copy(e[t]).applyMatrix4(i,o),a.normal.toArray(u,n),u[n+3]=a.constant}l.value=u,l.needsUpdate=!0}return t.numPlanes=s,t.numIntersection=0,u}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,s){const a=0!==e.length||t||0!==r||i;return i=t,n=c(e,s,0),r=e.length,a},this.beginShadows=function(){s=!0,c(null)},this.endShadows=function(){s=!1,u()},this.setState=function(t,a,o){const h=t.clippingPlanes,d=t.clipIntersection,p=t.clipShadows,f=e.get(t);if(!i||null===h||0===h.length||s&&!p)s?c(null):u();else{const e=s?0:r,t=4*e;let i=f.clippingState||null;l.value=i,i=c(h,a,t,o);for(let e=0;e!==t;++e)i[e]=n[e];f.clippingState=i,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=e}}}function Gn(e){let t=new WeakMap;function n(e,t){return 303===t?e.mapping=a:304===t&&(e.mapping=o),e}function r(e){const n=e.target;n.removeEventListener("dispose",r);const i=t.get(n);void 0!==i&&(t.delete(n),i.dispose())}return{get:function(i){if(i&&i.isTexture&&!1===i.isRenderTargetTexture){const s=i.mapping;if(303===s||304===s){if(t.has(i))return n(t.get(i).texture,i.mapping);{const s=i.image;if(s&&s.height>0){const a=new In(s.height/2);return a.fromEquirectangularTexture(e,i),t.set(i,a),i.addEventListener("dispose",r),n(a.texture,i.mapping)}return null}}}return i},dispose:function(){t=new WeakMap}}}Pn.physical={uniforms:xn([Pn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new j(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new ae(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new j},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new ae(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new ae(1,1,1)},specularColorMap:{value:null}}]),vertexShader:$n.meshphysical_vert,fragmentShader:$n.meshphysical_frag};class Hn extends yn{constructor(e=-1,t=1,n=1,r=-1,i=.1,s=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=i,this.far=s,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,r,i,s){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let i=n-e,s=n+e,a=r+t,o=r-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=e*this.view.offsetX,s=i+e*this.view.width,a-=t*this.view.offsetY,o=a-t*this.view.height}this.projectionMatrix.makeOrthographic(i,s,a,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}const jn=[.125,.215,.35,.446,.526,.582],qn=new Hn,Xn=new ae;let Kn=null;const Yn=(1+Math.sqrt(5))/2,Zn=1/Yn,Jn=[new be(1,1,1),new be(-1,1,1),new be(1,1,-1),new be(-1,1,-1),new be(0,Yn,Zn),new be(0,Yn,-Zn),new be(Zn,0,Yn),new be(-Zn,0,Yn),new be(Yn,Zn,0),new be(-Yn,Zn,0)];class Qn{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,r=100){Kn=this._renderer.getRenderTarget(),this._setSize(256);const i=this._allocateTargets();return i.depthBuffer=!0,this._sceneToCubeUV(e,n,r,i),t>0&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=rr(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=nr(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Kn),e.scissorTest=!1,tr(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===a||e.mapping===o?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Kn=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:p,minFilter:p,generateMipmaps:!1,type:b,format:y,encoding:A,depthBuffer:!1},r=er(e,t,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=er(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(e){const t=[],n=[],r=[];let i=e;const s=e-4+1+jn.length;for(let a=0;a<s;a++){const s=Math.pow(2,i);n.push(s);let o=1/s;a>e-4?o=jn[a-e+4-1]:0===a&&(o=0),r.push(o);const l=1/(s-2),u=-l,c=1+l,h=[u,u,c,u,c,c,u,u,c,c,u,c],d=6,p=6,f=3,m=2,g=1,x=new Float32Array(f*p*d),b=new Float32Array(m*p*d),v=new Float32Array(g*p*d);for(let e=0;e<d;e++){const t=e%3*2/3-1,n=e>2?0:-1,r=[t,n,0,t+2/3,n,0,t+2/3,n+1,0,t,n,0,t+2/3,n+1,0,t,n+1,0];x.set(r,f*p*e),b.set(h,m*p*e);const i=[e,e,e,e,e,e];v.set(i,g*p*e)}const y=new Xt;y.setAttribute("position",new Ot(x,f)),y.setAttribute("uv",new Ot(b,m)),y.setAttribute("faceIndex",new Ot(v,g)),t.push(y),i>4&&i--}return{lodPlanes:t,sizeLods:n,sigmas:r}}(r)),this._blurMaterial=function(e,t,n){const r=new Float32Array(20),i=new be(0,1,0);return new vn({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${e}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:r},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}(r,e,t)}return r}_compileMaterial(e){const t=new pn(this._lodPlanes[0],e);this._renderer.compile(t,qn)}_sceneToCubeUV(e,t,n,r){const i=new wn(90,1,t,n),s=[1,-1,1,1,1,1],a=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,u=o.toneMapping;o.getClearColor(Xn),o.toneMapping=0,o.autoClear=!1;const c=new Lt({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),h=new pn(new mn,c);let d=!1;const p=e.background;p?p.isColor&&(c.color.copy(p),e.background=null,d=!0):(c.color.copy(Xn),d=!0);for(let t=0;t<6;t++){const n=t%3;0===n?(i.up.set(0,s[t],0),i.lookAt(a[t],0,0)):1===n?(i.up.set(0,0,s[t]),i.lookAt(0,a[t],0)):(i.up.set(0,s[t],0),i.lookAt(0,0,a[t]));const l=this._cubeSize;tr(r,n*l,t>2?l:0,l,l),o.setRenderTarget(r),d&&o.render(h,i),o.render(e,i)}h.geometry.dispose(),h.material.dispose(),o.toneMapping=u,o.autoClear=l,e.background=p}_textureToCubeUV(e,t){const n=this._renderer,r=e.mapping===a||e.mapping===o;r?(null===this._cubemapMaterial&&(this._cubemapMaterial=rr()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=nr());const i=r?this._cubemapMaterial:this._equirectMaterial,s=new pn(this._lodPlanes[0],i);i.uniforms.envMap.value=e;const l=this._cubeSize;tr(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(s,qn)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let t=1;t<this._lodPlanes.length;t++){const n=Math.sqrt(this._sigmas[t]*this._sigmas[t]-this._sigmas[t-1]*this._sigmas[t-1]),r=Jn[(t-1)%Jn.length];this._blur(e,t-1,t,n,r)}t.autoClear=n}_blur(e,t,n,r,i){const s=this._pingPongRenderTarget;this._halfBlur(e,s,t,n,r,"latitudinal",i),this._halfBlur(s,e,n,n,r,"longitudinal",i)}_halfBlur(e,t,n,r,i,s,a){const o=this._renderer,l=this._blurMaterial;"latitudinal"!==s&&"longitudinal"!==s&&console.error("blur direction must be either latitudinal or longitudinal!");const u=new pn(this._lodPlanes[r],l),c=l.uniforms,h=this._sizeLods[n]-1,d=isFinite(i)?Math.PI/(2*h):2*Math.PI/39,p=i/d,f=isFinite(i)?1+Math.floor(3*p):20;f>20&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);const m=[];let g=0;for(let e=0;e<20;++e){const t=e/p,n=Math.exp(-t*t/2);m.push(n),0===e?g+=n:e<f&&(g+=2*n)}for(let e=0;e<m.length;e++)m[e]=m[e]/g;c.envMap.value=e.texture,c.samples.value=f,c.weights.value=m,c.latitudinal.value="latitudinal"===s,a&&(c.poleAxis.value=a);const{_lodMax:x}=this;c.dTheta.value=d,c.mipInt.value=x-n;const b=this._sizeLods[r];tr(t,3*b*(r>x-4?r-x+4:0),4*(this._cubeSize-b),3*b,2*b),o.setRenderTarget(t),o.render(u,qn)}}function er(e,t,n){const r=new fe(e,t,n);return r.texture.mapping=l,r.texture.name="PMREM.cubeUv",r.scissorTest=!0,r}function tr(e,t,n,r,i){e.viewport.set(t,n,r,i),e.scissor.set(t,n,r,i)}function nr(){return new vn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function rr(){return new vn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function ir(e){let t=new WeakMap,n=null;function r(e){const n=e.target;n.removeEventListener("dispose",r);const i=t.get(n);void 0!==i&&(t.delete(n),i.dispose())}return{get:function(i){if(i&&i.isTexture){const s=i.mapping,l=303===s||304===s,u=s===a||s===o;if(l||u){if(i.isRenderTargetTexture&&!0===i.needsPMREMUpdate){i.needsPMREMUpdate=!1;let r=t.get(i);return null===n&&(n=new Qn(e)),r=l?n.fromEquirectangular(i,r):n.fromCubemap(i,r),t.set(i,r),r.texture}if(t.has(i))return t.get(i).texture;{const s=i.image;if(l&&s&&s.height>0||u&&s&&function(e){let t=0;for(let n=0;n<6;n++)void 0!==e[n]&&t++;return 6===t}(s)){null===n&&(n=new Qn(e));const s=l?n.fromEquirectangular(i):n.fromCubemap(i);return t.set(i,s),i.addEventListener("dispose",r),s.texture}return null}}}return i},dispose:function(){t=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function sr(e){const t={};function n(n){if(void 0!==t[n])return t[n];let r;switch(n){case"WEBGL_depth_texture":r=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=e.getExtension(n)}return t[n]=r,r}return{has:function(e){return null!==n(e)},init:function(e){e.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(e){const t=n(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function ar(e,t,n,r){const i={},s=new WeakMap;function a(e){const o=e.target;null!==o.index&&t.remove(o.index);for(const e in o.attributes)t.remove(o.attributes[e]);o.removeEventListener("dispose",a),delete i[o.id];const l=s.get(o);l&&(t.remove(l),s.delete(o)),r.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(e){const n=[],r=e.index,i=e.attributes.position;let a=0;if(null!==r){const e=r.array;a=r.version;for(let t=0,r=e.length;t<r;t+=3){const r=e[t+0],i=e[t+1],s=e[t+2];n.push(r,i,i,s,s,r)}}else{const e=i.array;a=i.version;for(let t=0,r=e.length/3-1;t<r;t+=3){const e=t+0,r=t+1,i=t+2;n.push(e,r,r,i,i,e)}}const o=new(X(n)?zt:Pt)(n,1);o.version=a;const l=s.get(e);l&&t.remove(l),s.set(e,o)}return{get:function(e,t){return!0===i[t.id]||(t.addEventListener("dispose",a),i[t.id]=!0,n.memory.geometries++),t},update:function(e){const n=e.attributes;for(const e in n)t.update(n[e],34962);const r=e.morphAttributes;for(const e in r){const n=r[e];for(let e=0,r=n.length;e<r;e++)t.update(n[e],34962)}},getWireframeAttribute:function(e){const t=s.get(e);if(t){const n=e.index;null!==n&&t.version<n.version&&o(e)}else o(e);return s.get(e)}}}function or(e,t,n,r){const i=r.isWebGL2;let s,a,o;this.setMode=function(e){s=e},this.setIndex=function(e){a=e.type,o=e.bytesPerElement},this.render=function(t,r){e.drawElements(s,r,a,t*o),n.update(r,s,1)},this.renderInstances=function(r,l,u){if(0===u)return;let c,h;if(i)c=e,h="drawElementsInstanced";else if(c=t.get("ANGLE_instanced_arrays"),h="drawElementsInstancedANGLE",null===c)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[h](s,l,a,r*o,u),n.update(l,s,u)}}function lr(e){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,n,r){switch(t.calls++,n){case 4:t.triangles+=r*(e/3);break;case 1:t.lines+=r*(e/2);break;case 3:t.lines+=r*(e-1);break;case 2:t.lines+=r*e;break;case 0:t.points+=r*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function ur(e,t){return e[0]-t[0]}function cr(e,t){return Math.abs(t[1])-Math.abs(e[1])}function hr(e,t){let n=1;const r=t.isInterleavedBufferAttribute?t.data.array:t.array;r instanceof Int8Array?n=127:r instanceof Uint8Array?n=255:r instanceof Uint16Array?n=65535:r instanceof Int16Array?n=32767:r instanceof Int32Array?n=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",r),e.divideScalar(n)}function dr(e,t,n){const r={},i=new Float32Array(8),s=new WeakMap,a=new pe,o=[];for(let e=0;e<8;e++)o[e]=[e,0];return{update:function(l,u,c,h){const d=l.morphTargetInfluences;if(!0===t.isWebGL2){const p=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,f=void 0!==p?p.length:0;let m=s.get(u);if(void 0===m||m.count!==f){void 0!==m&&m.texture.dispose();const v=void 0!==u.morphAttributes.position,y=void 0!==u.morphAttributes.normal,w=void 0!==u.morphAttributes.color,_=u.morphAttributes.position||[],S=u.morphAttributes.normal||[],k=u.morphAttributes.color||[];let I=0;!0===v&&(I=1),!0===y&&(I=2),!0===w&&(I=3);let E=u.attributes.position.count*I,T=1;E>t.maxTextureSize&&(T=Math.ceil(E/t.maxTextureSize),E=t.maxTextureSize);const C=new Float32Array(E*T*4*f),M=new me(C,E,T,f);M.type=x,M.needsUpdate=!0;const A=4*I;for(let R=0;R<f;R++){const D=_[R],L=S[R],F=k[R],$=E*T*4*R;for(let O=0;O<D.count;O++){const P=O*A;!0===v&&(a.fromBufferAttribute(D,O),!0===D.normalized&&hr(a,D),C[$+P+0]=a.x,C[$+P+1]=a.y,C[$+P+2]=a.z,C[$+P+3]=0),!0===y&&(a.fromBufferAttribute(L,O),!0===L.normalized&&hr(a,L),C[$+P+4]=a.x,C[$+P+5]=a.y,C[$+P+6]=a.z,C[$+P+7]=0),!0===w&&(a.fromBufferAttribute(F,O),!0===F.normalized&&hr(a,F),C[$+P+8]=a.x,C[$+P+9]=a.y,C[$+P+10]=a.z,C[$+P+11]=4===F.itemSize?a.w:1)}}function N(){M.dispose(),s.delete(u),u.removeEventListener("dispose",N)}m={count:f,texture:M,size:new j(E,T)},s.set(u,m),u.addEventListener("dispose",N)}let g=0;for(let z=0;z<d.length;z++)g+=d[z];const b=u.morphTargetsRelative?1:1-g;h.getUniforms().setValue(e,"morphTargetBaseInfluence",b),h.getUniforms().setValue(e,"morphTargetInfluences",d),h.getUniforms().setValue(e,"morphTargetsTexture",m.texture,n),h.getUniforms().setValue(e,"morphTargetsTextureSize",m.size)}else{const B=void 0===d?0:d.length;let U=r[u.id];if(void 0===U||U.length!==B){U=[];for(let q=0;q<B;q++)U[q]=[q,0];r[u.id]=U}for(let X=0;X<B;X++){const K=U[X];K[0]=X,K[1]=d[X]}U.sort(cr);for(let Y=0;Y<8;Y++)Y<B&&U[Y][1]?(o[Y][0]=U[Y][0],o[Y][1]=U[Y][1]):(o[Y][0]=Number.MAX_SAFE_INTEGER,o[Y][1]=0);o.sort(ur);const W=u.morphAttributes.position,V=u.morphAttributes.normal;let G=0;for(let Z=0;Z<8;Z++){const J=o[Z],Q=J[0],ee=J[1];Q!==Number.MAX_SAFE_INTEGER&&ee?(W&&u.getAttribute("morphTarget"+Z)!==W[Q]&&u.setAttribute("morphTarget"+Z,W[Q]),V&&u.getAttribute("morphNormal"+Z)!==V[Q]&&u.setAttribute("morphNormal"+Z,V[Q]),i[Z]=ee,G+=ee):(W&&!0===u.hasAttribute("morphTarget"+Z)&&u.deleteAttribute("morphTarget"+Z),V&&!0===u.hasAttribute("morphNormal"+Z)&&u.deleteAttribute("morphNormal"+Z),i[Z]=0)}const H=u.morphTargetsRelative?1:1-G;h.getUniforms().setValue(e,"morphTargetBaseInfluence",H),h.getUniforms().setValue(e,"morphTargetInfluences",i)}}}}function pr(e,t,n,r){let i=new WeakMap;function s(e){const t=e.target;t.removeEventListener("dispose",s),n.remove(t.instanceMatrix),null!==t.instanceColor&&n.remove(t.instanceColor)}return{update:function(e){const a=r.render.frame,o=e.geometry,l=t.get(e,o);return i.get(l)!==a&&(t.update(l),i.set(l,a)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",s)&&e.addEventListener("dispose",s),n.update(e.instanceMatrix,34962),null!==e.instanceColor&&n.update(e.instanceColor,34962)),l},dispose:function(){i=new WeakMap}}}const fr=new de,mr=new me,gr=new ge,xr=new kn,br=[],vr=[],yr=new Float32Array(16),wr=new Float32Array(9),_r=new Float32Array(4);function Sr(e,t,n){const r=e[0];if(r<=0||r>0)return e;const i=t*n;let s=br[i];if(void 0===s&&(s=new Float32Array(i),br[i]=s),0!==t){r.toArray(s,0);for(let r=1,i=0;r!==t;++r)i+=n,e[r].toArray(s,i)}return s}function kr(e,t){if(e.length!==t.length)return!1;for(let n=0,r=e.length;n<r;n++)if(e[n]!==t[n])return!1;return!0}function Ir(e,t){for(let n=0,r=t.length;n<r;n++)e[n]=t[n]}function Er(e,t){let n=vr[t];void 0===n&&(n=new Int32Array(t),vr[t]=n);for(let r=0;r!==t;++r)n[r]=e.allocateTextureUnit();return n}function Tr(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function Cr(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(kr(n,t))return;e.uniform2fv(this.addr,t),Ir(n,t)}}function Mr(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(kr(n,t))return;e.uniform3fv(this.addr,t),Ir(n,t)}}function Ar(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(kr(n,t))return;e.uniform4fv(this.addr,t),Ir(n,t)}}function Nr(e,t){const n=this.cache,r=t.elements;if(void 0===r){if(kr(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),Ir(n,t)}else{if(kr(n,r))return;_r.set(r),e.uniformMatrix2fv(this.addr,!1,_r),Ir(n,r)}}function Rr(e,t){const n=this.cache,r=t.elements;if(void 0===r){if(kr(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),Ir(n,t)}else{if(kr(n,r))return;wr.set(r),e.uniformMatrix3fv(this.addr,!1,wr),Ir(n,r)}}function Dr(e,t){const n=this.cache,r=t.elements;if(void 0===r){if(kr(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),Ir(n,t)}else{if(kr(n,r))return;yr.set(r),e.uniformMatrix4fv(this.addr,!1,yr),Ir(n,r)}}function Lr(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function Fr(e,t){const n=this.cache;kr(n,t)||(e.uniform2iv(this.addr,t),Ir(n,t))}function $r(e,t){const n=this.cache;kr(n,t)||(e.uniform3iv(this.addr,t),Ir(n,t))}function Or(e,t){const n=this.cache;kr(n,t)||(e.uniform4iv(this.addr,t),Ir(n,t))}function Pr(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function zr(e,t){const n=this.cache;kr(n,t)||(e.uniform2uiv(this.addr,t),Ir(n,t))}function Br(e,t){const n=this.cache;kr(n,t)||(e.uniform3uiv(this.addr,t),Ir(n,t))}function Ur(e,t){const n=this.cache;kr(n,t)||(e.uniform4uiv(this.addr,t),Ir(n,t))}function Wr(e,t,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture2D(t||fr,i)}function Vr(e,t,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture3D(t||gr,i)}function Gr(e,t,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTextureCube(t||xr,i)}function Hr(e,t,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture2DArray(t||mr,i)}function jr(e,t){e.uniform1fv(this.addr,t)}function qr(e,t){const n=Sr(t,this.size,2);e.uniform2fv(this.addr,n)}function Xr(e,t){const n=Sr(t,this.size,3);e.uniform3fv(this.addr,n)}function Kr(e,t){const n=Sr(t,this.size,4);e.uniform4fv(this.addr,n)}function Yr(e,t){const n=Sr(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function Zr(e,t){const n=Sr(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function Jr(e,t){const n=Sr(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function Qr(e,t){e.uniform1iv(this.addr,t)}function ei(e,t){e.uniform2iv(this.addr,t)}function ti(e,t){e.uniform3iv(this.addr,t)}function ni(e,t){e.uniform4iv(this.addr,t)}function ri(e,t){e.uniform1uiv(this.addr,t)}function ii(e,t){e.uniform2uiv(this.addr,t)}function si(e,t){e.uniform3uiv(this.addr,t)}function ai(e,t){e.uniform4uiv(this.addr,t)}function oi(e,t,n){const r=t.length,i=Er(n,r);e.uniform1iv(this.addr,i);for(let e=0;e!==r;++e)n.setTexture2D(t[e]||fr,i[e])}function li(e,t,n){const r=t.length,i=Er(n,r);e.uniform1iv(this.addr,i);for(let e=0;e!==r;++e)n.setTexture3D(t[e]||gr,i[e])}function ui(e,t,n){const r=t.length,i=Er(n,r);e.uniform1iv(this.addr,i);for(let e=0;e!==r;++e)n.setTextureCube(t[e]||xr,i[e])}function ci(e,t,n){const r=t.length,i=Er(n,r);e.uniform1iv(this.addr,i);for(let e=0;e!==r;++e)n.setTexture2DArray(t[e]||mr,i[e])}class hi{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function(e){switch(e){case 5126:return Tr;case 35664:return Cr;case 35665:return Mr;case 35666:return Ar;case 35674:return Nr;case 35675:return Rr;case 35676:return Dr;case 5124:case 35670:return Lr;case 35667:case 35671:return Fr;case 35668:case 35672:return $r;case 35669:case 35673:return Or;case 5125:return Pr;case 36294:return zr;case 36295:return Br;case 36296:return Ur;case 35678:case 36198:case 36298:case 36306:case 35682:return Wr;case 35679:case 36299:case 36307:return Vr;case 35680:case 36300:case 36308:case 36293:return Gr;case 36289:case 36303:case 36311:case 36292:return Hr}}(t.type)}}class di{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return jr;case 35664:return qr;case 35665:return Xr;case 35666:return Kr;case 35674:return Yr;case 35675:return Zr;case 35676:return Jr;case 5124:case 35670:return Qr;case 35667:case 35671:return ei;case 35668:case 35672:return ti;case 35669:case 35673:return ni;case 5125:return ri;case 36294:return ii;case 36295:return si;case 36296:return ai;case 35678:case 36198:case 36298:case 36306:case 35682:return oi;case 35679:case 36299:case 36307:return li;case 35680:case 36300:case 36308:case 36293:return ui;case 36289:case 36303:case 36311:case 36292:return ci}}(t.type)}}class pi{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const r=this.seq;for(let i=0,s=r.length;i!==s;++i){const s=r[i];s.setValue(e,t[s.id],n)}}}const fi=/(\w+)(\])?(\[|\.)?/g;function mi(e,t){e.seq.push(t),e.map[t.id]=t}function gi(e,t,n){const r=e.name,i=r.length;for(fi.lastIndex=0;;){const s=fi.exec(r),a=fi.lastIndex;let o=s[1];const l="]"===s[2],u=s[3];if(l&&(o|=0),void 0===u||"["===u&&a+2===i){mi(n,void 0===u?new hi(o,e,t):new di(o,e,t));break}{let e=n.map[o];void 0===e&&(e=new pi(o),mi(n,e)),n=e}}}class xi{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let r=0;r<n;++r){const n=e.getActiveUniform(t,r);gi(n,e.getUniformLocation(t,n.name),this)}}setValue(e,t,n,r){const i=this.map[t];void 0!==i&&i.setValue(e,n,r)}setOptional(e,t,n){const r=t[n];void 0!==r&&this.setValue(e,n,r)}static upload(e,t,n,r){for(let i=0,s=t.length;i!==s;++i){const s=t[i],a=n[s.id];!1!==a.needsUpdate&&s.setValue(e,a.value,r)}}static seqWithValue(e,t){const n=[];for(let r=0,i=e.length;r!==i;++r){const i=e[r];i.id in t&&n.push(i)}return n}}function bi(e,t,n){const r=e.createShader(t);return e.shaderSource(r,n),e.compileShader(r),r}let vi=0;function yi(e,t,n){const r=e.getShaderParameter(t,35713),i=e.getShaderInfoLog(t).trim();if(r&&""===i)return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const r=parseInt(s[1]);return n.toUpperCase()+"\n\n"+i+"\n\n"+function(e,t){const n=e.split("\n"),r=[],i=Math.max(t-6,0),s=Math.min(t+6,n.length);for(let e=i;e<s;e++){const i=e+1;r.push(`${i===t?">":" "} ${i}: ${n[e]}`)}return r.join("\n")}(e.getShaderSource(t),r)}return i}function wi(e,t){const n=function(e){switch(e){case A:return["Linear","( value )"];case N:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function _i(e,t){let n;switch(t){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Si(e){return""!==e}function ki(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Ii(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const Ei=/^[ \t]*#include +<([\w\d./]+)>/gm;function Ti(e){return e.replace(Ei,Ci)}function Ci(e,t){const n=$n[t];if(void 0===n)throw new Error("Can not resolve #include <"+t+">");return Ti(n)}const Mi=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Ai=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Ni(e){return e.replace(Ai,Di).replace(Mi,Ri)}function Ri(e,t,n,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Di(0,t,n,r)}function Di(e,t,n,r){let i="";for(let e=parseInt(t);e<parseInt(n);e++)i+=r.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return i}function Li(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function Fi(e,t,n,r){const i=e.getContext(),s=n.defines;let u=n.vertexShader,c=n.fragmentShader;const h=function(e){let t="SHADOWMAP_TYPE_BASIC";return 1===e.shadowMapType?t="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?t="SHADOWMAP_TYPE_PCF_SOFT":3===e.shadowMapType&&(t="SHADOWMAP_TYPE_VSM"),t}(n),d=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case a:case o:t="ENVMAP_TYPE_CUBE";break;case l:t="ENVMAP_TYPE_CUBE_UV"}return t}(n),p=function(e){let t="ENVMAP_MODE_REFLECTION";return e.envMap&&e.envMapMode===o&&(t="ENVMAP_MODE_REFRACTION"),t}(n),f=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(n),m=function(e){const t=e.envMapCubeUVHeight;if(null===t)return null;const n=Math.log2(t)-2,r=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:r,maxMip:n}}(n),g=n.isWebGL2?"":function(e){return[e.extensionDerivatives||e.envMapCubeUVHeight||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Si).join("\n")}(n),x=function(e){const t=[];for(const n in e){const r=e[n];!1!==r&&t.push("#define "+n+" "+r)}return t.join("\n")}(s),b=i.createProgram();let v,y,w=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(v=[x].filter(Si).join("\n"),v.length>0&&(v+="\n"),y=[g,x].filter(Si).join("\n"),y.length>0&&(y+="\n")):(v=[Li(n),"#define SHADER_NAME "+n.shaderName,x,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+p:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+h:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Si).join("\n"),y=[g,Li(n),"#define SHADER_NAME "+n.shaderName,x,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+d:"",n.envMap?"#define "+p:"",n.envMap?"#define "+f:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+h:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?$n.tonemapping_pars_fragment:"",0!==n.toneMapping?_i("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",$n.encodings_pars_fragment,wi("linearToOutputTexel",n.outputEncoding),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Si).join("\n")),u=Ti(u),u=ki(u,n),u=Ii(u,n),c=Ti(c),c=ki(c,n),c=Ii(c,n),u=Ni(u),c=Ni(c),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(w="#version 300 es\n",v=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+v,y=["#define varying in",n.glslVersion===F?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===F?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+y);const _=w+y+c,S=bi(i,35633,w+v+u),k=bi(i,35632,_);if(i.attachShader(b,S),i.attachShader(b,k),void 0!==n.index0AttributeName?i.bindAttribLocation(b,0,n.index0AttributeName):!0===n.morphTargets&&i.bindAttribLocation(b,0,"position"),i.linkProgram(b),e.debug.checkShaderErrors){const e=i.getProgramInfoLog(b).trim(),t=i.getShaderInfoLog(S).trim(),n=i.getShaderInfoLog(k).trim();let r=!0,s=!0;if(!1===i.getProgramParameter(b,35714)){r=!1;const t=yi(i,S,"vertex"),n=yi(i,k,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(b,35715)+"\n\nProgram Info Log: "+e+"\n"+t+"\n"+n)}else""!==e?console.warn("THREE.WebGLProgram: Program Info Log:",e):""!==t&&""!==n||(s=!1);s&&(this.diagnostics={runnable:r,programLog:e,vertexShader:{log:t,prefix:v},fragmentShader:{log:n,prefix:y}})}let I,E;return i.deleteShader(S),i.deleteShader(k),this.getUniforms=function(){return void 0===I&&(I=new xi(i,b)),I},this.getAttributes=function(){return void 0===E&&(E=function(e,t){const n={},r=e.getProgramParameter(t,35721);for(let i=0;i<r;i++){const r=e.getActiveAttrib(t,i),s=r.name;let a=1;35674===r.type&&(a=2),35675===r.type&&(a=3),35676===r.type&&(a=4),n[s]={type:r.type,location:e.getAttribLocation(t,s),locationSize:a}}return n}(i,b)),E},this.destroy=function(){r.releaseStatesOfProgram(this),i.deleteProgram(b),this.program=void 0},this.name=n.shaderName,this.id=vi++,this.cacheKey=t,this.usedTimes=1,this.program=b,this.vertexShader=S,this.fragmentShader=k,this}let $i=0;class Oi{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,r=this._getShaderStage(t),i=this._getShaderStage(n),s=this._getShaderCacheForMaterial(e);return!1===s.has(r)&&(s.add(r),r.usedTimes++),!1===s.has(i)&&(s.add(i),i.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const e of t)e.usedTimes--,0===e.usedTimes&&this.shaderCache.delete(e.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return!1===t.has(e)&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(!1===t.has(e)){const n=new Pi(e);t.set(e,n)}return t.get(e)}}class Pi{constructor(e){this.id=$i++,this.code=e,this.usedTimes=0}}function zi(e,t,n,r,i,s,a){const o=new at,u=new Oi,c=[],h=i.isWebGL2,d=i.logarithmicDepthBuffer,p=i.vertexTextures;let f=i.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(s,o,c,g,x){const b=g.fog,v=x.geometry,y=s.isMeshStandardMaterial?g.environment:null,w=(s.isMeshStandardMaterial?n:t).get(s.envMap||y),_=w&&w.mapping===l?w.image.height:null,S=m[s.type];null!==s.precision&&(f=i.getMaxPrecision(s.precision),f!==s.precision&&console.warn("THREE.WebGLProgram.getParameters:",s.precision,"not supported, using",f,"instead."));const k=v.morphAttributes.position||v.morphAttributes.normal||v.morphAttributes.color,I=void 0!==k?k.length:0;let E,T,C,M,R=0;if(void 0!==v.morphAttributes.position&&(R=1),void 0!==v.morphAttributes.normal&&(R=2),void 0!==v.morphAttributes.color&&(R=3),S){const e=Pn[S];E=e.vertexShader,T=e.fragmentShader}else E=s.vertexShader,T=s.fragmentShader,u.update(s),C=u.getVertexShaderID(s),M=u.getFragmentShaderID(s);const D=e.getRenderTarget(),L=s.alphaTest>0,F=s.clearcoat>0,$=s.iridescence>0;return{isWebGL2:h,shaderID:S,shaderName:s.type,vertexShader:E,fragmentShader:T,defines:s.defines,customVertexShaderID:C,customFragmentShaderID:M,isRawShaderMaterial:!0===s.isRawShaderMaterial,glslVersion:s.glslVersion,precision:f,instancing:!0===x.isInstancedMesh,instancingColor:!0===x.isInstancedMesh&&null!==x.instanceColor,supportsVertexTextures:p,outputEncoding:null===D?e.outputEncoding:!0===D.isXRRenderTarget?D.texture.encoding:A,map:!!s.map,matcap:!!s.matcap,envMap:!!w,envMapMode:w&&w.mapping,envMapCubeUVHeight:_,lightMap:!!s.lightMap,aoMap:!!s.aoMap,emissiveMap:!!s.emissiveMap,bumpMap:!!s.bumpMap,normalMap:!!s.normalMap,objectSpaceNormalMap:1===s.normalMapType,tangentSpaceNormalMap:0===s.normalMapType,decodeVideoTexture:!!s.map&&!0===s.map.isVideoTexture&&s.map.encoding===N,clearcoat:F,clearcoatMap:F&&!!s.clearcoatMap,clearcoatRoughnessMap:F&&!!s.clearcoatRoughnessMap,clearcoatNormalMap:F&&!!s.clearcoatNormalMap,iridescence:$,iridescenceMap:$&&!!s.iridescenceMap,iridescenceThicknessMap:$&&!!s.iridescenceThicknessMap,displacementMap:!!s.displacementMap,roughnessMap:!!s.roughnessMap,metalnessMap:!!s.metalnessMap,specularMap:!!s.specularMap,specularIntensityMap:!!s.specularIntensityMap,specularColorMap:!!s.specularColorMap,opaque:!1===s.transparent&&1===s.blending,alphaMap:!!s.alphaMap,alphaTest:L,gradientMap:!!s.gradientMap,sheen:s.sheen>0,sheenColorMap:!!s.sheenColorMap,sheenRoughnessMap:!!s.sheenRoughnessMap,transmission:s.transmission>0,transmissionMap:!!s.transmissionMap,thicknessMap:!!s.thicknessMap,combine:s.combine,vertexTangents:!!s.normalMap&&!!v.attributes.tangent,vertexColors:s.vertexColors,vertexAlphas:!0===s.vertexColors&&!!v.attributes.color&&4===v.attributes.color.itemSize,vertexUvs:!!(s.map||s.bumpMap||s.normalMap||s.specularMap||s.alphaMap||s.emissiveMap||s.roughnessMap||s.metalnessMap||s.clearcoatMap||s.clearcoatRoughnessMap||s.clearcoatNormalMap||s.iridescenceMap||s.iridescenceThicknessMap||s.displacementMap||s.transmissionMap||s.thicknessMap||s.specularIntensityMap||s.specularColorMap||s.sheenColorMap||s.sheenRoughnessMap),uvsVertexOnly:!(s.map||s.bumpMap||s.normalMap||s.specularMap||s.alphaMap||s.emissiveMap||s.roughnessMap||s.metalnessMap||s.clearcoatNormalMap||s.iridescenceMap||s.iridescenceThicknessMap||s.transmission>0||s.transmissionMap||s.thicknessMap||s.specularIntensityMap||s.specularColorMap||s.sheen>0||s.sheenColorMap||s.sheenRoughnessMap||!s.displacementMap),fog:!!b,useFog:!0===s.fog,fogExp2:b&&b.isFogExp2,flatShading:!!s.flatShading,sizeAttenuation:s.sizeAttenuation,logarithmicDepthBuffer:d,skinning:!0===x.isSkinnedMesh,morphTargets:void 0!==v.morphAttributes.position,morphNormals:void 0!==v.morphAttributes.normal,morphColors:void 0!==v.morphAttributes.color,morphTargetsCount:I,morphTextureStride:R,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:s.dithering,shadowMapEnabled:e.shadowMap.enabled&&c.length>0,shadowMapType:e.shadowMap.type,toneMapping:s.toneMapped?e.toneMapping:0,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:s.premultipliedAlpha,doubleSided:2===s.side,flipSided:1===s.side,useDepthPacking:!!s.depthPacking,depthPacking:s.depthPacking||0,index0AttributeName:s.index0AttributeName,extensionDerivatives:s.extensions&&s.extensions.derivatives,extensionFragDepth:s.extensions&&s.extensions.fragDepth,extensionDrawBuffers:s.extensions&&s.extensions.drawBuffers,extensionShaderTextureLOD:s.extensions&&s.extensions.shaderTextureLOD,rendererExtensionFragDepth:h||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:h||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:h||r.has("EXT_shader_texture_lod"),customProgramCacheKey:s.customProgramCacheKey()}},getProgramCacheKey:function(t){const n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.customVertexShaderID),n.push(t.customFragmentShaderID)),void 0!==t.defines)for(const e in t.defines)n.push(e),n.push(t.defines[e]);return!1===t.isRawShaderMaterial&&(function(e,t){e.push(t.precision),e.push(t.outputEncoding),e.push(t.envMapMode),e.push(t.envMapCubeUVHeight),e.push(t.combine),e.push(t.vertexUvs),e.push(t.fogExp2),e.push(t.sizeAttenuation),e.push(t.morphTargetsCount),e.push(t.morphAttributeCount),e.push(t.numDirLights),e.push(t.numPointLights),e.push(t.numSpotLights),e.push(t.numHemiLights),e.push(t.numRectAreaLights),e.push(t.numDirLightShadows),e.push(t.numPointLightShadows),e.push(t.numSpotLightShadows),e.push(t.shadowMapType),e.push(t.toneMapping),e.push(t.numClippingPlanes),e.push(t.numClipIntersection),e.push(t.depthPacking)}(n,t),function(e,t){o.disableAll(),t.isWebGL2&&o.enable(0),t.supportsVertexTextures&&o.enable(1),t.instancing&&o.enable(2),t.instancingColor&&o.enable(3),t.map&&o.enable(4),t.matcap&&o.enable(5),t.envMap&&o.enable(6),t.lightMap&&o.enable(7),t.aoMap&&o.enable(8),t.emissiveMap&&o.enable(9),t.bumpMap&&o.enable(10),t.normalMap&&o.enable(11),t.objectSpaceNormalMap&&o.enable(12),t.tangentSpaceNormalMap&&o.enable(13),t.clearcoat&&o.enable(14),t.clearcoatMap&&o.enable(15),t.clearcoatRoughnessMap&&o.enable(16),t.clearcoatNormalMap&&o.enable(17),t.iridescence&&o.enable(18),t.iridescenceMap&&o.enable(19),t.iridescenceThicknessMap&&o.enable(20),t.displacementMap&&o.enable(21),t.specularMap&&o.enable(22),t.roughnessMap&&o.enable(23),t.metalnessMap&&o.enable(24),t.gradientMap&&o.enable(25),t.alphaMap&&o.enable(26),t.alphaTest&&o.enable(27),t.vertexColors&&o.enable(28),t.vertexAlphas&&o.enable(29),t.vertexUvs&&o.enable(30),t.vertexTangents&&o.enable(31),t.uvsVertexOnly&&o.enable(32),t.fog&&o.enable(33),e.push(o.mask),o.disableAll(),t.useFog&&o.enable(0),t.flatShading&&o.enable(1),t.logarithmicDepthBuffer&&o.enable(2),t.skinning&&o.enable(3),t.morphTargets&&o.enable(4),t.morphNormals&&o.enable(5),t.morphColors&&o.enable(6),t.premultipliedAlpha&&o.enable(7),t.shadowMapEnabled&&o.enable(8),t.physicallyCorrectLights&&o.enable(9),t.doubleSided&&o.enable(10),t.flipSided&&o.enable(11),t.useDepthPacking&&o.enable(12),t.dithering&&o.enable(13),t.specularIntensityMap&&o.enable(14),t.specularColorMap&&o.enable(15),t.transmission&&o.enable(16),t.transmissionMap&&o.enable(17),t.thicknessMap&&o.enable(18),t.sheen&&o.enable(19),t.sheenColorMap&&o.enable(20),t.sheenRoughnessMap&&o.enable(21),t.decodeVideoTexture&&o.enable(22),t.opaque&&o.enable(23),e.push(o.mask)}(n,t),n.push(e.outputEncoding)),n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){const t=m[e.type];let n;if(t){const e=Pn[t];n=bn.clone(e.uniforms)}else n=e.uniforms;return n},acquireProgram:function(t,n){let r;for(let e=0,t=c.length;e<t;e++){const t=c[e];if(t.cacheKey===n){r=t,++r.usedTimes;break}}return void 0===r&&(r=new Fi(e,n,t,s),c.push(r)),r},releaseProgram:function(e){if(0==--e.usedTimes){const t=c.indexOf(e);c[t]=c[c.length-1],c.pop(),e.destroy()}},releaseShaderCache:function(e){u.remove(e)},programs:c,dispose:function(){u.dispose()}}}function Bi(){let e=new WeakMap;return{get:function(t){let n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,r){e.get(t)[n]=r},dispose:function(){e=new WeakMap}}}function Ui(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Wi(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Vi(){const e=[];let t=0;const n=[],r=[],i=[];function s(n,r,i,s,a,o){let l=e[t];return void 0===l?(l={id:n.id,object:n,geometry:r,material:i,groupOrder:s,renderOrder:n.renderOrder,z:a,group:o},e[t]=l):(l.id=n.id,l.object=n,l.geometry=r,l.material=i,l.groupOrder=s,l.renderOrder=n.renderOrder,l.z=a,l.group=o),t++,l}return{opaque:n,transmissive:r,transparent:i,init:function(){t=0,n.length=0,r.length=0,i.length=0},push:function(e,t,a,o,l,u){const c=s(e,t,a,o,l,u);a.transmission>0?r.push(c):!0===a.transparent?i.push(c):n.push(c)},unshift:function(e,t,a,o,l,u){const c=s(e,t,a,o,l,u);a.transmission>0?r.unshift(c):!0===a.transparent?i.unshift(c):n.unshift(c)},finish:function(){for(let n=t,r=e.length;n<r;n++){const t=e[n];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.group=null}},sort:function(e,t){n.length>1&&n.sort(e||Ui),r.length>1&&r.sort(t||Wi),i.length>1&&i.sort(t||Wi)}}}function Gi(){let e=new WeakMap;return{get:function(t,n){let r;return!1===e.has(t)?(r=new Vi,e.set(t,[r])):n>=e.get(t).length?(r=new Vi,e.get(t).push(r)):r=e.get(t)[n],r},dispose:function(){e=new WeakMap}}}function Hi(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":n={direction:new be,color:new ae};break;case"SpotLight":n={position:new be,direction:new be,color:new ae,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new be,color:new ae,distance:0,decay:0};break;case"HemisphereLight":n={direction:new be,skyColor:new ae,groundColor:new ae};break;case"RectAreaLight":n={color:new ae,position:new be,halfWidth:new be,halfHeight:new be}}return e[t.id]=n,n}}}let ji=0;function qi(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function Xi(e,t){const n=new Hi,r=function(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new j};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new j,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=n,n}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let e=0;e<9;e++)i.probe.push(new be);const s=new be,a=new Ke,o=new Ke;return{setup:function(s,a){let o=0,l=0,u=0;for(let e=0;e<9;e++)i.probe[e].set(0,0,0);let c=0,h=0,d=0,p=0,f=0,m=0,g=0,x=0;s.sort(qi);const b=!0!==a?Math.PI:1;for(let e=0,t=s.length;e<t;e++){const t=s[e],a=t.color,v=t.intensity,y=t.distance,w=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)o+=a.r*v*b,l+=a.g*v*b,u+=a.b*v*b;else if(t.isLightProbe)for(let e=0;e<9;e++)i.probe[e].addScaledVector(t.sh.coefficients[e],v);else if(t.isDirectionalLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*b),t.castShadow){const e=t.shadow,n=r.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,i.directionalShadow[c]=n,i.directionalShadowMap[c]=w,i.directionalShadowMatrix[c]=t.shadow.matrix,m++}i.directional[c]=e,c++}else if(t.isSpotLight){const e=n.get(t);if(e.position.setFromMatrixPosition(t.matrixWorld),e.color.copy(a).multiplyScalar(v*b),e.distance=y,e.coneCos=Math.cos(t.angle),e.penumbraCos=Math.cos(t.angle*(1-t.penumbra)),e.decay=t.decay,t.castShadow){const e=t.shadow,n=r.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,i.spotShadow[d]=n,i.spotShadowMap[d]=w,i.spotShadowMatrix[d]=t.shadow.matrix,x++}i.spot[d]=e,d++}else if(t.isRectAreaLight){const e=n.get(t);e.color.copy(a).multiplyScalar(v),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),i.rectArea[p]=e,p++}else if(t.isPointLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*b),e.distance=t.distance,e.decay=t.decay,t.castShadow){const e=t.shadow,n=r.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,n.shadowCameraNear=e.camera.near,n.shadowCameraFar=e.camera.far,i.pointShadow[h]=n,i.pointShadowMap[h]=w,i.pointShadowMatrix[h]=t.shadow.matrix,g++}i.point[h]=e,h++}else if(t.isHemisphereLight){const e=n.get(t);e.skyColor.copy(t.color).multiplyScalar(v*b),e.groundColor.copy(t.groundColor).multiplyScalar(v*b),i.hemi[f]=e,f++}}p>0&&(t.isWebGL2||!0===e.has("OES_texture_float_linear")?(i.rectAreaLTC1=On.LTC_FLOAT_1,i.rectAreaLTC2=On.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(i.rectAreaLTC1=On.LTC_HALF_1,i.rectAreaLTC2=On.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=o,i.ambient[1]=l,i.ambient[2]=u;const v=i.hash;v.directionalLength===c&&v.pointLength===h&&v.spotLength===d&&v.rectAreaLength===p&&v.hemiLength===f&&v.numDirectionalShadows===m&&v.numPointShadows===g&&v.numSpotShadows===x||(i.directional.length=c,i.spot.length=d,i.rectArea.length=p,i.point.length=h,i.hemi.length=f,i.directionalShadow.length=m,i.directionalShadowMap.length=m,i.pointShadow.length=g,i.pointShadowMap.length=g,i.spotShadow.length=x,i.spotShadowMap.length=x,i.directionalShadowMatrix.length=m,i.pointShadowMatrix.length=g,i.spotShadowMatrix.length=x,v.directionalLength=c,v.pointLength=h,v.spotLength=d,v.rectAreaLength=p,v.hemiLength=f,v.numDirectionalShadows=m,v.numPointShadows=g,v.numSpotShadows=x,i.version=ji++)},setupView:function(e,t){let n=0,r=0,l=0,u=0,c=0;const h=t.matrixWorldInverse;for(let t=0,d=e.length;t<d;t++){const d=e[t];if(d.isDirectionalLight){const e=i.directional[n];e.direction.setFromMatrixPosition(d.matrixWorld),s.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(s),e.direction.transformDirection(h),n++}else if(d.isSpotLight){const e=i.spot[l];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(h),e.direction.setFromMatrixPosition(d.matrixWorld),s.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(s),e.direction.transformDirection(h),l++}else if(d.isRectAreaLight){const e=i.rectArea[u];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(h),o.identity(),a.copy(d.matrixWorld),a.premultiply(h),o.extractRotation(a),e.halfWidth.set(.5*d.width,0,0),e.halfHeight.set(0,.5*d.height,0),e.halfWidth.applyMatrix4(o),e.halfHeight.applyMatrix4(o),u++}else if(d.isPointLight){const e=i.point[r];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(h),r++}else if(d.isHemisphereLight){const e=i.hemi[c];e.direction.setFromMatrixPosition(d.matrixWorld),e.direction.transformDirection(h),c++}}},state:i}}function Ki(e,t){const n=new Xi(e,t),r=[],i=[];return{init:function(){r.length=0,i.length=0},state:{lightsArray:r,shadowsArray:i,lights:n},setupLights:function(e){n.setup(r,e)},setupLightsView:function(e){n.setupView(r,e)},pushLight:function(e){r.push(e)},pushShadow:function(e){i.push(e)}}}function Yi(e,t){let n=new WeakMap;return{get:function(r,i=0){let s;return!1===n.has(r)?(s=new Ki(e,t),n.set(r,[s])):i>=n.get(r).length?(s=new Ki(e,t),n.get(r).push(s)):s=n.get(r)[i],s},dispose:function(){n=new WeakMap}}}class Zi extends Dt{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Ji extends Dt{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new be,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function Qi(e,t,n){let r=new Rn;const i=new j,s=new j,a=new pe,o=new Zi({depthPacking:3201}),l=new Ji,u={},c=n.maxTextureSize,h={0:1,1:0,2:2},p=new vn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new j},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),f=p.clone();f.defines.HORIZONTAL_PASS=1;const m=new Xt;m.setAttribute("position",new Ot(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new pn(m,p),x=this;function b(n,r){const s=t.update(g);p.defines.VSM_SAMPLES!==n.blurSamples&&(p.defines.VSM_SAMPLES=n.blurSamples,f.defines.VSM_SAMPLES=n.blurSamples,p.needsUpdate=!0,f.needsUpdate=!0),null===n.mapPass&&(n.mapPass=new fe(i.x,i.y)),p.uniforms.shadow_pass.value=n.map.texture,p.uniforms.resolution.value=n.mapSize,p.uniforms.radius.value=n.radius,e.setRenderTarget(n.mapPass),e.clear(),e.renderBufferDirect(r,null,s,p,g,null),f.uniforms.shadow_pass.value=n.mapPass.texture,f.uniforms.resolution.value=n.mapSize,f.uniforms.radius.value=n.radius,e.setRenderTarget(n.map),e.clear(),e.renderBufferDirect(r,null,s,f,g,null)}function v(t,n,r,i,s,a){let c=null;const d=!0===r.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(c=void 0!==d?d:!0===r.isPointLight?l:o,e.localClippingEnabled&&!0===n.clipShadows&&Array.isArray(n.clippingPlanes)&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0){const e=c.uuid,t=n.uuid;let r=u[e];void 0===r&&(r={},u[e]=r);let i=r[t];void 0===i&&(i=c.clone(),r[t]=i),c=i}return c.visible=n.visible,c.wireframe=n.wireframe,c.side=3===a?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:h[n.side],c.alphaMap=n.alphaMap,c.alphaTest=n.alphaTest,c.clipShadows=n.clipShadows,c.clippingPlanes=n.clippingPlanes,c.clipIntersection=n.clipIntersection,c.displacementMap=n.displacementMap,c.displacementScale=n.displacementScale,c.displacementBias=n.displacementBias,c.wireframeLinewidth=n.wireframeLinewidth,c.linewidth=n.linewidth,!0===r.isPointLight&&!0===c.isMeshDistanceMaterial&&(c.referencePosition.setFromMatrixPosition(r.matrixWorld),c.nearDistance=i,c.farDistance=s),c}function y(n,i,s,a,o){if(!1===n.visible)return;if(n.layers.test(i.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===o)&&(!n.frustumCulled||r.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,n.matrixWorld);const r=t.update(n),i=n.material;if(Array.isArray(i)){const t=r.groups;for(let l=0,u=t.length;l<u;l++){const u=t[l],c=i[u.materialIndex];if(c&&c.visible){const t=v(n,c,a,s.near,s.far,o);e.renderBufferDirect(s,null,r,t,n,u)}}}else if(i.visible){const t=v(n,i,a,s.near,s.far,o);e.renderBufferDirect(s,null,r,t,n,null)}}const l=n.children;for(let e=0,t=l.length;e<t;e++)y(l[e],i,s,a,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(t,n,o){if(!1===x.enabled)return;if(!1===x.autoUpdate&&!1===x.needsUpdate)return;if(0===t.length)return;const l=e.getRenderTarget(),u=e.getActiveCubeFace(),h=e.getActiveMipmapLevel(),p=e.state;p.setBlending(0),p.buffers.color.setClear(1,1,1,1),p.buffers.depth.setTest(!0),p.setScissorTest(!1);for(let l=0,u=t.length;l<u;l++){const u=t[l],h=u.shadow;if(void 0===h){console.warn("THREE.WebGLShadowMap:",u,"has no shadow.");continue}if(!1===h.autoUpdate&&!1===h.needsUpdate)continue;i.copy(h.mapSize);const f=h.getFrameExtents();if(i.multiply(f),s.copy(h.mapSize),(i.x>c||i.y>c)&&(i.x>c&&(s.x=Math.floor(c/f.x),i.x=s.x*f.x,h.mapSize.x=s.x),i.y>c&&(s.y=Math.floor(c/f.y),i.y=s.y*f.y,h.mapSize.y=s.y)),null===h.map){const e=3!==this.type?{minFilter:d,magFilter:d}:{};h.map=new fe(i.x,i.y,e),h.map.texture.name=u.name+".shadowMap",h.camera.updateProjectionMatrix()}e.setRenderTarget(h.map),e.clear();const m=h.getViewportCount();for(let e=0;e<m;e++){const t=h.getViewport(e);a.set(s.x*t.x,s.y*t.y,s.x*t.z,s.y*t.w),p.viewport(a),h.updateMatrices(u,e),r=h.getFrustum(),y(n,o,h.camera,u,this.type)}!0!==h.isPointLightShadow&&3===this.type&&b(h,o),h.needsUpdate=!1}x.needsUpdate=!1,e.setRenderTarget(l,u,h)}}function es(e,t,n){const r=n.isWebGL2,i=new function(){let t=!1;const n=new pe;let r=null;const i=new pe(0,0,0,0);return{setMask:function(n){r===n||t||(e.colorMask(n,n,n,n),r=n)},setLocked:function(e){t=e},setClear:function(t,r,s,a,o){!0===o&&(t*=a,r*=a,s*=a),n.set(t,r,s,a),!1===i.equals(n)&&(e.clearColor(t,r,s,a),i.copy(n))},reset:function(){t=!1,r=null,i.set(-1,0,0,0)}}},a=new function(){let t=!1,n=null,r=null,i=null;return{setTest:function(e){e?z(2929):B(2929)},setMask:function(r){n===r||t||(e.depthMask(r),n=r)},setFunc:function(t){if(r!==t){if(t)switch(t){case 0:e.depthFunc(512);break;case 1:e.depthFunc(519);break;case 2:e.depthFunc(513);break;case 3:default:e.depthFunc(515);break;case 4:e.depthFunc(514);break;case 5:e.depthFunc(518);break;case 6:e.depthFunc(516);break;case 7:e.depthFunc(517)}else e.depthFunc(515);r=t}},setLocked:function(e){t=e},setClear:function(t){i!==t&&(e.clearDepth(t),i=t)},reset:function(){t=!1,n=null,r=null,i=null}}},o=new function(){let t=!1,n=null,r=null,i=null,s=null,a=null,o=null,l=null,u=null;return{setTest:function(e){t||(e?z(2960):B(2960))},setMask:function(r){n===r||t||(e.stencilMask(r),n=r)},setFunc:function(t,n,a){r===t&&i===n&&s===a||(e.stencilFunc(t,n,a),r=t,i=n,s=a)},setOp:function(t,n,r){a===t&&o===n&&l===r||(e.stencilOp(t,n,r),a=t,o=n,l=r)},setLocked:function(e){t=e},setClear:function(t){u!==t&&(e.clearStencil(t),u=t)},reset:function(){t=!1,n=null,r=null,i=null,s=null,a=null,o=null,l=null,u=null}}};let l={},u={},c=new WeakMap,h=[],d=null,p=!1,f=null,m=null,g=null,x=null,b=null,v=null,y=null,w=!1,_=null,S=null,k=null,I=null,E=null;const T=e.getParameter(35661);let C=!1,M=0;const A=e.getParameter(7938);-1!==A.indexOf("WebGL")?(M=parseFloat(/^WebGL (\d)/.exec(A)[1]),C=M>=1):-1!==A.indexOf("OpenGL ES")&&(M=parseFloat(/^OpenGL ES (\d)/.exec(A)[1]),C=M>=2);let N=null,R={};const D=e.getParameter(3088),L=e.getParameter(2978),F=(new pe).fromArray(D),$=(new pe).fromArray(L);function O(t,n,r){const i=new Uint8Array(4),s=e.createTexture();e.bindTexture(t,s),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let t=0;t<r;t++)e.texImage2D(n+t,0,6408,1,1,0,6408,5121,i);return s}const P={};function z(t){!0!==l[t]&&(e.enable(t),l[t]=!0)}function B(t){!1!==l[t]&&(e.disable(t),l[t]=!1)}P[3553]=O(3553,3553,1),P[34067]=O(34067,34069,6),i.setClear(0,0,0,1),a.setClear(1),o.setClear(0),z(2929),a.setFunc(3),G(!1),H(1),z(2884),V(0);const U={[s]:32774,101:32778,102:32779};if(r)U[103]=32775,U[104]=32776;else{const e=t.get("EXT_blend_minmax");null!==e&&(U[103]=e.MIN_EXT,U[104]=e.MAX_EXT)}const W={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function V(t,n,r,i,a,o,l,u){if(0!==t){if(!1===p&&(z(3042),p=!0),5===t)a=a||n,o=o||r,l=l||i,n===m&&a===b||(e.blendEquationSeparate(U[n],U[a]),m=n,b=a),r===g&&i===x&&o===v&&l===y||(e.blendFuncSeparate(W[r],W[i],W[o],W[l]),g=r,x=i,v=o,y=l),f=t,w=null;else if(t!==f||u!==w){if(m===s&&b===s||(e.blendEquation(32774),m=s,b=s),u)switch(t){case 1:e.blendFuncSeparate(1,771,1,771);break;case 2:e.blendFunc(1,1);break;case 3:e.blendFuncSeparate(0,769,0,1);break;case 4:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(770,771,1,771);break;case 2:e.blendFunc(770,1);break;case 3:e.blendFuncSeparate(0,769,0,1);break;case 4:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}g=null,x=null,v=null,y=null,f=t,w=u}}else!0===p&&(B(3042),p=!1)}function G(t){_!==t&&(t?e.frontFace(2304):e.frontFace(2305),_=t)}function H(t){0!==t?(z(2884),t!==S&&(1===t?e.cullFace(1029):2===t?e.cullFace(1028):e.cullFace(1032))):B(2884),S=t}function j(t,n,r){t?(z(32823),I===n&&E===r||(e.polygonOffset(n,r),I=n,E=r)):B(32823)}function q(t){void 0===t&&(t=33984+T-1),N!==t&&(e.activeTexture(t),N=t)}return{buffers:{color:i,depth:a,stencil:o},enable:z,disable:B,bindFramebuffer:function(t,n){return u[t]!==n&&(e.bindFramebuffer(t,n),u[t]=n,r&&(36009===t&&(u[36160]=n),36160===t&&(u[36009]=n)),!0)},drawBuffers:function(r,i){let s=h,a=!1;if(r)if(s=c.get(i),void 0===s&&(s=[],c.set(i,s)),r.isWebGLMultipleRenderTargets){const e=r.texture;if(s.length!==e.length||36064!==s[0]){for(let t=0,n=e.length;t<n;t++)s[t]=36064+t;s.length=e.length,a=!0}}else 36064!==s[0]&&(s[0]=36064,a=!0);else 1029!==s[0]&&(s[0]=1029,a=!0);a&&(n.isWebGL2?e.drawBuffers(s):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(s))},useProgram:function(t){return d!==t&&(e.useProgram(t),d=t,!0)},setBlending:V,setMaterial:function(e,t){2===e.side?B(2884):z(2884);let n=1===e.side;t&&(n=!n),G(n),1===e.blending&&!1===e.transparent?V(0):V(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),a.setFunc(e.depthFunc),a.setTest(e.depthTest),a.setMask(e.depthWrite),i.setMask(e.colorWrite);const r=e.stencilWrite;o.setTest(r),r&&(o.setMask(e.stencilWriteMask),o.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),o.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),j(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?z(32926):B(32926)},setFlipSided:G,setCullFace:H,setLineWidth:function(t){t!==k&&(C&&e.lineWidth(t),k=t)},setPolygonOffset:j,setScissorTest:function(e){e?z(3089):B(3089)},activeTexture:q,bindTexture:function(t,n){null===N&&q();let r=R[N];void 0===r&&(r={type:void 0,texture:void 0},R[N]=r),r.type===t&&r.texture===n||(e.bindTexture(t,n||P[t]),r.type=t,r.texture=n)},unbindTexture:function(){const t=R[N];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage2D:function(){try{e.texStorage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage3D:function(){try{e.texStorage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage2D:function(){try{e.texSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage3D:function(){try{e.texSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===F.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),F.copy(t))},viewport:function(t){!1===$.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),$.copy(t))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===r&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),l={},N=null,R={},u={},c=new WeakMap,h=[],d=null,p=!1,f=null,m=null,g=null,x=null,b=null,v=null,y=null,w=!1,_=null,S=null,k=null,I=null,E=null,F.set(0,0,e.canvas.width,e.canvas.height),$.set(0,0,e.canvas.width,e.canvas.height),i.reset(),a.reset(),o.reset()}}}function ts(e,t,n,r,i,s,a){const o=i.isWebGL2,l=i.maxTextures,S=i.maxCubemapSize,k=i.maxTextureSize,I=i.maxSamples,E=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,T=/OculusBrowser/g.test(navigator.userAgent),C=new WeakMap;let M;const R=new WeakMap;let D=!1;try{D="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function L(e,t){return D?new OffscreenCanvas(e,t):K("canvas")}function F(e,t,n,r){let i=1;if((e.width>r||e.height>r)&&(i=r/Math.max(e.width,e.height)),i<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const r=t?H:Math.floor,s=r(i*e.width),a=r(i*e.height);void 0===M&&(M=L(s,a));const o=n?L(s,a):M;return o.width=s,o.height=a,o.getContext("2d").drawImage(e,0,0,s,a),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+s+"x"+a+")."),o}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function O(e){return G(e.width)&&G(e.height)}function P(e,t){return e.generateMipmaps&&t&&e.minFilter!==d&&e.minFilter!==p}function z(t){e.generateMipmap(t)}function B(n,r,i,s,a=!1){if(!1===o)return r;if(null!==n){if(void 0!==e[n])return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let l=r;return 6403===r&&(5126===i&&(l=33326),5131===i&&(l=33325),5121===i&&(l=33321)),33319===r&&(5126===i&&(l=33328),5131===i&&(l=33327),5121===i&&(l=33323)),6408===r&&(5126===i&&(l=34836),5131===i&&(l=34842),5121===i&&(l=s===N&&!1===a?35907:32856),32819===i&&(l=32854),32820===i&&(l=32855)),33325!==l&&33326!==l&&33327!==l&&33328!==l&&34842!==l&&34836!==l||t.get("EXT_color_buffer_float"),l}function U(e,t,n){return!0===P(e,n)||e.isFramebufferTexture&&e.minFilter!==d&&e.minFilter!==p?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function W(e){return e===d||1004===e||1005===e?9728:9729}function V(e){const t=e.target;t.removeEventListener("dispose",V),function(e){const t=r.get(e);if(void 0===t.__webglInit)return;const n=e.source,i=R.get(n);if(i){const r=i[t.__cacheKey];r.usedTimes--,0===r.usedTimes&&q(e),0===Object.keys(i).length&&R.delete(n)}r.remove(e)}(t),t.isVideoTexture&&C.delete(t)}function j(t){const n=t.target;n.removeEventListener("dispose",j),function(t){const n=t.texture,i=r.get(t),s=r.get(n);if(void 0!==s.__webglTexture&&(e.deleteTexture(s.__webglTexture),a.memory.textures--),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++)e.deleteFramebuffer(i.__webglFramebuffer[t]),i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer[t]);else{if(e.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&e.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer)for(let t=0;t<i.__webglColorRenderbuffer.length;t++)i.__webglColorRenderbuffer[t]&&e.deleteRenderbuffer(i.__webglColorRenderbuffer[t]);i.__webglDepthRenderbuffer&&e.deleteRenderbuffer(i.__webglDepthRenderbuffer)}if(t.isWebGLMultipleRenderTargets)for(let t=0,i=n.length;t<i;t++){const i=r.get(n[t]);i.__webglTexture&&(e.deleteTexture(i.__webglTexture),a.memory.textures--),r.remove(n[t])}r.remove(n),r.remove(t)}(n)}function q(t){const n=r.get(t);e.deleteTexture(n.__webglTexture);const i=t.source;delete R.get(i)[n.__cacheKey],a.memory.textures--}let X=0;function Y(e,t){const i=r.get(e);if(e.isVideoTexture&&function(e){const t=a.render.frame;C.get(e)!==t&&(C.set(e,t),e.update())}(e),!1===e.isRenderTargetTexture&&e.version>0&&i.__version!==e.version){const n=e.image;if(null===n)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==n.complete)return void te(i,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+t),n.bindTexture(3553,i.__webglTexture)}const Z={[u]:10497,[c]:33071,[h]:33648},J={[d]:9728,1004:9984,1005:9986,[p]:9729,1007:9985,[f]:9987};function Q(n,s,a){if(a?(e.texParameteri(n,10242,Z[s.wrapS]),e.texParameteri(n,10243,Z[s.wrapT]),32879!==n&&35866!==n||e.texParameteri(n,32882,Z[s.wrapR]),e.texParameteri(n,10240,J[s.magFilter]),e.texParameteri(n,10241,J[s.minFilter])):(e.texParameteri(n,10242,33071),e.texParameteri(n,10243,33071),32879!==n&&35866!==n||e.texParameteri(n,32882,33071),s.wrapS===c&&s.wrapT===c||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(n,10240,W(s.magFilter)),e.texParameteri(n,10241,W(s.minFilter)),s.minFilter!==d&&s.minFilter!==p&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===t.has("EXT_texture_filter_anisotropic")){const a=t.get("EXT_texture_filter_anisotropic");if(s.type===x&&!1===t.has("OES_texture_float_linear"))return;if(!1===o&&s.type===b&&!1===t.has("OES_texture_half_float_linear"))return;(s.anisotropy>1||r.get(s).__currentAnisotropy)&&(e.texParameterf(n,a.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(s.anisotropy,i.getMaxAnisotropy())),r.get(s).__currentAnisotropy=s.anisotropy)}}function ee(t,n){let r=!1;void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",V));const i=n.source;let s=R.get(i);void 0===s&&(s={},R.set(i,s));const o=function(e){const t=[];return t.push(e.wrapS),t.push(e.wrapT),t.push(e.magFilter),t.push(e.minFilter),t.push(e.anisotropy),t.push(e.internalFormat),t.push(e.format),t.push(e.type),t.push(e.generateMipmaps),t.push(e.premultiplyAlpha),t.push(e.flipY),t.push(e.unpackAlignment),t.push(e.encoding),t.join()}(n);if(o!==t.__cacheKey){void 0===s[o]&&(s[o]={texture:e.createTexture(),usedTimes:0},a.memory.textures++,r=!0),s[o].usedTimes++;const i=s[t.__cacheKey];void 0!==i&&(s[t.__cacheKey].usedTimes--,0===i.usedTimes&&q(n)),t.__cacheKey=o,t.__webglTexture=s[o].texture}return r}function te(t,r,i){let a=3553;r.isDataArrayTexture&&(a=35866),r.isData3DTexture&&(a=32879);const l=ee(t,r),u=r.source;if(n.activeTexture(33984+i),n.bindTexture(a,t.__webglTexture),u.version!==u.__currentVersion||!0===l){e.pixelStorei(37440,r.flipY),e.pixelStorei(37441,r.premultiplyAlpha),e.pixelStorei(3317,r.unpackAlignment),e.pixelStorei(37443,0);const t=function(e){return!o&&(e.wrapS!==c||e.wrapT!==c||e.minFilter!==d&&e.minFilter!==p)}(r)&&!1===O(r.image);let i=F(r.image,t,!1,k);i=oe(r,i);const h=O(i)||o,f=s.convert(r.format,r.encoding);let m,b=s.convert(r.type),S=B(r.internalFormat,f,b,r.encoding,r.isVideoTexture);Q(a,r,h);const I=r.mipmaps,E=o&&!0!==r.isVideoTexture,T=void 0===u.__currentVersion||!0===l,C=U(r,i,h);if(r.isDepthTexture)S=6402,o?S=r.type===x?36012:r.type===g?33190:r.type===v?35056:33189:r.type===x&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),r.format===w&&6402===S&&1012!==r.type&&r.type!==g&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=g,b=s.convert(r.type)),r.format===_&&6402===S&&(S=34041,r.type!==v&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=v,b=s.convert(r.type))),T&&(E?n.texStorage2D(3553,1,S,i.width,i.height):n.texImage2D(3553,0,S,i.width,i.height,0,f,b,null));else if(r.isDataTexture)if(I.length>0&&h){E&&T&&n.texStorage2D(3553,C,S,I[0].width,I[0].height);for(let e=0,t=I.length;e<t;e++)m=I[e],E?n.texSubImage2D(3553,e,0,0,m.width,m.height,f,b,m.data):n.texImage2D(3553,e,S,m.width,m.height,0,f,b,m.data);r.generateMipmaps=!1}else E?(T&&n.texStorage2D(3553,C,S,i.width,i.height),n.texSubImage2D(3553,0,0,0,i.width,i.height,f,b,i.data)):n.texImage2D(3553,0,S,i.width,i.height,0,f,b,i.data);else if(r.isCompressedTexture){E&&T&&n.texStorage2D(3553,C,S,I[0].width,I[0].height);for(let e=0,t=I.length;e<t;e++)m=I[e],r.format!==y?null!==f?E?n.compressedTexSubImage2D(3553,e,0,0,m.width,m.height,f,m.data):n.compressedTexImage2D(3553,e,S,m.width,m.height,0,m.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):E?n.texSubImage2D(3553,e,0,0,m.width,m.height,f,b,m.data):n.texImage2D(3553,e,S,m.width,m.height,0,f,b,m.data)}else if(r.isDataArrayTexture)E?(T&&n.texStorage3D(35866,C,S,i.width,i.height,i.depth),n.texSubImage3D(35866,0,0,0,0,i.width,i.height,i.depth,f,b,i.data)):n.texImage3D(35866,0,S,i.width,i.height,i.depth,0,f,b,i.data);else if(r.isData3DTexture)E?(T&&n.texStorage3D(32879,C,S,i.width,i.height,i.depth),n.texSubImage3D(32879,0,0,0,0,i.width,i.height,i.depth,f,b,i.data)):n.texImage3D(32879,0,S,i.width,i.height,i.depth,0,f,b,i.data);else if(r.isFramebufferTexture){if(T)if(E)n.texStorage2D(3553,C,S,i.width,i.height);else{let e=i.width,t=i.height;for(let r=0;r<C;r++)n.texImage2D(3553,r,S,e,t,0,f,b,null),e>>=1,t>>=1}}else if(I.length>0&&h){E&&T&&n.texStorage2D(3553,C,S,I[0].width,I[0].height);for(let e=0,t=I.length;e<t;e++)m=I[e],E?n.texSubImage2D(3553,e,0,0,f,b,m):n.texImage2D(3553,e,S,f,b,m);r.generateMipmaps=!1}else E?(T&&n.texStorage2D(3553,C,S,i.width,i.height),n.texSubImage2D(3553,0,0,0,f,b,i)):n.texImage2D(3553,0,S,f,b,i);P(r,h)&&z(a),u.__currentVersion=u.version,r.onUpdate&&r.onUpdate(r)}t.__version=r.version}function ne(t,i,a,o,l){const u=s.convert(a.format,a.encoding),c=s.convert(a.type),h=B(a.internalFormat,u,c,a.encoding);r.get(i).__hasExternalTextures||(32879===l||35866===l?n.texImage3D(l,0,h,i.width,i.height,i.depth,0,u,c,null):n.texImage2D(l,0,h,i.width,i.height,0,u,c,null)),n.bindFramebuffer(36160,t),ae(i)?E.framebufferTexture2DMultisampleEXT(36160,o,l,r.get(a).__webglTexture,0,se(i)):e.framebufferTexture2D(36160,o,l,r.get(a).__webglTexture,0),n.bindFramebuffer(36160,null)}function re(t,n,r){if(e.bindRenderbuffer(36161,t),n.depthBuffer&&!n.stencilBuffer){let i=33189;if(r||ae(n)){const t=n.depthTexture;t&&t.isDepthTexture&&(t.type===x?i=36012:t.type===g&&(i=33190));const r=se(n);ae(n)?E.renderbufferStorageMultisampleEXT(36161,r,i,n.width,n.height):e.renderbufferStorageMultisample(36161,r,i,n.width,n.height)}else e.renderbufferStorage(36161,i,n.width,n.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(n.depthBuffer&&n.stencilBuffer){const i=se(n);r&&!1===ae(n)?e.renderbufferStorageMultisample(36161,i,35056,n.width,n.height):ae(n)?E.renderbufferStorageMultisampleEXT(36161,i,35056,n.width,n.height):e.renderbufferStorage(36161,34041,n.width,n.height),e.framebufferRenderbuffer(36160,33306,36161,t)}else{const t=!0===n.isWebGLMultipleRenderTargets?n.texture:[n.texture];for(let i=0;i<t.length;i++){const a=t[i],o=s.convert(a.format,a.encoding),l=s.convert(a.type),u=B(a.internalFormat,o,l,a.encoding),c=se(n);r&&!1===ae(n)?e.renderbufferStorageMultisample(36161,c,u,n.width,n.height):ae(n)?E.renderbufferStorageMultisampleEXT(36161,c,u,n.width,n.height):e.renderbufferStorage(36161,u,n.width,n.height)}}e.bindRenderbuffer(36161,null)}function ie(t){const i=r.get(t),s=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!i.__autoAllocateDepthBuffer){if(s)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,i){if(i&&i.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,t),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),Y(i.depthTexture,0);const s=r.get(i.depthTexture).__webglTexture,a=se(i);if(i.depthTexture.format===w)ae(i)?E.framebufferTexture2DMultisampleEXT(36160,36096,3553,s,0,a):e.framebufferTexture2D(36160,36096,3553,s,0);else{if(i.depthTexture.format!==_)throw new Error("Unknown depthTexture format");ae(i)?E.framebufferTexture2DMultisampleEXT(36160,33306,3553,s,0,a):e.framebufferTexture2D(36160,33306,3553,s,0)}}(i.__webglFramebuffer,t)}else if(s){i.__webglDepthbuffer=[];for(let r=0;r<6;r++)n.bindFramebuffer(36160,i.__webglFramebuffer[r]),i.__webglDepthbuffer[r]=e.createRenderbuffer(),re(i.__webglDepthbuffer[r],t,!1)}else n.bindFramebuffer(36160,i.__webglFramebuffer),i.__webglDepthbuffer=e.createRenderbuffer(),re(i.__webglDepthbuffer,t,!1);n.bindFramebuffer(36160,null)}function se(e){return Math.min(I,e.samples)}function ae(e){const n=r.get(e);return o&&e.samples>0&&!0===t.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function oe(e,n){const r=e.encoding,i=e.format,s=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||e.format===$||r!==A&&(r===N?!1===o?!0===t.has("EXT_sRGB")&&i===y?(e.format=$,e.minFilter=p,e.generateMipmaps=!1):n=le.sRGBToLinear(n):i===y&&s===m||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",r)),n}this.allocateTextureUnit=function(){const e=X;return e>=l&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+l),X+=1,e},this.resetTextureUnits=function(){X=0},this.setTexture2D=Y,this.setTexture2DArray=function(e,t){const i=r.get(e);e.version>0&&i.__version!==e.version?te(i,e,t):(n.activeTexture(33984+t),n.bindTexture(35866,i.__webglTexture))},this.setTexture3D=function(e,t){const i=r.get(e);e.version>0&&i.__version!==e.version?te(i,e,t):(n.activeTexture(33984+t),n.bindTexture(32879,i.__webglTexture))},this.setTextureCube=function(t,i){const a=r.get(t);t.version>0&&a.__version!==t.version?function(t,r,i){if(6!==r.image.length)return;const a=ee(t,r),l=r.source;if(n.activeTexture(33984+i),n.bindTexture(34067,t.__webglTexture),l.version!==l.__currentVersion||!0===a){e.pixelStorei(37440,r.flipY),e.pixelStorei(37441,r.premultiplyAlpha),e.pixelStorei(3317,r.unpackAlignment),e.pixelStorei(37443,0);const t=r.isCompressedTexture||r.image[0].isCompressedTexture,i=r.image[0]&&r.image[0].isDataTexture,u=[];for(let e=0;e<6;e++)u[e]=t||i?i?r.image[e].image:r.image[e]:F(r.image[e],!1,!0,S),u[e]=oe(r,u[e]);const c=u[0],h=O(c)||o,d=s.convert(r.format,r.encoding),p=s.convert(r.type),f=B(r.internalFormat,d,p,r.encoding),m=o&&!0!==r.isVideoTexture,g=void 0===l.__currentVersion||!0===a;let x,b=U(r,c,h);if(Q(34067,r,h),t){m&&g&&n.texStorage2D(34067,b,f,c.width,c.height);for(let e=0;e<6;e++){x=u[e].mipmaps;for(let t=0;t<x.length;t++){const i=x[t];r.format!==y?null!==d?m?n.compressedTexSubImage2D(34069+e,t,0,0,i.width,i.height,d,i.data):n.compressedTexImage2D(34069+e,t,f,i.width,i.height,0,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):m?n.texSubImage2D(34069+e,t,0,0,i.width,i.height,d,p,i.data):n.texImage2D(34069+e,t,f,i.width,i.height,0,d,p,i.data)}}}else{x=r.mipmaps,m&&g&&(x.length>0&&b++,n.texStorage2D(34067,b,f,u[0].width,u[0].height));for(let e=0;e<6;e++)if(i){m?n.texSubImage2D(34069+e,0,0,0,u[e].width,u[e].height,d,p,u[e].data):n.texImage2D(34069+e,0,f,u[e].width,u[e].height,0,d,p,u[e].data);for(let t=0;t<x.length;t++){const r=x[t].image[e].image;m?n.texSubImage2D(34069+e,t+1,0,0,r.width,r.height,d,p,r.data):n.texImage2D(34069+e,t+1,f,r.width,r.height,0,d,p,r.data)}}else{m?n.texSubImage2D(34069+e,0,0,0,d,p,u[e]):n.texImage2D(34069+e,0,f,d,p,u[e]);for(let t=0;t<x.length;t++){const r=x[t];m?n.texSubImage2D(34069+e,t+1,0,0,d,p,r.image[e]):n.texImage2D(34069+e,t+1,f,d,p,r.image[e])}}}P(r,h)&&z(34067),l.__currentVersion=l.version,r.onUpdate&&r.onUpdate(r)}t.__version=r.version}(a,t,i):(n.activeTexture(33984+i),n.bindTexture(34067,a.__webglTexture))},this.rebindTextures=function(e,t,n){const i=r.get(e);void 0!==t&&ne(i.__webglFramebuffer,e,e.texture,36064,3553),void 0!==n&&ie(e)},this.setupRenderTarget=function(t){const l=t.texture,u=r.get(t),c=r.get(l);t.addEventListener("dispose",j),!0!==t.isWebGLMultipleRenderTargets&&(void 0===c.__webglTexture&&(c.__webglTexture=e.createTexture()),c.__version=l.version,a.memory.textures++);const h=!0===t.isWebGLCubeRenderTarget,d=!0===t.isWebGLMultipleRenderTargets,p=O(t)||o;if(h){u.__webglFramebuffer=[];for(let t=0;t<6;t++)u.__webglFramebuffer[t]=e.createFramebuffer()}else{if(u.__webglFramebuffer=e.createFramebuffer(),d)if(i.drawBuffers){const n=t.texture;for(let t=0,i=n.length;t<i;t++){const i=r.get(n[t]);void 0===i.__webglTexture&&(i.__webglTexture=e.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&t.samples>0&&!1===ae(t)){const r=d?l:[l];u.__webglMultisampledFramebuffer=e.createFramebuffer(),u.__webglColorRenderbuffer=[],n.bindFramebuffer(36160,u.__webglMultisampledFramebuffer);for(let n=0;n<r.length;n++){const i=r[n];u.__webglColorRenderbuffer[n]=e.createRenderbuffer(),e.bindRenderbuffer(36161,u.__webglColorRenderbuffer[n]);const a=s.convert(i.format,i.encoding),o=s.convert(i.type),l=B(i.internalFormat,a,o,i.encoding),c=se(t);e.renderbufferStorageMultisample(36161,c,l,t.width,t.height),e.framebufferRenderbuffer(36160,36064+n,36161,u.__webglColorRenderbuffer[n])}e.bindRenderbuffer(36161,null),t.depthBuffer&&(u.__webglDepthRenderbuffer=e.createRenderbuffer(),re(u.__webglDepthRenderbuffer,t,!0)),n.bindFramebuffer(36160,null)}}if(h){n.bindTexture(34067,c.__webglTexture),Q(34067,l,p);for(let e=0;e<6;e++)ne(u.__webglFramebuffer[e],t,l,36064,34069+e);P(l,p)&&z(34067),n.unbindTexture()}else if(d){const e=t.texture;for(let i=0,s=e.length;i<s;i++){const s=e[i],a=r.get(s);n.bindTexture(3553,a.__webglTexture),Q(3553,s,p),ne(u.__webglFramebuffer,t,s,36064+i,3553),P(s,p)&&z(3553)}n.unbindTexture()}else{let e=3553;(t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(o?e=t.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),n.bindTexture(e,c.__webglTexture),Q(e,l,p),ne(u.__webglFramebuffer,t,l,36064,e),P(l,p)&&z(e),n.unbindTexture()}t.depthBuffer&&ie(t)},this.updateRenderTargetMipmap=function(e){const t=O(e)||o,i=!0===e.isWebGLMultipleRenderTargets?e.texture:[e.texture];for(let s=0,a=i.length;s<a;s++){const a=i[s];if(P(a,t)){const t=e.isWebGLCubeRenderTarget?34067:3553,i=r.get(a).__webglTexture;n.bindTexture(t,i),z(t),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(o&&t.samples>0&&!1===ae(t)){const i=t.isWebGLMultipleRenderTargets?t.texture:[t.texture],s=t.width,a=t.height;let o=16384;const l=[],u=t.stencilBuffer?33306:36096,c=r.get(t),h=!0===t.isWebGLMultipleRenderTargets;if(h)for(let t=0;t<i.length;t++)n.bindFramebuffer(36160,c.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064+t,36161,null),n.bindFramebuffer(36160,c.__webglFramebuffer),e.framebufferTexture2D(36009,36064+t,3553,null,0);n.bindFramebuffer(36008,c.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,c.__webglFramebuffer);for(let n=0;n<i.length;n++){l.push(36064+n),t.depthBuffer&&l.push(u);const d=void 0!==c.__ignoreDepthValues&&c.__ignoreDepthValues;if(!1===d&&(t.depthBuffer&&(o|=256),t.stencilBuffer&&(o|=1024)),h&&e.framebufferRenderbuffer(36008,36064,36161,c.__webglColorRenderbuffer[n]),!0===d&&(e.invalidateFramebuffer(36008,[u]),e.invalidateFramebuffer(36009,[u])),h){const t=r.get(i[n]).__webglTexture;e.framebufferTexture2D(36009,36064,3553,t,0)}e.blitFramebuffer(0,0,s,a,0,0,s,a,o,9728),T&&e.invalidateFramebuffer(36008,l)}if(n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,null),h)for(let t=0;t<i.length;t++){n.bindFramebuffer(36160,c.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064+t,36161,c.__webglColorRenderbuffer[t]);const s=r.get(i[t]).__webglTexture;n.bindFramebuffer(36160,c.__webglFramebuffer),e.framebufferTexture2D(36009,36064+t,3553,s,0)}n.bindFramebuffer(36009,c.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=ie,this.setupFrameBufferTexture=ne,this.useMultisampledRTT=ae}function ns(e,t,n){const r=n.isWebGL2;return{convert:function(n,i=null){let s;if(n===m)return 5121;if(1017===n)return 32819;if(1018===n)return 32820;if(1010===n)return 5120;if(1011===n)return 5122;if(1012===n)return 5123;if(1013===n)return 5124;if(n===g)return 5125;if(n===x)return 5126;if(n===b)return r?5131:(s=t.get("OES_texture_half_float"),null!==s?s.HALF_FLOAT_OES:null);if(1021===n)return 6406;if(n===y)return 6408;if(1024===n)return 6409;if(1025===n)return 6410;if(n===w)return 6402;if(n===_)return 34041;if(1028===n)return 6403;if(1022===n)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(n===$)return s=t.get("EXT_sRGB"),null!==s?s.SRGB_ALPHA_EXT:null;if(1029===n)return 36244;if(1030===n)return 33319;if(1031===n)return 33320;if(1033===n)return 36249;if(n===S||n===k||n===I||n===E)if(i===N){if(s=t.get("WEBGL_compressed_texture_s3tc_srgb"),null===s)return null;if(n===S)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===k)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===I)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===E)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(s=t.get("WEBGL_compressed_texture_s3tc"),null===s)return null;if(n===S)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===k)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===I)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===E)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===n||35841===n||35842===n||35843===n){if(s=t.get("WEBGL_compressed_texture_pvrtc"),null===s)return null;if(35840===n)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===n)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===n)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===n)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===n)return s=t.get("WEBGL_compressed_texture_etc1"),null!==s?s.COMPRESSED_RGB_ETC1_WEBGL:null;if(37492===n||37496===n){if(s=t.get("WEBGL_compressed_texture_etc"),null===s)return null;if(37492===n)return i===N?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(37496===n)return i===N?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}if(37808===n||37809===n||37810===n||37811===n||37812===n||37813===n||37814===n||37815===n||37816===n||37817===n||37818===n||37819===n||37820===n||37821===n){if(s=t.get("WEBGL_compressed_texture_astc"),null===s)return null;if(37808===n)return i===N?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===n)return i===N?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===n)return i===N?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===n)return i===N?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===n)return i===N?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===n)return i===N?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===n)return i===N?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===n)return i===N?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===n)return i===N?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===n)return i===N?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===n)return i===N?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===n)return i===N?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===n)return i===N?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===n)return i===N?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}if(36492===n){if(s=t.get("EXT_texture_compression_bptc"),null===s)return null;if(36492===n)return i===N?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT}return n===v?r?34042:(s=t.get("WEBGL_depth_texture"),null!==s?s.UNSIGNED_INT_24_8_WEBGL:null):void 0!==e[n]?e[n]:null}}}class rs extends wn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class is extends yt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const ss={type:"move"};class as{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new is,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new is,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new be,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new be),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new is,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new be,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new be),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let r=null,i=null,s=null;const a=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(l&&e.hand){s=!0;for(const r of e.hand.values()){const e=t.getJointPose(r,n);if(void 0===l.joints[r.jointName]){const e=new is;e.matrixAutoUpdate=!1,e.visible=!1,l.joints[r.jointName]=e,l.add(e)}const i=l.joints[r.jointName];null!==e&&(i.matrix.fromArray(e.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),i.jointRadius=e.radius),i.visible=null!==e}const r=l.joints["index-finger-tip"],i=l.joints["thumb-tip"],a=r.position.distanceTo(i.position),o=.02,u=.005;l.inputState.pinching&&a>o+u?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&a<=o-u&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&(i=t.getPose(e.gripSpace,n),null!==i&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1));null!==a&&(r=t.getPose(e.targetRaySpace,n),null===r&&null!==i&&(r=i),null!==r&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(ss)))}return null!==a&&(a.visible=null!==r),null!==o&&(o.visible=null!==i),null!==l&&(l.visible=null!==s),this}}class os extends de{constructor(e,t,n,r,i,s,a,o,l,u){if((u=void 0!==u?u:w)!==w&&u!==_)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&u===w&&(n=g),void 0===n&&u===_&&(n=v),super(null,r,i,s,a,o,u,n,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=void 0!==a?a:d,this.minFilter=void 0!==o?o:d,this.flipY=!1,this.generateMipmaps=!1}}class ls extends O{constructor(e,t){super();const n=this;let r=null,i=1,s=null,a="local-floor",o=null,l=null,u=null,c=null,h=null,d=null;const p=t.getContextAttributes();let f=null,x=null;const b=[],S=[],k=new wn;k.layers.enable(1),k.viewport=new pe;const I=new wn;I.layers.enable(2),I.viewport=new pe;const E=[k,I],T=new rs;T.layers.enable(1),T.layers.enable(2);let C=null,M=null;function A(e){const t=S.indexOf(e.inputSource);if(-1===t)return;const n=b[t];void 0!==n&&n.dispatchEvent({type:e.type,data:e.inputSource})}function N(){r.removeEventListener("select",A),r.removeEventListener("selectstart",A),r.removeEventListener("selectend",A),r.removeEventListener("squeeze",A),r.removeEventListener("squeezestart",A),r.removeEventListener("squeezeend",A),r.removeEventListener("end",N),r.removeEventListener("inputsourceschange",R);for(let e=0;e<b.length;e++){const t=S[e];null!==t&&(S[e]=null,b[e].disconnect(t))}C=null,M=null,e.setRenderTarget(f),h=null,c=null,u=null,r=null,x=null,O.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function R(e){for(let t=0;t<e.removed.length;t++){const n=e.removed[t],r=S.indexOf(n);r>=0&&(S[r]=null,b[r].dispatchEvent({type:"disconnected",data:n}))}for(let t=0;t<e.added.length;t++){const n=e.added[t];let r=S.indexOf(n);if(-1===r){for(let e=0;e<b.length;e++){if(e>=S.length){S.push(n),r=e;break}if(null===S[e]){S[e]=n,r=e;break}}if(-1===r)break}const i=b[r];i&&i.dispatchEvent({type:"connected",data:n})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=b[e];return void 0===t&&(t=new as,b[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=b[e];return void 0===t&&(t=new as,b[e]=t),t.getGripSpace()},this.getHand=function(e){let t=b[e];return void 0===t&&(t=new as,b[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){i=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){a=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o||s},this.setReferenceSpace=function(e){o=e},this.getBaseLayer=function(){return null!==c?c:h},this.getBinding=function(){return u},this.getFrame=function(){return d},this.getSession=function(){return r},this.setSession=async function(l){if(r=l,null!==r){if(f=e.getRenderTarget(),r.addEventListener("select",A),r.addEventListener("selectstart",A),r.addEventListener("selectend",A),r.addEventListener("squeeze",A),r.addEventListener("squeezestart",A),r.addEventListener("squeezeend",A),r.addEventListener("end",N),r.addEventListener("inputsourceschange",R),!0!==p.xrCompatible&&await t.makeXRCompatible(),void 0===r.renderState.layers||!1===e.capabilities.isWebGL2){const n={antialias:void 0!==r.renderState.layers||p.antialias,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:i};h=new XRWebGLLayer(r,t,n),r.updateRenderState({baseLayer:h}),x=new fe(h.framebufferWidth,h.framebufferHeight,{format:y,type:m,encoding:e.outputEncoding})}else{let n=null,s=null,a=null;p.depth&&(a=p.stencil?35056:33190,n=p.stencil?_:w,s=p.stencil?v:g);const o={colorFormat:32856,depthFormat:a,scaleFactor:i};u=new XRWebGLBinding(r,t),c=u.createProjectionLayer(o),r.updateRenderState({layers:[c]}),x=new fe(c.textureWidth,c.textureHeight,{format:y,type:m,depthTexture:new os(c.textureWidth,c.textureHeight,s,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:p.stencil,encoding:e.outputEncoding,samples:p.antialias?4:0}),e.properties.get(x).__ignoreDepthValues=c.ignoreDepthValues}x.isXRRenderTarget=!0,this.setFoveation(1),o=null,s=await r.requestReferenceSpace(a),O.setContext(r),O.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const D=new be,L=new be;function F(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===r)return;T.near=I.near=k.near=e.near,T.far=I.far=k.far=e.far,C===T.near&&M===T.far||(r.updateRenderState({depthNear:T.near,depthFar:T.far}),C=T.near,M=T.far);const t=e.parent,n=T.cameras;F(T,t);for(let e=0;e<n.length;e++)F(n[e],t);T.matrixWorld.decompose(T.position,T.quaternion,T.scale),e.position.copy(T.position),e.quaternion.copy(T.quaternion),e.scale.copy(T.scale),e.matrix.copy(T.matrix),e.matrixWorld.copy(T.matrixWorld);const i=e.children;for(let e=0,t=i.length;e<t;e++)i[e].updateMatrixWorld(!0);2===n.length?function(e,t,n){D.setFromMatrixPosition(t.matrixWorld),L.setFromMatrixPosition(n.matrixWorld);const r=D.distanceTo(L),i=t.projectionMatrix.elements,s=n.projectionMatrix.elements,a=i[14]/(i[10]-1),o=i[14]/(i[10]+1),l=(i[9]+1)/i[5],u=(i[9]-1)/i[5],c=(i[8]-1)/i[0],h=(s[8]+1)/s[0],d=a*c,p=a*h,f=r/(-c+h),m=f*-c;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(m),e.translateZ(f),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();const g=a+f,x=o+f,b=d-m,v=p+(r-m),y=l*o/x*g,w=u*o/x*g;e.projectionMatrix.makePerspective(b,v,y,w,g,x)}(T,k,I):T.projectionMatrix.copy(k.projectionMatrix)},this.getCamera=function(){return T},this.getFoveation=function(){return null!==c?c.fixedFoveation:null!==h?h.fixedFoveation:void 0},this.setFoveation=function(e){null!==c&&(c.fixedFoveation=e),null!==h&&void 0!==h.fixedFoveation&&(h.fixedFoveation=e)};let $=null;const O=new Dn;O.setAnimationLoop((function(t,n){if(l=n.getViewerPose(o||s),d=n,null!==l){const t=l.views;null!==h&&(e.setRenderTargetFramebuffer(x,h.framebuffer),e.setRenderTarget(x));let n=!1;t.length!==T.cameras.length&&(T.cameras.length=0,n=!0);for(let r=0;r<t.length;r++){const i=t[r];let s=null;if(null!==h)s=h.getViewport(i);else{const t=u.getViewSubImage(c,i);s=t.viewport,0===r&&(e.setRenderTargetTextures(x,t.colorTexture,c.ignoreDepthValues?void 0:t.depthStencilTexture),e.setRenderTarget(x))}let a=E[r];void 0===a&&(a=new wn,a.layers.enable(r),a.viewport=new pe,E[r]=a),a.matrix.fromArray(i.transform.matrix),a.projectionMatrix.fromArray(i.projectionMatrix),a.viewport.set(s.x,s.y,s.width,s.height),0===r&&T.matrix.copy(a.matrix),!0===n&&T.cameras.push(a)}}for(let e=0;e<b.length;e++){const t=S[e],r=b[e];null!==t&&void 0!==r&&r.update(t,n,o||s)}$&&$(t,n),d=null})),this.setAnimationLoop=function(e){$=e},this.dispose=function(){}}}function us(e,t){function n(n,r){n.opacity.value=r.opacity,r.color&&n.diffuse.value.copy(r.color),r.emissive&&n.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(n.map.value=r.map),r.alphaMap&&(n.alphaMap.value=r.alphaMap),r.bumpMap&&(n.bumpMap.value=r.bumpMap,n.bumpScale.value=r.bumpScale,1===r.side&&(n.bumpScale.value*=-1)),r.displacementMap&&(n.displacementMap.value=r.displacementMap,n.displacementScale.value=r.displacementScale,n.displacementBias.value=r.displacementBias),r.emissiveMap&&(n.emissiveMap.value=r.emissiveMap),r.normalMap&&(n.normalMap.value=r.normalMap,n.normalScale.value.copy(r.normalScale),1===r.side&&n.normalScale.value.negate()),r.specularMap&&(n.specularMap.value=r.specularMap),r.alphaTest>0&&(n.alphaTest.value=r.alphaTest);const i=t.get(r).envMap;if(i&&(n.envMap.value=i,n.flipEnvMap.value=i.isCubeTexture&&!1===i.isRenderTargetTexture?-1:1,n.reflectivity.value=r.reflectivity,n.ior.value=r.ior,n.refractionRatio.value=r.refractionRatio),r.lightMap){n.lightMap.value=r.lightMap;const t=!0!==e.physicallyCorrectLights?Math.PI:1;n.lightMapIntensity.value=r.lightMapIntensity*t}let s,a;r.aoMap&&(n.aoMap.value=r.aoMap,n.aoMapIntensity.value=r.aoMapIntensity),r.map?s=r.map:r.specularMap?s=r.specularMap:r.displacementMap?s=r.displacementMap:r.normalMap?s=r.normalMap:r.bumpMap?s=r.bumpMap:r.roughnessMap?s=r.roughnessMap:r.metalnessMap?s=r.metalnessMap:r.alphaMap?s=r.alphaMap:r.emissiveMap?s=r.emissiveMap:r.clearcoatMap?s=r.clearcoatMap:r.clearcoatNormalMap?s=r.clearcoatNormalMap:r.clearcoatRoughnessMap?s=r.clearcoatRoughnessMap:r.iridescenceMap?s=r.iridescenceMap:r.iridescenceThicknessMap?s=r.iridescenceThicknessMap:r.specularIntensityMap?s=r.specularIntensityMap:r.specularColorMap?s=r.specularColorMap:r.transmissionMap?s=r.transmissionMap:r.thicknessMap?s=r.thicknessMap:r.sheenColorMap?s=r.sheenColorMap:r.sheenRoughnessMap&&(s=r.sheenRoughnessMap),void 0!==s&&(s.isWebGLRenderTarget&&(s=s.texture),!0===s.matrixAutoUpdate&&s.updateMatrix(),n.uvTransform.value.copy(s.matrix)),r.aoMap?a=r.aoMap:r.lightMap&&(a=r.lightMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),n.uv2Transform.value.copy(a.matrix))}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,r,i,s,a){r.isMeshBasicMaterial||r.isMeshLambertMaterial?n(e,r):r.isMeshToonMaterial?(n(e,r),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap)}(e,r)):r.isMeshPhongMaterial?(n(e,r),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4)}(e,r)):r.isMeshStandardMaterial?(n(e,r),function(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap),t.get(n).envMap&&(e.envMapIntensity.value=n.envMapIntensity)}(e,r),r.isMeshPhysicalMaterial&&function(e,t,n){e.ior.value=t.ior,t.sheen>0&&(e.sheenColor.value.copy(t.sheenColor).multiplyScalar(t.sheen),e.sheenRoughness.value=t.sheenRoughness,t.sheenColorMap&&(e.sheenColorMap.value=t.sheenColorMap),t.sheenRoughnessMap&&(e.sheenRoughnessMap.value=t.sheenRoughnessMap)),t.clearcoat>0&&(e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap),t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,1===t.side&&e.clearcoatNormalScale.value.negate())),t.iridescence>0&&(e.iridescence.value=t.iridescence,e.iridescenceIOR.value=t.iridescenceIOR,e.iridescenceThicknessMinimum.value=t.iridescenceThicknessRange[0],e.iridescenceThicknessMaximum.value=t.iridescenceThicknessRange[1],t.iridescenceMap&&(e.iridescenceMap.value=t.iridescenceMap),t.iridescenceThicknessMap&&(e.iridescenceThicknessMap.value=t.iridescenceThicknessMap)),t.transmission>0&&(e.transmission.value=t.transmission,e.transmissionSamplerMap.value=n.texture,e.transmissionSamplerSize.value.set(n.width,n.height),t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap),e.thickness.value=t.thickness,t.thicknessMap&&(e.thicknessMap.value=t.thicknessMap),e.attenuationDistance.value=t.attenuationDistance,e.attenuationColor.value.copy(t.attenuationColor)),e.specularIntensity.value=t.specularIntensity,e.specularColor.value.copy(t.specularColor),t.specularIntensityMap&&(e.specularIntensityMap.value=t.specularIntensityMap),t.specularColorMap&&(e.specularColorMap.value=t.specularColorMap)}(e,r,a)):r.isMeshMatcapMaterial?(n(e,r),function(e,t){t.matcap&&(e.matcap.value=t.matcap)}(e,r)):r.isMeshDepthMaterial?n(e,r):r.isMeshDistanceMaterial?(n(e,r),function(e,t){e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(e,r)):r.isMeshNormalMaterial?n(e,r):r.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}(e,r),r.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,r)):r.isPointsMaterial?function(e,t,n,r){let i;e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*n,e.scale.value=.5*r,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.alphaTest>0&&(e.alphaTest.value=t.alphaTest),t.map?i=t.map:t.alphaMap&&(i=t.alphaMap),void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix))}(e,r,i,s):r.isSpriteMaterial?function(e,t){let n;e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.alphaTest>0&&(e.alphaTest.value=t.alphaTest),t.map?n=t.map:t.alphaMap&&(n=t.alphaMap),void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),e.uvTransform.value.copy(n.matrix))}(e,r):r.isShadowMaterial?(e.color.value.copy(r.color),e.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function cs(e={}){this.isWebGLRenderer=!0;const t=void 0!==e.canvas?e.canvas:function(){const e=K("canvas");return e.style.display="block",e}(),n=void 0!==e.context?e.context:null,r=void 0===e.depth||e.depth,i=void 0===e.stencil||e.stencil,s=void 0!==e.antialias&&e.antialias,a=void 0===e.premultipliedAlpha||e.premultipliedAlpha,o=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,l=void 0!==e.powerPreference?e.powerPreference:"default",u=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;let c;c=null!==n?n.getContextAttributes().alpha:void 0!==e.alpha&&e.alpha;let h=null,d=null;const p=[],g=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=A,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const v=this;let w=!1,_=0,S=0,k=null,I=-1,E=null;const T=new pe,C=new pe;let M=null,N=t.width,R=t.height,D=1,L=null,F=null;const $=new pe(0,0,N,R),O=new pe(0,0,N,R);let P=!1;const z=new Rn;let B=!1,U=!1,W=null;const V=new Ke,G=new j,q=new be,X={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Y(){return null===k?D:1}let Z,J,Q,ee,te,ne,re,ie,se,ae,oe,le,ue,ce,he,de,me,ge,xe,ve,ye,we,_e,Se=n;function ke(e,n){for(let r=0;r<e.length;r++){const i=e[r],s=t.getContext(i,n);if(null!==s)return s}return null}try{const e={alpha:!0,depth:r,stencil:i,antialias:s,premultipliedAlpha:a,preserveDrawingBuffer:o,powerPreference:l,failIfMajorPerformanceCaveat:u};if("setAttribute"in t&&t.setAttribute("data-engine","three.js r142"),t.addEventListener("webglcontextlost",Te,!1),t.addEventListener("webglcontextrestored",Ce,!1),t.addEventListener("webglcontextcreationerror",Me,!1),null===Se){const t=["webgl2","webgl","experimental-webgl"];if(!0===v.isWebGL1Renderer&&t.shift(),Se=ke(t,e),null===Se)throw ke(t)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===Se.getShaderPrecisionFormat&&(Se.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function Ie(){Z=new sr(Se),J=new Wn(Se,Z,e),Z.init(J),we=new ns(Se,Z,J),Q=new es(Se,Z,J),ee=new lr,te=new Bi,ne=new ts(Se,Z,Q,te,J,we,ee),re=new Gn(v),ie=new ir(v),se=new Ln(Se,J),_e=new Bn(Se,Z,se,J),ae=new ar(Se,se,ee,_e),oe=new pr(Se,ae,se,ee),xe=new dr(Se,J,ne),de=new Vn(te),le=new zi(v,re,ie,Z,J,_e,de),ue=new us(v,te),ce=new Gi,he=new Yi(Z,J),ge=new zn(v,re,Q,oe,c,a),me=new Qi(v,oe,J),ve=new Un(Se,Z,ee,J),ye=new or(Se,Z,ee,J),ee.programs=le.programs,v.capabilities=J,v.extensions=Z,v.properties=te,v.renderLists=ce,v.shadowMap=me,v.state=Q,v.info=ee}Ie();const Ee=new ls(v,Se);function Te(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),w=!0}function Ce(){console.log("THREE.WebGLRenderer: Context Restored."),w=!1;const e=ee.autoReset,t=me.enabled,n=me.autoUpdate,r=me.needsUpdate,i=me.type;Ie(),ee.autoReset=e,me.enabled=t,me.autoUpdate=n,me.needsUpdate=r,me.type=i}function Me(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)}function Ae(e){const t=e.target;t.removeEventListener("dispose",Ae),function(e){(function(e){const t=te.get(e).programs;void 0!==t&&(t.forEach((function(e){le.releaseProgram(e)})),e.isShaderMaterial&&le.releaseShaderCache(e))})(e),te.remove(e)}(t)}this.xr=Ee,this.getContext=function(){return Se},this.getContextAttributes=function(){return Se.getContextAttributes()},this.forceContextLoss=function(){const e=Z.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=Z.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return D},this.setPixelRatio=function(e){void 0!==e&&(D=e,this.setSize(N,R,!1))},this.getSize=function(e){return e.set(N,R)},this.setSize=function(e,n,r){Ee.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(N=e,R=n,t.width=Math.floor(e*D),t.height=Math.floor(n*D),!1!==r&&(t.style.width=e+"px",t.style.height=n+"px"),this.setViewport(0,0,e,n))},this.getDrawingBufferSize=function(e){return e.set(N*D,R*D).floor()},this.setDrawingBufferSize=function(e,n,r){N=e,R=n,D=r,t.width=Math.floor(e*r),t.height=Math.floor(n*r),this.setViewport(0,0,e,n)},this.getCurrentViewport=function(e){return e.copy(T)},this.getViewport=function(e){return e.copy($)},this.setViewport=function(e,t,n,r){e.isVector4?$.set(e.x,e.y,e.z,e.w):$.set(e,t,n,r),Q.viewport(T.copy($).multiplyScalar(D).floor())},this.getScissor=function(e){return e.copy(O)},this.setScissor=function(e,t,n,r){e.isVector4?O.set(e.x,e.y,e.z,e.w):O.set(e,t,n,r),Q.scissor(C.copy(O).multiplyScalar(D).floor())},this.getScissorTest=function(){return P},this.setScissorTest=function(e){Q.setScissorTest(P=e)},this.setOpaqueSort=function(e){L=e},this.setTransparentSort=function(e){F=e},this.getClearColor=function(e){return e.copy(ge.getClearColor())},this.setClearColor=function(){ge.setClearColor.apply(ge,arguments)},this.getClearAlpha=function(){return ge.getClearAlpha()},this.setClearAlpha=function(){ge.setClearAlpha.apply(ge,arguments)},this.clear=function(e=!0,t=!0,n=!0){let r=0;e&&(r|=16384),t&&(r|=256),n&&(r|=1024),Se.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Te,!1),t.removeEventListener("webglcontextrestored",Ce,!1),t.removeEventListener("webglcontextcreationerror",Me,!1),ce.dispose(),he.dispose(),te.dispose(),re.dispose(),ie.dispose(),oe.dispose(),_e.dispose(),le.dispose(),Ee.dispose(),Ee.removeEventListener("sessionstart",Re),Ee.removeEventListener("sessionend",De),W&&(W.dispose(),W=null),Le.stop()},this.renderBufferDirect=function(e,t,n,r,i,s){null===t&&(t=X);const a=i.isMesh&&i.matrixWorld.determinant()<0,o=function(e,t,n,r,i){!0!==t.isScene&&(t=X),ne.resetTextureUnits();const s=t.fog,a=r.isMeshStandardMaterial?t.environment:null,o=null===k?v.outputEncoding:!0===k.isXRRenderTarget?k.texture.encoding:A,l=(r.isMeshStandardMaterial?ie:re).get(r.envMap||a),u=!0===r.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,c=!!r.normalMap&&!!n.attributes.tangent,h=!!n.morphAttributes.position,p=!!n.morphAttributes.normal,f=!!n.morphAttributes.color,m=r.toneMapped?v.toneMapping:0,g=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,x=void 0!==g?g.length:0,b=te.get(r),y=d.state.lights;if(!0===B&&(!0===U||e!==E)){const t=e===E&&r.id===I;de.setState(r,e,t)}let w=!1;r.version===b.__version?b.needsLights&&b.lightsStateVersion!==y.state.version||b.outputEncoding!==o||i.isInstancedMesh&&!1===b.instancing?w=!0:i.isInstancedMesh||!0!==b.instancing?i.isSkinnedMesh&&!1===b.skinning?w=!0:i.isSkinnedMesh||!0!==b.skinning?b.envMap!==l||!0===r.fog&&b.fog!==s?w=!0:void 0===b.numClippingPlanes||b.numClippingPlanes===de.numPlanes&&b.numIntersection===de.numIntersection?(b.vertexAlphas!==u||b.vertexTangents!==c||b.morphTargets!==h||b.morphNormals!==p||b.morphColors!==f||b.toneMapping!==m||!0===J.isWebGL2&&b.morphTargetsCount!==x)&&(w=!0):w=!0:w=!0:w=!0:(w=!0,b.__version=r.version);let _=b.currentProgram;!0===w&&(_=ze(r,t,i));let S=!1,T=!1,C=!1;const M=_.getUniforms(),N=b.uniforms;if(Q.useProgram(_.program)&&(S=!0,T=!0,C=!0),r.id!==I&&(I=r.id,T=!0),S||E!==e){if(M.setValue(Se,"projectionMatrix",e.projectionMatrix),J.logarithmicDepthBuffer&&M.setValue(Se,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),E!==e&&(E=e,T=!0,C=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){const t=M.map.cameraPosition;void 0!==t&&t.setValue(Se,q.setFromMatrixPosition(e.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&M.setValue(Se,"isOrthographic",!0===e.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||i.isSkinnedMesh)&&M.setValue(Se,"viewMatrix",e.matrixWorldInverse)}if(i.isSkinnedMesh){M.setOptional(Se,i,"bindMatrix"),M.setOptional(Se,i,"bindMatrixInverse");const e=i.skeleton;e&&(J.floatVertexTextures?(null===e.boneTexture&&e.computeBoneTexture(),M.setValue(Se,"boneTexture",e.boneTexture,ne),M.setValue(Se,"boneTextureSize",e.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const L=n.morphAttributes;var F,$;return(void 0!==L.position||void 0!==L.normal||void 0!==L.color&&!0===J.isWebGL2)&&xe.update(i,n,r,_),(T||b.receiveShadow!==i.receiveShadow)&&(b.receiveShadow=i.receiveShadow,M.setValue(Se,"receiveShadow",i.receiveShadow)),T&&(M.setValue(Se,"toneMappingExposure",v.toneMappingExposure),b.needsLights&&($=C,(F=N).ambientLightColor.needsUpdate=$,F.lightProbe.needsUpdate=$,F.directionalLights.needsUpdate=$,F.directionalLightShadows.needsUpdate=$,F.pointLights.needsUpdate=$,F.pointLightShadows.needsUpdate=$,F.spotLights.needsUpdate=$,F.spotLightShadows.needsUpdate=$,F.rectAreaLights.needsUpdate=$,F.hemisphereLights.needsUpdate=$),s&&!0===r.fog&&ue.refreshFogUniforms(N,s),ue.refreshMaterialUniforms(N,r,D,R,W),xi.upload(Se,b.uniformsList,N,ne)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(xi.upload(Se,b.uniformsList,N,ne),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&M.setValue(Se,"center",i.center),M.setValue(Se,"modelViewMatrix",i.modelViewMatrix),M.setValue(Se,"normalMatrix",i.normalMatrix),M.setValue(Se,"modelMatrix",i.matrixWorld),_}(e,t,n,r,i);Q.setMaterial(r,a);let l=n.index;const u=n.attributes.position;if(null===l){if(void 0===u||0===u.count)return}else if(0===l.count)return;let c,h=1;!0===r.wireframe&&(l=ae.getWireframeAttribute(n),h=2),_e.setup(i,r,o,n,l);let p=ve;null!==l&&(c=se.get(l),p=ye,p.setIndex(c));const f=null!==l?l.count:u.count,m=n.drawRange.start*h,g=n.drawRange.count*h,x=null!==s?s.start*h:0,b=null!==s?s.count*h:1/0,y=Math.max(m,x),w=Math.min(f,m+g,x+b)-1,_=Math.max(0,w-y+1);if(0!==_){if(i.isMesh)!0===r.wireframe?(Q.setLineWidth(r.wireframeLinewidth*Y()),p.setMode(1)):p.setMode(4);else if(i.isLine){let e=r.linewidth;void 0===e&&(e=1),Q.setLineWidth(e*Y()),i.isLineSegments?p.setMode(1):i.isLineLoop?p.setMode(2):p.setMode(3)}else i.isPoints?p.setMode(0):i.isSprite&&p.setMode(4);if(i.isInstancedMesh)p.renderInstances(y,_,i.count);else if(n.isInstancedBufferGeometry){const e=Math.min(n.instanceCount,n._maxInstanceCount);p.renderInstances(y,_,e)}else p.render(y,_)}},this.compile=function(e,t){d=he.get(e),d.init(),g.push(d),e.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(d.pushLight(e),e.castShadow&&d.pushShadow(e))})),d.setupLights(v.physicallyCorrectLights),e.traverse((function(t){const n=t.material;if(n)if(Array.isArray(n))for(let r=0;r<n.length;r++)ze(n[r],e,t);else ze(n,e,t)})),g.pop(),d=null};let Ne=null;function Re(){Le.stop()}function De(){Le.start()}const Le=new Dn;function Fe(e,t,n,r){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)n=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)d.pushLight(e),e.castShadow&&d.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||z.intersectsSprite(e)){r&&q.setFromMatrixPosition(e.matrixWorld).applyMatrix4(V);const t=oe.update(e),i=e.material;i.visible&&h.push(e,t,i,n,q.z,null)}}else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==ee.render.frame&&(e.skeleton.update(),e.skeleton.frame=ee.render.frame),!e.frustumCulled||z.intersectsObject(e))){r&&q.setFromMatrixPosition(e.matrixWorld).applyMatrix4(V);const t=oe.update(e),i=e.material;if(Array.isArray(i)){const r=t.groups;for(let s=0,a=r.length;s<a;s++){const a=r[s],o=i[a.materialIndex];o&&o.visible&&h.push(e,t,o,n,q.z,a)}}else i.visible&&h.push(e,t,i,n,q.z,null)}const i=e.children;for(let e=0,s=i.length;e<s;e++)Fe(i[e],t,n,r)}function $e(e,t,n,r){const i=e.opaque,a=e.transmissive,o=e.transparent;d.setupLightsView(n),a.length>0&&function(e,t,n){const r=J.isWebGL2;null===W&&(W=new fe(1,1,{generateMipmaps:!0,type:Z.has("EXT_color_buffer_half_float")?b:m,minFilter:f,samples:r&&!0===s?4:0})),v.getDrawingBufferSize(G),r?W.setSize(G.x,G.y):W.setSize(H(G.x),H(G.y));const i=v.getRenderTarget();v.setRenderTarget(W),v.clear();const a=v.toneMapping;v.toneMapping=0,Oe(e,t,n),v.toneMapping=a,ne.updateMultisampleRenderTarget(W),ne.updateRenderTargetMipmap(W),v.setRenderTarget(i)}(i,t,n),r&&Q.viewport(T.copy(r)),i.length>0&&Oe(i,t,n),a.length>0&&Oe(a,t,n),o.length>0&&Oe(o,t,n),Q.buffers.depth.setTest(!0),Q.buffers.depth.setMask(!0),Q.buffers.color.setMask(!0),Q.setPolygonOffset(!1)}function Oe(e,t,n){const r=!0===t.isScene?t.overrideMaterial:null;for(let i=0,s=e.length;i<s;i++){const s=e[i],a=s.object,o=s.geometry,l=null===r?s.material:r,u=s.group;a.layers.test(n.layers)&&Pe(a,t,n,o,l,u)}}function Pe(e,t,n,r,i,s){e.onBeforeRender(v,t,n,r,i,s),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),i.onBeforeRender(v,t,n,r,e,s),!0===i.transparent&&2===i.side?(i.side=1,i.needsUpdate=!0,v.renderBufferDirect(n,t,r,i,e,s),i.side=0,i.needsUpdate=!0,v.renderBufferDirect(n,t,r,i,e,s),i.side=2):v.renderBufferDirect(n,t,r,i,e,s),e.onAfterRender(v,t,n,r,i,s)}function ze(e,t,n){!0!==t.isScene&&(t=X);const r=te.get(e),i=d.state.lights,s=d.state.shadowsArray,a=i.state.version,o=le.getParameters(e,i.state,s,t,n),l=le.getProgramCacheKey(o);let u=r.programs;r.environment=e.isMeshStandardMaterial?t.environment:null,r.fog=t.fog,r.envMap=(e.isMeshStandardMaterial?ie:re).get(e.envMap||r.environment),void 0===u&&(e.addEventListener("dispose",Ae),u=new Map,r.programs=u);let c=u.get(l);if(void 0!==c){if(r.currentProgram===c&&r.lightsStateVersion===a)return Be(e,o),c}else o.uniforms=le.getUniforms(e),e.onBuild(n,o,v),e.onBeforeCompile(o,v),c=le.acquireProgram(o,l),u.set(l,c),r.uniforms=o.uniforms;const h=r.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(h.clippingPlanes=de.uniform),Be(e,o),r.needsLights=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),r.lightsStateVersion=a,r.needsLights&&(h.ambientLightColor.value=i.state.ambient,h.lightProbe.value=i.state.probe,h.directionalLights.value=i.state.directional,h.directionalLightShadows.value=i.state.directionalShadow,h.spotLights.value=i.state.spot,h.spotLightShadows.value=i.state.spotShadow,h.rectAreaLights.value=i.state.rectArea,h.ltc_1.value=i.state.rectAreaLTC1,h.ltc_2.value=i.state.rectAreaLTC2,h.pointLights.value=i.state.point,h.pointLightShadows.value=i.state.pointShadow,h.hemisphereLights.value=i.state.hemi,h.directionalShadowMap.value=i.state.directionalShadowMap,h.directionalShadowMatrix.value=i.state.directionalShadowMatrix,h.spotShadowMap.value=i.state.spotShadowMap,h.spotShadowMatrix.value=i.state.spotShadowMatrix,h.pointShadowMap.value=i.state.pointShadowMap,h.pointShadowMatrix.value=i.state.pointShadowMatrix);const p=c.getUniforms(),f=xi.seqWithValue(p.seq,h);return r.currentProgram=c,r.uniformsList=f,c}function Be(e,t){const n=te.get(e);n.outputEncoding=t.outputEncoding,n.instancing=t.instancing,n.skinning=t.skinning,n.morphTargets=t.morphTargets,n.morphNormals=t.morphNormals,n.morphColors=t.morphColors,n.morphTargetsCount=t.morphTargetsCount,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas,n.vertexTangents=t.vertexTangents,n.toneMapping=t.toneMapping}Le.setAnimationLoop((function(e){Ne&&Ne(e)})),"undefined"!=typeof self&&Le.setContext(self),this.setAnimationLoop=function(e){Ne=e,Ee.setAnimationLoop(e),null===e?Le.stop():Le.start()},Ee.addEventListener("sessionstart",Re),Ee.addEventListener("sessionend",De),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===w)return;!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===Ee.enabled&&!0===Ee.isPresenting&&(!0===Ee.cameraAutoUpdate&&Ee.updateCamera(t),t=Ee.getCamera()),!0===e.isScene&&e.onBeforeRender(v,e,t,k),d=he.get(e,g.length),d.init(),g.push(d),V.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),z.setFromProjectionMatrix(V),U=this.localClippingEnabled,B=de.init(this.clippingPlanes,U,t),h=ce.get(e,p.length),h.init(),p.push(h),Fe(e,t,0,v.sortObjects),h.finish(),!0===v.sortObjects&&h.sort(L,F),!0===B&&de.beginShadows();const n=d.state.shadowsArray;if(me.render(n,e,t),!0===B&&de.endShadows(),!0===this.info.autoReset&&this.info.reset(),ge.render(h,e),d.setupLights(v.physicallyCorrectLights),t.isArrayCamera){const n=t.cameras;for(let t=0,r=n.length;t<r;t++){const r=n[t];$e(h,e,r,r.viewport)}}else $e(h,e,t);null!==k&&(ne.updateMultisampleRenderTarget(k),ne.updateRenderTargetMipmap(k)),!0===e.isScene&&e.onAfterRender(v,e,t),_e.resetDefaultState(),I=-1,E=null,g.pop(),d=g.length>0?g[g.length-1]:null,p.pop(),h=p.length>0?p[p.length-1]:null},this.getActiveCubeFace=function(){return _},this.getActiveMipmapLevel=function(){return S},this.getRenderTarget=function(){return k},this.setRenderTargetTextures=function(e,t,n){te.get(e.texture).__webglTexture=t,te.get(e.depthTexture).__webglTexture=n;const r=te.get(e);r.__hasExternalTextures=!0,r.__hasExternalTextures&&(r.__autoAllocateDepthBuffer=void 0===n,r.__autoAllocateDepthBuffer||!0===Z.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),r.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(e,t){const n=te.get(e);n.__webglFramebuffer=t,n.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e,t=0,n=0){k=e,_=t,S=n;let r=!0;if(e){const t=te.get(e);void 0!==t.__useDefaultFramebuffer?(Q.bindFramebuffer(36160,null),r=!1):void 0===t.__webglFramebuffer?ne.setupRenderTarget(e):t.__hasExternalTextures&&ne.rebindTextures(e,te.get(e.texture).__webglTexture,te.get(e.depthTexture).__webglTexture)}let i=null,s=!1,a=!1;if(e){const n=e.texture;(n.isData3DTexture||n.isDataArrayTexture)&&(a=!0);const r=te.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(i=r[t],s=!0):i=J.isWebGL2&&e.samples>0&&!1===ne.useMultisampledRTT(e)?te.get(e).__webglMultisampledFramebuffer:r,T.copy(e.viewport),C.copy(e.scissor),M=e.scissorTest}else T.copy($).multiplyScalar(D).floor(),C.copy(O).multiplyScalar(D).floor(),M=P;if(Q.bindFramebuffer(36160,i)&&J.drawBuffers&&r&&Q.drawBuffers(e,i),Q.viewport(T),Q.scissor(C),Q.setScissorTest(M),s){const r=te.get(e.texture);Se.framebufferTexture2D(36160,36064,34069+t,r.__webglTexture,n)}else if(a){const r=te.get(e.texture),i=t||0;Se.framebufferTextureLayer(36160,36064,r.__webglTexture,n||0,i)}I=-1},this.readRenderTargetPixels=function(e,t,n,r,i,s,a){if(!e||!e.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=te.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==a&&(o=o[a]),o){Q.bindFramebuffer(36160,o);try{const a=e.texture,o=a.format,l=a.type;if(o!==y&&we.convert(o)!==Se.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const u=l===b&&(Z.has("EXT_color_buffer_half_float")||J.isWebGL2&&Z.has("EXT_color_buffer_float"));if(!(l===m||we.convert(l)===Se.getParameter(35738)||l===x&&(J.isWebGL2||Z.has("OES_texture_float")||Z.has("WEBGL_color_buffer_float"))||u))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");t>=0&&t<=e.width-r&&n>=0&&n<=e.height-i&&Se.readPixels(t,n,r,i,we.convert(o),we.convert(l),s)}finally{const e=null!==k?te.get(k).__webglFramebuffer:null;Q.bindFramebuffer(36160,e)}}},this.copyFramebufferToTexture=function(e,t,n=0){const r=Math.pow(2,-n),i=Math.floor(t.image.width*r),s=Math.floor(t.image.height*r);ne.setTexture2D(t,0),Se.copyTexSubImage2D(3553,n,0,0,e.x,e.y,i,s),Q.unbindTexture()},this.copyTextureToTexture=function(e,t,n,r=0){const i=t.image.width,s=t.image.height,a=we.convert(n.format),o=we.convert(n.type);ne.setTexture2D(n,0),Se.pixelStorei(37440,n.flipY),Se.pixelStorei(37441,n.premultiplyAlpha),Se.pixelStorei(3317,n.unpackAlignment),t.isDataTexture?Se.texSubImage2D(3553,r,e.x,e.y,i,s,a,o,t.image.data):t.isCompressedTexture?Se.compressedTexSubImage2D(3553,r,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,a,t.mipmaps[0].data):Se.texSubImage2D(3553,r,e.x,e.y,a,o,t.image),0===r&&n.generateMipmaps&&Se.generateMipmap(3553),Q.unbindTexture()},this.copyTextureToTexture3D=function(e,t,n,r,i=0){if(v.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const s=e.max.x-e.min.x+1,a=e.max.y-e.min.y+1,o=e.max.z-e.min.z+1,l=we.convert(r.format),u=we.convert(r.type);let c;if(r.isData3DTexture)ne.setTexture3D(r,0),c=32879;else{if(!r.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");ne.setTexture2DArray(r,0),c=35866}Se.pixelStorei(37440,r.flipY),Se.pixelStorei(37441,r.premultiplyAlpha),Se.pixelStorei(3317,r.unpackAlignment);const h=Se.getParameter(3314),d=Se.getParameter(32878),p=Se.getParameter(3316),f=Se.getParameter(3315),m=Se.getParameter(32877),g=n.isCompressedTexture?n.mipmaps[0]:n.image;Se.pixelStorei(3314,g.width),Se.pixelStorei(32878,g.height),Se.pixelStorei(3316,e.min.x),Se.pixelStorei(3315,e.min.y),Se.pixelStorei(32877,e.min.z),n.isDataTexture||n.isData3DTexture?Se.texSubImage3D(c,i,t.x,t.y,t.z,s,a,o,l,u,g.data):n.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Se.compressedTexSubImage3D(c,i,t.x,t.y,t.z,s,a,o,l,g.data)):Se.texSubImage3D(c,i,t.x,t.y,t.z,s,a,o,l,u,g),Se.pixelStorei(3314,h),Se.pixelStorei(32878,d),Se.pixelStorei(3316,p),Se.pixelStorei(3315,f),Se.pixelStorei(32877,m),0===i&&r.generateMipmaps&&Se.generateMipmap(c),Q.unbindTexture()},this.initTexture=function(e){e.isCubeTexture?ne.setTextureCube(e,0):e.isData3DTexture?ne.setTexture3D(e,0):e.isDataArrayTexture?ne.setTexture2DArray(e,0):ne.setTexture2D(e,0),Q.unbindTexture()},this.resetState=function(){_=0,S=0,k=null,Q.reset(),_e.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}(class extends cs{}).prototype.isWebGL1Renderer=!0;class hs extends yt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}class ds extends de{constructor(e=null,t=1,n=1,r,i,s,a,o,l=1003,u=1003,c,h){super(null,s,a,o,l,u,r,i,c,h),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ps extends Dt{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new ae(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const fs=new be,ms=new be,gs=new Ke,xs=new Xe,bs=new Be;class vs extends yt{constructor(e=new Xt,t=new ps){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(null===e.index){const t=e.attributes.position,n=[0];for(let e=1,r=t.count;e<r;e++)fs.fromBufferAttribute(t,e-1),ms.fromBufferAttribute(t,e),n[e]=n[e-1],n[e]+=fs.distanceTo(ms);e.setAttribute("lineDistance",new Bt(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,i=e.params.Line.threshold,s=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),bs.copy(n.boundingSphere),bs.applyMatrix4(r),bs.radius+=i,!1===e.ray.intersectsSphere(bs))return;gs.copy(r).invert(),xs.copy(e.ray).applyMatrix4(gs);const a=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=new be,u=new be,c=new be,h=new be,d=this.isLineSegments?2:1,p=n.index,f=n.attributes.position;if(null!==p)for(let n=Math.max(0,s.start),r=Math.min(p.count,s.start+s.count)-1;n<r;n+=d){const r=p.getX(n),i=p.getX(n+1);if(l.fromBufferAttribute(f,r),u.fromBufferAttribute(f,i),xs.distanceSqToSegment(l,u,h,c)>o)continue;h.applyMatrix4(this.matrixWorld);const s=e.ray.origin.distanceTo(h);s<e.near||s>e.far||t.push({distance:s,point:c.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}else for(let n=Math.max(0,s.start),r=Math.min(f.count,s.start+s.count)-1;n<r;n+=d){if(l.fromBufferAttribute(f,n),u.fromBufferAttribute(f,n+1),xs.distanceSqToSegment(l,u,h,c)>o)continue;h.applyMatrix4(this.matrixWorld);const r=e.ray.origin.distanceTo(h);r<e.near||r>e.far||t.push({distance:r,point:c.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}}const ys=new be,ws=new be;class _s extends vs{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(null===e.index){const t=e.attributes.position,n=[];for(let e=0,r=t.count;e<r;e+=2)ys.fromBufferAttribute(t,e),ws.fromBufferAttribute(t,e+1),n[e]=0===e?0:n[e-1],n[e+1]=n[e]+ys.distanceTo(ws);e.setAttribute("lineDistance",new Bt(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Ss extends Xt{constructor(e=1,t=1,n=1,r=8,i=1,s=!1,a=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:i,openEnded:s,thetaStart:a,thetaLength:o};const l=this;r=Math.floor(r),i=Math.floor(i);const u=[],c=[],h=[],d=[];let p=0;const f=[],m=n/2;let g=0;function x(n){const i=p,s=new j,f=new be;let x=0;const b=!0===n?e:t,v=!0===n?1:-1;for(let e=1;e<=r;e++)c.push(0,m*v,0),h.push(0,v,0),d.push(.5,.5),p++;const y=p;for(let e=0;e<=r;e++){const t=e/r*o+a,n=Math.cos(t),i=Math.sin(t);f.x=b*i,f.y=m*v,f.z=b*n,c.push(f.x,f.y,f.z),h.push(0,v,0),s.x=.5*n+.5,s.y=.5*i*v+.5,d.push(s.x,s.y),p++}for(let e=0;e<r;e++){const t=i+e,r=y+e;!0===n?u.push(r,r+1,t):u.push(r+1,r,t),x+=3}l.addGroup(g,x,!0===n?1:2),g+=x}!function(){const s=new be,x=new be;let b=0;const v=(t-e)/n;for(let l=0;l<=i;l++){const u=[],g=l/i,b=g*(t-e)+e;for(let e=0;e<=r;e++){const t=e/r,i=t*o+a,l=Math.sin(i),f=Math.cos(i);x.x=b*l,x.y=-g*n+m,x.z=b*f,c.push(x.x,x.y,x.z),s.set(l,v,f).normalize(),h.push(s.x,s.y,s.z),d.push(t,1-g),u.push(p++)}f.push(u)}for(let e=0;e<r;e++)for(let t=0;t<i;t++){const n=f[t][e],r=f[t+1][e],i=f[t+1][e+1],s=f[t][e+1];u.push(n,r,s),u.push(r,i,s),b+=6}l.addGroup(g,b,0),g+=b}(),!1===s&&(e>0&&x(!0),t>0&&x(!1)),this.setIndex(u),this.setAttribute("position",new Bt(c,3)),this.setAttribute("normal",new Bt(h,3)),this.setAttribute("uv",new Bt(d,2))}static fromJSON(e){return new Ss(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class ks extends Ss{constructor(e=1,t=1,n=8,r=1,i=!1,s=0,a=2*Math.PI){super(0,e,t,n,r,i,s,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:s,thetaLength:a}}static fromJSON(e){return new ks(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Is extends Dt{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new j(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}const Es={arraySlice:function(e,t,n){return Es.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==n?n:e.length)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){const t=e.length,n=new Array(t);for(let e=0;e!==t;++e)n[e]=e;return n.sort((function(t,n){return e[t]-e[n]})),n},sortedArray:function(e,t,n){const r=e.length,i=new e.constructor(r);for(let s=0,a=0;a!==r;++s){const r=n[s]*t;for(let n=0;n!==t;++n)i[a++]=e[r+n]}return i},flattenJSON:function(e,t,n,r){let i=1,s=e[0];for(;void 0!==s&&void 0===s[r];)s=e[i++];if(void 0===s)return;let a=s[r];if(void 0!==a)if(Array.isArray(a))do{a=s[r],void 0!==a&&(t.push(s.time),n.push.apply(n,a)),s=e[i++]}while(void 0!==s);else if(void 0!==a.toArray)do{a=s[r],void 0!==a&&(t.push(s.time),a.toArray(n,n.length)),s=e[i++]}while(void 0!==s);else do{a=s[r],void 0!==a&&(t.push(s.time),n.push(a)),s=e[i++]}while(void 0!==s)},subclip:function(e,t,n,r,i=30){const s=e.clone();s.name=t;const a=[];for(let e=0;e<s.tracks.length;++e){const t=s.tracks[e],o=t.getValueSize(),l=[],u=[];for(let e=0;e<t.times.length;++e){const s=t.times[e]*i;if(!(s<n||s>=r)){l.push(t.times[e]);for(let n=0;n<o;++n)u.push(t.values[e*o+n])}}0!==l.length&&(t.times=Es.convertArray(l,t.times.constructor),t.values=Es.convertArray(u,t.values.constructor),a.push(t))}s.tracks=a;let o=1/0;for(let e=0;e<s.tracks.length;++e)o>s.tracks[e].times[0]&&(o=s.tracks[e].times[0]);for(let e=0;e<s.tracks.length;++e)s.tracks[e].shift(-1*o);return s.resetDuration(),s},makeClipAdditive:function(e,t=0,n=e,r=30){r<=0&&(r=30);const i=n.tracks.length,s=t/r;for(let t=0;t<i;++t){const r=n.tracks[t],i=r.ValueTypeName;if("bool"===i||"string"===i)continue;const a=e.tracks.find((function(e){return e.name===r.name&&e.ValueTypeName===i}));if(void 0===a)continue;let o=0;const l=r.getValueSize();r.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=l/3);let u=0;const c=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=c/3);const h=r.times.length-1;let d;if(s<=r.times[0]){const e=o,t=l-o;d=Es.arraySlice(r.values,e,t)}else if(s>=r.times[h]){const e=h*l+o,t=e+l-o;d=Es.arraySlice(r.values,e,t)}else{const e=r.createInterpolant(),t=o,n=l-o;e.evaluate(s),d=Es.arraySlice(e.resultBuffer,t,n)}"quaternion"===i&&(new xe).fromArray(d).normalize().conjugate().toArray(d);const p=a.times.length;for(let e=0;e<p;++e){const t=e*c+u;if("quaternion"===i)xe.multiplyQuaternionsFlat(a.values,t,d,0,a.values,t);else{const e=c-2*u;for(let n=0;n<e;++n)a.values[t+n]-=d[n]}}}return e.blendMode=2501,e}};class Ts{constructor(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,r=t[n],i=t[n-1];e:{t:{let s;n:{r:if(!(e<r)){for(let s=n+2;;){if(void 0===r){if(e<i)break r;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===s)break;if(i=r,r=t[++n],e<r)break t}s=t.length;break n}if(e>=i)break e;{const a=t[1];e<a&&(n=2,i=a);for(let s=n-2;;){if(void 0===i)return this._cachedIndex=0,this.copySampleValue_(0);if(n===s)break;if(r=i,i=t[--n-1],e>=i)break t}s=n,n=0}}for(;n<s;){const r=n+s>>>1;e<t[r]?s=r:n=r+1}if(r=t[n],i=t[n-1],void 0===i)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===r)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,i,r)}return this.interpolate_(n,i,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=e*r;for(let e=0;e!==r;++e)t[e]=n[i+e];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Cs extends Ts{constructor(e,t,n,r){super(e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(e,t,n){const r=this.parameterPositions;let i=e-2,s=e+1,a=r[i],o=r[s];if(void 0===a)switch(this.getSettings_().endingStart){case 2401:i=e,a=2*t-n;break;case 2402:i=r.length-2,a=t+r[i]-r[i+1];break;default:i=e,a=n}if(void 0===o)switch(this.getSettings_().endingEnd){case 2401:s=e,o=2*n-t;break;case 2402:s=1,o=n+r[1]-r[0];break;default:s=e-1,o=t}const l=.5*(n-t),u=this.valueSize;this._weightPrev=l/(t-a),this._weightNext=l/(o-n),this._offsetPrev=i*u,this._offsetNext=s*u}interpolate_(e,t,n,r){const i=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=e*a,l=o-a,u=this._offsetPrev,c=this._offsetNext,h=this._weightPrev,d=this._weightNext,p=(n-t)/(r-t),f=p*p,m=f*p,g=-h*m+2*h*f-h*p,x=(1+h)*m+(-1.5-2*h)*f+(-.5+h)*p+1,b=(-1-d)*m+(1.5+d)*f+.5*p,v=d*m-d*f;for(let e=0;e!==a;++e)i[e]=g*s[u+e]+x*s[l+e]+b*s[o+e]+v*s[c+e];return i}}class Ms extends Ts{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const i=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=e*a,l=o-a,u=(n-t)/(r-t),c=1-u;for(let e=0;e!==a;++e)i[e]=s[l+e]*c+s[o+e]*u;return i}}class As extends Ts{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class Ns{constructor(e,t,n,r){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Es.convertArray(t,this.TimeBufferType),this.values=Es.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Es.convertArray(e.times,Array),values:Es.convertArray(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(n.interpolation=t)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new As(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Ms(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Cs(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case T:t=this.InterpolantFactoryMethodDiscrete;break;case C:t=this.InterpolantFactoryMethodLinear;break;case M:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(t);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return T;case this.InterpolantFactoryMethodLinear:return C;case this.InterpolantFactoryMethodSmooth:return M}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]+=e}return this}scale(e){if(1!==e){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]*=e}return this}trim(e,t){const n=this.times,r=n.length;let i=0,s=r-1;for(;i!==r&&n[i]<e;)++i;for(;-1!==s&&n[s]>t;)--s;if(++s,0!==i||s!==r){i>=s&&(s=Math.max(s,1),i=s-1);const e=this.getValueSize();this.times=Es.arraySlice(n,i,s),this.values=Es.arraySlice(this.values,i*e,s*e)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,r=this.values,i=n.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let s=null;for(let t=0;t!==i;t++){const r=n[t];if("number"==typeof r&&isNaN(r)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,r),e=!1;break}if(null!==s&&s>r){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,r,s),e=!1;break}s=r}if(void 0!==r&&Es.isTypedArray(r))for(let t=0,n=r.length;t!==n;++t){const n=r[t];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,n),e=!1;break}}return e}optimize(){const e=Es.arraySlice(this.times),t=Es.arraySlice(this.values),n=this.getValueSize(),r=this.getInterpolation()===M,i=e.length-1;let s=1;for(let a=1;a<i;++a){let i=!1;const o=e[a];if(o!==e[a+1]&&(1!==a||o!==e[0]))if(r)i=!0;else{const e=a*n,r=e-n,s=e+n;for(let a=0;a!==n;++a){const n=t[e+a];if(n!==t[r+a]||n!==t[s+a]){i=!0;break}}}if(i){if(a!==s){e[s]=e[a];const r=a*n,i=s*n;for(let e=0;e!==n;++e)t[i+e]=t[r+e]}++s}}if(i>0){e[s]=e[i];for(let e=i*n,r=s*n,a=0;a!==n;++a)t[r+a]=t[e+a];++s}return s!==e.length?(this.times=Es.arraySlice(e,0,s),this.values=Es.arraySlice(t,0,s*n)):(this.times=e,this.values=t),this}clone(){const e=Es.arraySlice(this.times,0),t=Es.arraySlice(this.values,0),n=new(0,this.constructor)(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}Ns.prototype.TimeBufferType=Float32Array,Ns.prototype.ValueBufferType=Float32Array,Ns.prototype.DefaultInterpolation=C;class Rs extends Ns{}Rs.prototype.ValueTypeName="bool",Rs.prototype.ValueBufferType=Array,Rs.prototype.DefaultInterpolation=T,Rs.prototype.InterpolantFactoryMethodLinear=void 0,Rs.prototype.InterpolantFactoryMethodSmooth=void 0;(class extends Ns{}).prototype.ValueTypeName="color";(class extends Ns{}).prototype.ValueTypeName="number";class Ds extends Ts{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const i=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=(n-t)/(r-t);let l=e*a;for(let e=l+a;l!==e;l+=4)xe.slerpFlat(i,0,s,l-a,s,l,o);return i}}class Ls extends Ns{InterpolantFactoryMethodLinear(e){return new Ds(this.times,this.values,this.getValueSize(),e)}}Ls.prototype.ValueTypeName="quaternion",Ls.prototype.DefaultInterpolation=C,Ls.prototype.InterpolantFactoryMethodSmooth=void 0;class Fs extends Ns{}Fs.prototype.ValueTypeName="string",Fs.prototype.ValueBufferType=Array,Fs.prototype.DefaultInterpolation=T,Fs.prototype.InterpolantFactoryMethodLinear=void 0,Fs.prototype.InterpolantFactoryMethodSmooth=void 0;(class extends Ns{}).prototype.ValueTypeName="vector";new class{constructor(e,t,n){const r=this;let i,s=!1,a=0,o=0;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){o++,!1===s&&void 0!==r.onStart&&r.onStart(e,a,o),s=!0},this.itemEnd=function(e){a++,void 0!==r.onProgress&&r.onProgress(e,a,o),a===o&&(s=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)},this.resolveURL=function(e){return i?i(e):e},this.setURLModifier=function(e){return i=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){const t=l.indexOf(e);return-1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,n=l.length;t<n;t+=2){const n=l[t],r=l[t+1];if(n.global&&(n.lastIndex=0),n.test(e))return r}return null}}};const $s=new RegExp("[\\[\\]\\.:\\/]","g"),Os="[^\\[\\]\\.:\\/]",Ps="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",zs=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",Os)+/(WCOD+)?/.source.replace("WCOD",Ps)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Os)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Os)+"$"),Bs=["material","materials","bones"];class Us{constructor(e,t,n){this.path=t,this.parsedPath=n||Us.parseTrackName(t),this.node=Us.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Us.Composite(e,t,n):new Us(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace($s,"")}static parseTrackName(e){const t=zs.exec(e);if(null===t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){const e=n.nodeName.substring(r+1);-1!==Bs.indexOf(e)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=e)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(void 0!==n)return n}if(e.children){const n=function(e){for(let r=0;r<e.length;r++){const i=e[r];if(i.name===t||i.uuid===t)return i;const s=n(i.children);if(s)return s}return null},r=n(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)e[t++]=n[r]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,r=t.propertyName;let i=t.propertyIndex;if(e||(e=Us.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let r=t.objectIndex;switch(n){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===r){r=t;break}break;default:if(void 0===e[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[n]}if(void 0!==r){if(void 0===e[r])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[r]}}const s=e[r];if(void 0===s){const n=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+r+" but it wasn't found.",e)}let a=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?a=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(a=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===r){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==e.morphTargetDictionary[i]&&(i=e.morphTargetDictionary[i])}o=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=i}else void 0!==s.fromArray&&void 0!==s.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(o=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=r;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Us.Composite=class{constructor(e,t,n){const r=n||Us.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,i=n.length;r!==i;++r)n[r].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}},Us.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Us.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Us.prototype.GetterByBindingType=[Us.prototype._getValue_direct,Us.prototype._getValue_array,Us.prototype._getValue_arrayElement,Us.prototype._getValue_toArray],Us.prototype.SetterByBindingTypeAndVersioning=[[Us.prototype._setValue_direct,Us.prototype._setValue_direct_setNeedsUpdate,Us.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Us.prototype._setValue_array,Us.prototype._setValue_array_setNeedsUpdate,Us.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Us.prototype._setValue_arrayElement,Us.prototype._setValue_arrayElement_setNeedsUpdate,Us.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Us.prototype._setValue_fromArray,Us.prototype._setValue_fromArray_setNeedsUpdate,Us.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Ws{constructor(e,t,n=0,r=1/0){this.ray=new Xe(e,t),this.near=n,this.far=r,this.camera=null,this.layers=new at,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return Gs(e,this,n,t),n.sort(Vs),n}intersectObjects(e,t=!0,n=[]){for(let r=0,i=e.length;r<i;r++)Gs(e[r],this,n,t);return n.sort(Vs),n}}function Vs(e,t){return e.distance-t.distance}function Gs(e,t,n,r){if(e.layers.test(t.layers)&&e.raycast(t,n),!0===r){const r=e.children;for(let e=0,i=r.length;e<i;e++)Gs(r[e],t,n,!0)}}class Hs{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){const e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(W(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class js extends _s{constructor(e=10,t=10,n=4473924,r=8947848){n=new ae(n),r=new ae(r);const i=t/2,s=e/t,a=e/2,o=[],l=[];for(let e=0,u=0,c=-a;e<=t;e++,c+=s){o.push(-a,0,c,a,0,c),o.push(c,0,-a,c,0,a);const t=e===i?n:r;t.toArray(l,u),u+=3,t.toArray(l,u),u+=3,t.toArray(l,u),u+=3,t.toArray(l,u),u+=3}const u=new Xt;u.setAttribute("position",new Bt(o,3)),u.setAttribute("color",new Bt(l,3)),super(u,new ps({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}class qs extends _s{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=new Xt;n.setAttribute("position",new Bt(t,3)),n.setAttribute("color",new Bt([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3)),super(n,new ps({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}setColors(e,t,n){const r=new ae,i=this.geometry.attributes.color.array;return r.set(e),r.toArray(i,0),r.toArray(i,3),r.set(t),r.toArray(i,6),r.toArray(i,9),r.set(n),r.toArray(i,12),r.toArray(i,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}const{floatView:Xs,uint32View:Ks,baseTable:Ys,shiftTable:Zs,mantissaTable:Js,exponentTable:Qs,offsetTable:ea}=ta();function ta(){const e=new ArrayBuffer(4),t=new Float32Array(e),n=new Uint32Array(e),r=new Uint32Array(512),i=new Uint32Array(512);for(let e=0;e<256;++e){const t=e-127;t<-27?(r[e]=0,r[256|e]=32768,i[e]=24,i[256|e]=24):t<-14?(r[e]=1024>>-t-14,r[256|e]=1024>>-t-14|32768,i[e]=-t-1,i[256|e]=-t-1):t<=15?(r[e]=t+15<<10,r[256|e]=t+15<<10|32768,i[e]=13,i[256|e]=13):t<128?(r[e]=31744,r[256|e]=64512,i[e]=24,i[256|e]=24):(r[e]=31744,r[256|e]=64512,i[e]=13,i[256|e]=13)}const s=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let e=1;e<1024;++e){let t=e<<13,n=0;for(;0==(8388608&t);)t<<=1,n-=8388608;t&=-8388609,n+=947912704,s[e]=t|n}for(let e=1024;e<2048;++e)s[e]=939524096+(e-1024<<13);for(let e=1;e<31;++e)a[e]=e<<23;a[31]=1199570944,a[32]=2147483648;for(let e=33;e<63;++e)a[e]=2147483648+(e-32<<23);a[63]=3347054592;for(let e=1;e<64;++e)32!==e&&(o[e]=1024);return{floatView:t,uint32View:n,baseTable:r,shiftTable:i,mantissaTable:s,exponentTable:a,offsetTable:o}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"142"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="142");const na={type:"change"},ra={type:"start"},ia={type:"end"};class sa extends O{constructor(e,t){super(),void 0===t&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),t===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new be,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:0,MIDDLE:1,RIGHT:2},this.touches={ONE:0,TWO:2},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(e){e.addEventListener("keydown",V),this._domElementKeyEvents=e},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(na),n.update(),i=r.NONE},this.update=function(){const t=new be,h=(new xe).setFromUnitVectors(e.up,new be(0,1,0)),d=h.clone().invert(),p=new be,f=new xe,m=2*Math.PI;return function(){const e=n.object.position;t.copy(e).sub(n.target),t.applyQuaternion(h),a.setFromVector3(t),n.autoRotate&&i===r.NONE&&S(2*Math.PI/60/60*n.autoRotateSpeed),n.enableDamping?(a.theta+=o.theta*n.dampingFactor,a.phi+=o.phi*n.dampingFactor):(a.theta+=o.theta,a.phi+=o.phi);let g=n.minAzimuthAngle,x=n.maxAzimuthAngle;return isFinite(g)&&isFinite(x)&&(g<-Math.PI?g+=m:g>Math.PI&&(g-=m),x<-Math.PI?x+=m:x>Math.PI&&(x-=m),a.theta=g<=x?Math.max(g,Math.min(x,a.theta)):a.theta>(g+x)/2?Math.max(g,a.theta):Math.min(x,a.theta)),a.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,a.phi)),a.makeSafe(),a.radius*=l,a.radius=Math.max(n.minDistance,Math.min(n.maxDistance,a.radius)),!0===n.enableDamping?n.target.addScaledVector(u,n.dampingFactor):n.target.add(u),t.setFromSpherical(a),t.applyQuaternion(d),e.copy(n.target).add(t),n.object.lookAt(n.target),!0===n.enableDamping?(o.theta*=1-n.dampingFactor,o.phi*=1-n.dampingFactor,u.multiplyScalar(1-n.dampingFactor)):(o.set(0,0,0),u.set(0,0,0)),l=1,!!(c||p.distanceToSquared(n.object.position)>s||8*(1-f.dot(n.object.quaternion))>s)&&(n.dispatchEvent(na),p.copy(n.object.position),f.copy(n.object.quaternion),c=!1,!0)}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",G),n.domElement.removeEventListener("pointerdown",P),n.domElement.removeEventListener("pointercancel",U),n.domElement.removeEventListener("wheel",W),n.domElement.removeEventListener("pointermove",z),n.domElement.removeEventListener("pointerup",B),null!==n._domElementKeyEvents&&n._domElementKeyEvents.removeEventListener("keydown",V)};const n=this,r={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let i=r.NONE;const s=1e-6,a=new Hs,o=new Hs;let l=1;const u=new be;let c=!1;const h=new j,d=new j,p=new j,f=new j,m=new j,g=new j,x=new j,b=new j,v=new j,y=[],w={};function _(){return Math.pow(.95,n.zoomSpeed)}function S(e){o.theta-=e}function k(e){o.phi-=e}const I=function(){const e=new be;return function(t,n){e.setFromMatrixColumn(n,0),e.multiplyScalar(-t),u.add(e)}}(),E=function(){const e=new be;return function(t,r){!0===n.screenSpacePanning?e.setFromMatrixColumn(r,1):(e.setFromMatrixColumn(r,0),e.crossVectors(n.object.up,e)),e.multiplyScalar(t),u.add(e)}}(),T=function(){const e=new be;return function(t,r){const i=n.domElement;if(n.object.isPerspectiveCamera){const s=n.object.position;e.copy(s).sub(n.target);let a=e.length();a*=Math.tan(n.object.fov/2*Math.PI/180),I(2*t*a/i.clientHeight,n.object.matrix),E(2*r*a/i.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(I(t*(n.object.right-n.object.left)/n.object.zoom/i.clientWidth,n.object.matrix),E(r*(n.object.top-n.object.bottom)/n.object.zoom/i.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function C(e){n.object.isPerspectiveCamera?l/=e:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*e)),n.object.updateProjectionMatrix(),c=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function M(e){n.object.isPerspectiveCamera?l*=e:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/e)),n.object.updateProjectionMatrix(),c=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function A(e){h.set(e.clientX,e.clientY)}function N(e){f.set(e.clientX,e.clientY)}function R(){if(1===y.length)h.set(y[0].pageX,y[0].pageY);else{const e=.5*(y[0].pageX+y[1].pageX),t=.5*(y[0].pageY+y[1].pageY);h.set(e,t)}}function D(){if(1===y.length)f.set(y[0].pageX,y[0].pageY);else{const e=.5*(y[0].pageX+y[1].pageX),t=.5*(y[0].pageY+y[1].pageY);f.set(e,t)}}function L(){const e=y[0].pageX-y[1].pageX,t=y[0].pageY-y[1].pageY,n=Math.sqrt(e*e+t*t);x.set(0,n)}function F(e){if(1==y.length)d.set(e.pageX,e.pageY);else{const t=X(e),n=.5*(e.pageX+t.x),r=.5*(e.pageY+t.y);d.set(n,r)}p.subVectors(d,h).multiplyScalar(n.rotateSpeed);const t=n.domElement;S(2*Math.PI*p.x/t.clientHeight),k(2*Math.PI*p.y/t.clientHeight),h.copy(d)}function $(e){if(1===y.length)m.set(e.pageX,e.pageY);else{const t=X(e),n=.5*(e.pageX+t.x),r=.5*(e.pageY+t.y);m.set(n,r)}g.subVectors(m,f).multiplyScalar(n.panSpeed),T(g.x,g.y),f.copy(m)}function O(e){const t=X(e),r=e.pageX-t.x,i=e.pageY-t.y,s=Math.sqrt(r*r+i*i);b.set(0,s),v.set(0,Math.pow(b.y/x.y,n.zoomSpeed)),C(v.y),x.copy(b)}function P(e){!1!==n.enabled&&(0===y.length&&(n.domElement.setPointerCapture(e.pointerId),n.domElement.addEventListener("pointermove",z),n.domElement.addEventListener("pointerup",B)),function(e){y.push(e)}(e),"touch"===e.pointerType?function(e){switch(q(e),y.length){case 1:switch(n.touches.ONE){case 0:if(!1===n.enableRotate)return;R(),i=r.TOUCH_ROTATE;break;case 1:if(!1===n.enablePan)return;D(),i=r.TOUCH_PAN;break;default:i=r.NONE}break;case 2:switch(n.touches.TWO){case 2:if(!1===n.enableZoom&&!1===n.enablePan)return;n.enableZoom&&L(),n.enablePan&&D(),i=r.TOUCH_DOLLY_PAN;break;case 3:if(!1===n.enableZoom&&!1===n.enableRotate)return;n.enableZoom&&L(),n.enableRotate&&R(),i=r.TOUCH_DOLLY_ROTATE;break;default:i=r.NONE}break;default:i=r.NONE}i!==r.NONE&&n.dispatchEvent(ra)}(e):function(e){let t;switch(e.button){case 0:t=n.mouseButtons.LEFT;break;case 1:t=n.mouseButtons.MIDDLE;break;case 2:t=n.mouseButtons.RIGHT;break;default:t=-1}switch(t){case 1:if(!1===n.enableZoom)return;!function(e){x.set(e.clientX,e.clientY)}(e),i=r.DOLLY;break;case 0:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===n.enablePan)return;N(e),i=r.PAN}else{if(!1===n.enableRotate)return;A(e),i=r.ROTATE}break;case 2:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===n.enableRotate)return;A(e),i=r.ROTATE}else{if(!1===n.enablePan)return;N(e),i=r.PAN}break;default:i=r.NONE}i!==r.NONE&&n.dispatchEvent(ra)}(e))}function z(e){!1!==n.enabled&&("touch"===e.pointerType?function(e){switch(q(e),i){case r.TOUCH_ROTATE:if(!1===n.enableRotate)return;F(e),n.update();break;case r.TOUCH_PAN:if(!1===n.enablePan)return;$(e),n.update();break;case r.TOUCH_DOLLY_PAN:if(!1===n.enableZoom&&!1===n.enablePan)return;!function(e){n.enableZoom&&O(e),n.enablePan&&$(e)}(e),n.update();break;case r.TOUCH_DOLLY_ROTATE:if(!1===n.enableZoom&&!1===n.enableRotate)return;!function(e){n.enableZoom&&O(e),n.enableRotate&&F(e)}(e),n.update();break;default:i=r.NONE}}(e):function(e){if(!1!==n.enabled)switch(i){case r.ROTATE:if(!1===n.enableRotate)return;!function(e){d.set(e.clientX,e.clientY),p.subVectors(d,h).multiplyScalar(n.rotateSpeed);const t=n.domElement;S(2*Math.PI*p.x/t.clientHeight),k(2*Math.PI*p.y/t.clientHeight),h.copy(d),n.update()}(e);break;case r.DOLLY:if(!1===n.enableZoom)return;!function(e){b.set(e.clientX,e.clientY),v.subVectors(b,x),v.y>0?C(_()):v.y<0&&M(_()),x.copy(b),n.update()}(e);break;case r.PAN:if(!1===n.enablePan)return;!function(e){m.set(e.clientX,e.clientY),g.subVectors(m,f).multiplyScalar(n.panSpeed),T(g.x,g.y),f.copy(m),n.update()}(e)}}(e))}function B(e){H(e),0===y.length&&(n.domElement.releasePointerCapture(e.pointerId),n.domElement.removeEventListener("pointermove",z),n.domElement.removeEventListener("pointerup",B)),n.dispatchEvent(ia),i=r.NONE}function U(e){H(e)}function W(e){!1!==n.enabled&&!1!==n.enableZoom&&i===r.NONE&&(e.preventDefault(),n.dispatchEvent(ra),function(e){e.deltaY<0?M(_()):e.deltaY>0&&C(_()),n.update()}(e),n.dispatchEvent(ia))}function V(e){!1!==n.enabled&&!1!==n.enablePan&&function(e){let t=!1;switch(e.code){case n.keys.UP:T(0,n.keyPanSpeed),t=!0;break;case n.keys.BOTTOM:T(0,-n.keyPanSpeed),t=!0;break;case n.keys.LEFT:T(n.keyPanSpeed,0),t=!0;break;case n.keys.RIGHT:T(-n.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),n.update())}(e)}function G(e){!1!==n.enabled&&e.preventDefault()}function H(e){delete w[e.pointerId];for(let t=0;t<y.length;t++)if(y[t].pointerId==e.pointerId)return void y.splice(t,1)}function q(e){let t=w[e.pointerId];void 0===t&&(t=new j,w[e.pointerId]=t),t.set(e.pageX,e.pageY)}function X(e){const t=e.pointerId===y[0].pointerId?y[1]:y[0];return w[t.pointerId]}n.domElement.addEventListener("contextmenu",G),n.domElement.addEventListener("pointerdown",P),n.domElement.addEventListener("pointercancel",U),n.domElement.addEventListener("wheel",W,{passive:!1}),this.update()}}var aa=function(){var e=0,t=document.createElement("div");function n(e){return t.appendChild(e.dom),e}function r(n){for(var r=0;r<t.children.length;r++)t.children[r].style.display=r===n?"block":"none";e=n}t.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",t.addEventListener("click",(function(n){n.preventDefault(),r(++e%t.children.length)}),!1);var i=(performance||Date).now(),s=i,a=0,o=n(new aa.Panel("FPS","#0ff","#002")),l=n(new aa.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var u=n(new aa.Panel("MB","#f08","#201"));return r(0),{REVISION:16,dom:t,addPanel:n,showPanel:r,begin:function(){i=(performance||Date).now()},end:function(){a++;var e=(performance||Date).now();if(l.update(e-i,200),e>=s+1e3&&(o.update(1e3*a/(e-s),100),s=e,a=0,u)){var t=performance.memory;u.update(t.usedJSHeapSize/1048576,t.jsHeapSizeLimit/1048576)}return e},update:function(){i=this.end()},domElement:t,setMode:r}};aa.Panel=function(e,t,n){var r=1/0,i=0,s=Math.round,a=s(window.devicePixelRatio||1),o=80*a,l=48*a,u=3*a,c=2*a,h=3*a,d=15*a,p=74*a,f=30*a,m=document.createElement("canvas");m.width=o,m.height=l,m.style.cssText="width:80px;height:48px";var g=m.getContext("2d");return g.font="bold "+9*a+"px Helvetica,Arial,sans-serif",g.textBaseline="top",g.fillStyle=n,g.fillRect(0,0,o,l),g.fillStyle=t,g.fillText(e,u,c),g.fillRect(h,d,p,f),g.fillStyle=n,g.globalAlpha=.9,g.fillRect(h,d,p,f),{dom:m,update:function(l,x){r=Math.min(r,l),i=Math.max(i,l),g.fillStyle=n,g.globalAlpha=1,g.fillRect(0,0,o,d),g.fillStyle=t,g.fillText(s(l)+" "+e+" ("+s(r)+"-"+s(i)+")",u,c),g.drawImage(m,h+a,d,p-a,f,h,d,p-a,f),g.fillRect(h+p-a,d,a,f),g.fillStyle=n,g.globalAlpha=.9,g.fillRect(h+p-a,d,a,s((1-l/x)*f))}}};const oa=aa,la=class{static isWebGLAvailable(){try{const e=document.createElement("canvas");return!(!window.WebGLRenderingContext||!e.getContext("webgl")&&!e.getContext("experimental-webgl"))}catch(e){return!1}}static isWebGL2Available(){try{const e=document.createElement("canvas");return!(!window.WebGL2RenderingContext||!e.getContext("webgl2"))}catch(e){return!1}}static getWebGLErrorMessage(){return this.getErrorMessage(1)}static getWebGL2ErrorMessage(){return this.getErrorMessage(2)}static getErrorMessage(e){const t={1:window.WebGLRenderingContext,2:window.WebGL2RenderingContext};let n='Your $0 does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">$1</a>';const r=document.createElement("div");return r.id="webglmessage",r.style.fontFamily="monospace",r.style.fontSize="13px",r.style.fontWeight="normal",r.style.textAlign="center",r.style.background="#fff",r.style.color="#000",r.style.padding="1.5em",r.style.width="400px",r.style.margin="5em auto 0",n=t[e]?n.replace("$0","graphics card"):n.replace("$0","browser"),n=n.replace("$1",{1:"WebGL",2:"WebGL 2"}[e]),r.innerHTML=n,r}};class ua{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class ca{decComplexRef(e){}time(e){return ha("time")}read(e){return ha("read")}readSync(e){return ha("readSync")}numDataIds(){return ha("numDataIds")}disposeData(e){return ha("disposeData")}write(e,t,n){return ha("write")}move(e,t,n,r){return ha("move")}memory(){return ha("memory")}floatPrecision(){return ha("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(e,t,n,r){return ha("batchMatMul")}fusedBatchMatMul({a:e,b:t,transposeA:n,transposeB:r,bias:i,activation:s,preluActivationWeights:a}){return ha("fusedBatchMatMul")}slice(e,t,n){return ha("slice")}stridedSlice(e,t,n,r){return ha("stridedSlice")}unstack(e,t){return ha("unstack")}reverse(e,t){return ha("reverse")}concat(e,t){return ha("concat")}neg(e){return ha("neg")}add(e,t){return ha("add")}addN(e){return ha("addN")}subtract(e,t){return ha("subtract")}multiply(e,t){return ha("multiply")}realDivide(e,t){return ha("realDivide")}floorDiv(e,t){return ha("floorDiv")}sum(e,t){return ha("sum")}prod(e,t){return ha("prod")}unsortedSegmentSum(e,t,n){return ha("unsortedSegmentSum")}argMin(e,t){return ha("argMin")}argMax(e,t){return ha("argMax")}equal(e,t){return ha("equal")}notEqual(e,t){return ha("notEqual")}less(e,t){return ha("less")}lessEqual(e,t){return ha("lessEqual")}greater(e,t){return ha("greater")}greaterEqual(e,t){return ha("greaterEqual")}logicalNot(e){return ha("logicalNot")}logicalAnd(e,t){return ha("logicalAnd")}logicalOr(e,t){return ha("logicalOr")}where(e){return ha("where")}select(e,t,n){return ha("select")}topk(e,t,n){return ha("topk")}min(e,t){return ha("min")}minimum(e,t){return ha("minimum")}mod(e,t){return ha("mod")}max(e,t){return ha("max")}maximum(e,t){return ha("maximum")}all(e,t){return ha("all")}any(e,t){return ha("any")}squaredDifference(e,t){return ha("squaredDifference")}ceil(e){return ha("ceil")}floor(e){return ha("floor")}round(e){return ha("round")}sign(e){return ha("sign")}isNaN(e){return ha("isNaN")}isInf(e){return ha("isInf")}isFinite(e){return ha("isFinite")}pow(e,t){return ha("pow")}exp(e){return ha("exp")}expm1(e){return ha("expm1")}softmax(e,t){return ha("softmax")}log(e){return ha("log")}log1p(e){return ha("log1p")}sqrt(e){return ha("sqrt")}rsqrt(e){return ha("rsqrt")}square(e){return ha("square")}reciprocal(e){return ha("reciprocal")}relu(e){return ha("relu")}relu6(e){return ha("relu6")}prelu(e,t){return ha("prelu")}elu(e){return ha("elu")}eluDer(e,t){return ha("eluDer")}selu(e){return ha("selu")}int(e){return ha("int")}clip(e,t,n){return ha("clip")}abs(e){return ha("abs")}complexAbs(e){return ha("complexAbs")}sigmoid(e){return ha("sigmoid")}softplus(e){return ha("softplus")}sin(e){return ha("sin")}cos(e){return ha("cos")}tan(e){return ha("tan")}asin(e){return ha("asin")}acos(e){return ha("acos")}atan(e){return ha("atan")}atan2(e,t){return ha("atan2")}sinh(e){return ha("sinh")}cosh(e){return ha("cosh")}tanh(e){return ha("tanh")}asinh(e){return ha("asinh")}acosh(e){return ha("acosh")}atanh(e){return ha("atanh")}erf(e){return ha("erf")}step(e,t){return ha("step")}fusedConv2d({input:e,filter:t,convInfo:n,bias:r,activation:i,preluActivationWeights:s}){return ha("fusedConv2d")}conv2d(e,t,n){return ha("conv2d")}conv2dDerInput(e,t,n){return ha("conv2dDerInput")}conv2dDerFilter(e,t,n){return ha("conv2dDerFilter")}fusedDepthwiseConv2D({input:e,filter:t,convInfo:n,bias:r,activation:i,preluActivationWeights:s}){return ha("fusedDepthwiseConv2D")}depthwiseConv2D(e,t,n){return ha("depthwiseConv2D")}depthwiseConv2DDerInput(e,t,n){return ha("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(e,t,n){return ha("depthwiseConv2DDerFilter")}conv3d(e,t,n){return ha("conv3d")}conv3dDerInput(e,t,n){return ha("conv3dDerInput")}conv3dDerFilter(e,t,n){return ha("conv3dDerFilter")}maxPool(e,t){return ha("maxPool")}maxPoolBackprop(e,t,n,r){return ha("maxPoolBackprop")}avgPool(e,t){return ha("avgPool")}avgPoolBackprop(e,t,n){return ha("avgPoolBackprop")}avgPool3d(e,t){return ha("avgPool3d")}avgPool3dBackprop(e,t,n){return ha("avgPool3dBackprop")}maxPool3d(e,t){return ha("maxPool3d")}maxPool3dBackprop(e,t,n,r){return ha("maxPool3dBackprop")}reshape(e,t){return ha("reshape")}cast(e,t){return ha("cast")}tile(e,t){return ha("tile")}pad(e,t,n){return ha("pad")}transpose(e,t){return ha("transpose")}gather(e,t,n,r=0){return ha("gather")}gatherND(e,t){return ha("gatherND")}scatterND(e,t,n){return ha("scatterND")}batchToSpaceND(e,t,n){return ha("batchToSpaceND")}spaceToBatchND(e,t,n){return ha("spaceToBatchND")}resizeBilinear(e,t,n,r,i){return ha("resizeBilinear")}resizeBilinearBackprop(e,t,n){return ha("resizeBilinearBackprop")}resizeNearestNeighbor(e,t,n,r,i){return ha("resizeNearestNeighbor")}resizeNearestNeighborBackprop(e,t,n){return ha("resizeNearestNeighborBackprop")}batchNorm(e,t,n,r,i,s){return ha("batchNorm")}localResponseNormalization4D(e,t,n,r,i){return ha("localResponseNormalization4D")}LRNGrad(e,t,n,r,i,s,a){return ha("LRNGrad")}multinomial(e,t,n,r){return ha("multinomial")}oneHot(e,t,n,r){return ha("oneHot")}cumsum(e,t,n,r){return ha("cumsum")}nonMaxSuppression(e,t,n,r,i){return ha("nonMaxSuppression")}fft(e){return ha("fft")}ifft(e){return ha("ifft")}complex(e,t){return ha("complex")}real(e){return ha("real")}imag(e){return ha("imag")}cropAndResize(e,t,n,r,i,s){return ha("cropAndResize")}depthToSpace(e,t,n){return ha("depthToSpace")}split(e,t,n){return ha("split")}sparseToDense(e,t,n,r){return ha("sparseToDense")}diag(e){return ha("diag")}fill(e,t,n){return ha("fill")}onesLike(e){return ha("onesLike")}zerosLike(e){return ha("zerosLike")}linspace(e,t,n){return ha("linspace")}dispose(){return ha("dispose")}}function ha(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function da(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function pa(e,t,n){return Math.max(e,Math.min(t,n))}function fa(e){return e%2==0?e:e+1}function ma(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function ga(e,t,n=""){ma(ya(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function xa(e){ma(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function ba(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||Na(e)&&!n)for(let r=0;r<e.length;++r)ba(e[r],t,n);else t.push(e);return t}function va(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ya(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function wa(e){return e%1==0}function _a(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function Sa(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function ka(e,t=(e=>0),n){return new Promise(((r,i)=>{let s=0;const a=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?i():setTimeout(a,o)};a()}))}function Ia(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const i=e.slice();return i[r]=t/n,i}function Ea(e,t){const n=t.length;return ma((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),ma(e.every((e=>wa(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function Ta(e,t){const n=[],r=[],i=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||i?null:Ea(t,e).sort();let a=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[a]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[a]||s[a]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[a]<=t&&a++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function Ca(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function Ma(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function Aa(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function Na(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function Ra(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Da(e){return"string"==typeof e||e instanceof String}function La(e){return"number"==typeof e}function Fa(e){return Array.isArray(e)?Fa(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":La(e)?"float32":Da(e)?"string":"boolean"==typeof e?"bool":"float32"}function $a(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Oa(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Pa(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function za(e,t,n){const r=new Array;if(1===t.length){const i=t[0];for(let t=0;t<i;t++)r[t]=n[e+t]}else{const i=t[0],s=t.slice(1),a=s.reduce(((e,t)=>e*t));for(let t=0;t<i;t++)r[t]=za(e+t*a,s,n)}return r}function Ba(e,t){if(0===e.length)return t[0];const n=e.reduce(((e,t)=>e*t));if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return za(0,e,t)}function Ua(e,t){const n=Wa(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Wa(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Va(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Ba(e,new Float32Array(n));if("int32"===t)return Ba(e,new Int32Array(n));if("bool"===t)return Ba(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Ga(e){e.forEach((t=>{ma(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Ha(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function ja(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function qa(e){return e&&e.then&&"function"==typeof e.then}class Xa{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(qa(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function Ka(){return Za}let Ya,Za=null;function Ja(){if(null==Ya){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Ya=e}return Ya}function Qa(e,t){const n=function(){const e=Ja();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const eo="Abs",to="Acos",no="Acosh",ro="Add",io="AddN",so="All",ao="Any",oo="ArgMax",lo="ArgMin",uo="Asin",co="Asinh",ho="Atan",po="Atanh",fo="Atan2",mo="AvgPool",go="AvgPoolGrad",xo="AvgPool3D",bo="AvgPool3DGrad",vo="BatchMatMul",yo="BatchToSpaceND",wo="Bincount",_o="Cast",So="Ceil",ko="ClipByValue",Io="Complex",Eo="ComplexAbs",To="Concat",Co="Conv2D",Mo="Conv2DBackpropFilter",Ao="Conv2DBackpropInput",No="Conv3D",Ro="Conv3DBackpropFilterV2",Do="Conv3DBackpropInputV2",Lo="Cos",Fo="Cosh",$o="Cumsum",Oo="CropAndResize",Po="DenseBincount",zo="DepthToSpace",Bo="DepthwiseConv2dNative",Uo="DepthwiseConv2dNativeBackpropFilter",Wo="DepthwiseConv2dNativeBackpropInput",Vo="Diag",Go="Dilation2D",Ho="Dilation2DBackpropInput",jo="Dilation2DBackpropFilter",qo="RealDiv",Xo="Elu",Ko="EluGrad",Yo="Erf",Zo="Equal",Jo="Exp",Qo="ExpandDims",el="Expm1",tl="FFT",nl="Fill",rl="FlipLeftRight",il="Floor",sl="FloorDiv",al="FusedBatchNorm",ol="GatherV2",ll="GatherNd",ul="Greater",cl="GreaterEqual",hl="Identity",dl="IFFT",pl="Imag",fl="IsFinite",ml="IsInf",gl="IsNan",xl="LeakyRelu",bl="Less",vl="LessEqual",yl="LinSpace",wl="Log",_l="Log1p",Sl="LogicalAnd",kl="LogicalNot",Il="LogicalOr",El="LRN",Tl="LRNGrad",Cl="Max",Ml="Maximum",Al="MaxPool",Nl="MaxPoolGrad",Rl="MaxPool3D",Dl="MaxPool3DGrad",Ll="MaxPoolWithArgmax",Fl="Mean",$l="Min",Ol="Minimum",Pl="MirrorPad",zl="Mod",Bl="Multinomial",Ul="Multiply",Wl="Neg",Vl="NotEqual",Gl="NonMaxSuppressionV3",Hl="NonMaxSuppressionV4",jl="NonMaxSuppressionV5",ql="OnesLike",Xl="OneHot",Kl="Pack",Yl="PadV2",Zl="Pow",Jl="Prelu",Ql="Prod",eu="Range",tu="Real",nu="Reciprocal",ru="Relu",iu="Reshape",su="ResizeNearestNeighbor",au="ResizeNearestNeighborGrad",ou="ResizeBilinear",lu="ResizeBilinearGrad",uu="Relu6",cu="Reverse",hu="Round",du="Rsqrt",pu="ScatterNd",fu="Select",mu="Selu",gu="Slice",xu="Sin",bu="Sinh",vu="Sign",yu="Sigmoid",wu="Softplus",_u="Sqrt",Su="Sum",ku="SpaceToBatchND",Iu="SplitV",Eu="Softmax",Tu="SquaredDifference",Cu="Square",Mu="Sub",Au="SparseToDense",Nu="StridedSlice",Ru="Tan",Du="Tanh",Lu="Tile",Fu="TopK",$u="Transpose",Ou="Unique",Pu="Unpack",zu="UnsortedSegmentSum",Bu="ZerosLike",Uu="Step",Wu="RotateWithOffset",Vu="_FusedMatMul",Gu="FusedConv2D",Hu="FusedDepthwiseConv2D",ju=Qa("kernelRegistry",(()=>new Map)),qu=Qa("gradRegistry",(()=>new Map));function Xu(e){return qu.get(e)}function Ku(e){const t=ju.entries(),n=[];for(;;){const{done:r,value:i}=t.next();if(r)break;const[s,a]=i,[o]=s.split("_");o===e&&n.push(a)}return n}function Yu(e){const{kernelName:t,backendName:n}=e,r=Ju(t,n);ju.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),ju.set(r,e)}function Zu(e){const{kernelName:t}=e;qu.has(t)&&Ka().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),qu.set(t,e)}function Ju(e,t){return`${t}_${e}`}class Qu{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new tc)}profileKernel(e,t,n){let r;const i=this.backendTimer.time((()=>{r=n()}));if(Ka().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{ec(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:i,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],i,n[2])}))}))}}function ec(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class tc{logKernelProfile(e,t,n,r,i,s){const a="number"==typeof r?Sa(`${r}ms`,9):r.error,o=Sa(e,25),l=t.rank,u=t.size,c=Sa(t.shape.toString(),14);let h="";for(const e in i){const n=i[e];if(null!=n){const r=n.shape||t.shape,i=r.length;h+=`${e}: ${i}D ${i>0?r:""} `}}console.log(`%c${o}\t%c${a}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function nc(e,t,n,r){const i=Pa(t),s=function(e,t,n,r){const i=va(t),s=r[r.length-1],a=new Array(s).fill(0),o=t.length,l="complex64"===n?ac(e):e;if(o>1)for(let e=0;e<i/s;e++){const t=e*s;for(let e=0;e<s;e++)a[e]=Math.max(a[e],rc(l[t+e],0,n).length)}return a}(e,t,n,i),a=t.length,o=sc(e,t,n,i,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${a}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function rc(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Da(e)?`'${e}'`:"bool"===n?ic(e):parseFloat(e.toFixed(7)).toString(),Sa(r,t)}function ic(e){return 0===e?"false":"true"}function sc(e,t,n,r,i,s=!0){const a="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[rc(ac(e)[0],0,n)]:"bool"===n?[ic(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*a;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*a,o*a));return"complex64"===n&&(r=ac(r),s=ac(s)),["["+r.map(((e,t)=>rc(e,i[t],n))).join(", ")+", ..., "+s.map(((e,t)=>rc(e,i[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?ac(e):Array.from(e)).map(((e,t)=>rc(e,i[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*a,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,s=r+h;d.push(...sc(e.slice(r,s),u,n,c,i,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h,s=r+h;d.push(...sc(e.slice(r,s),u,n,c,i,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,s=r+h;d.push(...sc(e.slice(r,s),u,n,c,i,t===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function ac(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}function oc(e,t){return"string"===t?cc(e):lc([e],t)}function lc(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ba(e)),Ka().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function uc(){return Ka().platform.now()}function cc(e,t="utf-8"){return t=t||"utf-8",Ka().platform.encode(e,t)}function hc(e,t="utf-8"){return t=t||"utf-8",Ka().platform.decode(e,t)}class dc{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=va(e),null!=n){const e=n.length;ma(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Ma(t,this.size),this.strides=Pa(e)}set(e,...t){0===t.length&&(t=[0]),ma(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return pc().makeTensor(this.values,this.shape,this.dtype)}}let pc=null,fc=null,mc=null;class gc{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=va(e),this.strides=Pa(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return fc.buffer(this.shape,this.dtype,e)}bufferSync(){return fc.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Ba(this.shape,e)}arraySync(){return Ba(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=pc().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>hc(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=pc().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>hc(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await pc().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(pc().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return fc.print(this,e)}clone(){return this.throwIfDisposed(),fc.clone(this)}toString(e=!1){return nc(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),fc.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),pc().makeVariable(this,e,t,n)}}Object.defineProperty(gc,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed});class xc extends gc{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ya(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);pc().disposeTensor(this),this.dataId=e.dataId,pc().incRef(this,null)}dispose(){pc().disposeVariable(this),this.isDisposedInternal=!0}}var bc,vc,yc,wc,_c;Object.defineProperty(xc,Symbol.hasInstance,{value:e=>e instanceof gc&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(bc||(bc={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(vc||(vc={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(yc||(yc={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(wc||(wc={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(_c||(_c={}));const Sc={float32:wc,int32:vc,bool:yc,complex64:_c};function kc(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Sc[e][t]}function Ic(e){return kc(e,"int32")}function Ec(e,t){if(e.dtype===t.dtype)return[e,t];const n=kc(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Tc(e,t){return t.some((t=>t.id===e.id))}function Cc(e){const t=[];return Mc(e,t,new Set),t}function Mc(e,t,n){if(null==e)return;if(e instanceof gc)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const i=e;for(const e in i){const r=i[e];n.has(r)||(n.add(r),Mc(r,t,n))}}class Ac{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Nc{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ac}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Qu(this.backendInstance),!0}setupRegisteredKernels(){Ku(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Ku(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof ca||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:i}=this.initializeBackend(n);if(i||r)return{name:n,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,i=this.readSync(t);r.disposeData(t),n.backend=e,e.move(t,i,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Nc.nextTensorId++}nextVariableId(){return Nc.nextVariableId++}clone(e){const t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t="float32",n={x:e},r={dtype:t};return Dc.runKernelFunc((n=>n.cast(e,t)),n,null,_o,r)}})),[],{}),t}runKernel(e,t,n,r,i){return this.runKernelFunc(null,t,null,e,n,r,i)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let i=0;n.forEach((e=>{i+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-t-i-s;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e,t,n,r,i,s,a){let o,l=[];const u=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const c=this.state.numBytes,h=this.state.numTensors;let d;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const p=function(e,t){const n=Ju(e,t);return ju.get(n)}(r,this.backendName);let f,m;if(null!=p)d=()=>{const e=this.backend.numDataIds();f=p.kernelFunc({inputs:t,attrs:i,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,e,n);const o=n.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(u){let e=this.getTensorsForGradient(r,t,o);if(null==e){null==a&&(a=[]);const t=o.filter(((e,t)=>a[t]));e=(s||[]).slice().concat(t)}l=this.saveTensorsForBackwardMode(e)}return o};else{if(null==e)throw new Error(`Error running ${r}: Neither modular kernel nor forward func passed`);const t=e=>{u&&(l=e.map((e=>this.keep(this.clone(e)))))};d=()=>{const n=this.backend.numDataIds();f=this.tidy((()=>e(this.backend,t)));const i=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,i),i}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(m=this.profiler.profileKernel(r,t,(()=>d())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(m),o=m.outputs):o=d()})),u&&this.addTapeNode(r,t,o,n,l,i),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-c,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map((e=>null!=t[e]?t[e].shape:null)),outputShapes:o.map((e=>e.shape)),kernelTimeMs:m.timeMs,extraInfo:m.extraInfo}),Array.isArray(f)?o:o[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=Xu(e);if(null!=r){const e=r.inputsToSave||[],i=r.outputsToSave||[];let s;r.saveAllInputs?(ma(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const a=n.filter(((e,t)=>i[t]));return s.concat(a)}return null}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let i=e;"string"===n&&Da(e[0])&&(i=e.map((e=>cc(e))));const s=r.write(i,t,n),a=new gc(t,n,s,this.nextTensorId());if(this.incRef(a,r),"string"===n){const e=this.state.tensorInfo.get(s),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(i);this.state.numBytes+=t-e.bytes,e.bytes=t}return a}makeTensorFromDataId(e,t,n,r){const i=new gc(t,n=n||"float32",e,this.nextTensorId());return this.incRef(i,r),i}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const i=new xc(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[i.name])throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}incRef(e,t){const n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Ra(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof xc||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,"string"===e.dtype&&this.state.numStringTensors--;const t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?("complex64"!==e.dtype&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):(t.backend.decComplexRef(e.dataId),this.state.tensorInfo.get(e.dataId).refCount--)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,i,s){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:i},o=Xu(e);null!=o&&(r=o.gradFunc),null!=r&&(a.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=Wa(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],i,s))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Cc(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(ma(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const i=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));ma(i instanceof gc,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},i={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],a=s.inputs;for(const e in a){const n=a[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,i[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const a={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,a[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(i[n.id]&&a[n.id]){const e={};for(const t in n.inputs){const i=n.inputs[t];r[i.id]&&(e[t]=i)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,i);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[i.id]=null==n?function(e){const t=Ua(va(e),"float32");return Dc.makeTensor(t,e,"float32")}(i.shape):n,function(e,t,n,r){for(let i=t.length-1;i>=0;i--){const s=t[i],a=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?a.push(n):a.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(a);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const i=n((()=>o[t]()));if("float32"!==i.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${i.dtype}'`);const a=s.inputs[t];if(!ya(i.shape,a.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${i.shape}', which does not match the shape of the input '${a.shape}'`);if(null==e[a.id])e[a.id]=i;else{const t=e[a.id];e[a.id]=r(t,i),t.dispose()}}}}(e,s,(e=>this.tidy(e)),Lc);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:i,grads:r}}))}customGrad(e){return ma($a(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;ma(t.every((e=>e instanceof gc)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc(((r,i)=>(n=e(...t,i),ma(n.value instanceof gc,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),ma($a(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value)),r,((e,r)=>{const i=n.gradFunc(e,r),s=Array.isArray(i)?i:[i];ma(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),ma(s.every((e=>e instanceof gc)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return s.forEach(((e,t)=>{a[t]=()=>e})),a}))}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=uc(),n=await this.backend.time(e);return n.wallMs=uc()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ac;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Rc(){const e=Ja();if(null==e._tfengine){const t=new Xa(e);e._tfengine=new Nc(t)}var t;return t=e._tfengine.ENV,Za=t,pc=()=>e._tfengine,e._tfengine}Nc.nextTensorId=0,Nc.nextVariableId=0;const Dc=Rc();function Lc(e,t){const n={a:e,b:t};return Dc.runKernel(ro,n)}function Fc(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const $c=Ka();function Oc(e,t){let n=e;if(Na(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Na(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Ka().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Pc(e,r,[]),r}function Pc(e,t,n){if(n=n||[],!Array.isArray(e)&&!Na(e))return void ma(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));ma(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),ma(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)Pc(e[t],r,n.concat(t))}function zc(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Bc(e,t,n,r="numeric"){if(e instanceof gc)return zc(r,e.dtype,t,n),e;let i=Fa(e);if("string"!==i&&["bool","int32","float32"].indexOf(r)>=0&&(i=r),zc(r,i,t,n),null==e||!Na(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=Oc(e,i);Na(e)||Array.isArray(e)||(e=[e]);const a="string"!==i?lc(e,i):ba(e,[],!0);return Dc.makeTensor(a,s,i)}function Uc(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,i)=>Bc(e,`${t}[${i}]`,n,r)))}function Wc(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const i=(...e)=>{Dc.startScope(n);try{const t=r(...e);return qa(t)&&console.error("Cannot return a Promise inside of tidy."),Dc.endScope(t),t}catch(e){throw Dc.endScope(null),e}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}$c.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),$c.registerFlag("IS_BROWSER",(()=>Fc())),$c.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),$c.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),$c.registerFlag("PROD",(()=>!1)),$c.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>$c.getBool("DEBUG"))),$c.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),$c.registerFlag("IS_TEST",(()=>!1)),$c.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0));const Vc=Wc({complex_:function(e,t){const n=Bc(e,"real","complex"),r=Bc(t,"imag","complex");ga(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const i={real:n,imag:r};return Dc.runKernel(Io,i)}});function Gc(e,t,n,r){if(null==r&&(r=Fa(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Na(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Ga(t);const e=va(t),r=va(n);ma(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],i=e!==n.length-1||r!==va(t.slice(e));ma(n[e]===t[e]||!i,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Na(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?lc(e,r):ba(e,[],!0),Dc.makeTensor(e,t,r)}async function Hc(e,t){const n=[],r=[],i=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<i.length;++s){const a=i[s],o=Array.isArray(e)?e[s].tensor:e[a];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${o.dtype}`);const l={name:a,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let i=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,i),i+=4,r.set(n,i),i+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:jc(await Promise.all(r)),specs:n}}function jc(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let i=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),i),i+=e.byteLength})),r.buffer}const qc="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Xc(e){return qc?Buffer.byteLength(e):new Blob([e]).size}function Kc(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Yc(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Xc(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Xc(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}class Zc{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Zc.instance&&(Zc.instance=new Zc),Zc.instance}static registerSaveRouter(e){Zc.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Zc.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Zc.getHandlers(e,"save")}static getLoadHandlers(e,t){return Zc.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Zc.getInstance().loadRouters:Zc.getInstance().saveRouters).forEach((t=>{const i=t(e,n);null!==i&&r.push(i)})),r}}const Jc="tensorflowjs",Qc="models_store",eh="model_info_store";function th(){if(!Ka().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function nh(e){const t=e.result;t.createObjectStore(Qc,{keyPath:"modelPath"}),t.createObjectStore(eh,{keyPath:"modelPath"})}class rh{constructor(e){if(this.indexedDB=th(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Jc,1);r.onupgradeneeded=()=>nh(r),r.onsuccess=()=>{const i=r.result;if(null==t){const t=i.transaction(Qc,"readonly"),r=t.objectStore(Qc).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return i.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(i.close(),n(r.error)),t.oncomplete=()=>i.close()}else{const r=Yc(t),s=i.transaction(eh,"readwrite");let a=s.objectStore(eh);const o=a.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=i.transaction(Qc,"readwrite");const o=l.objectStore(Qc).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{a=s.objectStore(eh);const t=a.delete(this.modelPath);t.onsuccess=()=>(i.close(),n(o.error)),t.onerror=e=>(i.close(),n(o.error))}},o.onerror=e=>(i.close(),n(o.error)),s.oncomplete=()=>{null==l?i.close():l.oncomplete=()=>i.close()}}},r.onerror=e=>n(r.error)}))}}rh.URL_SCHEME="indexeddb://";const ih=e=>{return Ka().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(rh.URL_SCHEME)?(t=e.slice(rh.URL_SCHEME.length),new rh(t)):null;var t};Zc.registerSaveRouter(ih),Zc.registerLoadRouter(ih);class sh{constructor(){this.indexedDB=th()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Jc,1);n.onupgradeneeded=()=>nh(n),n.onsuccess=()=>{const r=n.result,i=r.transaction(eh,"readonly"),s=i.objectStore(eh).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),i.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(rh.URL_SCHEME)?t.slice(rh.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Jc,1);r.onupgradeneeded=()=>nh(r),r.onsuccess=()=>{const i=r.result,s=i.transaction(eh,"readwrite"),a=s.objectStore(eh),o=a.get(e);let l;o.onsuccess=()=>{if(null==o.result)return i.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=a.delete(e),s=()=>{l=i.transaction(Qc,"readwrite");const r=l.objectStore(Qc).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),i.close(),n(o.error))}},o.onerror=e=>(i.close(),n(o.error)),s.oncomplete=()=>{null==l?i.close():l.oncomplete=()=>i.close()}},r.onerror=e=>n(r.error)}))}}const ah="/",oh="tensorflowjs_models",lh="info",uh="model_topology",ch="weight_specs",hh="weight_data",dh="model_metadata";function ph(e){return{info:[oh,e,lh].join(ah),topology:[oh,e,uh].join(ah),weightSpecs:[oh,e,ch].join(ah),weightData:[oh,e,hh].join(ah),modelMetadata:[oh,e,dh].join(ah)}}function fh(e){const t=e.split(ah);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ah)}class mh{constructor(e){if(!Ka().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ph(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Yc(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(qc)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(i.signature=e.signature),null!=e.userDefinedMetadata&&(i.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(i.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const i=this.LS.getItem(this.keys.modelMetadata);if(null!=i){const e=JSON.parse(i);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(qc){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}mh.URL_SCHEME="localstorage://";const gh=e=>{return Ka().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(mh.URL_SCHEME)?(t=e.slice(mh.URL_SCHEME.length),new mh(t)):null;var t};Zc.registerSaveRouter(gh),Zc.registerLoadRouter(gh);class xh{constructor(){ma(Ka().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),ma("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=oh+ah,n=ah+lh;for(let r=0;r<this.LS.length;++r){const i=this.LS.key(r);i.startsWith(t)&&i.endsWith(n)&&(e[fh(i)]=JSON.parse(this.LS.getItem(i)))}return e}async removeModel(e){var t;const n=ph(e=(t=e).startsWith(mh.URL_SCHEME)?t.slice(mh.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class bh{constructor(){this.managers={}}static getInstance(){return null==bh.instance&&(bh.instance=new bh),bh.instance}static registerManager(e,t){ma(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),ma(e.length>0,(()=>"scheme must not be an empty string."));const n=bh.getInstance();ma(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class vh{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Ka().get("IS_BROWSER")){Ka().setPlatform("browser",new vh);try{bh.registerManager(mh.URL_SCHEME,new xh)}catch(e){}try{bh.registerManager(rh.URL_SCHEME,new sh)}catch(e){}}let yh;function wh(e,t="float32",n){return t=t||"float32",Ga(e),new dc(e,t,n)}Ka().get("IS_NODE")&&Ka().setPlatform("node",new class{constructor(){this.util=n(4673),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Ka().global.fetch?Ka().global.fetch(e,t):(null==yh&&(yh=n(5751)),yh(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const _h=Wc({cast_:function(e,t){const n=Bc(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},i={dtype:t};return Dc.runKernel(_o,r,i)}}),Sh=Wc({clone_:function(e){const t={x:Bc(e,"x","clone","string_or_numeric")};return Dc.runKernel(hl,t)}});function kh(e){return new Promise((e=>setTimeout(e))).then(e)}Rc(),fc={buffer:wh,cast:_h,clone:Sh,print:function(e,t=!1){console.log(e.toString(t))}};class Ih{constructor(e){if(!Ka().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ih.URL_SCHEME)&&(e=e.slice(Ih.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);const i=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=i,await kh((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await kh((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Yc(e)}}}}function Eh(e,t,n,r){!function(e){ma(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){ma(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),ma(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),ma(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let i=0;return Promise.all(e.map((s=>(s.then((s=>{const a=n+ ++i/e.length*(r-n);return t(a),s})),s))))}async function Th(e,t){null==t&&(t={});const n=null==t.fetchFunc?Ka().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),i=(null==t.onProgress?await Promise.all(r):await Eh(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(i):await Eh(i,t.onProgress,.5,1)}Ih.URL_SCHEME="downloads://",Zc.registerSaveRouter((e=>Ka().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ih.URL_SCHEME)?function(e="model"){return new Ih(e)}(e.slice(Ih.URL_SCHEME.length)):null));class Ch{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(ma("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Ka().platform.fetch,ma(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&ma(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const i=await this.fetch(this.path,t);if(i.ok)return{modelArtifactsInfo:Yc(e),responses:[i]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,i=t.generatedBy,s=t.convertedBy,a=t.format,o=t.signature,l=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;if(null!=r){const e=await this.loadWeights(r);[u,c]=e}const h={modelTopology:n,weightSpecs:u,weightData:c,generatedBy:i,convertedBy:s,format:a};null!=o&&(h.signature=o),null!=l&&(h.userDefinedMetadata=l);const d=t.modelInitializer;return d&&(h.modelInitializer=d),h}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),i=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const a=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):a.push(i+e+r);return this.weightUrlConverter&&a.push(...await Promise.all(o)),[s,Kc(await Th(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Mh(e){return null!=e.match(Ch.URL_SCHEME_REGEX)}Ch.URL_SCHEME_REGEX=/^https?:\/\//;const Ah=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Mh(e))):Mh(e),n)return function(e,t){return new Ch(e,t)}(e,t)}return null};function Nh(e,t,n){const r=e.shape.length;ma(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),ma(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let i=0;i<r;++i)ma(t[i]+n[i]<=e.shape[i],(()=>`Error in slice${r}D: begin[${i}] + size[${i}] (${t[i]+n[i]}) would overflow input.shape[${i}] (${e.shape[i]})`))}function Rh(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Dh(e,t,n){const r=[];for(let i=0;i<e.length;i++)r[i]=Math.ceil((t[i]-e[i])/n[i]);return r}function Lh(e,t,n,r){const i=[...e];for(let e=i.length;e<r.length;e++)i.push(1);for(let e=0;e<n;e++)0===e?i[t]=1:(i.splice(t,0,1),i.pop());return i}function Fh(e,t,n){return n<=e?n:n-(t-1)}function $h(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Oh(e,t,n,r,i,s,a,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Ph(a,l,u,r,e),h=zh(o,l,u,i,e),d=Lh(s,l,u,e)}else for(let t=0;t<u;t++)c[t]=Uh(a,r,s,e,t,l),h[t]=Wh(o,i,s,e,t,l),d[t]=Bh(s,t,l);return{begin:c,end:h,strides:d}}function Ph(e,t,n,r,i){const s=[...i],a=$h(n,t);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=0;else{const a=Fh(t,n,i);let o=r[a];e&1<<a&&(o=0),s[i]=o}return s}function zh(e,t,n,r,i){const s=[...i],a=$h(n,t);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{const a=Fh(t,n,i);let o=r[a];e&1<<a&&(o=Number.MAX_SAFE_INTEGER),s[i]=o}for(let e=0;e<s.length;e++){const t=i[e];s[e]<0&&(s[e]+=t),s[e]=pa(0,s[e],i[e])}return s}function Bh(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Uh(e,t,n,r,i,s){let a=t[i];const o=n[i]||1;(e&1<<i||s&1<<i||null==a)&&(a=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[i];return a<0&&(a+=l),a=pa(0,a,l-1),a}function Wh(e,t,n,r,i,s){let a=t[i];const o=n[i]||1;(e&1<<i||s&1<<i||null==a)&&(a=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[i];return a<0&&(a+=l),a=o>0?pa(0,a,l):pa(-1,a,l-1),a}function Vh(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let i=r+1;i<n.length;i++)if(t[i]>0||n[i]!==e[i])return!1;return!0}function Gh(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Hh(e,t,n){let r;const i=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(i-1).fill(0)]:t.length<i?t.concat(new Array(i-t.length).fill(0)):t.slice(),r.forEach((e=>{ma(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(i).fill(-1):"number"==typeof n?[n,...new Array(i-1).fill(-1)]:n.length<i?n.concat(new Array(i-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(ma(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,s]}function jh(e,t,n,r,i,s,a,o,l){let u=t.slice(),c=n.slice(),h=r;null==r&&(h=new Array(u.length));const d=Rh(a);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==a&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==a&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=e.length-u.length,f=Rh(o),m=e.slice();f.forEach((e=>{u[e]=0,c[e]=1,m.splice(e,0,1)}));const{begin:g,end:x,strides:b}=Oh(m,d,p,u,c,h,i,s,a);u=g,c=x,h=b;const v=Rh(l);v.forEach((e=>{c[e]=u[e]+1,h[e]=1}));const y=Dh(u,c,h),w=y.filter(((e,t)=>-1===v.indexOf(t)));return{nonStrided:h.every((e=>1===e)),$begin:u,$end:c,$strides:h,size:y,newShape:m,outShape:w}}Zc.registerSaveRouter(Ah),Zc.registerLoadRouter(Ah);class qh{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Xh{constructor(){this.classNameMap={}}static getMap(){return null==Xh.instance&&(Xh.instance=new Xh),Xh.instance}static register(e){Xh.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Kh(e){ma(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),ma("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),ma(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Xh.register(e)}function Yh(e){Ka().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Zh(){return Dc}function Jh(){return Dc.memory()}function Qh(e,t){return Dc.tidy(e,t)}function ed(e){Cc(e).forEach((e=>e.dispose()))}function td(e){return Dc.keep(e)}function nd(e,t,n=1){return Dc.registerBackend(e,t,n)}function rd(e){return Dc.customGrad(e)}function id(e,t){if((Na(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Na(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Gc(e,[],[],t)}mc=Yh;class sd extends qh{minimize(e,t=!1,n){const{value:r,grads:i}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:i[e.name]})));this.applyGradients(e)}else this.applyGradients(i);return ed(i),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){ma($a(e),(()=>"The f passed in variableGrads(f) must be a function")),ma(null==t||Array.isArray(t)&&t.every((e=>e instanceof xc)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Dc.registeredVariables)t.push(Dc.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,i=t.length;ma((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${i} variables is trainable.`));const{value:s,grads:a}=Dc.gradients(e,t,null,!0);ma(a.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),ma(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=a[t]&&(o[e.name]=a[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}(e,t)}dispose(){null!=this.iterations_&&ed(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:id(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(sd,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const ad=Wc({abs_:function(e){const t=Bc(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Dc.runKernel(Eo,e)}{const e={x:t};return Dc.runKernel(eo,e)}}}),od=Wc({add_:function(e,t){let n=Bc(e,"a","add"),r=Bc(t,"b","add");[n,r]=Ec(n,r);const i={a:n,b:r};return Dc.runKernel(ro,i)}}),ld=Wc({all_:function(e,t=null,n=!1){const r={x:Bc(e,"x","all","bool")},i={axis:t,keepDims:n};return Dc.runKernel(so,r,i)}}),ud=Wc({any_:function(e,t=null,n=!1){const r={x:Bc(e,"x","any","bool")},i={axis:t,keepDims:n};return Dc.runKernel(ao,r,i)}}),cd=Wc({argMax_:function(e,t=0){const n={x:Bc(e,"x","argMax")},r={axis:t};return Dc.runKernel(oo,n,r)}});function hd(e,t,n,r,i="NHWC",s){return fd(e,[...t,e[3]],n,s,r,null,null,Sd(i))}function dd(e,t,n,r,i,s,a="channelsLast"){const[o,l]=xd(t);let u;if("channelsLast"===a)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);u=[o,l,e[1],e[1]]}return fd(e,u,n,r,i,s,!1,a)}function pd(e,t,n,r,i,s,a="NDHWC"){const[o,l,u]=bd(t);let c,h;if("NDHWC"===a)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return md(e,c,n,r,i,!1,h,s)}function fd(e,t,n,r,i,s,a=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[m,g]=xd(n),[x,b]=xd(r),v=vd(d,x),y=vd(p,b),{padInfo:w,outHeight:_,outWidth:S}=function(e,t,n,r,i,s,a,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const i=function(e,t,n,r,i){null==r&&(r=gd(e,t,n));const s=e[1];return[yd((e[0]-t+2*r)/n+1,i),yd((s-t+2*r)/n+1,i)]}([t,n],s,r,e,o);c=i[0],h=i[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/i);const e=Math.max(0,(c-1)*r+s-t),o=Math.max(0,(h-1)*i+a-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/r),h=Math.ceil((n-a+1)/i);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=yd((t-s+d+p)/r+1,o),h=yd((n-a+f+m)/i+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(i,u,c,m,g,v,y,s,o),k=a?f*h:f;let I;return"channelsFirst"===o?I=[l,k,_,S]:"channelsLast"===o&&(I=[l,_,S,k]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:_,outWidth:S,outChannels:k,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:v,effectiveFilterWidth:y,dilationHeight:x,dilationWidth:b,inShape:e,outShape:I,filterShape:t}}function md(e,t,n,r,i,s=!1,a="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,h,d]=e;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,d,u,c,h]=e}const[p,f,m,,g]=t,[x,b,v]=bd(n),[y,w,_]=bd(r),S=vd(p,y),k=vd(f,w),I=vd(m,_),{padInfo:E,outDepth:T,outHeight:C,outWidth:M}=function(e,t,n,r,i,s,a,o,l,u,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,i,s){null==i&&(i=gd(e,t,r));const a=e[1],o=e[2];return[yd((e[0]-t+2*i)/r+1,s),yd((a-t+2*i)/r+1,s),yd((o-t+2*i)/r+1,s),1]}([t,n,r,1],o,0,i,e,c);d=s[0],p=s[1],f=s[2]}else if("same"===e){d=Math.ceil(t/i),p=Math.ceil(n/s),f=Math.ceil(r/a);const e=(d-1)*i+o-t,c=(p-1)*s+l-n,m=(f-1)*a+u-r,g=Math.floor(e/2),x=e-g,b=Math.floor(c/2),v=c-b,y=Math.floor(m/2);h={top:b,bottom:v,left:y,right:m-y,front:g,back:x,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/i),p=Math.ceil((n-l+1)/s),f=Math.ceil((r-u+1)/a)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(i,u,c,h,x,b,v,S,k,I,o),A=s?g*d:g;let N;return"channelsFirst"===a?N=[l,A,T,C,M]:"channelsLast"===a&&(N=[l,T,C,M,A]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:T,outHeight:C,outWidth:M,outChannels:A,padInfo:E,strideDepth:x,strideHeight:b,strideWidth:v,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:S,effectiveFilterHeight:k,effectiveFilterWidth:I,dilationDepth:y,dilationHeight:w,dilationWidth:_,inShape:e,outShape:N,filterShape:t}}function gd(e,t,n,r=1){const i=vd(t,r);return Math.floor((e[0]*(n-1)-n+i)/2)}function xd(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function bd(e){return"number"==typeof e?[e,e,e]:e}function vd(e,t){return t<=1?e:e+(e-1)*(t-1)}function yd(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function wd(e){const[t,n,r]=xd(e);return 1===t&&1===n&&1===r}function _d(e,t){return wd(e)||wd(t)}function Sd(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}const kd=Wc({reshape_:function(e,t){const n={x:Bc(e,"x","reshape","string_or_numeric")},r={shape:t};return Dc.runKernel(iu,n,r)}}),Id=Wc({avgPool_:function(e,t,n,r,i){const s=Bc(e,"x","avgPool","float32");ma(_d(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let a=s,o=!1;3===s.rank&&(o=!0,a=kd(s,[1,s.shape[0],s.shape[1],s.shape[2]])),ma(4===a.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`)),null!=i&&ma(wa(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const l={x:a},u={filterSize:t,strides:n,pad:r,dimRoundingMode:i};let c=Dc.runKernel(mo,l,u);return c=_h(c,s.dtype),o?kd(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ed=Wc({avgPool3d_:function(e,t,n,r,i,s="NDHWC",a){null==a?a=[1,1,1]:Yh("dilations is deprecated, this field will be gone in v3.0.0.");const o=Bc(e,"x","avgPool3d","float32");let l=o,u=!1;4===o.rank&&(u=!0,l=kd(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),ma(5===l.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`)),ma("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),ma(_d(n,a),(()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=i&&ma(wa(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const c={x:l},h={filterSize:t,strides:n,pad:r,dimRoundingMode:i,dataFormat:s,dilations:a};let d=Dc.runKernel(xo,c,h);return d=_h(d,l.dtype),u?kd(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Td=Wc({batchNorm_:function(e,t,n,r,i,s){null==s&&(s=.001);const a=Bc(e,"x","batchNorm"),o=Bc(t,"mean","batchNorm"),l=Bc(n,"variance","batchNorm");let u,c;null!=i&&(u=Bc(i,"scale","batchNorm")),null!=r&&(c=Bc(r,"offset","batchNorm")),ma(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ma(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ma(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(e){let t;return t=0===e.rank||1===e.rank?kd(e,[1,1,1,e.size]):2===e.rank?kd(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?kd(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(a),d={x:h,scale:u,offset:c,mean:o,variance:l},p={varianceEpsilon:s},f=Dc.runKernel(al,d,p);return kd(f,a.shape)}}),Cd=Wc({batchNorm2d_:function(e,t,n,r,i,s){const a=Bc(e,"x","batchNorm"),o=Bc(t,"mean","batchNorm"),l=Bc(n,"variance","batchNorm");let u,c;return null!=i&&(u=Bc(i,"scale","batchNorm")),null!=r&&(c=Bc(r,"offset","batchNorm")),ma(2===a.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`)),ma(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),ma(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&ma(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&ma(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Td(a,o,l,c,u,s)}}),Md=Wc({batchNorm3d_:function(e,t,n,r,i,s){const a=Bc(e,"x","batchNorm"),o=Bc(t,"mean","batchNorm"),l=Bc(n,"variance","batchNorm");let u,c;return null!=i&&(u=Bc(i,"scale","batchNorm")),null!=r&&(c=Bc(r,"offset","batchNorm")),ma(3===a.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`)),ma(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),ma(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&ma(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&ma(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Td(a,o,l,c,u,s)}}),Ad=Wc({batchNorm4d_:function(e,t,n,r,i,s){const a=Bc(e,"x","batchNorm"),o=Bc(t,"mean","batchNorm"),l=Bc(n,"variance","batchNorm");let u,c;return null!=i&&(u=Bc(i,"scale","batchNorm")),null!=r&&(c=Bc(r,"offset","batchNorm")),ma(4===a.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`)),ma(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),ma(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&ma(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&ma(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Td(a,o,l,c,u,s)}}),Nd=Wc({clipByValue_:function(e,t,n){const r=Bc(e,"x","clipByValue");ma(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const i={x:r},s={clipValueMin:t,clipValueMax:n};return Dc.runKernel(ko,i,s)}}),Rd=Wc({concat_:function(e,t=0){ma(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Uc(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Sh(n[0]);const r=n,i={axis:t};return Dc.runKernel(To,r,i)}}),Dd=Wc({concat1d_:function(e){return Rd(e,0)}}),Ld=Wc({concat2d_:function(e,t){return Rd(e,t)}}),Fd=Wc({concat3d_:function(e,t){return Rd(e,t)}}),$d=Wc({concat4d_:function(e,t){return Rd(e,t)}}),Od=Wc({conv2d_:function(e,t,n,r,i="NHWC",s=[1,1],a){const o=Bc(e,"x","conv2d"),l=Bc(t,"filter","conv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=kd(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ma(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),ma(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=a&&ma(wa(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const h="NHWC"===i?u.shape[3]:u.shape[1];ma(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),ma(_d(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:i,dilations:s,dimRoundingMode:a},f=Dc.runKernel(Co,d,p);return c?kd(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Pd=Wc({conv1d_:function(e,t,n,r,i="NWC",s=1,a){const o=Bc(e,"x","conv1d"),l=Bc(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=kd(o,[1,o.shape[0],o.shape[1]])),ma(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),ma(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=a&&ma(wa(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`)),ma(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),ma(_d(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),ma("NWC"===i,(()=>`Error in conv1d: got dataFormat of ${i} but only NWC is currently supported.`));const h=kd(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=kd(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=Od(d,h,[1,n],r,"NHWC",[1,s],a);return kd(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),zd=Wc({conv2DBackpropInput_:function(e,t,n,r,i,s="NHWC",a){ma(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=kd(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),ma(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),ma(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),ma(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===s?o[3]:o[1],h="NHWC"===s?l.shape[3]:l.shape[1];ma(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),ma(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=a&&ma(wa(i),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`));const d={dy:l,filter:n},p={strides:r,pad:i,dataFormat:s,dimRoundingMode:a,inputShape:o},f=Dc.runKernel(Ao,d,p);return u?kd(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Bd=Wc({conv2dTranspose_:function(e,t,n,r,i,s){const a=Bc(e,"x","conv2dTranspose"),o=Bc(t,"filter","conv2dTranspose");return zd(n,a,o,r,i,"NHWC",s)}}),Ud=Wc({conv3d_:function(e,t,n,r,i="NDHWC",s=[1,1,1]){const a=Bc(e,"x","conv3d"),o=Bc(t,"filter","conv3d");let l=a,u=!1;4===a.rank&&(u=!0,l=kd(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),ma(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),ma(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),ma(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),ma(_d(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),ma("NDHWC"===i,(()=>`Error in conv3d: got dataFormat of ${i} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:i,dilations:s},d=Dc.runKernel(No,c,h);return u?kd(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Wd=Wc({depthwiseConv2d_:function(e,t,n,r,i="NHWC",s=[1,1],a){const o=Bc(e,"x","depthwiseConv2d"),l=Bc(t,"filter","depthwiseConv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=kd(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ma(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),ma(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),ma(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=a&&ma(wa(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const h={x:u,filter:l},d={strides:n,pad:r,dataFormat:i,dilations:s,dimRoundingMode:a},p=Dc.runKernel(Bo,h,d);return c?kd(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Vd=Wc({floorDiv_:function(e,t){let n=Bc(e,"a","floorDiv"),r=Bc(t,"b","floorDiv");[n,r]=Ec(n,r);const i={a:n,b:r};return Dc.runKernel(sl,i)}}),Gd=Wc({div_:function(e,t){let n=Bc(e,"a","div"),r=Bc(t,"b","div");if([n,r]=Ec(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Vd(n,r);const i={a:n,b:r};return Dc.runKernel(qo,i,{})}}),Hd=Wc({elu_:function(e){const t={x:Bc(e,"x","elu")};return Dc.runKernel(Xo,t)}});function jd(e,t){const n=e.length,r=[];for(let i=0;i<n;i++){const s=n-1-i,a=e[s]||1;(t[t.length-1-i]||1)>1&&1===a&&r.unshift(s)}return r}function qd(e,t){const n=[];for(let r=0;r<t.length;r++){const i=e[e.length-r-1],s=t.length-r-1,a=t[s];(null==i||1===i&&a>1)&&n.unshift(s)}return n}function Xd(e,t){const n=[],r=Math.max(e.length,t.length);for(let i=0;i<r;i++){let r=e[e.length-i-1];null==r&&(r=1);let s=t[t.length-i-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}const Kd=Wc({equal_:function(e,t){let n=Bc(e,"a","equal"),r=Bc(t,"b","equal");[n,r]=Ec(n,r),Xd(n.shape,r.shape);const i={a:n,b:r};return Dc.runKernel(Zo,i)}}),Yd=Wc({expandDims_:function(e,t=0){const n=Bc(e,"x","expandDims","string_or_numeric");ma(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},i={dim:t};return Dc.runKernel(Qo,r,i)}}),Zd=Wc({tile_:function(e,t){const n=Bc(e,"x","tile","string_or_numeric");ma(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},i={reps:t};return Dc.runKernel(Lu,r,i)}}),Jd=Wc({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const i=wh([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)i.set(1,e,e);const a=kd(i.toTensor(),[e,t]);if(null==n)return a;if(1===n.length)return Zd(Yd(a,0),[n[0],1,1]);if(2===n.length)return Zd(Yd(Yd(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return Zd(Yd(Yd(Yd(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Qd(e,t,n){const r={shape:e,value:t,dtype:n};return Dc.runKernel(nl,{},r)}const ep=Wc({floor_:function(e){const t={x:Bc(e,"x","floor")};return Dc.runKernel(il,t)}}),tp=Wc({gather_:function(e,t,n=0,r=0){const i={x:Bc(e,"x","gather"),indices:Bc(t,"indices","gather","int32")},s={axis:n,batchDims:r};return Dc.runKernel(ol,i,s)}}),np=Wc({greater_:function(e,t){let n=Bc(e,"a","greater"),r=Bc(t,"b","greater");[n,r]=Ec(n,r),Xd(n.shape,r.shape);const i={a:n,b:r};return Dc.runKernel(ul,i)}}),rp=Wc({greaterEqual_:function(e,t){let n=Bc(e,"a","greaterEqual"),r=Bc(t,"b","greaterEqual");[n,r]=Ec(n,r),Xd(n.shape,r.shape);const i={a:n,b:r};return Dc.runKernel(cl,i)}}),ip=Wc({leakyRelu_:function(e,t=.2){const n={x:Bc(e,"x","leakyRelu")},r={alpha:t};return Dc.runKernel(xl,n,r)}}),sp=Wc({log_:function(e){const t={x:Bc(e,"x","log")};return Dc.runKernel(wl,t)}}),ap=Wc({exp_:function(e){const t={x:Bc(e,"x","exp")};return Dc.runKernel(Jo,t)}}),op=Wc({max_:function(e,t=null,n=!1){const r={x:Bc(e,"x","max")},i={reductionIndices:t,keepDims:n};return Dc.runKernel(Cl,r,i)}}),lp=Wc({mul_:function(e,t){let n=Bc(e,"a","mul"),r=Bc(t,"b","mul");[n,r]=Ec(n,r);const i={a:n,b:r};return Dc.runKernel(Ul,i)}}),up=Wc({sub_:function(e,t){let n=Bc(e,"a","sub"),r=Bc(t,"b","sub");[n,r]=Ec(n,r);const i={a:n,b:r};return Dc.runKernel(Mu,i)}}),cp=Wc({sum_:function(e,t=null,n=!1){let r=Bc(e,"x","sum");"bool"===r.dtype&&(r=_h(r,"int32"));const i={x:r},s={axis:t,keepDims:n};return Dc.runKernel(Su,i,s)}}),hp=Wc({logSoftmax_:function(e,t=-1){const n=Bc(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=rd(((e,n)=>{const r=op(e,t,!0),i=up(e,r),s=up(_h(i,"float32"),sp(cp(ap(i),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{const[r]=n,i=ap(r);return up(e,lp(cp(e,t,!0),i))}}}));return r(n)}}),dp=Wc({logicalAnd_:function(e,t){const n=Bc(e,"a","logicalAnd","bool"),r=Bc(t,"b","logicalAnd","bool");Xd(n.shape,r.shape);const i={a:n,b:r};return Dc.runKernel(Sl,i)}}),pp=Wc({maxPool_:function(e,t,n,r,i){const s=Bc(e,"x","maxPool");let a=s,o=!1;3===s.rank&&(o=!0,a=kd(s,[1,s.shape[0],s.shape[1],s.shape[2]])),ma(4===a.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`)),ma(_d(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=i&&ma(wa(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const l={x:a},u={filterSize:t,strides:n,pad:r,dimRoundingMode:i},c=Dc.runKernel(Al,l,u);return o?kd(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),fp=Wc({maxPool3d_:function(e,t=[1,1,1],n,r,i,s="NDHWC",a){null==a?a=[1,1,1]:Yh("dilations is deprecated, this field will be gone in v3.0.0.");const o=Bc(e,"x","maxPool3d");let l=o,u=!1;4===o.rank&&(u=!0,l=kd(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),ma(5===l.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`)),ma("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),ma(_d(n,a),(()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=i&&ma(wa(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const c={x:l},h={filterSize:t,strides:n,pad:r,dimRoundingMode:i,dataFormat:s,dilations:a},d=Dc.runKernel(Rl,c,h);return u?kd(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),mp=Wc({maximum_:function(e,t){let n=Bc(e,"a","maximum"),r=Bc(t,"b","maximum");[n,r]=Ec(n,r),"bool"===n.dtype&&(n=_h(n,"int32"),r=_h(r,"int32")),Xd(n.shape,r.shape);const i={a:n,b:r};return Dc.runKernel(Ml,i)}}),gp=Wc({mean_:function(e,t=null,n=!1){const r={x:Bc(e,"x","mean")},i={axis:t,keepDims:n};return Dc.runKernel(Fl,r,i)}}),xp=Wc({min_:function(e,t=null,n=!1){const r={x:Bc(e,"x","min")},i={axis:t,keepDims:n};return Dc.runKernel($l,r,i)}}),bp=Wc({minimum_:function(e,t){let n=Bc(e,"a","minimum"),r=Bc(t,"b","minimum");[n,r]=Ec(n,r),"bool"===n.dtype&&(n=_h(n,"int32"),r=_h(r,"int32")),Xd(n.shape,r.shape);const i={a:n,b:r};return Dc.runKernel(Ol,i)}});function vp(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function yp(e,t,n){const r=e.length+t.length,i=[];let s=0,a=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?i.push(e[s++]):i.push(t[a++]);return i}function wp(e,t){const n=[],r=e.length;for(let i=0;i<r;i++)-1===t.indexOf(i)&&n.push(e[i]);return[n,t.map((t=>e[t]))]}function _p(e,t){return yp(e,t.map((e=>1)),t)}function Sp(e,t,n){ma(vp(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function kp(e,t){if(vp(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Ip(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Ep(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Tp=Wc({square_:function(e){const t=Bc(e,"x","square");return Dc.runKernel("Square",{x:t},{})}}),Cp=Wc({moments_:function(e,t=null,n=!1){const r=Ea(t,(e=Bc(e,"x","moments")).shape),i=gp(e,r,n);let s=i.shape;n||(s=_p(i.shape,r));const a=Tp(up(_h(e,"float32"),kd(i,s)));return{mean:i,variance:gp(a,r,n)}}}),Mp=Wc({neg_:function(e){const t={x:Bc(e,"x","neg")};return Dc.runKernel(Wl,t)}}),Ap=Wc({notEqual_:function(e,t){let n=Bc(e,"a","notEqual"),r=Bc(t,"b","notEqual");[n,r]=Ec(n,r),Xd(n.shape,r.shape);const i={a:n,b:r};return Dc.runKernel(Vl,i)}}),Np=Wc({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const i={indices:Bc(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:r};return Dc.runKernel(Xl,i,s)}});function Rp(e,t="float32"){if("complex64"===t){const t=Rp(e,"float32"),n=Rp(e,"float32");return Vc(t,n)}const n=Wa(va(e),t);return Dc.makeTensor(n,e,t)}function Dp(e,t="float32"){if("complex64"===t){const t=Dp(e,"float32"),n=Rp(e,"float32");return Vc(t,n)}const n=Ua(va(e),t);return Dc.makeTensor(n,e,t)}const Lp=Wc({onesLike_:function(e){const t={x:Bc(e,"x","onesLike")};return Dc.runKernel(ql,t)}}),Fp=Wc({pad_:function(e,t,n=0){const r=Bc(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:n},s={x:r};return Dc.runKernel(Yl,s,i)}}),$p=Wc({prelu_:function(e,t){const n={x:Bc(e,"x","prelu"),alpha:Bc(t,"alpha","prelu")};return Dc.runKernel(Jl,n)}});var Op=n(6823);class Pp{constructor(e,t,n,r,i){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=i||Math.random();this.random=Op.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,i,s;do{r=2*this.random()-1,i=2*this.random()-1,s=r*r+i*i}while(s>=1||0===s);const a=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*a,t=this.mean+this.stdDev*i*a,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class zp{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Op.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Bp=Wc({randomNormal_:function(e,t=0,n=1,r,i){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new Pp(t,n,r,!1,i),a=wh(e,r);for(let e=0;e<a.values.length;e++)a.values[e]=s.nextValue();return a.toTensor()}}),Up=Wc({randomUniform_:function(e,t=0,n=1,r="float32",i){const s=wh(e,r),a=new zp(t,n,null,i);for(let e=0;e<s.values.length;e++)s.values[e]=a.nextValue();return s.toTensor()}}),Wp=Wc({relu_:function(e){const t={x:Bc(e,"x","relu")};return Dc.runKernel(ru,t)}}),Vp=Wc({reverse_:function(e,t){const n={x:Bc(e,"x","reverse")},r={dims:t};return Dc.runKernel(cu,n,r)}}),Gp=Wc({selu_:function(e){const t={x:Bc(e,"x","selu")};return Dc.runKernel(mu,t)}}),Hp=Wc({separableConv2d_:function(e,t,n,r,i,s=[1,1],a="NHWC"){const o=Bc(e,"x","separableConv2d"),l=Bc(t,"depthwiseFilter","separableConv2d"),u=Bc(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=kd(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");ma(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),ma(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),ma(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),ma(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),ma(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];ma(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=Wd(c,l,r,i,a,s),m=Od(f,u,1,"valid",a);return h?kd(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),jp=Wc({sigmoid_:function(e){const t={x:Bc(e,"x","sigmoid")};return Dc.runKernel(yu,t)}}),qp=Wc({slice_:function(e,t,n){const r=Bc(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const i={x:r},s={begin:t,size:n};return Dc.runKernel(gu,i,s)}}),Xp=Wc({slice1d_:function(e,t,n){const r=Bc(e,"x","slice1d");return ma(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),qp(r,[t],[n])}}),Kp=Wc({slice2d_:function(e,t,n){const r=Bc(e,"x","slice2d");return ma(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),qp(r,t,n)}}),Yp=Wc({slice3d_:function(e,t,n){const r=Bc(e,"x","slice3d");return ma(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),qp(r,t,n)}}),Zp=Wc({slice4d_:function(e,t,n){const r=Bc(e,"x","slice4d");return ma(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),qp(r,t,n)}}),Jp=Wc({softmax_:function(e,t=-1){const n=Bc(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},i={dim:t};return Dc.runKernel(Eu,r,i)}}),Qp=Wc({softplus_:function(e){const t={x:Bc(e,"x","softplus")};return Dc.runKernel(wu,t)}}),ef=Wc({split_:function(e,t,n=0){const r={x:Bc(e,"x","split")},i={numOrSizeSplits:t,axis:n};return Dc.runKernel(Iu,r,i)}}),tf=Wc({sqrt_:function(e){const t={x:Bc(e,"x","sqrt")};return Dc.runKernel(_u,t)}}),nf=Wc({squeeze_:function(e,t){const n=Bc(e,"x","squeeze");return kd(n,Ta(n.shape,t).newShape)}}),rf=Wc({stack_:function(e,t=0){const n=Uc(e,"tensors","stack","string_or_numeric");ma(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&ma(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,i={axis:t};return Dc.runKernel(Kl,r,i)}}),sf=Wc({tanh_:function(e){const t={x:Bc(e,"x","tanh")};return Dc.runKernel(Du,t)}});function af(e,t){xa(e);const n=Oc(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Gc(e,null,n,t)}const of=Wc({truncatedNormal_:function(e,t=0,n=1,r,i){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new Pp(t,n,r,!0,i),a=wh(e,r);for(let e=0;e<a.values.length;e++)a.values[e]=s.nextValue();return a.toTensor()}}),lf=Wc({unstack_:function(e,t=0){const n=Bc(e,"x","unstack","string_or_numeric");ma(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},i={axis:t};return Dc.runKernel(Pu,r,i)}}),uf=Wc({broadcastTo_:function(e,t){let n=Bc(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=kd(n,e)}const i=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(i[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Sh(n);const a={x:n},o={reps:s};return Dc.runKernel(Lu,a,o)}}),cf=Wc({where_:function(e,t,n){const r=Bc(t,"a","where"),i=Bc(n,"b","where"),s=Bc(e,"condition","where","bool"),a=Xd(r.shape,i.shape),o=uf(r,a),l=uf(i,a);1===s.rank&&ma(s.shape[0]===r.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==s.rank&&ga(s.shape,l.shape,"Error in where: ");const u={condition:s,t:o,e:l};return Dc.runKernel(fu,u)}}),hf=Wc({zerosLike_:function(e){const t={x:Bc(e,"x","zerosLike")};return Dc.runKernel(Bu,t)}}),df=Wc({transpose_:function(e,t){const n=Bc(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),ma(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{ma(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},i={perm:t};return Dc.runKernel($u,r,i)}}),pf=Wc({dropout_:function(e,t,n,r){const i=Bc(e,"x","dropout");if(ma("float32"===i.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${i.dtype} tensor instead.`)),ma(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof gc?i.clone():i;const s=function(e,t){if(null==t)return e.shape.slice();if(ya(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(i,n),a=1-t,o=Gd(ep(od(Up(s,0,1,"float32",r),a)),a);return lp(i,o)}}),ff=Wc({imag_:function(e){const t={input:Bc(e,"input","imag")};return Dc.runKernel(pl,t)}}),mf=Wc({real_:function(e){const t={input:Bc(e,"input","real")};return Dc.runKernel(tu,t)}}),gf=Wc({fft_:function(e){ma("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Dc.runKernel(tl,t)}}),xf=Wc({rfft_:function(e,t){ma("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let i;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,i=qp(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,i=Rd([e,Rp(r)],e.shape.length-1),n=t}else i=e;const s=hf(i),a=kd(Vc(i,s),[r,n]),o=gf(a),l=Math.floor(n/2)+1,u=mf(o),c=ff(o),h=ef(u,[l,n-l],u.shape.length-1),d=ef(c,[l,n-l],c.shape.length-1),p=i.shape.slice();return p[i.shape.length-1]=l,kd(Vc(h[0],d[0]),p)}}),bf=Wc({ifft_:function(e){ma("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Dc.runKernel(dl,t)}}),vf=Wc({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const i=kd(e,[n,t]);r=bf(i)}else{const i=[n,2*(t-1)],s=kd(mf(e),[n,t]),a=kd(ff(e),[n,t]),o=Vp(qp(s,[0,1],[n,t-2]),1),l=lp(Vp(qp(a,[0,1],[n,t-2]),1),id(-1)),u=Rd([s,o],1),c=Rd([a,l],1),h=kd(Vc(u,c),[i[0],i[1]]);r=bf(h)}if(r=mf(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=kd(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),yf=Wc({conv2DBackpropFilter_:function(e,t,n,r,i,s="NHWC",a){let o=e;3===e.rank&&(o=kd(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=kd(t,[1,t.shape[0],t.shape[1],t.shape[2]])),ma(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),ma(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),ma(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===s?o.shape[3]:o.shape[1],c="NHWC"===s?l.shape[3]:l.shape[1];ma(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),ma(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=a&&ma(wa(i),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`));const h={x:o,dy:l},d={strides:r,pad:i,dataFormat:s,dimRoundingMode:a,filterShape:n};return Dc.runKernel(Mo,h,d)}}),wf=Wc({relu6_:function(e){const t={x:Bc(e,"x","relu6")};return Dc.runKernel(uu,t)}}),_f=Wc({step_:function(e,t=0){const n={x:Bc(e,"x","step")},r={alpha:t};return Dc.runKernel(Uu,n,r)}});function Sf(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return lp(e,_f(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function kf(e,t){let n=t;const r=qd(e.shape,t.shape);return r.length>0&&(n=cp(n,r)),kd(n,e.shape)}function If(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Wp(e);if("elu"===t)return Hd(e);if("relu6"===t)return wf(e);if("prelu"===t)return $p(e,n);if("leakyrelu"===t)return ip(e,r);throw new Error(`Unknown fused activation ${t}.`)}const Ef=(e,t)=>!(e>0)||"linear"===t,Tf=Wc({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:i="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===Ef(Dc.state.gradientDepth,l)){let h=Od(e,t,n,r,i,s,a);return null!=o&&(h=od(h,o)),If(h,l,u,c)}const h=Bc(e,"x","conv2d"),d=Bc(t,"filter","conv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=kd(h,[1,h.shape[0],h.shape[1],h.shape[2]])),ma(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),ma(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),null!=a&&ma(wa(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`)),ma(p.shape[3]===d.shape[2],(()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${d.shape[2]}.`)),ma(_d(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),ma("NHWC"===i,(()=>`Error in conv2d: got dataFormat of ${i} but only NHWC is currently supported.`));const m=fd(p.shape,d.shape,n,s,r,a);let g,x;null!=o&&(g=Bc(o,"bias","fused conv2d"),[g]=Ec(g,h),Xd(m.outShape,g.shape)),null!=u&&(x=Bc(u,"prelu weights","fused conv2d"));const b=(e,t)=>{const[i,a,o,u]=t,c=Sf(e,o,l);ma(wd(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const h=[zd(a.shape,c,i,n,r),yf(a,c,i.shape,n,r)];if(null!=u){const e=kf(u,c);h.push(e)}return h},v={x:p,filter:d,bias:g,preluActivationWeights:x},y={strides:n,pad:r,dataFormat:i,dilations:s,dimRoundingMode:a,activation:l,leakyreluAlpha:c};if(null==o){const e=rd(((e,t,n)=>{let r=Dc.runKernel(Gu,v,y);return n([t,e,r]),f&&(r=kd(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(p,d)}{const e=rd(((e,t,n,r)=>{let i=Dc.runKernel(Gu,v,y);return r([t,e,i,n]),f&&(i=kd(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:b}}));return e(p,d,g)}}}),Cf=Wc({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,i,s=[1,1],a){let o=e;3===e.rank&&(o=kd(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=kd(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:i,dimRoundingMode:a,dilations:s,filterShape:n};return Dc.runKernel(Uo,u,c)}}),Mf=Wc({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,i,s=[1,1],a){let o=t,l=!1;3===t.rank&&(l=!0,o=kd(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:i,dimRoundingMode:a,dilations:s,inputShape:e},h=Dc.runKernel(Wo,u,c);return l?kd(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});Wc({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:i="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===Ef(Dc.state.gradientDepth,l)){let h=Wd(e,t,n,r,i,s,a);return null!=o&&(h=od(h,o)),If(h,l,u,c)}const h=Bc(e,"x","depthwiseConv2d"),d=Bc(t,"filter","depthwiseConv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=kd(h,[1,h.shape[0],h.shape[1],h.shape[2]])),ma(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),ma(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),ma(p.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==s&&(s=[1,1]),ma(_d(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),null!=a&&ma(wa(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${a} but got pad ${r}.`));const m=fd(p.shape,d.shape,n,s,r,a,!0);let g,x;null!=o&&(g=Bc(o,"bias","fused conv2d"),[g]=Ec(g,h),Xd(m.outShape,g.shape)),null!=u&&(x=Bc(u,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{ma(wd(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[i,o,u,c]=t,h=Sf(e,u,l),d=Mf(o.shape,h,i,n,r,s,a),p=Cf(o,h,i.shape,n,r,s,a);return null!=c?[d,p,kf(g,h)]:[d,p]},v={x:p,filter:d,bias:g,preluActivationWeights:x},y={strides:n,pad:r,dataFormat:i,dilations:s,dimRoundingMode:a,activation:l,leakyreluAlpha:c};if(null==o){const e=rd(((e,t,n)=>{let r=Dc.runKernel(Hu,v,y);return n([t,e,r]),f&&(r=kd(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(p,d)}{const e=rd(((e,t,n,r)=>{let i=Dc.runKernel(Hu,v,y);return r([t,e,i,n]),f&&(i=kd(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:b}}));return e(p,d,g)}}});const Af=Wc({matMul_:function(e,t,n=!1,r=!1){let i=Bc(e,"a","matMul"),s=Bc(t,"b","matMul");[i,s]=Ec(i,s);const a={a:i,b:s},o={transposeA:n,transposeB:r};return Dc.runKernel(vo,a,o)}}),Nf=Wc({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:i,activation:s="linear",preluActivationWeights:a,leakyreluAlpha:o}){if(!1===Ef(Dc.state.gradientDepth,s)){let l=Af(e,t,n,r);return null!=i&&(l=od(l,i)),If(l,s,a,o)}let l=Bc(e,"a","fused matMul"),u=Bc(t,"b","fused matMul");[l,u]=Ec(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=va(f),x=va(m);ma(l.rank>=2&&u.rank>=2&&l.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`)),ma(ya(f,m),(()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`)),ma(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=l.shape.slice(0,-2).concat([d,p]),v=kd(l,n?[g,c,d]:[g,d,c]),y=kd(u,r?[x,p,h]:[x,h,p]);let w,_;null!=i&&(w=Bc(i,"bias","fused matMul"),[w]=Ec(w,l),Xd(b,w.shape)),null!=a&&(_=Bc(a,"prelu weights","fused matMul"));const S=(e,t)=>{const[a,o,l,u]=t,c=Sf(kd(e,l.shape),l,s);let h,d;return n||r?!n&&r?(h=Af(c,o,!1,!1),d=Af(c,a,!0,!1)):n&&!r?(h=Af(o,c,!1,!0),d=Af(a,c,!1,!1)):(h=Af(o,c,!0,!0),d=Af(c,a,!0,!0)):(h=Af(c,o,!1,!0),d=Af(a,c,!0,!1)),null!=i?[h,d,kf(u,c)]:[h,d]},k={a:v,b:y,bias:w,preluActivationWeights:_},I={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};if(null==i){const e=rd(((e,t,n)=>{const r=Dc.runKernel(Vu,k,I);return n([e,t,r]),{value:kd(r,b),gradFunc:S}}));return e(v,y)}{const e=rd(((e,t,n,r)=>{const i=Dc.runKernel(Vu,k,I);return r([e,t,i,n]),{value:kd(i,b),gradFunc:S}}));return e(v,y,w)}}});function Rf(e,t,n){const r=1-e%2,i=new Float32Array(e);for(let s=0;s<e;++s){const a=2*Math.PI*s/(e+r-1);i[s]=t-n*Math.cos(a)}return af(i,"float32")}Wc({hammingWindow_:function(e){return Rf(e,.54,.46)}});const Df=Wc({hannWindow_:function(e){return Rf(e,.5,.5)}});function Lf(e,t,n){if(xa(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Oc(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Gc(e,t,r,n)}const Ff=Wc({frame_:function(e,t,n,r=!1,i=0){let s=0;const a=[];for(;s+t<=e.size;)a.push(qp(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=Rd([qp(e,s,t-r),Qd([r],i)]);a.push(o),s+=n}return 0===a.length?Lf([],[0,t]):kd(Rd(a),[a.length,t])}});function $f(e,t,n,r,i,s){null==r&&(r=.5),null==i&&(i=Number.NEGATIVE_INFINITY),null==s&&(s=0);const a=e.shape[0];return n=Math.min(n,a),ma(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),ma(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),ma(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),ma(1===t.rank,(()=>"scores must be a 1D tensor")),ma(t.shape[0]===a,(()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${t.shape[0]}`)),ma(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:i,softNmsSigma:s}}function Of(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,i=e.length,s=0,a=!1;for(;r<i;){s=r+(i-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(i=s,a=!o)}return a?r:-r-1}(e,t,n||Pf)}(e,t,n),i=r<0?-(r+1):r;e.splice(i,0,t)}function Pf(e,t){return e>t?1:e<t?-1:0}function zf(e,t,n,r,i){return Wf(e,t,n,r,i,0)}function Bf(e,t,n,r,i,s){return Wf(e,t,n,r,i,0,!1,s,!0)}function Uf(e,t,n,r,i,s){return Wf(e,t,n,r,i,s,!0)}function Wf(e,t,n,r,i,s,a=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>i&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Hf);const c=s>0?-.5/s:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:a}=t;if(n<i)break;let o=!1;for(let n=h.length-1;n>=a;--n){const a=Vf(e,s,h[n]);if(a>=r){o=!0;break}if(t.score=t.score*Gf(r,c,a),t.score<=i)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(s),d.push(t.score)):t.score>i&&Of(u,t,Hf))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return a&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function Vf(e,t,n){const r=e.subarray(4*t,4*t+4),i=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(i[0],i[2]),c=Math.min(i[1],i[3]),h=Math.max(i[0],i[2]),d=Math.max(i[1],i[3]),p=(o-s)*(l-a),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(s,u),g=Math.max(a,c),x=Math.min(o,h),b=Math.min(l,d),v=Math.max(x-m,0)*Math.max(b-g,0);return v/(p+f-v)}function Gf(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Hf(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}Wc({stft_:function(e,t,n,r,i=Df){var s;null==r&&(s=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(s)/Math.log(2)))));const a=Ff(e,t,n),o=lp(a,i(t)),l=[];for(let e=0;e<a.shape[0];e++)l.push(xf(qp(o,[e,0],[1,t]),r));return Rd(l)}}),Wc({cropAndResize_:function(e,t,n,r,i="bilinear",s=0){const a=Bc(e,"image","cropAndResize"),o=Bc(t,"boxes","cropAndResize","float32"),l=Bc(n,"boxInd","cropAndResize","int32"),u=o.shape[0];ma(4===a.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`)),ma(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),ma(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),ma(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),ma(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),ma("bilinear"===i||"nearest"===i,(()=>`method must be bilinear or nearest, but was ${i}`));const c={image:a,boxes:o,boxInd:l},h={method:i,extrapolationValue:s,cropSize:r};return Dc.runKernel(Oo,c,h)}}),Wc({flipLeftRight_:function(e){const t=Bc(e,"image","flipLeftRight","float32");ma(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Dc.runKernel(rl,n,{})}}),Wc({rotateWithOffset_:function(e,t,n=0,r=.5){const i=Bc(e,"image","rotateWithOffset","float32");ma(4===i.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${i.rank}.`));const s={image:i},a={radians:t,fillValue:n,center:r};return Dc.runKernel(Wu,s,a)}}),Wc({nonMaxSuppression_:function(e,t,n,r=.5,i=Number.NEGATIVE_INFINITY){const s=Bc(e,"boxes","nonMaxSuppression"),a=Bc(t,"scores","nonMaxSuppression"),o=$f(s,a,n,r,i),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:i=o.scoreThreshold};return Dc.runKernel(Gl,{boxes:s,scores:a},l)}}),Wc({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,i=Number.NEGATIVE_INFINITY,s=0){const a=Bc(e,"boxes","nonMaxSuppression"),o=Bc(t,"scores","nonMaxSuppression"),l=$f(a,o,n,r,i,s),u={boxes:a,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:i=l.scoreThreshold,softNmsSigma:s=l.softNmsSigma},h=Dc.runKernel(jl,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Wc({nonMaxSuppressionPadded_:function(e,t,n,r=.5,i=Number.NEGATIVE_INFINITY,s=!1){const a=Bc(e,"boxes","nonMaxSuppression"),o=Bc(t,"scores","nonMaxSuppression"),l=$f(a,o,n,r,i,null),u={boxes:a,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:s},h=Dc.runKernel(Hl,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const jf=Wc({resizeBilinear_:function(e,t,n=!1,r=!1){const i=Bc(e,"images","resizeBilinear");ma(3===i.rank||4===i.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${i.rank}.`)),ma(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),ma(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=i,a=!1;3===i.rank&&(a=!0,s=kd(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=Dc.runKernel(ou,o,l);return a?kd(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),qf=Wc({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const i=Bc(e,"images","resizeNearestNeighbor");ma(3===i.rank||4===i.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${i.rank}.`)),ma(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),ma("float32"===i.dtype||"int32"===i.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),ma(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=i,a=!1;3===i.rank&&(a=!0,s=kd(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=Dc.runKernel(su,o,l);return a?kd(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Xf=Wc({lessEqual_:function(e,t){let n=Bc(e,"a","lessEqual"),r=Bc(t,"b","lessEqual");[n,r]=Ec(n,r),Xd(n.shape,r.shape);const i={a:n,b:r};return Dc.runKernel(vl,i)}});function Kf(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const i={start:e,stop:t,step:n,dtype:r};return Dc.runKernel(eu,{},i)}const Yf=Wc({bandPart_:function(e,t,n){ma(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),ma(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Bc(e,"a","bandPart");ma(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const i=r.shape,[s,a]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=a))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`);t<0&&(t=s),n<0&&(n=a);const o=kd(Kf(0,s,1,"int32"),[-1,1]),l=Kf(0,a,1,"int32"),u=up(o,l),c=dp(Xf(u,id(+t,"int32")),rp(u,id(-n,"int32"))),h=Rp([s,a],r.dtype);return kd(rf(lf(kd(r,[-1,s,a])).map((e=>cf(c,e,h)))),i)}}),Zf=Wc({pow_:function(e,t){let n=Bc(e,"base","pow"),r=Bc(t,"exp","pow");[n,r]=Ec(n,r);const i={a:n,b:r};return Dc.runKernel(Zl,i)}});function Jf(e,t,n=null){if(0===e.rank)return ad(e);if(1!==e.rank&&null===n)return Jf(kd(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return cp(ad(e),n);if(t===1/0)return op(ad(e),n);if(t===-1/0)return xp(ad(e),n);if("euclidean"===t||2===t)return tf(cp(Zf(ad(e),id(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return op(cp(ad(e),n[0]),n[1]-1);if(t===1/0)return op(cp(ad(e),n[1]),n[0]);if(t===-1/0)return xp(cp(ad(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return tf(cp(Tp(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Qf=Wc({norm_:function(e,t="euclidean",n=null,r=!1){const i=Jf(e=Bc(e,"x","norm"),t,n);let s=i.shape;if(r){const t=Ea(n,e.shape);s=_p(i.shape,t)}return kd(i,s)}}),em=Wc({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,ma(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)ma(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=ef(e,e.shape[0],0).map((e=>nf(e,[0])));ma(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(Dc.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=lp(cp(lp(n[r],e)),n[r]);e=up(e,t)}return Gd(e,Qf(e,"euclidean"))})));return t?rf(n,0):n}});function tm(e,t=!1){return Dc.tidy((()=>{ma(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let i=Jd(n),s=Sh(e);const a=Lf([[1]],[1,1]);let o=Sh(a);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=s,l=o,u=i;[o,s,i]=Dc.tidy((()=>{const t=qp(s,[e,e],[n-e,1]),l=Qf(t),u=qp(s,[e,e],[1,1]),c=cf(np(u,0),Lf([[-1]]),Lf([[1]])),h=up(u,lp(c,l)),d=Gd(t,h);o=1===d.shape[0]?Sh(a):Rd([a,qp(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Mp(Gd(Af(c,h),l)),f=qp(s,[e,0],[n-e,r]),m=lp(p,o),g=df(o);if(0===e)s=up(f,Af(m,Af(g,f)));else{const t=up(f,Af(m,Af(g,f)));s=Rd([qp(s,[0,0],[e,r]),t],0)}const x=df(m),b=qp(i,[0,e],[n,i.shape[1]-e]);if(0===e)i=up(b,Af(Af(b,o),x));else{const t=up(b,Af(Af(b,o),x));i=Rd([qp(i,[0,0],[n,e]),t],1)}return[o,s,i]})),ed([t,l,u])}return!t&&n>r&&(i=qp(i,[0,0],[n,r]),s=qp(s,[0,0],[r,r])),[i,s]}))}const nm=Wc({qr_:function(e,t=!1){if(ma(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return tm(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=lf(kd(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),i=[],s=[];return r.forEach((e=>{const[n,r]=tm(e,t);i.push(n),s.push(r)})),[kd(rf(i,0),e.shape),kd(rf(s,0),e.shape)]}}});var rm;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(rm||(rm={}));const im=Wc({computeWeightedLoss_:function(e,t,n=rm.SUM_BY_NONZERO_WEIGHTS){const r=Bc(e,"losses","computeWeightedLoss");let i=null;null!=t&&(i=Bc(t,"weights","computeWeightedLoss"));const s=null==i?r:lp(r,i);if(n===rm.NONE)return s;if(n===rm.SUM)return cp(s);if(n===rm.MEAN){if(null==i)return gp(s);{const e=r.size/i.size,t=Gd(cp(s),cp(i));return e>1?Gd(t,id(e)):t}}if(n===rm.SUM_BY_NONZERO_WEIGHTS){if(null==i)return Gd(cp(s),id(r.size));{const e=lp(i,Dp(r.shape)),t=_h(cp(Ap(e,id(0))),"float32");return Gd(cp(s),t)}}throw Error(`Unknown reduction: ${n}`)}});Wc({absoluteDifference_:function(e,t,n,r=rm.SUM_BY_NONZERO_WEIGHTS){const i=Bc(e,"labels","absoluteDifference"),s=Bc(t,"predictions","absoluteDifference");let a=null;null!=n&&(a=Bc(n,"weights","absoluteDifference")),ga(i.shape,s.shape,"Error in absoluteDifference: ");const o=ad(up(i,s));return im(o,a,r)}}),Wc({cosineDistance_:function(e,t,n,r,i=rm.SUM_BY_NONZERO_WEIGHTS){const s=Bc(e,"labels","cosineDistance"),a=Bc(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Bc(r,"weights","cosineDistance")),ga(s.shape,a.shape,"Error in cosineDistance: ");const l=id(1),u=up(l,cp(lp(s,a),n,!0));return im(u,o,i)}}),Wc({hingeLoss_:function(e,t,n,r=rm.SUM_BY_NONZERO_WEIGHTS){let i=Bc(e,"labels","hingeLoss");const s=Bc(t,"predictions","hingeLoss");let a=null;null!=n&&(a=Bc(n,"weights","hingeLoss")),ga(i.shape,s.shape,"Error in hingeLoss: ");const o=id(1);i=up(lp(id(2),i),o);const l=Wp(up(o,lp(i,s)));return im(l,a,r)}}),Wc({huberLoss_:function(e,t,n,r=1,i=rm.SUM_BY_NONZERO_WEIGHTS){const s=Bc(e,"labels","huberLoss"),a=Bc(t,"predictions","huberLoss");let o=null;null!=n&&(o=Bc(n,"weights","huberLoss")),ga(s.shape,a.shape,"Error in huberLoss: ");const l=id(r),u=ad(up(a,s)),c=bp(u,l),h=up(u,c),d=od(lp(id(.5),Tp(c)),lp(l,h));return im(d,o,i)}}),Wc({logLoss_:function(e,t,n,r=1e-7,i=rm.SUM_BY_NONZERO_WEIGHTS){const s=Bc(e,"labels","logLoss"),a=Bc(t,"predictions","logLoss");let o=null;null!=n&&(o=Bc(n,"weights","logLoss")),ga(s.shape,a.shape,"Error in logLoss: ");const l=id(1),u=id(r),c=Mp(lp(s,sp(od(a,u)))),h=lp(up(l,s),sp(od(up(l,a),u))),d=up(c,h);return im(d,o,i)}});const sm=Wc({squaredDifference_:function(e,t){let n=Bc(e,"a","squaredDifference"),r=Bc(t,"b","squaredDifference");[n,r]=Ec(n,r),Xd(n.shape,r.shape);const i={a:n,b:r};return Dc.runKernel(Tu,i,{})}});Wc({meanSquaredError_:function(e,t,n,r=rm.SUM_BY_NONZERO_WEIGHTS){const i=Bc(e,"labels","meanSquaredError"),s=Bc(t,"predictions","meanSquaredError");let a=null;null!=n&&(a=Bc(n,"weights","meanSquaredError")),ga(i.shape,s.shape,"Error in meanSquaredError: ");const o=sm(i,s);return im(o,a,r)}});const am=Wc({log1p_:function(e){const t={x:Bc(e,"x","log1p")};return Dc.runKernel(_l,t)}});Wc({sigmoidCrossEntropy_:function(e,t,n,r=0,i=rm.SUM_BY_NONZERO_WEIGHTS){let s=Bc(e,"multiClassLabels","sigmoidCrossEntropy");const a=Bc(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Bc(n,"weights","sigmoidCrossEntropy")),ga(s.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=id(r),t=id(1),n=id(.5);s=od(lp(s,up(t,e)),lp(n,e))}const l=function(e,t){const n=Bc(e,"labels","sigmoidCrossEntropyWithLogits"),r=Bc(t,"logits","sigmoidCrossEntropyWithLogits");ga(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const i=Wp(r),s=lp(r,n),a=am(ap(Mp(ad(r))));return od(up(i,s),a)}(s,a);return im(l,o,i)}});const om=Wc({logSumExp_:function(e,t=null,n=!1){const r=Bc(e,"x","logSumExp"),i=Ea(t,r.shape),s=op(r,i,!0),a=up(r,s),o=ap(a),l=cp(o,i),u=sp(l),c=od(kd(s,u.shape),u);if(n){const e=_p(c.shape,i);return kd(c,e)}return c}});Wc({softmaxCrossEntropy_:function(e,t,n,r=0,i=rm.SUM_BY_NONZERO_WEIGHTS){let s=Bc(e,"onehotLabels","softmaxCrossEntropy");const a=Bc(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Bc(n,"weights","softmaxCrossEntropy")),ga(s.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const e=id(r),t=id(1),n=id(s.shape[1]);s=od(lp(s,up(t,e)),Gd(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=rd(((e,t,r)=>{const i=om(t,[n],!0),s=up(_h(t,"float32"),i);r([e,s]);const a=Mp(lp(s,e));return{value:cp(a,[n]),gradFunc:(e,t)=>{const[r,i]=t,s=_p(e.shape,[n]);return[lp(kd(e,s),up(_h(r,"float32"),ap(i))),lp(kd(e,s),up(ap(i),_h(r,"float32")))]}}}));return r(e,t)}(s,a);return im(l,o,i)}});const lm={bandPart:Yf,gramSchmidt:em,qr:nm};class um extends sd{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Dc.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Dc.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Qh((()=>hf(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Qh((()=>hf(r).variable(!1)))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const s=this.accumulatedGrads[n].variable,a=this.accumulatedUpdates[n].variable;Qh((()=>{const e=od(lp(s,this.rho),lp(Tp(i),1-this.rho)),t=lp(Gd(tf(od(a,this.epsilon)),tf(od(s,this.epsilon))),i),n=od(lp(a,this.rho),lp(Tp(t),1-this.rho));s.assign(e),a.assign(n);const o=od(lp(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(ed(this.accumulatedGrads.map((e=>e.variable))),ed(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}um.className="Adadelta",Kh(um);class cm extends sd{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Dc.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Qh((()=>Qd(r.shape,this.initialAccumulatorValue).variable(e)))}}const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const s=this.accumulatedGrads[n].variable;Qh((()=>{const e=od(s,Tp(i));s.assign(e);const t=od(lp(Gd(i,tf(od(e,Dc.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&ed(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}cm.className="Adagrad",Kh(cm);class hm extends sd{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Qh((()=>{this.accBeta1=id(t).variable(),this.accBeta2=id(n).variable()})),null==r&&(this.epsilon=Dc.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Qh((()=>{const n=up(1,this.accBeta1),r=up(1,this.accBeta2);t.forEach(((t,i)=>{const s=Dc.registeredVariables[t];null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:`${t}/m`,variable:Qh((()=>hf(s).variable(!1)))}),null==this.accumulatedSecondMoment[i]&&(this.accumulatedSecondMoment[i]={originalName:`${t}/v`,variable:Qh((()=>hf(s).variable(!1)))});const a=Array.isArray(e)?e[i].tensor:e[t];if(null==a)return;const o=this.accumulatedFirstMoment[i].variable,l=this.accumulatedSecondMoment[i].variable,u=od(lp(o,this.beta1),lp(a,1-this.beta1)),c=od(lp(l,this.beta2),lp(Tp(a),1-this.beta2)),h=Gd(u,n),d=Gd(c,r);o.assign(u),l.assign(c);const p=od(lp(Gd(h,od(tf(d),this.epsilon)),-this.learningRate),s);s.assign(p)})),this.accBeta1.assign(lp(this.accBeta1,this.beta1)),this.accBeta2.assign(lp(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&ed(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&ed(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Qh((()=>{this.accBeta1.assign(Zf(this.beta1,this.iterations_+1)),this.accBeta2.assign(Zf(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}hm.className="Adam",Kh(hm);class dm extends sd{constructor(e,t,n,r=null,i=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Qh((()=>{this.iteration=id(0).variable(),this.accBeta1=id(t).variable()})),null==r&&(this.epsilon=Dc.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Qh((()=>{const n=up(1,this.accBeta1),r=Gd(-this.learningRate,od(lp(this.iteration,this.decay),1));t.forEach(((t,i)=>{const s=Dc.registeredVariables[t];null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:`${t}/m`,variable:hf(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[i]&&(this.accumulatedWeightedInfNorm[i]={originalName:`${t}/v`,variable:hf(s).variable(!1)});const a=Array.isArray(e)?e[i].tensor:e[t];if(null==a)return;const o=this.accumulatedFirstMoment[i].variable,l=this.accumulatedWeightedInfNorm[i].variable,u=od(lp(o,this.beta1),lp(a,1-this.beta1)),c=lp(l,this.beta2),h=ad(a),d=mp(c,h);o.assign(u),l.assign(d);const p=od(lp(Gd(r,n),Gd(u,od(d,this.epsilon))),s);s.assign(p)})),this.iteration.assign(od(this.iteration,1)),this.accBeta1.assign(lp(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&ed(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&ed(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}dm.className="Adamax",Kh(dm);class pm extends sd{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const i=Dc.registeredVariables[t];Qh((()=>{const e=od(lp(this.c,r),i);i.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=td(id(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}pm.className="SGD",Kh(pm);class fm extends pm{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=id(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Dc.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Qh((()=>hf(r).variable(e)))}}const i=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Qh((()=>{let e;const t=od(lp(this.m,i),s);e=this.useNesterov?od(lp(this.c,od(s,lp(t,this.m))),r):od(lp(this.c,t),r),i.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&ed(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}fm.className="Momentum",Kh(fm);class mm extends sd{constructor(e,t=.9,n=0,r=null,i=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=i,null==r&&(this.epsilon=Dc.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Dc.registeredVariables[t],i=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Qh((()=>hf(r).variable(i)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Qh((()=>hf(r).variable(i)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Qh((()=>hf(r).variable(i)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Qh((()=>{const e=od(lp(a,this.decay),lp(Tp(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,i=od(lp(t,this.decay),lp(s,1-this.decay)),l=Gd(lp(s,this.learningRate),tf(up(e,od(Tp(i),this.epsilon)))),u=od(lp(o,this.momentum),l);a.assign(e),t.assign(i),o.assign(u);const c=up(r,u);r.assign(c)}else{const e=od(lp(a,this.decay),lp(Tp(s),1-this.decay)),t=od(lp(o,this.momentum),Gd(lp(s,this.learningRate),tf(od(e,this.epsilon))));a.assign(e),o.assign(t);const n=up(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&ed(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&ed(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&ed(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}mm.className="RMSProp",Kh(mm);class gm{static sgd(e){return new pm(e)}static momentum(e,t,n=!1){return new fm(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,i=!1){return new mm(e,t,n,r,i)}static adam(e=.001,t=.9,n=.999,r=null){return new hm(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new um(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,i=0){return new dm(e,t,n,r,i)}static adagrad(e,t=.1){return new cm(e,t)}}const xm={sgd:gm.sgd,momentum:gm.momentum,adadelta:gm.adadelta,adagrad:gm.adagrad,rmsprop:gm.rmsprop,adamax:gm.adamax,adam:gm.adam},bm="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function vm(){return new Promise((e=>bm((()=>e()))))}function ym(e,t){const n=e[0].length;e.forEach(((e,t)=>{ma(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),ma(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,i)=>{for(let s=0;s<n;s++)ma(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${i}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${i}.`))}))}function wm(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const _m=30;function Sm(e){return e<=_m?e:Oa(e,Math.floor(Math.sqrt(e)))}function km(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Im(e,t,n,r=!0){let i=[];if(r)i=i.concat(t.slice(0)),i.push(e[0]/n),i=i.concat(e.slice(1));else{i=i.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)i=i.concat([e[r+1]/t[r],t[r]]);i=i.concat(e.slice(n+1))}return i}function Em(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],i=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?i.push(r):n.push(r);r.push(...n),r.push(0),r.push(...i)}return r}function Tm(e,t,n,r=!0){const i=[];r?i.push(e[0]/n):i.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?i.push(t[n-1]*e[n]):i.push(e[n]/t[n-1]):i.push(e[n]);return i}function Cm(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Mm(e,t,n){const r=e.slice(0,1);for(let i=0;i<n;++i)r.push(e[i+1]-t[i][0]-t[i][1]);return r}function Am(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===va(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const i=t.shape,s=i[i.length-1];let a=1;for(let e=0;e<i.length-1;++e)a*=i[e];const o=e.shape,l=i.slice();l.pop();let u=1;for(let e=s;e<n;++e)u*=o[e],l.push(o[e]);const c=[...Pa(e.shape).map((e=>e/u)),1].slice(0,s);return[l,a,u,c]}function Nm(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,i=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${i}.`;if(n.rank<i)throw new Error(s+` update.rank < ${i}. `);if(e.length<r+(n.rank-i))throw new Error(s+` Output shape length < ${r+(n.rank-i)}`);if(n.rank!==i+e.length-r)throw new Error(s+" update.rank != "+(i+e.length-r));for(let e=0;e<i;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-i;++t)if(n.shape[t+i]!==e[t+r])throw new Error(s+` updates.shape[${t+i}] (${n.shape[t+i]}) != shape[${t+i}] (${e[t+i]})`)}function Rm(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Nm(n,t,e)}function Dm(e,t,n){const r=t.shape.length,i=r>1?t.shape[r-1]:1,s=n.length;let a=1;for(let e=i;e<s;++e)a*=n[e];const o=i<1?1:i;return{sliceRank:i,numUpdates:va(t.shape)/o,sliceSize:a,strides:[...Pa(n.slice(0,i)),1],outputSize:va(n)}}const Lm=1.7580993408473768,Fm=1.0507009873554805,$m=.3275911,Om=.254829592,Pm=-.284496736,zm=1.421413741,Bm=-1.453152027,Um=1.061405429;function Wm(...e){Ka().getBool("IS_TEST")||console.warn(...e)}function Vm(...e){Ka().getBool("IS_TEST")||console.log(...e)}function Gm(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Hm(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function jm(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function qm(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Xm(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Km(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Ym(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let i=0;i<Math.ceil(e/2);i++){const s=(t?2:-2)*Math.PI*(i/e);n[i]=Math.cos(s),r[i]=Math.sin(s)}return{real:n,imag:r}}function Zm(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function Jm(e,t,n=0){let r=[];if("number"==typeof t)ma(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const i=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);ma(i<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}ma(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Qm(e,t){let n,r=!1;for(e<=_m?(n=e,r=!0):n=Oa(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Oa(e,n+1);return n}function eg(e,t,n){const r=[],i=e.length;for(let s=0;s<i;s++)s!==t?r.push(e[s]):r.push(n);return r}function tg(e,t,n,r){const i=t.shape.length,s=e.shape.length;if(0!==r&&(r<-i||r>i))throw new Error(`Expect batchDims in the range of [-${i}, ${i}], but got ${r}`);if(r<0&&(r+=i),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const a=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<i;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:o}}function ng(e,t,n){if("complex64"===t){if("complex64"===e.dtype)return e.clone();const t=Rp(e.shape),r=_h(e,"float32"),i=n.complex(r,t);return t.dispose(),r.dispose(),i}if(!Aa(e.dtype,t))return Dc.makeTensorFromDataId(e.dataId,e.shape,t);if("complex64"===e.dtype){const r=n.real(e),i=_h(r,t);return r.dispose(),i}if("int32"===t)return n.int(e);if("bool"===t){const t=id(0,e.dtype),r=n.notEqual(e,t);return t.dispose(),r}throw new Error(`Error in Cast: failed to cast ${e.dtype} to ${t}`)}function rg(e,t){return Dc.makeTensorFromDataId(e.dataId,t,e.dtype)}function ig(e){try{return e.map((e=>hc(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function sg(e){return e.map((e=>cc(e)))}function ag(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=wh(e,"int32"),i=wh([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),a=t*e.length;i.values.set(s,a)}return i.toTensor()}const og={kernelName:eo,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lp(e,_f(_h(n,"float32"),-1))}}},lg={kernelName:to,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Tp(_h(n,"float32")),r=tf(up(id(1),t));return Mp(Gd(e,r))}}}},ug={kernelName:no,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=tf(up(Tp(_h(n,"float32")),1));return Gd(e,t)}}}},cg={kernelName:ro,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,i=Xd(n.shape,r.shape);return{a:()=>{let t=e;const r=qd(n.shape,i);return r.length>0&&(t=cp(t,r)),kd(t,n.shape)},b:()=>{let t=e;const n=qd(r.shape,i);return n.length>0&&(t=cp(t,n)),kd(t,r.shape)}}}},hg={kernelName:io,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},dg={kernelName:oo,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hf(n)}}},pg={kernelName:lo,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hf(n)}}},fg={kernelName:uo,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gd(e,tf(up(id(1),Tp(_h(n,"float32")))))}}},mg={kernelName:co,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=tf(od(id(1),Tp(_h(n,"float32"))));return Gd(e,t)}}}},gg={kernelName:fo,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,i=Xd(n.shape,r.shape);return{a:()=>{const t=od(Tp(n),Tp(r));let s=lp(e,Gd(r,t));const a=qd(n.shape,i);return a.length>0&&(s=cp(s,a)),kd(s,n.shape)},b:()=>{const t=od(Tp(n),Tp(r));let s=Mp(lp(e,Gd(n,t)));const a=qd(r.shape,i);return a.length>0&&(s=cp(s,a)),kd(s,r.shape)}}}},xg={kernelName:ho,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gd(e,od(Tp(_h(n,"float32")),1))}}},bg={kernelName:po,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gd(e,up(id(1),Tp(_h(n,"float32"))))}}},vg=Wc({avgPool3dGrad_:function(e,t,n,r,i=[1,1,1],s,a){const o=Bc(e,"dy","avgPool3dGrad"),l=Bc(t,"input","avgPool3dGrad");let u=o,c=l,h=!1;4===l.rank&&(h=!0,u=kd(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=kd(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),ma(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),ma(5===c.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`)),ma(_d(r,i),(()=>`Error in avgPool3dGrad: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`)),null!=a&&ma(wa(s),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`));const d={dy:u,input:c},p={filterSize:n,strides:r,dilations:i,pad:s,dimRoundingMode:a},f=Dc.runKernel(bo,d,p);return h?kd(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),yg={kernelName:xo,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:i,strides:s,dilations:a,pad:o,dimRoundingMode:l}=n,u=null==a?[1,1,1]:a;return{x:()=>vg(e,r,i,s,u,o,l)}}},wg=Wc({avgPoolGrad_:function(e,t,n,r,i){const s=Bc(e,"dy","avgPoolGrad"),a=Bc(t,"input","avgPoolGrad");ma(a.rank===s.rank,(()=>`Rank of input (${a.rank}) does not match rank of dy (${s.rank})`));let o=a,l=s,u=!1;3===a.rank&&(u=!0,o=kd(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=kd(s,[1,s.shape[0],s.shape[1],s.shape[2]])),ma(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),ma(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:r,pad:i},d=Dc.runKernel(go,c,h);return u?kd(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),_g={kernelName:mo,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:i,strides:s,pad:a}=n;return{x:()=>wg(e,r,i,s,a)}}},Sg={kernelName:vo,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,i]=t,{transposeA:s,transposeB:a}=n;return s||a?!s&&a?{a:()=>Af(e,i,!1,!1),b:()=>Af(e,r,!0,!1)}:s&&!a?{a:()=>Af(i,e,!1,!0),b:()=>Af(r,e,!1,!1)}:{a:()=>Af(i,e,!0,!0),b:()=>Af(e,r,!0,!0)}:{a:()=>Af(e,i,!1,!0),b:()=>Af(r,e,!0,!1)}}},kg=Wc({spaceToBatchND_:function(e,t,n){const r=Bc(e,"x","spaceToBatchND");ma(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),ma(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),ma(r.shape.reduce(((e,r,i)=>i>0&&i<=t.length?e&&(r+n[i-1][0]+n[i-1][1])%t[i-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const i={x:r},s={blockShape:t,paddings:n};return Dc.runKernel(ku,i,s)}}),Ig={kernelName:yo,gradFunc:(e,t,n)=>{const{blockShape:r,crops:i}=n;return{x:()=>kg(e,r,i)}}},Eg={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,i=r.inputShape,s=r.shape,a=Array.from(s);for(let e=i.length-1;e>=0;e--)if(i[e]===s[e])a[e]=1;else if(1!==i[e])throw new Error(`broadcastTo(): [${i}] cannot be broadcast to [${s}].`);const o=[];for(let e=0;e<a.length;e++)a[e]>1&&o.push(e);return{x:()=>cp(e,o,!0)}}},Tg={kernelName:_o,gradFunc:e=>({x:()=>e.clone()})},Cg={kernelName:So,gradFunc:e=>({x:()=>hf(e)})},Mg={kernelName:ko,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:i,clipValueMax:s}=n;return{x:()=>cf(dp(rp(r,i),Xf(r,s)),e,hf(e))}}},Ag={kernelName:Eo,inputsToSave:["x"],gradFunc:og.gradFunc},Ng={kernelName:To,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:i}=n,s=Ea(i,t[0].shape)[0],a=r.map((e=>e[s]));return ef(e,a,s).map((e=>()=>e))}},Rg={kernelName:Co,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,i]=t,{dilations:s,strides:a,pad:o,dataFormat:l}=n;return ma(wd(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>zd(r.shape,e,i,a,o,l),filter:()=>yf(r,e,i.shape,a,o,l)}}},Dg={kernelName:Ao,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,i]=t,{strides:s,pad:a,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Od(e,i,s,a,o,1,l),filter:()=>yf(e,r,i.shape,s,a,o,l)}}},Lg=Wc({conv3DBackpropFilter_:function(e,t,n,r,i){let s=e;4===e.rank&&(s=kd(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let a=t;4===a.rank&&(a=kd(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),ma(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),ma(5===a.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`)),ma(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),ma(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),ma(a.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:s,dy:a},l={strides:r,pad:i,filterShape:n};return Dc.runKernel(Ro,o,l)}}),Fg=Wc({conv3DBackpropInput_:function(e,t,n,r,i){ma(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,a=t,o=!1;4===t.rank&&(o=!0,a=kd(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const l=s[4],u=a.shape[4];ma(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),ma(5===a.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`)),ma(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),ma(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),ma(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:a,filter:n},h={pad:i,strides:r,inputShape:s},d=Dc.runKernel(Do,c,h);return o?kd(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),$g={kernelName:No,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:i,pad:s}=n;ma(wd(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[a,o]=t;return{x:()=>Fg(a.shape,e,o,i,s),filter:()=>Lg(a,e,o.shape,i,s)}}},Og=Wc({sin_:function(e){const t={x:Bc(e,"x","sin")};return Dc.runKernel(xu,t)}}),Pg={kernelName:Lo,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lp(Mp(Og(_h(n,"float32"))),e)}}},zg=Wc({sinh_:function(e){const t={x:Bc(e,"x","sinh")};return Dc.runKernel(bu,t)}}),Bg={kernelName:Fo,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lp(zg(_h(n,"float32")),e)}}},Ug=Wc({cumsum_:function(e,t=0,n=!1,r=!1){const i={x:Bc(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return Dc.runKernel($o,i,s)}}),Wg={kernelName:$o,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:i,exclusive:s,reverse:a}=n;return{x:()=>{const t=kp([i],r.rank);let n=Ug(e,i,s,!a);return null!=t&&(n=df(n,t)),n}}}},Vg={kernelName:Bo,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:i,pad:s,dimRoundingMode:a}=n,o=null==r?[1,1]:r;ma(wd(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return ma(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),ma(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),ma(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),ma(_d(i,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${i} and dilations '${o}'.`)),null!=a&&ma(wa(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`)),{x:()=>Mf(l.shape,e,u,i,s,r,a),filter:()=>Cf(l,e,u.shape,i,s,r,a)}}},Gg={kernelName:Go,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,i]=t,s={x:r,filter:i,dy:e},a={x:r,filter:i,dy:e};return{x:()=>Dc.runKernel(Ho,s,n),filter:()=>Dc.runKernel(jo,a,n)}}},Hg={kernelName:Xo,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Dc.runKernel(Ko,r)}}},jg={kernelName:Yo,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=lp(ap(Mp(Tp(n))),2/Math.sqrt(Math.PI));return{x:()=>lp(e,r)}}},qg={kernelName:Jo,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lp(e,n)}}},Xg={kernelName:Qo,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>kd(e,n.shape)}}},Kg={kernelName:el,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lp(e,ap(n))}}},Yg={kernelName:il,gradFunc:e=>({x:()=>hf(e)})},Zg={kernelName:sl,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,i=Xd(n.shape,r.shape);return{a:()=>{const t=Gd(e,_h(r,"float32")),s=qd(n.shape,i);return s.length>0?kd(cp(t,s),n.shape):t},b:()=>{let t=lp(e,_h(n,"float32"));const s=qd(r.shape,i);s.length>0&&(t=kd(cp(t,s),r.shape));const a=Tp(r);return Mp(Gd(t,_h(a,"float32")))}}}},Jg=Wc({rsqrt_:function(e){const t={x:Bc(e,"x","rsqrt")};return Dc.runKernel(du,t)}}),Qg={kernelName:al,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[i,s,a,o]=t,l=null==o?id(1):o,u=qd(s.shape,i.shape),c=[];if(1===s.rank){for(let e=0;e<i.shape.length-1;++e)c.push(i.shape[e]);c.push(1)}const h=up(i,s),d=lp(e,l),p=Jg(od(a,id(r))),f=lp(lp(lp(p,p),p),id(-.5));return{x:()=>1===s.rank?kd(lp(lp(e,Zd(kd(p,[1,1,1,s.shape[0]]),c)),l),i.shape):kd(lp(lp(e,p),l),i.shape),mean:()=>{let e=lp(lp(p,id(-1)),d);return 1===s.rank&&(e=cp(e,u)),kd(e,s.shape)},variance:()=>{let e=lp(lp(f,h),d);return 1===s.rank&&(e=cp(e,u)),kd(e,s.shape)},scale:()=>{const t=lp(h,p);let n=lp(e,t);return 1===s.rank&&(n=cp(n,u)),kd(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=cp(t,u)),kd(t,s.shape)}}}},ex=Wc({unsortedSegmentSum_:function(e,t,n){const r=Bc(e,"x","unsortedSegmentSum"),i=Bc(t,"segmentIds","unsortedSegmentSum","int32");ma(wa(n),(()=>"numSegments must be of dtype int"));const s={x:r,segmentIds:i},a={numSegments:n};return Dc.runKernel(zu,s,a)}}),tx={kernelName:ol,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,i]=t,{axis:s}=n,a=Ea(s,r.shape)[0];return{x:()=>{const t=r.shape,n=i.size,o=t.slice(0,a),l=o.length,u=t.slice(s,t.length).slice(1),c=u.length,h=nx(0,l),d=nx(l+1,l+1+c),p=rx([o,[n],u]),f=kd(e,p),m=kd(i,[n]),g=rx([[l],h,d]),x=df(f,g);let b=ex(x,m,r.shape[a]);const v=Ip(g);return b=df(b,v),b},indices:()=>i}}};function nx(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function rx(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const ix={kernelName:cl,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>hf(n),b:()=>hf(r)}}},sx={kernelName:hl,gradFunc:e=>({x:()=>_h(e,"float32")})},ax={kernelName:fl,gradFunc:e=>({x:()=>hf(e)})},ox={kernelName:ml,gradFunc:e=>({x:()=>hf(e)})},lx={kernelName:gl,gradFunc:e=>({x:()=>hf(e)})},ux={kernelName:xl,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:i}=n,s=np(r,0);return{x:()=>cf(s,e,lp(e,i))}}},cx={kernelName:_l,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gd(e,od(n,1))}}},hx={kernelName:wl,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gd(e,_h(n,"float32"))}}},dx={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:i}=n;return{logits:()=>{const t=ap(r);return up(e,lp(cp(e,i,!0),t))}}}},px=Wc({localResponseNormalizationBackprop_:function(e,t,n,r=5,i=1,s=1,a=.5){const o={x:e,y:t,dy:n},l={depthRadius:r,bias:i,alpha:s,beta:a};return Dc.runKernel(Tl,o,l)}}),fx={kernelName:El,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,i]=t,{depthRadius:s,bias:a,alpha:o,beta:l}=n;return{x:()=>px(r,i,e,s,a,o,l)}}};function mx(e,t,n,r){return t.rank<n.rank&&(t=kd(t,_p(t.shape,r))),e.rank<n.rank&&(e=kd(e,_p(e.shape,r))),{x:()=>lp(e,_h(Kd(n,t),e.dtype))}}const gx={kernelName:Cl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:i}=r,s=t[0],a=mx(e,t[1],s,Ea(i,s.shape));return{x:()=>a.x()}}},xx=Wc({less_:function(e,t){let n=Bc(e,"a","less"),r=Bc(t,"b","less");[n,r]=Ec(n,r),Xd(n.shape,r.shape);const i={a:n,b:r};return Dc.runKernel(bl,i)}}),bx={kernelName:Ml,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>lp(e,_h(rp(n,r),"float32")),b:()=>lp(e,_h(xx(n,r),"float32"))}}},vx=Wc({maxPool3dGrad_:function(e,t,n,r,i,s=[1,1,1],a,o){const l=Bc(e,"dy","maxPool3dGrad"),u=Bc(t,"input","maxPool3dGrad"),c=Bc(n,"output","maxPool3dGrad");let h=l,d=u,p=c,f=!1;4===u.rank&&(f=!0,h=kd(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=kd(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=kd(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),ma(5===h.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`)),ma(5===d.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`)),ma(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),ma(_d(i,s),(()=>`Error in maxPool3dGrad: Either strides or dilations must be 1. Got strides ${i} and dilations '${s}'`)),null!=o&&ma(wa(a),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`));const m={dy:h,input:d,output:p},g={filterSize:r,strides:i,dilations:s,pad:a,dimRoundingMode:o},x=Dc.runKernel(Dl,m,g);return f?kd(x,[x.shape[1],x.shape[2],x.shape[3],x.shape[4]]):x}}),yx={kernelName:Rl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,i]=t,{filterSize:s,strides:a,dilations:o,pad:l,dimRoundingMode:u}=n,c=null==o?[1,1,1]:o;return{x:()=>vx(e,r,i,s,a,c,l,u)}}},wx=Wc({maxPoolGrad_:function(e,t,n,r,i,s,a){const o=Bc(e,"dy","maxPoolGrad"),l=Bc(t,"input","maxPoolGrad"),u=Bc(n,"output","maxPoolGrad");ma(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),ma(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),ma(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),null!=a&&ma(wa(s),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`));const c={dy:o,input:l,output:u},h={filterSize:r,strides:i,pad:s,dimRoundingMode:a};return Dc.runKernel(Nl,c,h)}}),_x={kernelName:Al,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,i]=t,{filterSize:s,strides:a,pad:o}=n;return{x:()=>wx(e,r,i,s,a,o)}}},Sx={kernelName:Fl,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:i}=n,s=Ea(i,r.shape),a=va(wp(r.shape,s)[1]);return{x:()=>{const t=r.shape.slice();s.forEach((e=>{t[e]=1}));const n=kd(e,t);return Gd(lp(n,Dp(r.shape,"float32")),a)}}}},kx={kernelName:$l,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:i}=r,[s,a]=t,o=mx(e,a,s,Ea(i,s.shape));return{x:()=>o.x()}}},Ix={kernelName:Ol,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>lp(e,_h(Xf(n,r),"float32")),b:()=>lp(e,_h(np(n,r),"float32"))}}},Ex={kernelName:Pl,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:i}=n,s=i.map((e=>e[0]));return{x:()=>qp(e,s,r.shape)}}},Tx={kernelName:zl,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,i=Xd(n.shape,r.shape);return{a:()=>{const t=qd(n.shape,i);return t.length>0?kd(cp(e,t),n.shape):e},b:()=>{const t=lp(e,Mp(ep(Gd(n,r)))),s=qd(r.shape,i);return s.length>0?kd(cp(t,s),r.shape):t}}}},Cx={kernelName:Ul,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,i=Xd(n.shape,r.shape);return{a:()=>{const t=lp(e,_h(r,"float32")),s=qd(n.shape,i);return s.length>0?kd(cp(t,s),n.shape):t},b:()=>{const t=lp(e,_h(n,"float32")),s=qd(r.shape,i);return s.length>0?kd(cp(t,s),r.shape):t}}}},Mx={kernelName:Wl,gradFunc:e=>({x:()=>Mp(e)})},Ax={kernelName:Xl,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Rp(n.shape,"float32")}}},Nx={kernelName:ql,gradFunc:e=>({x:()=>hf(e)})},Rx={kernelName:Kl,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return lf(e,r).map((e=>()=>e))}},Dx={kernelName:Yl,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:i}=n,s=i.map((e=>e[0]));return{x:()=>qp(e,s,r.shape)}}},Lx={kernelName:Zl,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,i]=t,s=n,a=r,o=Xd(s.shape,a.shape);return{a:()=>{const t=_h(a,"float32");let n=lp(e,lp(t,Zf(s,up(t,id(1)))));const r=qd(s.shape,o);return r.length>0&&(n=cp(n,r)),kd(n,s.shape)},b:()=>{const t=np(s,0),n=cf(t,sp(s),hf(s));let r=lp(e,lp(i,n));const l=qd(a.shape,o);return l.length>0&&(r=cp(r,l)),kd(r,a.shape)}}}},Fx={kernelName:Jl,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,i=np(n,0);return{x:()=>cf(i,e,lp(e,r)),alpha:()=>{let t=cf(i,hf(e),lp(e,n));const s=qd(r.shape,e.shape);return s.length>0&&(t=cp(t,s)),kd(t,r.shape)}}}},$x={kernelName:qo,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,i=Xd(n.shape,r.shape);return{a:()=>{const t=Gd(e,_h(r,"float32")),s=qd(n.shape,i);return s.length>0?kd(cp(t,s),n.shape):t},b:()=>{let t=lp(e,_h(n,"float32"));const s=qd(r.shape,i);s.length>0&&(t=kd(cp(t,s),r.shape));const a=Tp(r);return Mp(Gd(t,_h(a,"float32")))}}}},Ox={kernelName:nu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gd(e,Mp(Tp(n)))}}},Px={kernelName:uu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=lp(Xf(n,6),_f(n));return{x:()=>lp(e,_h(r,"float32"))}}},zx={kernelName:ru,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lp(e,_h(_f(n),"float32"))}}},Bx={kernelName:iu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kd(e,n.shape)}}},Ux={kernelName:ou,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,i={dy:e,images:r};return{images:()=>Dc.runKernel(lu,i,n)}}},Wx={kernelName:su,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,i={dy:e,images:r};return{images:()=>Dc.runKernel(au,i,n)}}},Vx={kernelName:cu,gradFunc:(e,t,n)=>{const{dims:r}=n,i=Ea(r,e.shape);return{x:()=>Vp(e,i)}}},Gx={kernelName:hu,gradFunc:e=>({x:()=>hf(e)})},Hx={kernelName:du,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mp(Gd(e,lp(Zf(n,1.5),2)))}}},jx=Wc({logicalNot_:function(e){const t={x:Bc(e,"x","logicalNot","bool")};return Dc.runKernel(kl,t)}}),qx={kernelName:fu,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>_h(hf(n),"float32"),t:()=>lp(e,_h(n,e.dtype)),e:()=>lp(e,_h(jx(n),e.dtype))}}},Xx={kernelName:mu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=np(n,id(0)),r=id(Lm),i=id(Fm),s=lp(e,i),a=lp(lp(e,r),ap(_h(n,"float32")));return cf(t,s,a)}}}},Kx={kernelName:yu,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lp(e,lp(n,up(id(1),n)))}}},Yx={kernelName:vu,gradFunc:e=>({x:()=>hf(e)})},Zx=Wc({cos_:function(e){const t={x:Bc(e,"x","cos")};return Dc.runKernel(Lo,t)}}),Jx={kernelName:xu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lp(Zx(_h(n,"float32")),e)}}},Qx=Wc({cosh_:function(e){const t={x:Bc(e,"x","cosh")};return Dc.runKernel(Fo,t)}}),eb={kernelName:bu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lp(Qx(_h(n,"float32")),e)}}},tb={kernelName:gu,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:i,size:s}=n,a=r.shape,[o,l]=Hh(r,i,s),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],a[t]-o[t]-l[t]]);return{x:()=>Fp(e,u)}}},nb={kernelName:Eu,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:i}=n,s=lp(e,r);return{logits:()=>up(s,lp(cp(s,[i],!0),r))}}},rb={kernelName:wu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lp(e,jp(n))}}},ib=Wc({batchToSpaceND_:function(e,t,n){const r=Bc(e,"x","batchToSpaceND"),i=t.reduce(((e,t)=>e*t));ma(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),ma(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),ma(r.shape[0]%i==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${i}`));const s={x:r},a={blockShape:t,crops:n};return Dc.runKernel(yo,s,a)}}),sb={kernelName:ku,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:i}=n;return{x:()=>ib(e,r,i)}}},ab={kernelName:Iu,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Rd(e,r)}}},ob=[og,lg,ug,cg,hg,dg,pg,fg,mg,gg,xg,bg,yg,_g,Sg,Ig,Eg,Tg,Cg,Mg,Ag,Ng,Dg,Rg,$g,Pg,Bg,Wg,Vg,Gg,$x,Hg,jg,qg,Xg,Kg,Zg,Yg,Qg,tx,ix,sx,ax,ox,lx,ux,cx,hx,dx,fx,gx,gx,bx,yx,_x,Sx,kx,Ix,Ex,Tx,Cx,Mx,Ax,Nx,Rx,Dx,Dx,Lx,Fx,Ox,Px,zx,Bx,Ux,Wx,Vx,Gx,Hx,qx,Xx,Kx,Yx,Jx,eb,tb,nb,rb,sb,sb,ab,ab,{kernelName:_u,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gd(e,lp(tf(_h(n,"float32")),2))}}},{kernelName:Tu,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,i=id(2);return{a:()=>lp(e,lp(i,up(n,r))),b:()=>lp(e,lp(i,up(r,n)))}}},{kernelName:Cu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lp(e,lp(_h(n,"float32"),2))}}},{kernelName:Uu,gradFunc:e=>({x:()=>hf(e)})},{kernelName:Mu,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,i=Xd(n.shape,r.shape);return{a:()=>{let t=e;const r=qd(n.shape,i);return r.length>0&&(t=cp(t,r)),kd(t,n.shape)},b:()=>{let t=e;const n=qd(r.shape,i);return n.length>0&&(t=cp(t,n)),kd(Mp(t),r.shape)}}}},{kernelName:Su,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,i=r.shape.slice(),{axis:s}=n;Ea(s,r.shape).forEach((e=>{i[e]=1}));const a=kd(e,i),o=lp(a,Dp(r.shape,"float32"));return{x:()=>o}}},{kernelName:Ru,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gd(e,Tp(Zx(n)))}}},{kernelName:Du,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lp(up(id(1),Tp(n)),e)}}},{kernelName:Lu,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:i}=n;return{x:()=>{let t=hf(r);if(1===r.rank)for(let n=0;n<i[0];++n)t=od(t,qp(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<i[0];++n)for(let s=0;s<i[1];++s)t=od(t,qp(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<i[0];++n)for(let s=0;s<i[1];++s)for(let a=0;a<i[2];++a)t=od(t,qp(e,[n*r.shape[0],s*r.shape[1],a*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<i[0];++n)for(let s=0;s<i[1];++s)for(let a=0;a<i[2];++a)for(let o=0;o<i[3];++o)t=od(t,qp(e,[n*r.shape[0],s*r.shape[1],a*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:$u,gradFunc:(e,t,n)=>{const r=n,{perm:i}=r,s=Ip(i);return{x:()=>df(e,s)}}},{kernelName:Pu,gradFunc:(e,t,n)=>{const r=n,{axis:i}=r;return{value:()=>rf(e,i)}}},{kernelName:zu,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=mp(t,hf(t)),r=tp(e,n);let i=rp(t,id(0,"int32"));const s=r.rank-i.rank;for(let e=0;e<s;++e)i=Yd(i,e+1);i=dp(i,Dp(r.shape,"bool"));const a=hf(r);return cf(i,r,a)}(e,n)}}},{kernelName:Bu,gradFunc:e=>({x:()=>hf(e)})}];for(const e of ob)Zu(e);gc.prototype.abs=function(){return this.throwIfDisposed(),ad(this)};const lb=Wc({acos_:function(e){const t={x:Bc(e,"x","acos")};return Dc.runKernel(to,t)}});gc.prototype.acos=function(){return this.throwIfDisposed(),lb(this)};const ub=Wc({acosh_:function(e){const t={x:Bc(e,"x","acosh")};return Dc.runKernel(no,t)}});gc.prototype.acosh=function(){return this.throwIfDisposed(),ub(this)};const cb=Wc({mod_:function(e,t){let n=Bc(e,"a","mod"),r=Bc(t,"b","mod");[n,r]=Ec(n,r);const i={a:n,b:r};return Dc.runKernel(zl,i)}}),hb=Wc({addStrict_:function(e,t){Yh("strict variants of ops have been deprecated and will be removed in future");const n=Bc(e,"a","addStrict"),r=Bc(t,"b","addStrict");return ga(n.shape,r.shape,"Error in addStrict: "),od(n,r)}}),db=Wc({divStrict_:function(e,t){Yh("strict variants of ops have been deprecated and will be removed in future");const n=Bc(e,"a","div"),r=Bc(t,"b","div");return ga(n.shape,r.shape,"Error in divideStrict: "),Gd(n,r)}}),pb=Wc({maximumStrict_:function(e,t){Yh("strict variants of ops have been deprecated and will be removed in future");const n=Bc(e,"a","maximumStrict"),r=Bc(t,"b","maximumStrict");return ga(n.shape,r.shape,"Error in maximumStrict: "),mp(n,r)}}),fb=Wc({minimumStrict_:function(e,t){Yh("strict variants of ops have been deprecated and will be removed in future");const n=Bc(e,"a","minimumStrict"),r=Bc(t,"b","minimumStrict");return ga(n.shape,r.shape,"Error in minimumStrict: "),bp(n,r)}}),mb=Wc({modStrict_:function(e,t){Yh("strict variants of ops have been deprecated and will be removed in future");const n=Bc(e,"a","modStrict"),r=Bc(t,"b","modStrict");return ga(n.shape,r.shape,"Error in modStrict: "),cb(n,r)}}),gb=Wc({mulStrict_:function(e,t){Yh("strict variants of ops have been deprecated and will be removed in future");const n=Bc(e,"a","mul"),r=Bc(t,"b","mul");return ga(n.shape,r.shape,"Error in multiplyStrict: "),lp(n,r)}}),xb=Wc({powStrict_:function(e,t){return Yh("strict variants of ops have been deprecated and will be removed in future"),ga(e.shape,t.shape,"Error in powStrict: "),Zf(e,t)}}),bb=Wc({squaredDifferenceStrict_:function(e,t){Yh("strict variants of ops have been deprecated and will be removed in future");const n=Bc(e,"a","squaredDifferenceStrict"),r=Bc(t,"b","squaredDifferenceStrict");return ga(n.shape,r.shape,"Error in squaredDifferenceStrict: "),sm(n,r)}}),vb=Wc({subStrict_:function(e,t){Yh("strict variants of ops have been deprecated and will be removed in future");const n=Bc(e,"a","subStrict"),r=Bc(t,"b","subStrict");return ga(n.shape,r.shape,"Error in subStrict: "),up(n,r)}});gc.prototype.addStrict=function(e){return this.throwIfDisposed(),hb(this,e)},gc.prototype.add=function(e){return this.throwIfDisposed(),od(this,e)},gc.prototype.all=function(e,t){return this.throwIfDisposed(),ld(this,e,t)},gc.prototype.any=function(e,t){return this.throwIfDisposed(),ud(this,e,t)},gc.prototype.argMax=function(e){return this.throwIfDisposed(),cd(this,e)};const yb=Wc({argMin_:function(e,t=0){const n={x:Bc(e,"x","argMin")},r={axis:t};return Dc.runKernel(lo,n,r)}});gc.prototype.argMin=function(e){return this.throwIfDisposed(),yb(this,e)},gc.prototype.asScalar=function(){return this.throwIfDisposed(),ma(1===this.size,(()=>"The array must have only 1 element.")),kd(this,[])},gc.prototype.asType=function(e){return this.throwIfDisposed(),_h(this,e)},gc.prototype.as1D=function(){return this.throwIfDisposed(),kd(this,[this.size])},gc.prototype.as2D=function(e,t){return this.throwIfDisposed(),kd(this,[e,t])},gc.prototype.as3D=function(e,t,n){return this.throwIfDisposed(),kd(this,[e,t,n])},gc.prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),kd(this,[e,t,n,r])},gc.prototype.as5D=function(e,t,n,r,i){return this.throwIfDisposed(),kd(this,[e,t,n,r,i])};const wb=Wc({asin_:function(e){const t={x:Bc(e,"x","asin")};return Dc.runKernel(uo,t)}});gc.prototype.asin=function(){return this.throwIfDisposed(),wb(this)};const _b=Wc({asinh_:function(e){const t={x:Bc(e,"x","asinh")};return Dc.runKernel(co,t)}});gc.prototype.asinh=function(){return this.throwIfDisposed(),_b(this)};const Sb=Wc({atan_:function(e){const t={x:Bc(e,"x","atan")};return Dc.runKernel(ho,t)}});gc.prototype.atan=function(){return this.throwIfDisposed(),Sb(this)};const kb=Wc({atan2_:function(e,t){let n=Bc(e,"a","atan2"),r=Bc(t,"b","atan2");[n,r]=Ec(n,r);const i={a:n,b:r};return Dc.runKernel(fo,i)}});gc.prototype.atan2=function(e){return this.throwIfDisposed(),kb(this,e)};const Ib=Wc({atanh_:function(e){const t={x:Bc(e,"x","atanh")};return Dc.runKernel(po,t)}});gc.prototype.atanh=function(){return this.throwIfDisposed(),Ib(this)},gc.prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Id(this,e,t,n,r)},gc.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),ib(this,e,t)},gc.prototype.batchNorm=function(e,t,n,r,i){return this.throwIfDisposed(),Td(this,e,t,n,r,i)},gc.prototype.broadcastTo=function(e){return this.throwIfDisposed(),uf(this,e)},gc.prototype.cast=function(e){return this.throwIfDisposed(),_h(this,e)};const Eb=Wc({ceil_:function(e){const t={x:Bc(e,"x","ceil")};return Dc.runKernel(So,t)}});gc.prototype.ceil=function(){return this.throwIfDisposed(),Eb(this)},gc.prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Nd(this,e,t)},gc.prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof gc&&(e=[e]),Rd([this,...e],t)},gc.prototype.conv1d=function(e,t,n,r,i,s){return this.throwIfDisposed(),Pd(this,e,t,n,r,i,s)},gc.prototype.conv2dTranspose=function(e,t,n,r,i){return this.throwIfDisposed(),Bd(this,e,t,n,r,i)},gc.prototype.conv2d=function(e,t,n,r,i,s){return this.throwIfDisposed(),Od(this,e,t,n,r,i,s)},gc.prototype.cos=function(){return this.throwIfDisposed(),Zx(this)},gc.prototype.cosh=function(){return this.throwIfDisposed(),Qx(this)},gc.prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Ug(this,e,t,n)};const Tb=Wc({depthToSpace_:function(e,t,n="NHWC"){const r=Bc(e,"x","depthToSpace"),i="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],a="NHWC"===n?r.shape[3]:r.shape[1];ma(i*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),ma(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),ma(a%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${a} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:t,dataFormat:n};return Dc.runKernel(zo,o,l)}});gc.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Tb(this,e,t)},gc.prototype.depthwiseConv2D=function(e,t,n,r,i,s){return Yh("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),Wd(this,e,t,n,r,i,s)},gc.prototype.depthwiseConv2d=function(e,t,n,r,i,s){return this.throwIfDisposed(),Wd(this,e,t,n,r,i,s)};const Cb=Wc({dilation2d_:function(e,t,n,r,i=[1,1],s="NHWC"){const a=Bc(e,"x","dilation2d"),o=Bc(t,"filter","dilation2d");ma(3===a.rank||4===a.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`)),ma(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),ma("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let l=a,u=!1;3===a.rank&&(l=kd(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:r,dilations:i},d=Dc.runKernel(Go,c,h);return u?kd(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});gc.prototype.dilation2d=function(e,t,n,r,i){return this.throwIfDisposed(),Cb(this,e,t,n,r,i)};const Mb=Wc({divNoNan_:function(e,t){let n=Bc(e,"a","div"),r=Bc(t,"b","div");[n,r]=Ec(n,r);const i=Gd(n,r),s=hf(i),a=Kd(r,s);return cf(a,s,i)}});gc.prototype.divNoNan=function(e){return this.throwIfDisposed(),Mb(this,e)},gc.prototype.divStrict=function(e){return this.throwIfDisposed(),db(this,e)},gc.prototype.div=function(e){return this.throwIfDisposed(),Gd(this,e)};const Ab=Wc({dot_:function(e,t){const n=Bc(e,"t1","dot"),r=Bc(t,"t2","dot");ma(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const i=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(ma(i===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${i} and ${s}.`)),1===n.rank&&1===r.rank){const e=kd(n,[1,-1]),t=kd(r,[-1,1]),i=Af(e,t);return kd(i,[])}if(1===n.rank&&2===r.rank){const e=kd(n,[1,-1]),t=kd(r,[r.shape[0],r.shape[1]]),i=Af(e,t);return kd(i,[i.size])}if(2===n.rank&&1===r.rank){const e=kd(r,[-1,1]),t=Af(n,e);return kd(t,[t.size])}{const e=kd(r,[r.shape[0],r.shape[1]]);return Af(n,e)}}});gc.prototype.dot=function(e){return this.throwIfDisposed(),Ab(this,e)},gc.prototype.elu=function(){return this.throwIfDisposed(),Hd(this)};const Nb=Wc({equalStrict_:function(e,t){Yh("strict variants of ops have been deprecated and will be removed in future");const n=Bc(e,"a","equalStrict"),r=Bc(t,"b","equalStrict");return ga(n.shape,r.shape,"Error in equalStrict: "),Kd(n,r)}}),Rb=Wc({greaterEqualStrict_:function(e,t){Yh("strict variants of ops have been deprecated and will be removed in future");const n=Bc(e,"a","greaterEqualStrict"),r=Bc(t,"b","greaterEqualStrict");return ga(n.shape,r.shape,"Error in greaterEqualStrict: "),rp(n,r)}}),Db=Wc({greaterStrict_:function(e,t){Yh("strict variants of ops have been deprecated and will be removed in future");const n=Bc(e,"a","greaterStrict"),r=Bc(t,"b","greaterStrict");return ga(n.shape,r.shape,"Error in greaterStrict: "),np(n,r)}}),Lb=Wc({lessEqualStrict_:function(e,t){Yh("strict variants of ops have been deprecated and will be removed in future");const n=Bc(e,"a","lessEqualStrict"),r=Bc(t,"b","lessEqualStrict");return ga(n.shape,r.shape,"Error in lessEqualStrict: "),Xf(n,r)}}),Fb=Wc({lessStrict_:function(e,t){Yh("strict variants of ops have been deprecated and will be removed in future");const n=Bc(e,"a","lessStrict"),r=Bc(t,"b","lessStrict");return ga(n.shape,r.shape,"Error in lessStrict: "),xx(n,r)}}),$b=Wc({notEqualStrict_:function(e,t){Yh("strict variants of ops have been deprecated and will be removed in future");const n=Bc(e,"a","notEqualStrict"),r=Bc(t,"b","notEqualStrict");return ga(n.shape,r.shape,"Error in notEqualStrict: "),Ap(n,r)}});gc.prototype.equalStrict=function(e){return this.throwIfDisposed(),Nb(this,e)},gc.prototype.equal=function(e){return this.throwIfDisposed(),Kd(this,e)};const Ob=Wc({erf_:function(e){let t=Bc(e,"x","erf");ma("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=_h(t,"float32"));const n={x:t};return Dc.runKernel(Yo,n)}});gc.prototype.erf=function(){return this.throwIfDisposed(),Ob(this)},gc.prototype.exp=function(){return this.throwIfDisposed(),ap(this)},gc.prototype.expandDims=function(e){return this.throwIfDisposed(),Yd(this,e)};const Pb=Wc({expm1_:function(e){const t={x:Bc(e,"x","expm1")};return Dc.runKernel(el,t)}});gc.prototype.expm1=function(){return this.throwIfDisposed(),Pb(this)},gc.prototype.fft=function(){return this.throwIfDisposed(),gf(this)},gc.prototype.flatten=function(){return this.throwIfDisposed(),kd(this,[this.size])},gc.prototype.floor=function(){return this.throwIfDisposed(),ep(this)},gc.prototype.floorDiv=function(e){return this.throwIfDisposed(),Vd(this,e)},gc.prototype.gather=function(e,t){return this.throwIfDisposed(),tp(this,e,t)},gc.prototype.greaterEqualStrict=function(e){return this.throwIfDisposed(),Rb(this,e)},gc.prototype.greaterEqual=function(e){return this.throwIfDisposed(),rp(this,e)},gc.prototype.greaterStrict=function(e){return this.throwIfDisposed(),Db(this,e)},gc.prototype.greater=function(e){return this.throwIfDisposed(),np(this,e)},gc.prototype.ifft=function(){return this.throwIfDisposed(),bf(this)},gc.prototype.irfft=function(){return this.throwIfDisposed(),vf(this)};const zb=Wc({isFinite_:function(e){const t={x:Bc(e,"x","isFinite")};return Dc.runKernel(fl,t)}});gc.prototype.isFinite=function(){return this.throwIfDisposed(),zb(this)};const Bb=Wc({isInf_:function(e){const t={x:Bc(e,"x","isInf")};return Dc.runKernel(ml,t)}});gc.prototype.isInf=function(){return this.throwIfDisposed(),Bb(this)};const Ub=Wc({isNaN_:function(e){const t={x:Bc(e,"x","isNaN")};return Dc.runKernel(gl,t)}});gc.prototype.isNaN=function(){return this.throwIfDisposed(),Ub(this)},gc.prototype.leakyRelu=function(e){return this.throwIfDisposed(),ip(this,e)},gc.prototype.lessEqualStrict=function(e){return this.throwIfDisposed(),Lb(this,e)},gc.prototype.lessEqual=function(e){return this.throwIfDisposed(),Xf(this,e)},gc.prototype.lessStrict=function(e){return this.throwIfDisposed(),Fb(this,e)},gc.prototype.less=function(e){return this.throwIfDisposed(),xx(this,e)};const Wb=Wc({localResponseNormalization_:function(e,t=5,n=1,r=1,i=.5){const s=Bc(e,"x","localResponseNormalization");ma(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),ma(wa(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let a=s,o=!1;3===s.rank&&(o=!0,a=kd(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const l={x:a},u={depthRadius:t,bias:n,alpha:r,beta:i},c=Dc.runKernel(El,l,u);return o?kd(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});gc.prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Wb(this,e,t,n,r)};const Vb=Wc({logSigmoid_:function(e){const t=Bc(e,"x","logSigmoid"),n=rd((e=>({value:Mp(Qp(Mp(e))),gradFunc:t=>lp(t,jp(Mp(e)))})));return n(t)}});gc.prototype.logSigmoid=function(){return this.throwIfDisposed(),Vb(this)},gc.prototype.logSoftmax=function(e){return this.throwIfDisposed(),hp(this,e)},gc.prototype.logSumExp=function(e,t){return this.throwIfDisposed(),om(this,e,t)},gc.prototype.log=function(){return this.throwIfDisposed(),sp(this)},gc.prototype.log1p=function(){return this.throwIfDisposed(),am(this)},gc.prototype.logicalAnd=function(e){return this.throwIfDisposed(),dp(this,e)},gc.prototype.logicalNot=function(){return this.throwIfDisposed(),jx(this)};const Gb=Wc({logicalOr_:function(e,t){const n=Bc(e,"a","logicalOr","bool"),r=Bc(t,"b","logicalOr","bool");Xd(n.shape,r.shape);const i={a:n,b:r};return Dc.runKernel(Il,i)}});gc.prototype.logicalOr=function(e){return this.throwIfDisposed(),Gb(this,e)};const Hb=Wc({logicalXor_:function(e,t){const n=Bc(e,"a","logicalXor","bool"),r=Bc(t,"b","logicalXor","bool");return Xd(n.shape,r.shape),dp(Gb(e,t),jx(dp(e,t)))}});gc.prototype.logicalXor=function(e){return this.throwIfDisposed(),Hb(this,e)},gc.prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Af(this,e,t,n)},gc.prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),pp(this,e,t,n,r)},gc.prototype.max=function(e,t){return this.throwIfDisposed(),op(this,e,t)},gc.prototype.maximumStrict=function(e){return this.throwIfDisposed(),pb(this,e)},gc.prototype.maximum=function(e){return this.throwIfDisposed(),mp(this,e)},gc.prototype.mean=function(e,t){return this.throwIfDisposed(),gp(this,e,t)},gc.prototype.min=function(e,t){return this.throwIfDisposed(),xp(this,e,t)},gc.prototype.minimumStrict=function(e){return this.throwIfDisposed(),fb(this,e)},gc.prototype.minimum=function(e){return this.throwIfDisposed(),bp(this,e)};const jb=Wc({mirrorPad_:function(e,t,n){ma("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Bc(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");ma(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const i="reflect"===n?1:0;for(let e=0;e<r.rank;e++)ma(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ma(t[e][0]>=0&&t[e][0]<=r.shape[e]-i&&t[e][1]>=0&&t[e][1]<=r.shape[e]-i,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-i} or less than 0 for input of shape ${r.shape}`));const s={paddings:t,mode:n},a={x:r};return Dc.runKernel(Pl,a,s)}});gc.prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),jb(this,e,t)},gc.prototype.modStrict=function(e){return this.throwIfDisposed(),mb(this,e)},gc.prototype.mod=function(e){return this.throwIfDisposed(),cb(this,e)},gc.prototype.mulStrict=function(e){return this.throwIfDisposed(),gb(this,e)},gc.prototype.mul=function(e){return this.throwIfDisposed(),lp(this,e)},gc.prototype.neg=function(){return this.throwIfDisposed(),Mp(this)},gc.prototype.norm=function(e,t,n){return this.throwIfDisposed(),Qf(this,e,t,n)},gc.prototype.notEqualStrict=function(e){return this.throwIfDisposed(),$b(this,e)},gc.prototype.notEqual=function(e){return this.throwIfDisposed(),Ap(this,e)},gc.prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Np(this,e,t,n)},gc.prototype.onesLike=function(){return this.throwIfDisposed(),Lp(this)},gc.prototype.pad=function(e,t){return this.throwIfDisposed(),Fp(this,e,t)};const qb=Wc({pool_:function(e,t,n,r,i,s){null==i&&(i=[1,1]),null==s&&(s=1),0===r&&(r="valid");const a=Bc(e,"x","maxPool");let o=a,l=!1;3===a.rank&&(l=!0,o=kd(a,[1,a.shape[0],a.shape[1],a.shape[2]])),ma(_d(s,i),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${i}'`));const u=dd(o.shape,t,s,i,r),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),i=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],i[t]]))}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[p,f]=function(e,t,n){const r=n.map((e=>e[0])),i=n.map((e=>e[1])),s=e.concat(r,i),a=t.map(((e,t)=>(e-s[t]%e)%e)),o=i.map(((e,t)=>e+a[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,a[t]]))]}([u.inHeight,u.inWidth],c,h),m=d?r:"valid",g=d?o:kg(o,c,p),x=("avg"===n?()=>Id(g,t,s,m):()=>pp(g,t,s,m))(),b=d?x:ib(x,c,f);return l?kd(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});gc.prototype.pool=function(e,t,n,r,i){return this.throwIfDisposed(),qb(this,e,t,n,r,i)},gc.prototype.powStrict=function(e){return this.throwIfDisposed(),xb(this,e)},gc.prototype.pow=function(e){return this.throwIfDisposed(),Zf(this,e)},gc.prototype.prelu=function(e){return this.throwIfDisposed(),$p(this,e)};const Xb=Wc({prod_:function(e,t=null,n=!1){let r=Bc(e,"x","prod");"bool"===r.dtype&&(r=_h(r,"int32"));const i={x:r},s={axis:t,keepDims:n};return Dc.runKernel(Ql,i,s)}});gc.prototype.prod=function(e,t){return this.throwIfDisposed(),Xb(this,e,t)};const Kb=Wc({reciprocal_:function(e){const t={x:Bc(e,"x","reciprocal")};return Dc.runKernel(nu,t)}});gc.prototype.reciprocal=function(){return this.throwIfDisposed(),Kb(this)},gc.prototype.relu=function(){return this.throwIfDisposed(),Wp(this)},gc.prototype.relu6=function(){return this.throwIfDisposed(),wf(this)},gc.prototype.reshapeAs=function(e){return this.throwIfDisposed(),kd(this,e.shape)},gc.prototype.reshape=function(e){return this.throwIfDisposed(),kd(this,e)},gc.prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),jf(this,e,t,n)},gc.prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),qf(this,e,t,n)},gc.prototype.reverse=function(e){return this.throwIfDisposed(),Vp(this,e)},gc.prototype.rfft=function(){return this.throwIfDisposed(),xf(this)};const Yb=Wc({round_:function(e){const t={x:Bc(e,"x","round")};return Dc.runKernel(hu,t)}});gc.prototype.round=function(){return this.throwIfDisposed(),Yb(this)},gc.prototype.rsqrt=function(){return this.throwIfDisposed(),Jg(this)},gc.prototype.selu=function(){return this.throwIfDisposed(),Gp(this)},gc.prototype.separableConv2d=function(e,t,n,r,i,s){return this.throwIfDisposed(),Hp(this,e,t,n,r,i,s)},gc.prototype.sigmoid=function(){return this.throwIfDisposed(),jp(this)};const Zb=Wc({sign_:function(e){const t={x:Bc(e,"x","sign")};return Dc.runKernel(vu,t)}});gc.prototype.sign=function(){return this.throwIfDisposed(),Zb(this)},gc.prototype.sin=function(){return this.throwIfDisposed(),Og(this)},gc.prototype.sinh=function(){return this.throwIfDisposed(),zg(this)},gc.prototype.slice=function(e,t){return this.throwIfDisposed(),qp(this,e,t)},gc.prototype.softmax=function(e){return this.throwIfDisposed(),Jp(this,e)},gc.prototype.softplus=function(){return this.throwIfDisposed(),Qp(this)},gc.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),kg(this,e,t)},gc.prototype.split=function(e,t){return this.throwIfDisposed(),ef(this,e,t)},gc.prototype.sqrt=function(){return this.throwIfDisposed(),tf(this)},gc.prototype.square=function(){return this.throwIfDisposed(),Tp(this)},gc.prototype.squaredDifference=function(e){return this.throwIfDisposed(),sm(this,e)},gc.prototype.squaredDifferenceStrict=function(e){return this.throwIfDisposed(),bb(this,e)},gc.prototype.squeeze=function(e){return this.throwIfDisposed(),nf(this,e)},gc.prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof gc?[this,e]:[this,...e];return rf(n,t)},gc.prototype.step=function(e){return this.throwIfDisposed(),_f(this,e)};const Jb=Wc({stridedSlice_:function(e,t,n,r,i=0,s=0,a=0,o=0,l=0){const u={x:Bc(e,"x","stridedSlice")},c={begin:t,end:n,strides:r,beginMask:i,endMask:s,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return Dc.runKernel(Nu,u,c)}});gc.prototype.stridedSlice=function(e,t,n,r,i,s,a,o){return this.throwIfDisposed(),Jb(this,e,t,n,r,i,s,a,o)},gc.prototype.subStrict=function(e){return this.throwIfDisposed(),vb(this,e)},gc.prototype.sub=function(e){return this.throwIfDisposed(),up(this,e)},gc.prototype.sum=function(e,t){return this.throwIfDisposed(),cp(this,e,t)};const Qb=Wc({tan_:function(e){const t={x:Bc(e,"x","tan")};return Dc.runKernel(Ru,t)}});gc.prototype.tan=function(){return this.throwIfDisposed(),Qb(this)},gc.prototype.tanh=function(){return this.throwIfDisposed(),sf(this)},gc.prototype.tile=function(e){return this.throwIfDisposed(),Zd(this,e)},gc.prototype.toBool=function(){return this.throwIfDisposed(),_h(this,"bool")},gc.prototype.toFloat=function(){return this.throwIfDisposed(),_h(this,"float32")},gc.prototype.toInt=function(){return this.throwIfDisposed(),_h(this,"int32")};const ev=Wc({topk_:function(e,t=1,n=!0){const r=Bc(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=r.shape[r.shape.length-1];if(t>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got ${t}`);const s={x:r},a={k:t,sorted:n},[o,l]=Dc.runKernel(Fu,s,a);return{values:o,indices:l}}});gc.prototype.topk=function(e,t){return this.throwIfDisposed(),ev(this,e,t)},gc.prototype.transpose=function(e){return this.throwIfDisposed(),df(this,e)};const tv=Wc({unique_:function(e,t=0){const n=Bc(e,"x","unique","string_or_numeric");ma(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},i={axis:t},[s,a]=Dc.runKernel(Ou,r,i);return{values:s,indices:a}}});let nv;function rv(){return null==nv&&(nv=Dc.backend.epsilon()),nv}gc.prototype.unique=function(e){return this.throwIfDisposed(),tv(this,e)},gc.prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),ex(this,e,t)},gc.prototype.unstack=function(e){return this.throwIfDisposed(),lf(this,e)},gc.prototype.where=function(e,t){return this.throwIfDisposed(),cf(e,this,t)},gc.prototype.zerosLike=function(){return this.throwIfDisposed(),hf(this)};class iv extends Error{constructor(e){super(e),Object.setPrototypeOf(this,iv.prototype)}}class sv extends Error{constructor(e){super(e),Object.setPrototypeOf(this,sv.prototype)}}class av extends Error{constructor(e){super(e),Object.setPrototypeOf(this,av.prototype)}}class ov extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ov.prototype)}}class lv extends Error{constructor(e){super(e),Object.setPrototypeOf(this,lv.prototype)}}class uv extends Error{constructor(e){super(e),Object.setPrototypeOf(this,uv.prototype)}}function cv(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function hv(e,t){if(!e)throw new lv(t)}function dv(e,t){let n=0;for(const r of e)r===t&&n++;return n}function pv(e){return 1===e.length?e[0]:e}function fv(e){return Array.isArray(e)?e:[e]}function mv(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function gv(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let xv={};function bv(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function vv(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>vv(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?vv(t):e[n]=t.value)}}}function yv(e,t={},n={},r="object",i=!1){if("string"==typeof e){const i=e;let s;if(i in n)s=n[i];else if(i in xv)s=xv[i];else if(s=t[i],null==s)throw new av(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new av(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const a=s.className;let o,l;if(a in n?[o,l]=n[a]:a in xv?[o,l]=xv.className:a in t&&([o,l]=t[a]),null==o)throw new av(`Unknown ${r}: ${a}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(xv))e[t]=xv[t];for(const t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;const t=Object.assign({},xv);for(const e of Object.keys(n))xv[e]=n[e];vv(s.config);const r=l(o,s.config,n,i);return xv=Object.assign({},t),r}{const e=Object.assign({},xv);for(const e of Object.keys(n))xv[e]=n[e];const t=new o(s.config);return xv=Object.assign({},e),t}}}function wv(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function _v(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Sv(e){if(null==e)throw new av(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function kv(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new av(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Iv(e,t,n=0,r=1/0){return hv(n>=0),hv(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function Ev(e,t){Array.isArray(e)?(ma(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Ev(e,`element ${n+1} of ${t}`)))):ma(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Tv(e)}.`))}function Tv(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Tv(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Cv(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function Mv(e,t){return Qh((()=>tf(cp(lp(e,e),t,!0))))}class Av extends qh{getConfig(){return{}}}class Nv extends Av{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Qh((()=>{const t=Mv(e,this.axis),n=Nd(t,0,this.maxValue);return lp(e,Gd(n,od(rv(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Nv.className="MaxNorm",Kh(Nv);class Rv extends Av{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Qh((()=>Gd(e,od(rv(),Mv(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Rv.className="UnitNorm",Kh(Rv);class Dv extends Av{apply(e){return Wp(e)}}Dv.className="NonNeg",Kh(Dv);class Lv extends Av{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Qh((()=>{const t=Mv(e,this.axis),n=od(lp(this.rate,Nd(t,this.minValue,this.maxValue)),lp(1-this.rate,t));return lp(e,Gd(n,od(rv(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Lv.className="MinMaxNorm",Kh(Lv);const Fv={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function $v(e){return bv(e)}function Ov(e,t={}){return yv(e,Xh.getMap().classNameMap,t,"constraint")}function Pv(e){return null==e?null:"string"==typeof e?Ov({className:e in Fv?Fv[e]:e,config:{}}):e instanceof Av?e:Ov(e)}const zv=["channelsFirst","channelsLast"],Bv=["nearest","bilinear"],Uv=["valid","same","causal"],Wv=["max","avg"],Vv=["sum","mul","concat","ave"],Gv=new Map;function Hv(e){kv(zv,"DataFormat",e)}function jv(e){kv(Uv,"PaddingMode",e)}function qv(e){kv(Wv,"PoolMode",e)}const Xv=[];function Kv(e,t){Xv.push(e);try{const e=t();return Xv.pop(),e}catch(e){throw Xv.pop(),e}}function Yv(e){if(!Qv(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Xv.length?"":Xv.join("/")+"/")+e}function Zv(e){if(!Qv(e))throw new Error("Not a valid tensor name: '"+e+"'");Gv.has(e)||Gv.set(e,0);const t=Gv.get(e);if(Gv.set(e,Gv.get(e)+1),t>0){const n=`${e}_${t}`;return Gv.set(n,1),n}return e}const Jv=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Qv(e){return!!e.match(Jv)}function ey(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let i=t;i<n;++i)r*=e[i];return r}function ty(e){return af(e=Array.isArray(e)?new Float32Array(e):e)}function ny(e){return xp(ty(e)).dataSync()[0]}function ry(e){return op(ty(e)).dataSync()[0]}function iy(e,t){if(t<e)throw new av(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function sy(e,t){return e.asType(t)}function ay(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function oy(e,t,n){return Qh((()=>{switch(e.rank){case 1:return Xp(e,t,n);case 2:return Kp(e,[t,0],[n,e.shape[1]]);case 3:return Yp(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Zp(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return qp(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return qp(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new av(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ly(e,t,n){return Qh((()=>{switch(e.rank){case 1:return Xp(e,t,n);case 2:return Kp(e,[0,t],[e.shape[0],n]);case 3:return Yp(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Zp(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new av(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function uy(e,t,n,r){return Qh((()=>{switch(e.rank){case 1:return Xp(e,t,n);case 2:switch(r){case 1:return oy(e,t,n);case 2:return ly(e,t,n);default:throw new av(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return oy(e,t,n);case 2:return Yp(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return ly(e,t,n);default:throw new av(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return oy(e,t,n);case 2:return Zp(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Zp(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return ly(e,t,n);default:throw new av(`The axis is not within the rank of the tensor ${r}`)}default:throw new av(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function cy(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Rd(e,t)}function hy(e,t){switch(e.rank){case 1:return Dd([e,t]);case 2:return Ld([e,t],0);case 3:return Fd([e,t],0);case 4:return $d([e,t],0);default:throw new av(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function dy(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new av(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Zd(e,t)}function py(e,t=0,n=1,r,i){return Bp(e,t,n,r,i)}function fy(e,t,n,r){if(e.rank<2||t.rank<2)throw new ov(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new ov(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Nf({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?xy(e.rank,r,"channelsLast"):null,activation:n});{const i=e.shape.slice(),s=i.pop();e=e.reshape([-1,s]);const a=t.shape.slice(),o=a.pop(),l=a.pop(),u=[...a,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=t.transpose(c).reshape([l,-1]);const h=[...i,...u];return Nf({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?xy(e.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function my(e,t,n){return Qh((()=>(t=Array.isArray(t)?af(t,"int32"):t.toInt(),tp(e,t,n))))}function gy(e){return lp(e,e)}function xy(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new av(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1,1]):t.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,1,r[0]]):t.reshape([1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1]):t.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,r[0]]):t.reshape([1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1]):t.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,r[0]]):t.reshape([1].concat(r))}else if(e<3)return t;throw new av(`Unsupported input rank by biasAdd: ${t.rank}`)}function by(e,t,n){return Qh((()=>(null==n&&(n="channelsLast"),Hv(n),e.add(xy(e.rank,t,n)))))}function vy(e,t,n,r){return Qh((()=>pf(e,t,n,r)))}function yy(e,t,n=!1){return n?e():t()}const wy=["fanIn","fanOut","fanAvg"],_y=["normal","uniform","truncatedNormal"];class Sy extends qh{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class ky extends Sy{apply(e,t){return Rp(e,t)}}ky.className="Zeros",Kh(ky);class Iy extends Sy{apply(e,t){return Dp(e,t)}}Iy.className="Ones",Kh(Iy);class Ey extends Sy{constructor(e){if(super(),"object"!=typeof e)throw new av(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new av(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Qh((()=>lp(id(this.value),Dp(e,t))))}getConfig(){return{value:this.value}}}Ey.className="Constant",Kh(Ey);class Ty extends Sy{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Up(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Ty.className="RandomUniform",Kh(Ty);class Cy extends Sy{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ov(`randomNormal does not support dType ${t}.`);return py(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Cy.className="RandomNormal",Kh(Cy);class My extends Sy{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ov(`truncatedNormal does not support dType ${t}.`);return of(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}My.className="TruncatedNormal",Kh(My);class Ay extends Sy{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Qh((()=>{if(2!==e.length||e[0]!==e[1])throw new av("Identity matrix initializer can only be used for 2D square matrices.");return lp(this.gain,Jd(e[0]))}))}getConfig(){return{gain:this.gain}}}Ay.className="Identity",Kh(Ay);class Ny extends Sy{constructor(e){if(super(),e.scale<0)throw new av(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,kv(wy,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){kv(_y,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Hv(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=ey(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=ey(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=ey(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],i=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,i):s/=Math.max(1,(r+i)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ov(`${this.getClassName()} does not support dType ${t}.`);return of(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return Up(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Ny.className="VarianceScaling",Kh(Ny);class Ry extends Ny{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ny.className}}Ry.className="GlorotUniform",Kh(Ry);class Dy extends Ny{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ny.className}}Dy.className="GlorotNormal",Kh(Dy);class Ly extends Ny{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ny.className}}Ly.className="HeNormal",Kh(Ly);class Fy extends Ny{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ny.className}}Fy.className="HeUniform",Kh(Fy);class $y extends Ny{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ny.className}}$y.className="LeCunNormal",Kh($y);class Oy extends Ny{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ny.className}}Oy.className="LeCunNormal",Kh(Oy);class Py extends Sy{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new ov("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Qh((()=>{if(e.length<2)throw new ov("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=py(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=lm.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),lp(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Py.className="Orthogonal",Kh(Py);const zy={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function By(e,t={}){return yv(e,Xh.getMap().classNameMap,t,"initializer")}function Uy(e){return bv(e)}function Wy(e){if("string"==typeof e){const t=e in zy?zy[e]:e;if("GlorotNormal"===t)return new Dy;if("GlorotUniform"===t)return new Ry;if("HeNormal"===t)return new Ly;if("HeUniform"===t)return new Fy;if("LeCunNormal"===t)return new $y;if("LeCunUniform"===t)return new Oy;{const e={};return e.className=t,e.config={},By(e)}}return e instanceof Sy?e:By(e)}let Vy=0;function Gy(){return Vy++}const Hy={};function jy(e=""){return e in Hy||(Hy[e]=0),Hy[e]+=1,e+Hy[e].toString()}function qy(e){return Array.isArray(e)&&Array.isArray(e[0])}function Xy(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Ky(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new av(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Yy(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new av(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Zy(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class Jy{constructor(e,t="float32",n="Variable",r=!0,i=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Gy(),n=null==n?"Variable":n,this.originalName=Yv(n),this.name=Zv(this.originalName),this.trainable_=r,this.constraint=i,this.val=function(e,t=!0,n,r){return Dc.makeVariable(e,t,n,r)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Qy(e){return e.map((e=>e.read()))}function ew(e){e.forEach((e=>{e[0].write(e[1])}))}class tw{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class nw{constructor(e,t,n,r,i,s,a){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=i,this.outputTensorIndex=a,this.id=Gy(),null!=s&&(this.originalName=Yv(s),this.name=Zv(this.originalName)),this.rank=t.length}}let rw=0;class iw{constructor(e,t){this.callArgs=t,this.id=rw++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let sw=0;class aw extends qh{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=sw++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=mv(e)+"_"+jy(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new sv(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new av(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return pv(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return pv(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new iv(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new iv(`Layer ${this.name} is not connected, no input to return.`);return pv(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new iv(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new iv(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return pv(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=fv(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=fv(this.inputSpec);if(e.length!==t.length)throw new av(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],i=t[n];if(null==i)continue;const s=r.rank;if(null!=i.ndim&&s!==i.ndim)throw new av(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${s}`);if(null!=i.maxNDim&&s>i.maxNDim)throw new av(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${s}`);if(null!=i.minNDim&&s<i.minNDim)throw new av(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${s}.`);if(null!=i.dtype&&r.dtype!==i.dtype)throw new av(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${r.dtype}.`);if(i.axes){const e=r.shape;for(const t in i.axes){const r=Number(t),s=i.axes[t],a=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(a))throw new av(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=i.shape)for(let e=0;e<i.shape.length;++e){const t=i.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new av(`Input ${n} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=fv(e);let r=!0;for(const e of n)if(!(e instanceof nw)){r=!1;break}let i=!0;for(const e of n)if(e instanceof nw){i=!1;break}if(r===i)throw new av("Arguments to apply() must be all SymbolicTensors or all Tensors");return Kv(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of fv(e))t.push(n.shape);this.build(pv(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&i&&(this._refCount=1)}if(this.assertInputCompatibility(e),i){let r=this.call(e,t);const i=fv(r),s=[];for(let e of i)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=pv(s),null!=this.activityRegularizer)throw new ov("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=fv(e);const t=[];for(const n of e)t.push(n.shape);return pv(t)}(e),r=this.computeOutputShape(n);let i;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),i=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new nw(s,n,this,fv(e),t,this.name,r))):new nw(s,r,this,fv(e),t,this.name),this.addInboundNode(e,i,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new ov("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new iv(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new iv(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new sv(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Zy(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Qy(e?this.trainableWeights:this.weights)}setWeights(e){Qh((()=>{const t=this.weights;if(t.length!==e.length)throw new av(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Qy(t);for(let i=0;i<r.length;++i){const s=r[i],a=t[i],o=e[i];if(!ya(s.shape,o.shape))throw new av(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([a,o])}ew(n)}))}addWeight(e,t,n,r,i,s,a){if(-1!==this._addedWeightNames.indexOf(e))throw new av(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Wy("zeros"));const o=r.apply(t,n),l=new Jy(o,n,e,s,a);return o.dispose(),null!=i&&this.addLoss((()=>i.apply(l.read()))),null==s&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=fv(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,i,s,a=null){const o=fv(e);t=fv(t),n=fv(n),r=fv(r),i=Xy(i),s=Xy(s);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new iw({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:i,outputShapes:s},a);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function ow(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=ow(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class lw extends aw{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:jy("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new av("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new av("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new av("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new nw(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new iw({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new av(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function uw(e){if(null==e)return;const t=[],n=[],r=[];for(const i in e){const s=e[i];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(i),r.push(e)}}if(t.length>0){const i=await Promise.all(t);for(let t=0;t<i.length;++t)e[n[t]]=i[t][0];ed(r)}}function cw(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var hw;lw.className="InputLayer",Kh(lw),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(hw||(hw={}));class dw{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class pw{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class fw extends dw{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const i=Qh((()=>od(this.totals[e],lp(r,n))));this.totals[e]=i,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Qh((()=>{const n=lp(Gd(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),td(t[e])})))}}class mw extends dw{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const i=this.history[r];for(let s=0;s<i.length;++s)if("number"!=typeof i[s]){const a=i[s];e.push(a.data()),t.push(r),n.push(s)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class gw extends dw{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");La(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=uc();return(...i)=>{const s=uc();return s-r<t||(r=s,n=e(...i)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await uw(n),r.push(this.yield(e,t,n))),r.push(vm()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await uw(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await uw(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(vm()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await uw(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await uw(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(vm()):La(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await uw(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await uw(e),await this.trainEnd(e))}}function xw(e,t){return null==e&&(e={}),e instanceof dw?[e]:Array.isArray(e)&&e[0]instanceof dw?e:fv(e).map((e=>new gw(e,t)))}class bw{constructor(){}static registerCallbackConstructor(e,t){ma(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),bw.checkForDuplicate(t),null==bw.constructors[e]&&(bw.constructors[e]=[]),bw.constructors[e].push(t)}static checkForDuplicate(e){for(const t in bw.constructors)bw.constructors[+t].forEach((t=>{if(t===e)throw new av("Duplicate callback constructor.")}))}static clear(){bw.constructors={}}static createCallbacks(e){const t=[];for(const n in bw.constructors){const r=+n;e>=r&&t.push(...bw.constructors[r])}return t.map((e=>new e))}}function vw(e,t,n,r,i,s,a,o,l){const u=new mw,c=[new fw,...bw.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new pw(c);return h.setParams({epochs:n,initialEpoch:r,samples:i,steps:s,batchSize:a,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function yw(e,t={},n=!1){return yv(e,Xh.getMap().classNameMap,t,"layer",n)}function ww(e,t){return Qh((()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=cp(gy(e),t,!0),r=Qd(n.shape,rv()),i=tf(mp(n,r));return Gd(e,i)}))}function _w(e,t){return Qh((()=>gp(gy(up(t,e)),-1)))}function Sw(e,t){return Qh((()=>gp(ad(up(t,e)),-1)))}function kw(e,t){return Qh((()=>{const n=up(e,t),r=Nd(ad(e),rv(),Number.MAX_VALUE),i=ad(Gd(n,r));return lp(100,gp(i,-1))}))}function Iw(e,t,n=!1){return Qh((()=>{if(n)t=Jp(t);else{const e=cp(t,t.shape.length-1,!0);t=Gd(t,e)}return t=Nd(t,rv(),1-rv()),Mp(cp(lp(e.toFloat(),sp(t)),t.shape.length-1))}))}function Ew(e,t,n=!1){return Qh((()=>{const r=ep(function(e){const t=[ey(e.shape)];return e.reshape(t)}(e)).toInt(),i=(t=Nd(t,rv(),1-rv())).shape;return Iw(Np(r,i[i.length-1]).reshape(i),t,n)}))}function Tw(e,t){return Qh((()=>{let n;return n=Nd(t,rv(),1-rv()),n=sp(Gd(n,up(1,n))),gp(function(e,t){if(!ya(e.shape,t.shape))throw new av(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Qh((()=>{const n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())}))}(e,n),-1)}))}function Cw(e,t){return Qh((()=>{const n=ww(e,-1),r=ww(t,-1),i=lp(n,r);return Mp(cp(i,-1))}))}bw.constructors={};const Mw={meanSquaredError:_w,meanAbsoluteError:Sw,meanAbsolutePercentageError:kw,meanSquaredLogarithmicError:function(e,t){return Qh((()=>{const n=Nd(t,rv(),Number.MAX_VALUE),r=sp(od(1,n)),i=Nd(e,rv(),Number.MAX_VALUE),s=sp(od(1,i));return gp(gy(up(r,s)),-1)}))},squaredHinge:function(e,t){return Qh((()=>{const n=mp(0,up(1,lp(e,t)));return gp(gy(n),-1)}))},hinge:function(e,t){return Qh((()=>{const n=mp(0,up(1,lp(e,t)));return gp(n,-1)}))},categoricalHinge:function(e,t){return Qh((()=>{const n=cp(lp(e,t),-1),r=op(lp(up(1,e),t),-1);return mp(0,od(1,up(r,n)))}))},logcosh:function(e,t){return Qh((()=>{const n=Math.log(2),r=up(t,e),i=up(od(r,Qp(lp(-2,r))),n);return gp(i,-1)}))},categoricalCrossentropy:Iw,sparseCategoricalCrossentropy:Ew,binaryCrossentropy:Tw,kullbackLeiblerDivergence:function(e,t){return Qh((()=>{const n=Nd(e,rv(),1),r=Nd(t,rv(),1);return cp(lp(e,sp(Gd(n,r))),-1)}))},poisson:function(e,t){return Qh((()=>{const n=sp(od(rv(),t));return gp(up(t,lp(e,n)),-1)}))},cosineProximity:Cw};function Aw(e){if("string"==typeof e){if(e in Mw)return Mw[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new av(t)}return e}function Nw(e,t){return Qh((()=>{const n=lp(.5,Lp(t)),r=sy(np(t,n),e.dtype);return gp(Kd(e,r),-1)}))}function Rw(e,t){return Qh((()=>sy(Kd(cd(e,-1),cd(t,-1)),"float32")))}function Dw(e,t){return Tw(e,t)}function Lw(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),Kd(e,t).asType("float32")}const Fw=Iw,$w=Ew,Ow={binaryAccuracy:Nw,categoricalAccuracy:Rw,precision:function(e,t){return Qh((()=>{const n=function(e,t){return Qh((()=>dp(e.equal(1),t.equal(1)).sum().cast("float32")))}(e,t),r=function(e,t){return Qh((()=>dp(e.equal(0),t.equal(1)).sum().cast("float32")))}(e,t),i=n.add(r);return cf(np(i,0),n.div(i),0).cast("float32")}))},categoricalCrossentropy:Fw,sparseCategoricalCrossentropy:$w,mse:_w,MSE:_w,mae:Sw,MAE:Sw,mape:kw,MAPE:kw,cosine:Cw};function Pw(e){if("string"==typeof e&&e in Ow)return Ow[e];if("string"!=typeof e&&null!=e)return e;throw new av(`Unknown metric ${e}`)}function zw(e){if(hv(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(Mw))if(Mw[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Ow))if(Ow[n]===e){t=n;break}return void 0!==t?t:e.name}}function Bw(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Uw(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Uw(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Uw(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Uw(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Ww(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function Vw(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Ww([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function Gw(e,t,n,r){let i;try{i=JSON.stringify(e.outputShape)}catch(e){i="multiple"}const s=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],i=t.tensorIndices[e];s.push(`${n}[${r}][${i}]`)}const a=e.name,o=e.getClassName(),l=0===s.length?"":s[0];Ww([`${a} (${o})`,i,e.countParams().toString(),l],t,r);for(let e=1;e<s.length;++e)Ww(["","","",s[e]],t,r)}function Hw(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function jw(e,t){if(null===e)return null;if("string"==typeof e)return gv(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let i=0;i<r;++i){const r=e[i];Hw(t,i,r)?n.push(r):n.push(jw(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=gv(n);t[e]=jw(r,e)}}return t}}function qw(e,t){if(null==e)return null;if("string"==typeof e)return mv(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let i=0;i<r;++i){const r=e[i];Hw(t,i,r)?n.push(r):n.push(qw(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[mv(n)]="name"!==n&&"className"!==n||"string"!=typeof r?qw(r,n):r}return t}}class Xw{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Xw)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new av(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return _h(t,e.dtype)}catch(n){throw new av(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof nw){if(null==this.id2Value[e.id])throw new av(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new av(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof nw){if(null==this.id2Value[e.id])throw new av(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new av(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&ed(this.id2Mask)}}const Kw={},Yw={};function Zw(e,t,n,r){const i=null!=n&&n.training,s=Array.isArray(e),a=s?e:[e],o=a.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let h,d;if(null==Kw[c]){const e=function(e,t){ma(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const i=Qw(e[0],t);n=i.sorted,r=i.recipientMap}else{const i=new Set;for(const s of e){const{sorted:e,recipientMap:a}=Qw(s,t);for(const t of e)i.has(t.name)||(n.push(t),i.add(t.name));for(const e in a)null==r[e]&&(r[e]=new Set),a[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:Jw(r)}}(a,t);h=e.sorted,d=e.recipientCounts,Kw[c]=h,Yw[c]=d}h=Kw[c],d={},i||Object.assign(d,Yw[c]);const p=new Xw(t);for(let e=0;e<h.length;++e){if(null!=r){const e=Jh().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const s=h[e],a=s.sourceLayer;if(a instanceof lw)continue;const u=[],c=[],f=[];let m=!1;for(const e of s.inputs){const n=p.getValue(e),r=p.getMask(e);u.push(n),c.push(r),null!=r&&(m=!0),i||(d[e.name]--,0!==d[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=fv(a.apply(u,n));let x=null;a.supportsMasking&&(x=a.computeMask(u,c));const b=e_(s),v=Array.isArray(b)?b:[b];for(let e=0;e<v.length;++e){p.hasKey(v[e])||p.add(v[e],g[e],Array.isArray(x)?x[0]:x);const t=o.indexOf(v[e].name);-1!==t&&(l[t]=g[e])}i||ed(f)}return p.disposeMasks(),s?l:l[0]}function Jw(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Qw(e,t){const n=new Set,r=[],i={};for(const e of t.names())n.add(e);const s=[],a=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=a[a.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&a.pop();else{a.push(s.length-1);for(const t of e.inputs)null==i[t.name]&&(i[t.name]=new Set),i[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:i}}function e_(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class t_ extends aw{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=jy(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],_v(this.inputs).length!==this.inputs.length)throw new av(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);_v(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;hv(0===n,"input layer has >1 nodes"),hv(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof lw))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},i={},s={},a=[],o=(e,t,n,r,i,l)=>{null!=r&&null!=i&&null!=l||(r=e.sourceLayer,i=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[i];if(-1!==n.indexOf(u))throw new sv(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(t_.nodeKey(r,i)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const r=u.inputTensors[e],i=u.inboundLayers[e],s=u.nodeIndices[e],a=u.tensorIndices[e];o(r,t,n,i,s,a)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);a.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=a.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id];const a=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,a),r[e.outboundLayer.id]=s,i[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){const i=e.inboundLayers[r],a=e.nodeIndices[r],o=i.inboundNodes[a],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,l),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const d={};for(const e in r){const t=r[e];t in d||(d[t]=[]),d[t].push(i[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(wv);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof t_&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(wv);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new sv(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new sv(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new iw({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new av("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new av(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const i=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])i.push([n[s],e[r]]);else if(t)throw new av(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new av(`${e.length} of ${r} weights are not set: ${e}`)}ew(i)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 2.8.6",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=qw(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Qh((()=>{e=fv(e);const n=new Xw;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Zw(this.outputs,n,t)}))}computeMask(e,t){return Qh((()=>{let n;return e=fv(e),n=null==t?cv(null,e.length):fv(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Xy(e);if(t.length!==this.inputLayers.length)throw new av(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],i=t[e];n[r.name+"_0_0"]=i}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(wv);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const i=e.inboundLayers[t],s=e.nodeIndices[t],a=e.tensorIndices[t],o=n[`${i.name}_${s}_${a}`];r.push(o)}const i=Xy(t.computeOutputShape(pv(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<i.length;e++)n[`${t.name}_${s}_${e}`]=i[e]}}const i=[],s=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],i=`${t.name}_${n}_${r}`;s.push(i)}for(let e=0;e<s.length;e++){const t=s[e];hv(t in n),i.push(n[t])}return pv(i)}runInternalGraph(e,t){null==t&&(t=cv(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const i=this.inputs[r],s=e[r],a=t[r];n[i.id]=[s,a]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(wv);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,i=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,a,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===s.length){const[e,n]=s[0];null==u.mask&&(u.mask=n),o=fv(t.call(e,u)),l=fv(t.computeMask(e,n)),r=[e],a=[n]}else r=s.map((e=>e[0])),a=s.map((e=>e[1])),null==u.mask&&(u.mask=a),o=fv(t.call(r,u)),l=fv(t.computeMask(r,a));if(t.activityRegularizer)throw new ov("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<i.length;++e){const t=i[e],r=o[e],s=l[e];n[t.id]=[r,s]}}}}const i=[],s=[],a=[];for(const e of this.outputs){hv(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];a.push(t.shape),i.push(t),s.push(r)}return[i,s,a]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof t_?1:0;for(let r=0;r<e.inboundNodes.length;r++){const i=t_.nodeKey(e,r);this.containerNodes.has(i)&&(t[i]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new av(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new av("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new av(`No such layer: ${e}`)}calculateLosses(){return Qh((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=t_.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),i=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],i=t_.nodeKey(e,n);let a={};if(this.containerNodes.has(i)){if(r.callArgs)try{JSON.stringify(r.callArgs),a=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),a={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const i=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n];let l=t[t_.nodeKey(i,s)];null==l&&(l=0),e.push([i.name,l,o,a])}s.push(e)}}}const a={};a.name=e.name,a.className=r,a.config=i,a.inboundNodes=s,n.push(a)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],i=this.inputLayersNodeIndices[e],s=t_.nodeKey(n,i);if(!this.containerNodes.has(s))continue;let a=t[s];null==a&&(a=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,a,o])}e.inputLayers=r;const i=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=t_.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let a=t[s];null==a&&(a=0);const o=this.outputLayersTensorIndices[e];i.push([n.name,a,o])}return e.outputLayers=i,e}static fromConfig(e,t,n={},r=!1){const i={},s={};function a(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){const n=[];let r;for(const s of t){const o=s[0],l=s[1],u=s[2];if(r=null==s[3]?{}:s[3],!(o in i))return void a(e,t);const c=i[o];if(c.inboundNodes.length<=l)return void a(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(pv(n),r)}function l(e){const n=e.name,s=yw(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),i[n]=s,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new av(`Corrupted configuration, expected array for nodeData: ${e}`);a(s,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!Sv(s);)for(const e of c){const t=i[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];hv(t in i);const s=i[t].inboundNodes[n].outputTensors;h.push(s[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];hv(t in i);const s=i[t].inboundNodes[n].outputTensors;d.push(s[r])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new av("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Qh((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function n_(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function r_(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Qh((()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){const t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());ed(t);const i=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);i.push(n[e])})),af(i,"float32")}return null}function i_(e,t){return lp(e,t)}function s_(e,t){let n,r;const i=t;n=i.xs,r=i.ys,ma(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const s=a_("input",e.inputNames,n),a=a_("output",e.outputNames,r),o=s[0].shape[0];ma(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),ma(a.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)ma(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<a.length;t++)ma(a[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:a}}function a_(e,t,n){if(n instanceof gc)return[n];if(Array.isArray(n))return ma(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const i of t){if(null==n[i])throw new av(`The feature data generated by the dataset lacks the required ${e} key '${i}'.`);r.push(n[i])}return r}}function o_(e){return"function"==typeof e.iterator}function l_(e){ma(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function u_(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>oy(e,t,n-t))):oy(e,t,n-t)}function c_(e,t){return Qh((()=>null==e?null:Array.isArray(e)?e.map((e=>c_(e,t))):my(e,"int32"===t.dtype?t:t.toInt())))}function h_(e,t){const n=[];let r=0,i=null;for(;r<e;)i=r+t,i>=e&&(i=e),n.push([r,i]),r=i;return n}function d_(e){const t=[];e instanceof gc&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(ay(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function p_(e,t){if(null==e)return;const n=[];if(t instanceof gc)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof gc)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const i=e[t];-1===n.indexOf(i.id)&&r.push(i)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function f_(e){return Array.isArray(e)}function m_(e){return!function(e){return e instanceof gc}(e)&&!f_(e)}function g_(e,t,n,r=!0,i=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(f_(e)&&e.length>0)t=!0;else if(m_(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new av(`Error when checking model ${i} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(m_(e)){s=[];for(const n of t){if(null==e[n])throw new av(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(f_(e)){if(e.length!==t.length)throw new av(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(t.length>1)throw new av(`The model ${i} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=d_(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const a=s[e];if(a.shape.length!==n[e].length)throw new av(`Error when checking ${i}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${a.shape}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=a.shape[s],l=n[e][s];if(null!=l&&l>=0&&o!==l)throw new av(`Error when checking ${i}: expected ${t[e]} to have shape [${n[e]}], but got array with shape [${a.shape}].`)}}return s}function x_(e,t,n,r=!0,i=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new av(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new av(`The model expects ${t.length} ${i} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const a=s[e];if(a.shape.length!==n[e].length)throw new av(`Error when checking ${i}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=a.shape[s],l=n[e][s];if(null!=l&&l!==o)throw new av(`Error when checking ${i}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}class b_ extends t_{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new av("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const i=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const i of n.inboundNodes)if(-1!==r.indexOf(i)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Output shape","Param #"];let a;if(i?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!i){s.push("Receives inputs"),a=[];for(const t in e.nodesByDepth)a.push(...e.nodesByDepth[t])}r("_".repeat(t)),Ww(s,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)i?Vw(o[e],n,r):Gw(o[e],n,a,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?Zy(e.collectedTrainableWeights):Zy(e.trainableWeights),t}(e),u=Zy(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>xm.adagrad(.01),Adadelta:()=>xm.adadelta(1,.95,rv()),Adam:()=>xm.adam(.001,.9,.999,rv()),Adamax:()=>xm.adamax(.002,.9,.999,rv(),0),RMSProp:()=>xm.rmsprop(.001,.9,0,rv()),SGD:()=>xm.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new av(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof sd))throw new av("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new av(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Aw(e)))}else{const n=Aw(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new av(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Aw(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Kv("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),i=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Kv("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,s;for(const a of t){if("string"==typeof a&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(a)){const t=this.internalOutputShapes[e];let i;1===t[t.length-1]||this.lossFunctions[e]===Tw?-1!==["accuracy","acc"].indexOf(a)?r=Nw:-1!==["crossentropy","ce"].indexOf(a)&&(r=Dw):this.lossFunctions[e]===Ew?-1!==["accuracy","acc"].indexOf(a)?r=Lw:-1!==["crossentropy","ce"].indexOf(a)&&(r=$w):-1!==["accuracy","acc"].indexOf(a)?r=Rw:-1!==["crossentropy","ce"].indexOf(a)&&(r=Fw),-1!==["accuracy","acc"].indexOf(a)?i="acc":-1!==["crossentropy","ce"].indexOf(a)&&(i="ce"),s=r,n=""+i}else{const e=Pw(a);s=e,n=""+zw(a)}let t;Kv(n,(()=>{t=s})),i(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;l_(r);const i=this.standardizeUserDataXY(e,t,!0,r);try{const s=i[0].concat(i[1]);this.makeTestFunction();const a=this.testFunction;return pv(this.testLoop(a,s,r,n.verbose,n.steps))}finally{p_(i[0],e),p_(i[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,i=e.testFunction;let s=[];if(n.verbose>0)throw new ov("Verbose mode is not implemented yet.");ma(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const a="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!r||l<n.batches;){const t=await a.next();if(s=Qh((()=>{if(t.value){const{xs:n,ys:r}=s_(e,t.value),a=n.concat(r),u=Qh((()=>i(a)));if(ed(a),0===l)for(let e=0;e<u.length;++e)s.push(id(0));const c=a[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=s[e];s[e]=Qh((()=>od(s[e],lp(c,t)))),l>0&&ed(n)}ed(u),o+=c,++l}return s})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){const t=s[e];s[e]=Gd(s[e],o),ed(t)}return pv(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let i;if(null!=n){if(i=null,null!=t)throw new av(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new av(`Either the input data should have a defined shape, or ${r} shoud be specified.`);i=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return i}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new av("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],i=this.retrieveSymbolicTensors(r),s=new Xw;if(e instanceof gc&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new av(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new av(`No value is provided for the model's input ${t.name}`);s.add(t,n)}const a=Zw(i,s);return n?a:a[0]}retrieveSymbolicTensors(e){const t=cv(null,e.length);let n=e.length;for(const r of this.layers){const i=Array.isArray(r.output)?r.output:[r.output],s=i.map((e=>e.name));for(let r=0;r<e.length;++r){const a=s.indexOf(e[r]);if(-1!==a&&(t[r]=i[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new av(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Qh((()=>{const r=this.checkNumSamples(e);if(n)throw new ov("Verbose predictLoop() is not implemented yet.");const i=h_(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<i.length;++t)Qh((()=>{const n=i[t][0],r=i[t][1],s=u_(e,n,r),a=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)a.push({key:this.inputs[e],value:s[e]});else a.push({key:this.inputs[0],value:s});const o=new Xw(a);return Zw(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return pv(s.map((e=>Rd(e,0))))}))}predict(e,t={}){const n=d_(e);x_(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return l_(r),this.predictLoop(n,r)}finally{p_(n,e)}}predictOnBatch(e){x_(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new sv("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const i=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Ew?i.push(t.slice(0,t.length-1).concat([1])):i.push(t)}if(function(e,t,n){const r=_v(e.map((e=>e.shape[0])));r.sort();const i=_v(t.map((e=>e.shape[0])));if(i.sort(),r.length>1)throw new av(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(i.length>1)throw new av(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&i.length>0&&!ya(r,i))throw new av(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${i[0]} target sample(s).`)}(e=g_(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=g_(t,this.feedOutputNames,i,!1,"target")),function(e,t,n){const r=[_w,Tw,Iw];for(let i=0;i<e.length;++i){const s=e[i],a=t[i],o=n[i];if(null!=a){if(a===Iw&&1===s.shape[s.shape.length-1])throw new av(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(a)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],i=t[n];if(null!=i&&r!==i)throw new av(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new av(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,i=!0,s){const[a,o]=this.standardizeUserDataXY(e,t,i,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=n_(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await r_(o[t],null,e[t]))}return[a,o,l]}testLoop(e,t,n,r=0,i){return Qh((()=>{const s=this.checkNumSamples(t,n,i,"steps"),a=[];if(r>0)throw new ov("Verbose mode is not implemented yet.");if(null!=i)throw new ov("steps mode in testLoop() is not implemented yet");{const r=h_(s,n),i=af(iy(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],l=oy(i,s,o-s),u=c_(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)a.push(id(0));for(let e=0;e<c.length;++e){const t=c[e];a[e]=od(a[e],lp(o-s,t))}}for(let e=0;e<a.length;++e)a[e]=Gd(a[e],s)}return a}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let i=r;dv(e,r)>1&&(i+=`_${dv(e.slice(0,n),r)}`),t.push(i)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],a=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const a=new Xw(e),o=Zw(this.outputs,a,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=i[e]&&(n=i_(n,i[e]));const s=gp(n);t.push(s),l=0===e?n:od(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],i=this.metricsTensors[e][1];n=gp(t(r[i],o[i]))}td(n),s.push(n)}return l=gp(l),this.calculateLosses().forEach((e=>{l=od(l,e)})),l}),!0,a)].concat(s)}}makeTestFunction(){this.testFunction=e=>Qh((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),i=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});const a=new Xw(s),o=Zw(this.outputs,a);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],s=gp(r(i[e],o[e]));n=0===e?s:od(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=gp(n(i[r],o[r]));t.push(s)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let i,s,a,o,l,u,c;e.isTraining=!0;try{const h=null==r.batchSize?32:r.batchSize;l_(h);const d=!1,p=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,d,h);i=p[0],s=p[1],c=p[2];let f,m=!1;if(null!=r.validationData&&r.validationData.length>0){if(m=!0,2!==r.validationData.length)throw 3===r.validationData.length?new ov("validationData including sample weights is not supported yet."):new av(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);a=r.validationData[0],o=r.validationData[1];const t=!0,n=await e.standardizeUserData(a,o,null,null,t,h);l=n[0],u=n[1],f=l.concat(u)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){m=!0;const e=Math.floor(i[0].shape[0]*(1-r.validationSplit)),t=i[0].shape[0];l=u_(i,e,t),i=u_(i,0,e),u=u_(s,e,t),s=u_(s,0,e),f=l.concat(u)}else null!=r.validationSteps&&(m=!0);const g=i.concat(s).concat(c);e.checkTrainableWeightsConsistency();const x=e.makeTrainFunction(),b=e.getDedupedMetricsNames();let v,y;m?(e.makeTestFunction(),v=e.testFunction,y=b.slice().concat(b.map((e=>"val_"+e)))):(v=null,f=[],y=b.slice());const w=xw(r.callbacks,r.yieldEvery),_=await async function(e,t,n,r,i,s,a,o,l,u,c,h,d,p,f){null==i&&(i=32),null==s&&(s=1),null==c&&(c=!0),null==d&&(d=0);let m=!1;null!=l&&null!=u&&(m=!0);const g=e.checkNumSamples(n,i,p,"steps_per_epoch");let x;null!=g&&(x=iy(0,g)),null==a&&(a=1);const{callbackList:b,history:v}=vw(o,a,s,d,g,p,i,m,h);b.setModel(e),e.history=v,await b.onTrainBegin(),e.stopTraining_=!1;for(let a=d;a<s;++a){await b.onEpochBegin(a);const s={};{if("batch"===c)throw new ov("batch shuffling is not implemneted yet");c&&da(x);const a=af(x),o=h_(g,i);for(let c=0;c<o.length;++c){const h={};if(await b.onBatchBegin(c,h),Qh((()=>{const d=o[c][0],p=o[c][1],f=oy(a,d,p-d);h.batch=c,h.size=p-d;const g=c_(n,f),x=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=x[e];h[t]=n,td(n)}if(c===o.length-1&&m){const t=e.testLoop(l,u,i);for(let e=0;e<r.length;++e){const n=r[e],i=t[e];td(i),s["val_"+n]=i}}})),await b.onBatchEnd(c,h),cw(h),e.stopTraining_)break}a.dispose()}if(await b.onEpochEnd(a,s),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,x,g,b,h,r.epochs,r.verbose,w,v,f,r.shuffle,y,r.initialEpoch,null);return _}finally{e.isTraining=!1,p_(i,t),p_(s,n),p_(l,a),p_(u,o),null!=c&&ed(c)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(ma(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),ma(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),ma(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),ma(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),ma(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const i=null!=n.validationData;let s,a;if(i)if(o_(n.validationData))ma(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new ov("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,a=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=i?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=xw(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=vw(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,i,u);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:i}=s_(e,t.value),s={};s.batch=h,s.size=r[0].shape[0],await d.onBatchBegin(h,s);const a=[];if(null!=n.classWeight){const t=n_(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)a.push(await r_(i[e],null,t[e]))}const u=r.concat(i).concat(a),p=o(u);ed(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];s[t]=n,td(n)}await d.onBatchEnd(h,s),cw(s),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(i){let t;t=o_(n.validationData)?fv(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):fv(e.evaluate(s,a,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],i=n[1],s=this.makeTrainFunction()(r.concat(i)),a=[];for(const e of s){const t=await e.data();a.push(t[0])}return ed(s),pv(a)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,i=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:i[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Jh().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Jh().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=mv(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>mv(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=mv(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[mv(zw(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>mv(zw(e))));{const e={};for(const t in this.metrics)e[t]=mv(zw(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=yw(jw(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=gv(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>gv(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=gv(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>gv(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=gv(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,Zc.getSaveHandlers(n));if(0===t.length)throw new av(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new av(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new av("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await Hc(this.getNamedWeights(t)),i={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v2.8.6",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){i.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await Hc(await this.optimizer.getWeights(),e);r.specs.push(...n),r.data=Kc([r.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Bw(this.userDefinedMetadata,this.name,e),i.userDefinedMetadata=this.userDefinedMetadata}return i.weightData=r.data,i.weightSpecs=r.specs,e.save(i)}setUserDefinedMetadata(e){Bw(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}b_.className="Model",Kh(b_);class v_ extends b_{}v_.className="Functional",Kh(v_);class y_ extends b_{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:jy("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new av(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof y_||e instanceof b_;let n;if(t){if(n=e,1!==n.outputs.length)throw new av("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new av("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new av("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new av("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new lw({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new av(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new av("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=ow(this.outputs[0])}this.inboundNodes=[],new iw({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:cv(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Yy(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new b_({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new sv("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new sv("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new sv("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new sv("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let i,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new av("Legacy serialization format not supported yet.");i=t}else ma(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),i=t.layers,delete t.layers,s=t;const a=new e(s);if(!(a instanceof y_))throw new ov(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const e of i){const t=yw(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),a.add(t)}return a}set stopTraining(e){if(null==this.model)throw new av("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new av("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}y_.className="Sequential",Kh(y_);class w_ extends qh{getConfig(){return{}}}class __ extends w_{apply(e,t=1){return function(e,t=1){if(1!==t)throw new ov(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Hd(e)}(e,t)}}__.className="elu",Kh(__);class S_ extends w_{apply(e){return Gp(e)}}S_.className="selu",Kh(S_);class k_ extends w_{apply(e){return Wp(e)}}k_.className="relu",Kh(k_);class I_ extends w_{apply(e){return Qh((()=>bp(6,Wp(e))))}}I_.className="relu6",Kh(I_);class E_ extends w_{apply(e){return e}}E_.className="linear",Kh(E_);class T_ extends w_{apply(e){return jp(e)}}T_.className="sigmoid",Kh(T_);class C_ extends w_{apply(e){return function(e){return Qh((()=>{const t=od(.5,lp(.2,e));return Nd(t,0,1)}))}(e)}}C_.className="hardSigmoid",Kh(C_);class M_ extends w_{apply(e){return Qp(e)}}M_.className="softplus",Kh(M_);class A_ extends w_{apply(e){return function(e){return Qh((()=>Gd(e,ad(e).add(1))))}(e)}}A_.className="softsign",Kh(A_);class N_ extends w_{apply(e){return sf(e)}}N_.className="tanh",Kh(N_);class R_ extends w_{apply(e,t=-1){return Jp(e,t)}}R_.className="softmax",Kh(R_);class D_ extends w_{apply(e,t=-1){return hp(e,t)}}D_.className="logSoftmax",Kh(D_);class L_ extends w_{apply(e,t=1){return Qh((()=>jp(e.mul(t)).mul(e)))}}function F_(e){return e.getClassName()}function $_(e,t={}){return yv(e,Xh.getMap().classNameMap,t,"activation")}function O_(e){if(null==e){return $_({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},$_(t)}return e instanceof w_?e:$_(e)}L_.className="swish",Kh(L_);class P_ extends qh{}class z_ extends P_{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Qh((()=>{let t=Rp([1]);return this.hasL1&&(t=od(t,cp(lp(this.l1,ad(e))))),this.hasL2&&(t=od(t,cp(lp(this.l2,gy(e))))),t.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}z_.className="L1L2",Kh(z_);const B_={l1l2:"L1L2"};function U_(e){return bv(e)}function W_(e,t={}){return yv(e,Xh.getMap().classNameMap,t,"regularizer")}function V_(e){return null==e?null:"string"==typeof e?W_({className:e in B_?B_[e]:e,config:{}}):e instanceof P_?e:W_(e)}class G_ extends aw{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Ky(e);let n=Wp(e);return null!=this.maxValue&&(n=Nd(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}G_.className="ReLU",Kh(G_);class H_ extends aw{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Ky(e);return ip(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}H_.className="LeakyReLU",Kh(H_);class j_ extends aw{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Wy(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=V_(e.alphaRegularizer),this.alphaConstraint=Pv(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new av(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Yy(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new tw({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Ky(e),$p(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Uy(this.alphaInitializer),alphaRegularizer:U_(this.alphaRegularizer),alphaConstraint:$v(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}j_.className="PReLU",Kh(j_);class q_ extends aw{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new ov(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Ky(e);return Hd(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}q_.className="ELU",Kh(q_);class X_ extends aw{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Ky(e);return n.mul(sy(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}X_.className="ThresholdedReLU",Kh(X_);class K_ extends aw{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new R_).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Ky(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Y_(e,t,n){if("number"==typeof e)return cv(e,t);if(e.length!==t)throw new av(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let i=0;i<t;++i){const s=e[i];if((r=s)!==parseInt(r.toString(),10))throw new av(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var r}function Z_(e,t,n,r,i=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(i-1))+1,Math.floor((s+r-1)/r)}function J_(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+ry([n-t,0]);else{if("same"!==r)throw new av(`Unsupport padding mode: ${r}.`);e*=t}return e}function Q_(e,t){return Qh((()=>(Hv(t),"channelsFirst"===t?df(e,[0,2,3,1]):e)))}function eS(e,t){return Qh((()=>(Hv(t),"channelsFirst"===t?df(e,[0,2,3,4,1]):e)))}function tS(e,t,n,r=[1,1],i="valid",s,a,o=null){return Qh((()=>{if(null==s&&(s="channelsLast"),Hv(s),3!==e.rank&&4!==e.rank)throw new av(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new av(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Q_(e,s);if("causal"===i)throw new ov("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Tf({x:l,filter:t,strides:r,pad:"same"===i?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=df(l,[0,3,1,2])),l}))}K_.className="Softmax",Kh(K_);class nS extends aw{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",nS.verifyArgs(t),this.rank=e,Ev(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new ov(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Y_(t.kernelSize,e,"kernelSize"),this.strides=Y_(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,jv(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Hv(this.dataFormat),this.activation=O_(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Wy(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Pv(t.biasConstraint),this.biasRegularizer=V_(t.biasRegularizer),this.activityRegularizer=V_(t.activityRegularizer),this.dilationRate=Y_(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new av(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new av(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new av(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(hv("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Iv(e.kernelSize,"number",1,3))throw new av(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:F_(this.activation),useBias:this.useBias,biasInitializer:Uy(this.biasInitializer),biasRegularizer:U_(this.biasRegularizer),activityRegularizer:U_(this.activityRegularizer),biasConstraint:$v(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class rS extends nS{constructor(e,t){super(e,t),this.kernel=null,rS.verifyArgs(t),this.filters=t.filters,Ev(this.filters,"filters"),this.kernelInitializer=Wy(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Pv(t.kernelConstraint),this.kernelRegularizer=V_(t.kernelRegularizer)}build(e){e=Yy(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new av(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Qh((()=>{let t;e=Ky(e);const n=null==this.bias?null:this.bias.read(),r=Cv(this.activation.getClassName());if(null!=r&&2===this.rank)t=tS(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,i="valid",s,a=1){return Qh((()=>{if(null==s&&(s="channelsLast"),Hv(s),3!==e.shape.length)throw new av(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new av(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new av(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=df(e,[0,2,1])),"causal"===i)throw new ov("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Pd(e,t,r,"same"===i?"same":"valid","NWC",a);return null!=n&&(o=by(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=tS(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new ov("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],i="valid",s,a){return Qh((()=>{if(null==s&&(s="channelsLast"),Hv(s),4!==e.rank&&5!==e.rank)throw new av(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new av(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=eS(e,s);if("causal"===i)throw new ov("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Ud(o,t,r,"same"===i?"same":"valid","NDHWC",a),null!=n&&(o=by(o,n)),"channelsFirst"===s&&(o=df(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Yy(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=Z_(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Uy(this.kernelInitializer),kernelRegularizer:U_(this.kernelRegularizer),kernelConstraint:$v(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new av(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class iS extends rS{constructor(e){super(2,e),iS.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Iv(e.kernelSize,"number",1,2))throw new av(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}iS.className="Conv2D",Kh(iS);class sS extends rS{constructor(e){super(3,e),sS.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new av(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}sS.className="Conv3D",Kh(sS);class aS extends iS{constructor(e){if(super(e),this.inputSpec=[new tw({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new av(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Yy(e)).length)throw new av("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new av("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new tw({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Qh((()=>{let t=Ky(e);if(4!==t.shape.length)throw new av(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let i,s;"channelsFirst"===this.dataFormat?(i=2,s=3):(i=1,s=2);const a=n[i],o=n[s],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,J_(a,c,l,this.padding),J_(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=df(t,[0,2,3,1]));let p=Bd(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=df(p,[0,3,1,2])),null!=this.bias&&(p=by(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=Yy(e)).slice();let n,r,i;"channelsFirst"===this.dataFormat?(n=1,r=2,i=3):(n=3,r=1,i=2);const s=this.kernelSize[0],a=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=J_(t[r],o,s,this.padding),t[i]=J_(t[i],l,a,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}aS.className="Conv2DTranspose",Kh(aS);class oS extends rS{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new av("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new av("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new av(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Wy(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=V_(t.depthwiseRegularizer),this.depthwiseConstraint=Pv(t.depthwiseConstraint),this.pointwiseInitializer=Wy(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=V_(t.pointwiseRegularizer),this.pointwiseConstraint=Pv(t.pointwiseConstraint)}build(e){if((e=Yy(e)).length<this.rank+2)throw new av(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new av(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),i=[];for(let e=0;e<this.rank;++e)i.push(1);i.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",i,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new tw({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Qh((()=>{let t;if(e=Ky(e),1===this.rank)throw new ov("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=df(e,[0,2,3,1])),t=Hp(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=by(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=df(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Uy(this.depthwiseInitializer),e.pointwiseInitializer=Uy(this.pointwiseInitializer),e.depthwiseRegularizer=U_(this.depthwiseRegularizer),e.pointwiseRegularizer=U_(this.pointwiseRegularizer),e.depthwiseConstraint=$v(this.depthwiseConstraint),e.pointwiseConstraint=$v(this.pointwiseConstraint),e}}oS.className="SeparableConv";class lS extends oS{constructor(e){super(2,e)}}lS.className="SeparableConv2D",Kh(lS);class uS extends rS{constructor(e){super(1,e),uS.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Iv(e.kernelSize,"number",1,1))throw new av(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}uS.className="Conv1D",Kh(uS);class cS extends aw{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Qh((()=>{if(e=Ky(e),"channelsLast"===this.dataFormat){const t=uy(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return uy(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=uy(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return uy(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}cS.className="Cropping2D",Kh(cS);class hS extends aw{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Hv(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,kv(Bv,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Qh((()=>{let t=Ky(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=df(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],i="nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r]);return df(i,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}hS.className="UpSampling2D",Kh(hS);class dS extends nS{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Wy(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Pv(e.depthwiseConstraint),this.depthwiseRegularizer=V_(e.depthwiseRegularizer)}build(e){if((e=Yy(e)).length<4)throw new av(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new av(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Qh((()=>{let t=function(e,t,n=[1,1],r="valid",i,s){return Qh((()=>{null==i&&(i="channelsLast"),Hv(i);let a=Q_(e,i);if(4!==e.rank)throw new av(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new av(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return a=Wd(a,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===i&&(a=df(a,[0,3,1,2])),a}))}(e=Ky(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=by(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Yy(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,i=Z_(t,this.kernelSize[0],this.padding,this.strides[0]),s=Z_(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,i,s]:[e[0],i,s,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Uy(this.depthwiseInitializer),e.depthwiseRegularizer=U_(this.depthwiseRegularizer),e.depthwiseConstraint=$v(this.depthwiseRegularizer),e}}function pS(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new av("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function i(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=i(t),constants:n=i(n)}}function fS(e,t,n,r=!1,i,s,a=!1,o=!1){return Qh((()=>{const l=t.shape.length;if(l<3)throw new av(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(iy(2,l));if(t=df(t,u),null!=s)throw new ov("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=i&&((i=i.asType("bool").asType("float32")).rank===l-1&&(i=Yd(i,-1)),i=df(i,u)),r&&(t=Vp(t,0),null!=i&&(i=Vp(i,0)));const c=[];let h,d=n;const p=t.shape[0],f=lf(t);let m,g;null!=i&&(m=lf(i));for(let t=0;t<p;++t){const n=f[t],r=Qh((()=>e(n,d)));if(null==i)h=r[0],d=r[1];else{const e=Qh((()=>{const e=m[t],n=Lp(e).sub(e);return{output:r[0].mul(e).add(d[0].mul(n)),newStates:d.map(((t,i)=>r[1][i].mul(e).add(t.mul(n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}return o&&(g=rf(c,1)),[h,g,d]}))}dS.className="DepthwiseConv2D",Kh(dS);class mS extends aw{constructor(e){let t;if(super(e),null==e.cell)throw new av("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new SS({cells:e.cell}):e.cell,null==t.stateSize)throw new av("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new tw({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?iy(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){qy(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return Qh((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new ov("Constants support is not implemented in RNN yet.");qy(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new tw({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let i;if(this.cell.build(r),i=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!ya(this.stateSpec.map((e=>e.shape[e.shape.length-1])),i))throw new av(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map((e=>new tw({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Qh((()=>{if(!this.stateful)throw new iv("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new av("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Rp([n,e]))):this.states_=[Rp([n,this.cell.stateSize])];else if(null==e)ed(this.states_),null!=this.keptStates&&(ed(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Rp([n,e]))):this.states_[0]=Rp([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new av(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):ed(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,i];if(!ya(r.shape,s))throw new av(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>td(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const i=pS(e,n,r,this.numConstants);e=i.inputs,n=i.initialState,r=i.constants;let s=[],a=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new tw({shape:e.shape}));a=a.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof nw){const n=[e].concat(s),r=this.inputSpec.concat(a),i=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=i,o}return super.apply(e,t)}call(e,t){return Qh((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let i=null==t?null:t.initialState;e=Ky(e),null==i&&(i=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==s)throw new av(`RNN Layer has ${s} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},o=fS(((e,t)=>{const n=this.cell.call([e].concat(t),a);return[n[0],n.slice(1)]}),e,i,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return Qh((()=>{let t=Rp(e.shape);return t=cp(t,[1,2]),t=ay(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?dy(t,[1,e]):t)):this.cell.stateSize>1?[dy(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===mS.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=yw(t.cell,n);return new e(Object.assign(t,{cell:r}))}}mS.className="RNN",Kh(mS);class gS extends aw{}class xS extends gS{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ev(this.units,"units"),this.activation=O_(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Wy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Wy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Wy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=V_(e.kernelRegularizer),this.recurrentRegularizer=V_(e.recurrentRegularizer),this.biasRegularizer=V_(e.biasRegularizer),this.kernelConstraint=Pv(e.kernelConstraint),this.recurrentConstraint=Pv(e.recurrentConstraint),this.biasConstraint=Pv(e.biasConstraint),this.dropout=ny([1,ry([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ny([1,ry([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Yy(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Qh((()=>{if(2!==e.length)throw new av(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let i;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=kS({ones:()=>Lp(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=kS({ones:()=>Lp(n),rate:this.recurrentDropout,training:r}));const s=this.dropoutMask,a=this.recurrentDropoutMask;i=fy(null!=s?lp(e,s):e,this.kernel.read()),null!=this.bias&&(i=by(i,this.bias.read())),null!=a&&(n=lp(n,a));let o=od(i,fy(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:F_(this.activation),useBias:this.useBias,kernelInitializer:Uy(this.kernelInitializer),recurrentInitializer:Uy(this.recurrentInitializer),biasInitializer:Uy(this.biasInitializer),kernelRegularizer:U_(this.kernelRegularizer),recurrentRegularizer:U_(this.recurrentRegularizer),biasRegularizer:U_(this.biasRegularizer),activityRegularizer:U_(this.activityRegularizer),kernelConstraint:$v(this.kernelConstraint),recurrentConstraint:$v(this.recurrentConstraint),biasConstraint:$v(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}xS.className="SimpleRNNCell",Kh(xS);class bS extends mS{constructor(e){e.cell=new xS(e),super(e)}call(e,t){return Qh((()=>{null!=this.cell.dropoutMask&&(ed(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ed(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,i=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:i})}))}static fromConfig(e,t){return new e(t)}}bS.className="SimpleRNN",Kh(bS);class vS extends gS{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new av("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Ev(this.units,"units"),this.activation=O_(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=O_(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Wy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Wy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Wy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=V_(e.kernelRegularizer),this.recurrentRegularizer=V_(e.recurrentRegularizer),this.biasRegularizer=V_(e.biasRegularizer),this.kernelConstraint=Pv(e.kernelConstraint),this.recurrentConstraint=Pv(e.recurrentConstraint),this.biasConstraint=Pv(e.biasConstraint),this.dropout=ny([1,ry([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ny([1,ry([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Yy(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Qh((()=>{if(2!==e.length)throw new av(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=kS({ones:()=>Lp(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=kS({ones:()=>Lp(r),rate:this.recurrentDropout,training:n,count:3}));const i=this.dropoutMask,s=this.recurrentDropoutMask;let a,o,l;0<this.dropout&&this.dropout<1&&(e=lp(e,i[0]));let u=fy(e,this.kernel.read());this.useBias&&(u=by(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=lp(r,s[0]));const c=this.recurrentKernel.read(),[h,d]=ef(c,[2*this.units,this.units],c.rank-1),p=fy(r,h),[f,m,g]=ef(u,3,u.rank-1),[x,b]=ef(p,2,p.rank-1);a=this.recurrentActivation.apply(od(f,x)),o=this.recurrentActivation.apply(od(m,b));const v=fy(lp(o,r),d);l=this.activation.apply(od(g,v));const y=od(lp(a,r),lp(od(1,Mp(a)),l));return[y,y]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:F_(this.activation),recurrentActivation:F_(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Uy(this.kernelInitializer),recurrentInitializer:Uy(this.recurrentInitializer),biasInitializer:Uy(this.biasInitializer),kernelRegularizer:U_(this.kernelRegularizer),recurrentRegularizer:U_(this.recurrentRegularizer),biasRegularizer:U_(this.biasRegularizer),activityRegularizer:U_(this.activityRegularizer),kernelConstraint:$v(this.kernelConstraint),recurrentConstraint:$v(this.recurrentConstraint),biasConstraint:$v(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}vS.className="GRUCell",Kh(vS);class yS extends mS{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new vS(e),super(e)}call(e,t){return Qh((()=>{null!=this.cell.dropoutMask&&(ed(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ed(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,i=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:i})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}yS.className="GRU",Kh(yS);class wS extends gS{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ev(this.units,"units"),this.activation=O_(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=O_(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Wy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Wy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Wy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=V_(e.kernelRegularizer),this.recurrentRegularizer=V_(e.recurrentRegularizer),this.biasRegularizer=V_(e.biasRegularizer),this.kernelConstraint=Pv(e.kernelConstraint),this.recurrentConstraint=Pv(e.recurrentConstraint),this.biasConstraint=Pv(e.biasConstraint),this.dropout=ny([1,ry([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ny([1,ry([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Yy(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends Sy{apply(t,r){const i=e.apply([n]),s=(new Iy).apply([n]),a=e.apply([2*n]);return hy(hy(i,s),a)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Qh((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new av(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const i=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=kS({ones:()=>Lp(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=kS({ones:()=>Lp(r),rate:this.recurrentDropout,training:n,count:4}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=lp(e,s[0]));let h=fy(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=lp(r,a[0])),h=od(h,fy(r,this.recurrentKernel.read())),this.useBias&&(h=by(h,this.bias.read()));const[d,p,f,m]=ef(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=od(lp(l,i),lp(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=lp(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:F_(this.activation),recurrentActivation:F_(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Uy(this.kernelInitializer),recurrentInitializer:Uy(this.recurrentInitializer),biasInitializer:Uy(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:U_(this.kernelRegularizer),recurrentRegularizer:U_(this.recurrentRegularizer),biasRegularizer:U_(this.biasRegularizer),activityRegularizer:U_(this.activityRegularizer),kernelConstraint:$v(this.kernelConstraint),recurrentConstraint:$v(this.recurrentConstraint),biasConstraint:$v(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}wS.className="LSTMCell",Kh(wS);class _S extends mS{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new wS(e),super(e)}call(e,t){return Qh((()=>{null!=this.cell.dropoutMask&&(ed(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ed(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,i=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:i})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}_S.className="LSTM",Kh(_S);class SS extends gS{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Qh((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const i=[];let s;for(let a=0;a<this.cells.length;++a){const o=this.cells[a];n=r[a],s=0===a?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),i.push(s.slice(1))}n=[];for(const e of i.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;qy(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{Kv(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(yw(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Qy(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,i=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],i[e]])}ew(t)}}function kS(e){const{ones:t,rate:n,training:r=!1,count:i=1}=e,s=()=>vy(t(),n),a=()=>yy(s,t,r);return!i||i<=1?td(a().clone()):Array(i).fill(void 0).map(a).map((e=>td(e.clone())))}SS.className="StackedRNNCells",Kh(SS);var IS,ES;class TS extends mS{constructor(e){if(e.unroll)throw new ov("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ov("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new tw({ndim:5})]}call(e,t){return Qh((()=>{if(null!=this.cell.dropoutMask&&(ed(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ed(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new av("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,i=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:i})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Qh((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),i=Rp([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(i):[i]}))}resetStates(e,t=!1){Qh((()=>{if(!this.stateful)throw new iv("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),i=[r[0],...r.slice(2)];if(null==n[0])throw new av("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Rp(i))):this.states_=[Rp(i)];else if(null==e)ed(this.states_),null!=this.keptStates&&(ed(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Rp(i))):this.states_[0]=Rp(i);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new av(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ed(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=i;if(!ya(n.shape,r))throw new av(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>td(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:i,strides:s,dilationRate:a}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=Z_(l,r[0],i,s[0],a[0]),h=Z_(u,r[1],i,s[1],a[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}TS.className="ConvRNN2D";class CS extends wS{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:i,dataFormat:s,dilationRate:a}=e;super(Object.assign({},e,{units:t})),this.filters=t,Ev(this.filters,"filters"),this.kernelSize=Y_(n,2,"kernelSize"),this.kernelSize.forEach((e=>Ev(e,"kernelSize"))),this.strides=Y_(r||1,2,"strides"),this.strides.forEach((e=>Ev(e,"strides"))),this.padding=i||"valid",jv(this.padding),this.dataFormat=s||"channelsLast",Hv(this.dataFormat),this.dilationRate=Y_(a||1,2,"dilationRate"),this.dilationRate.forEach((e=>Ev(e,"dilationRate")))}build(e){var t;e=Yy(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new av(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],i=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Sy{apply(e,t){return cy([n.apply([r]),Dp([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Qh((()=>{if(3!==e.length)throw new av(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],i=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=kS({ones:()=>Lp(r),rate:this.dropout,training:n,count:4}));const a=this.dropoutMask,o=(e,t,n)=>t&&t[n]?lp(t[n],e):e;let l=o(r,a,0),u=o(r,a,1),c=o(r,a,2),h=o(r,a,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=kS({ones:()=>Lp(i),rate:this.recurrentDropout,training:n,count:4}));const d=this.recurrentDropoutMask;let p=o(i,d,0),f=o(i,d,1),m=o(i,d,2),g=o(i,d,3);const[x,b,v,y]=ef(this.kernel.read(),4,3),[w,_,S,k]=this.useBias?ef(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,x,w,this.padding),u=this.inputConv(u,b,_,this.padding),c=this.inputConv(c,v,S,this.padding),h=this.inputConv(h,y,k,this.padding);const[I,E,T,C]=ef(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,I),f=this.recurrentConv(f,E),m=this.recurrentConv(m,T),g=this.recurrentConv(g,C);const M=this.recurrentActivation.apply(od(l,p)),A=this.recurrentActivation.apply(od(u,f)),N=od(lp(A,s),lp(M,this.activation.apply(od(c,m)))),R=lp(this.recurrentActivation.apply(od(h,g)),this.activation.apply(N));return[R,R,N]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const i=Od(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?by(i,n,this.dataFormat):i}recurrentConv(e,t){return Od(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}CS.className="ConvLSTM2DCell",Kh(CS);class MS extends TS{constructor(e){const t=new CS(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}MS.className="ConvLSTM2D",Kh(MS);class AS extends aw{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Qh((()=>{this.invokeCallHook(e,t);const n=Ky(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return yy((()=>vy(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}AS.className="Dropout",Kh(AS);class NS extends AS{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}NS.className="SpatialDropout1D",Kh(NS);class RS extends aw{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Ev(this.units,"units"),this.activation=O_(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Wy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Wy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Pv(e.kernelConstraint),this.biasConstraint=Pv(e.biasConstraint),this.kernelRegularizer=V_(e.kernelRegularizer),this.biasRegularizer=V_(e.biasRegularizer),this.activityRegularizer=V_(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Yy(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Yy(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Qh((()=>{this.invokeCallHook(e,t);const n=Ky(e),r=Cv(this.activation.getClassName());let i;return null!=r?i=fy(n,this.kernel.read(),r,this.bias?this.bias.read():null):(i=fy(n,this.kernel.read()),null!=this.bias&&(i=by(i,this.bias.read())),null!=this.activation&&(i=this.activation.apply(i))),i}))}getConfig(){const e={units:this.units,activation:F_(this.activation),useBias:this.useBias,kernelInitializer:Uy(this.kernelInitializer),biasInitializer:Uy(this.biasInitializer),kernelRegularizer:U_(this.kernelRegularizer),biasRegularizer:U_(this.biasRegularizer),activityRegularizer:U_(this.activityRegularizer),kernelConstraint:$v(this.kernelConstraint),biasConstraint:$v(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}RS.className="Dense",Kh(RS);class DS extends aw{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Yy(e);for(const t of e.slice(1))if(null==t)throw new av(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],ey(e,1)]}call(e,t){return Qh((()=>{this.invokeCallHook(e,t);let n=Ky(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new av(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],ey(e.shape,1)];return e.reshape(t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}DS.className="Flatten",Kh(DS);class LS extends aw{constructor(e){super(e),this.supportsMasking=!0,this.activation=O_(e.activation)}call(e,t){return Qh((()=>{this.invokeCallHook(e,t);const n=Ky(e);return this.activation.apply(n)}))}getConfig(){const e={activation:F_(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}LS.className="Activation",Kh(LS);class FS extends aw{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Qh((()=>{return e=Ky(e),t=e,n=this.n,Qh((()=>{if(2!==t.shape.length)throw new av(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return dy(ay(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}FS.className="RepeatVector",Kh(FS);class $S extends aw{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let i=1,s=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==s)throw new av("Can only specifiy one unknown dimension.");s=e}else i*=t}const a=ey(e);if(null!==s){if(0===i||a%i!=0)throw new av(n);r[s]=a/i}else if(a!==i)throw new av(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Qh((()=>{this.invokeCallHook(e,t);const n=Ky(e),r=n.shape,i=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(i)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}$S.className="Reshape",Kh($S);class OS extends aw{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=iy(1,e.dims.length+1);if(!ya(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new tw({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Yy(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return df(Ky(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}OS.className="Permute",Kh(OS);class PS extends aw{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Ky(e);return ud(Ap(n,this.maskValue),-1)}call(e,t){return Qh((()=>{this.invokeCallHook(e,t);const n=Ky(e),r=ud(Ap(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}}PS.className="Masking",Kh(PS);class zS extends aw{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(fv(e.inputLength))}this.inputDim=e.inputDim,Ev(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Ev(this.outputDim,"outputDim"),this.embeddingsInitializer=Wy(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=V_(e.embeddingsRegularizer),this.activityRegularizer=V_(e.activityRegularizer),this.embeddingsConstraint=Pv(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Qh((()=>this.maskZero?(e=Ky(e),Ap(e,hf(e))):null))}computeOutputShape(e){if(e=Yy(e),null==this.inputLength)return[...e,this.outputDim];const t=fv(this.inputLength);if(t.length!==e.length-1)throw new av(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const i=t[r],s=e[r+1];if(null!=i&&null!=s&&i!==s)throw new av(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==i&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Qh((()=>{this.invokeCallHook(e,t);let n=Ky(e);return"int32"!==n.dtype&&(n=sy(n,"int32")),my(this.embeddings.read(),n.as1D()).reshape(Yy(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Uy(this.embeddingsInitializer),embeddingsRegularizer:U_(this.embeddingsRegularizer),activityRegularizer:U_(this.activityRegularizer),embeddingsConstraint:$v(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}zS.className="Embedding",Kh(zS);class BS extends aw{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new ov}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const i=e[e.length-t.length+r],s=t[r];if(null==i||null==s||i<0||s<0)n.push(null);else if(1===i)n.push(s);else if(1===s)n.push(i);else{if(i!==s)throw new av("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(i)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Yy(e)]),e.length<2)throw new av(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=_v(t),t.length>1)throw new av(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===_v(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Qh((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=ry(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=ay(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,i=e[0],s=e.slice(1).concat([i]);let a=r.reshape([i].concat(ey(e.slice(1))));a=df(a,[1,0]),a=a.reshape(s),t.push(a),n=!0}else if(e>1){const i=iy(1,e).concat([0]);t.push(df(r,i)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const i=r.rank;if(n)if(null==i){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=df(r.reshape([-1,t]),[1,0]).reshape(n)}else if(i>1){const e=[i-1].concat(iy(0,i-1));r=df(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=_v(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Qh((()=>{if(null==t)return null;if(!Array.isArray(t))throw new av("`mask` should be an Array");if(!Array.isArray(e))throw new av("`inputs` should be an Array");if(t.length!==e.length)throw new av(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Yd(e,0))))[0];for(let e=1;e<t.length-1;++e)n=dp(n,t[e]);return n}))}}class US extends BS{constructor(e){super(e)}mergeFunction(e){return Qh((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=od(t,e[n]);return t}))}}US.className="Add",Kh(US);class WS extends BS{constructor(e){super(e)}mergeFunction(e){return Qh((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=lp(t,e[n]);return t}))}}WS.className="Multiply",Kh(WS);class VS extends BS{constructor(e){super(e)}mergeFunction(e){return Qh((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=od(t,e[n]);return lp(1/e.length,t)}))}}VS.className="Average",Kh(VS);class GS extends BS{constructor(e){super(e)}mergeFunction(e){return Qh((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=mp(t,e[n]);return t}))}}GS.className="Maximum",Kh(GS);class HS extends BS{constructor(e){super(e)}mergeFunction(e){return Qh((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=bp(t,e[n]);return t}))}}HS.className="Minimum",Kh(HS);class jS extends BS{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new av("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let i=!1;for(const e of n)if(ya(e,r)){i=!0;break}i||n.push(r)}if(n.length>1)throw new av("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Qh((()=>cy(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new av("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new av("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new av("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new av(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Qh((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(Lp(e[n]).asType("bool")):t[n].rank<e[n].rank?r.push(Yd(t[n],-1)):r.push(t[n]);const i=Rd(r,this.axis);return ld(i,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function qS(e,t){for(;e<0;)e+=t;return e}jS.className="Concatenate",Kh(jS);class XS extends BS{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){ma(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new ov("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new av(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new av(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>qS(t,e[n].shape.length))):[qS(this.axes,n.shape.length),qS(this.axes,r.shape.length)],this.normalize&&(n=ww(n,t[0]),r=ww(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new ov("batchDot is not implemented for tensors of 4D or higher rank yet");if(ma(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),ma(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new ov("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,i=t.shape.length;null==n&&(n=[r-1,i-2]);const s=n;return Qh((()=>{let n,a;if(r>i){n=r-i;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(i>r){n=i-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)a=s[0]===s[1]?e.mul(t).sum(s[0]):e.transpose([1,0]).mul(t).sum(s[1]);else{const n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;a=e.matMul(t,n,r)}if(n>0){let e;e=r>i?r+i-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);a=a.squeeze(t)}return 1===a.shape.length&&(a=a.expandDims(1)),a}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[qS(this.axes,e.length),qS(this.axes,t.length)],n}computeOutputShape(e){ma(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new ov("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const i=t.concat(n);return 1===i.length&&i.push(1),i}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}XS.className="Dot",Kh(XS);class KS extends aw{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Qh((()=>{this.invokeCallHook(e,t);const n=Ky(e);return yy((()=>py(n.shape,0,this.stddev).add(n)),(()=>n),t.training||!1)}))}}KS.className="GaussianNoise",Kh(KS);class YS extends aw{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Qh((()=>{this.invokeCallHook(e,t);const n=Ky(e);return this.rate>0&&this.rate<1?yy((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(py(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}YS.className="GaussianDropout",Kh(YS);class ZS extends aw{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ky(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Qh((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return yy((()=>{const t=Ky(e),r=-1.7580993408473766;let i=rp(Up(n),this.rate);i=sy(i,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,a=-s*r*this.rate;return t.mul(i).add(i.add(-1).mul(r)).mul(s).add(a)}),(()=>Ky(e)),t.training||!1)}return e}))}}function JS(e,t,n,r,i,s=.001){let a;if(2===e.rank)a=Cd(e,t,n,r,i,s);else if(3===e.rank)a=Md(e,t,n,r,i,s);else{if(4!==e.rank)throw new ov(`batchNormalization is not implemented for array of rank ${e.rank} yet`);a=Ad(e,t,n,r,i,s)}return a}ZS.className="AlphaDropout",Kh(ZS);class QS extends aw{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Wy(e.betaInitializer||"zeros"),this.gammaInitializer=Wy(e.gammaInitializer||"ones"),this.movingMeanInitializer=Wy(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Wy(e.movingVarianceInitializer||"ones"),this.betaConstraint=Pv(e.betaConstraint),this.gammaConstraint=Pv(e.gammaConstraint),this.betaRegularizer=V_(e.betaRegularizer),this.gammaRegularizer=V_(e.gammaRegularizer)}build(e){e=Yy(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new av(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new tw({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Qh((()=>{const n=null!=t.training&&t.training,r=Ky(e),i=r.shape,s=i.length,a=iy(0,s),o=this.axis>=0?this.axis:this.axis+s;a.splice(o,1);const l=cv(1,s);l[o]=i[o];const u=a.slice();u.sort();const c=!ya(u,iy(0,s).slice(0,s-1));if(!n)return(()=>{if(c){const e=this.movingMean.read().reshape(l),t=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,i=this.scale?this.gamma.read().reshape(l):null;return JS(r,e,t,n,i,this.epsilon)}return JS(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,r,i=.001){return ya(r.slice().sort(),iy(0,e.rank-1))?function(e,t,n,r,i=.001){return Qh((()=>{const s=Cp(e,r),a=s.mean,o=s.variance;return[JS(e,a,o,n,t,i),a,o]}))}(e,t,n,r,i):function(e,t,n,r,i=.001){return Qh((()=>{const s=Cp(e,r),a=s.mean,o=s.variance,l=[];for(const t of iy(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=a.reshape(l),c=o.reshape(l),h=null==t?null:t.reshape(l),d=null==n?null:n.reshape(l);return[JS(e,u,c,d,h,i),a,o]}))}(e,t,n,r,i)}(r,this.gamma.read(),this.beta.read(),a,this.epsilon),f=(e,t,n)=>{Qh((()=>{const r=1-n,i=e.read(),s=i.sub(t).mul(r);e.write(i.sub(s))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Uy(this.betaInitializer),gammaInitializer:Uy(this.gammaInitializer),movingMeanInitializer:Uy(this.movingMeanInitializer),movingVarianceInitializer:Uy(this.movingVarianceInitializer),betaRegularizer:U_(this.betaRegularizer),gammaRegularizer:U_(this.gammaRegularizer),betaConstraint:$v(this.betaConstraint),gammaConstraint:$v(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}QS.className="BatchNormalization",Kh(QS);class ek extends aw{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Wy(e.betaInitializer||"zeros"),this.gammaInitializer=Wy(e.gammaInitializer||"ones"),this.betaRegularizer=V_(e.betaRegularizer),this.gammaRegularizer=V_(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Yy(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==_v(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=Ky(e),r=n.shape,i=r.length;return Qh((()=>{let{mean:e,variance:t}=Cp(n,this.axis,!0);const s=cv(1,i);for(const e of this.axis)s[e]=r[e];const a=e=>null!=e&&e.shape.length!==i&&this.axis!==[i-1]?e.reshape(s):e;let o=a(this.gamma.read()),l=a(this.beta.read());const u=[],c=[];for(let e=0;e<i;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),c.push(1)):(u.push(1),c.push(r[e]));return e=e.tile(u),t=t.tile(u),o=o.tile(c),l=l.tile(c),JS(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Uy(this.betaInitializer),gammaInitializer:Uy(this.gammaInitializer),betaRegularizer:U_(this.betaRegularizer),gammaRegularizer:U_(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}ek.className="LayerNormalization",Kh(ek);class tk extends aw{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new av(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new av(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new av(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new tw({ndim:4})]}computeOutputShape(e){let t,n;return e=Yy(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Qh((()=>{return t=Ky(e),n=this.padding,r=this.dataFormat,Qh((()=>{if(4!==t.rank)throw new av(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new av("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new av(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Fp(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function nk(e,t,n,r,i,s){return Qh((()=>{let a;Hv(i),qv(s),jv(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==i&&(i="channelsLast"),null==s&&(s="max"),e=Q_(e,i);const o="same"===r?"same":"valid";return a="max"===s?pp(e,t,n,o):Id(e,t,n,o),"channelsFirst"===i&&(a=df(a,[0,3,1,2])),a}))}function rk(e,t,n,r,i,s){return Qh((()=>{let a;Hv(i),qv(s),jv(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==i&&(i="channelsLast"),null==s&&(s="max"),e=eS(e,i);const o="same"===r?"same":"valid";return a="max"===s?fp(e,t,n,o):Ed(e,t,n,o),"channelsFirst"===i&&(a=df(a,[0,4,1,2,3])),a}))}tk.className="ZeroPadding2D",Kh(tk);class ik extends aw{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new av(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Ev(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new av(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Ev(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,jv(this.padding),this.inputSpec=[new tw({ndim:3})]}computeOutputShape(e){const t=Z_((e=Yy(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Qh((()=>{this.invokeCallHook(e,t),e=ay(Ky(e),2);const n=this.poolingFunction(Ky(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return nf(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class sk extends ik{constructor(e){super(e)}poolingFunction(e,t,n,r,i){return Hv(i),jv(r),nk(e,t,n,r,i,"max")}}sk.className="MaxPooling1D",Kh(sk);class ak extends ik{constructor(e){super(e)}poolingFunction(e,t,n,r,i){return Hv(i),jv(r),nk(e,t,n,r,i,"avg")}}ak.className="AveragePooling1D",Kh(ak);class ok extends aw{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new av(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Ev(this.poolSize,"poolSize"),Ev(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Hv(this.dataFormat),jv(this.padding),this.inputSpec=[new tw({ndim:4})]}computeOutputShape(e){e=Yy(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Z_(t,this.poolSize[0],this.padding,this.strides[0]),n=Z_(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Qh((()=>(this.invokeCallHook(e,t),this.poolingFunction(Ky(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class lk extends ok{constructor(e){super(e)}poolingFunction(e,t,n,r,i){return Hv(i),jv(r),nk(e,t,n,r,i,"max")}}lk.className="MaxPooling2D",Kh(lk);class uk extends ok{constructor(e){super(e)}poolingFunction(e,t,n,r,i){return Hv(i),jv(r),nk(e,t,n,r,i,"avg")}}uk.className="AveragePooling2D",Kh(uk);class ck extends aw{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new av(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Ev(this.poolSize,"poolSize"),Ev(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Hv(this.dataFormat),jv(this.padding),this.inputSpec=[new tw({ndim:5})]}computeOutputShape(e){e=Yy(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Z_(t,this.poolSize[0],this.padding,this.strides[0]),n=Z_(n,this.poolSize[1],this.padding,this.strides[1]),r=Z_(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Qh((()=>(this.invokeCallHook(e,t),this.poolingFunction(Ky(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class hk extends ck{constructor(e){super(e)}poolingFunction(e,t,n,r,i){return Hv(i),jv(r),rk(e,t,n,r,i,"max")}}hk.className="MaxPooling3D",Kh(hk);class dk extends ck{constructor(e){super(e)}poolingFunction(e,t,n,r,i){return Hv(i),jv(r),rk(e,t,n,r,i,"avg")}}dk.className="AveragePooling3D",Kh(dk);class pk extends aw{constructor(e){super(e),this.inputSpec=[new tw({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new ov}}class fk extends pk{constructor(e){super(e||{})}call(e,t){return Qh((()=>{const t=Ky(e);return gp(t,1)}))}}fk.className="GlobalAveragePooling1D",Kh(fk);class mk extends pk{constructor(e){super(e||{})}call(e,t){return Qh((()=>{const t=Ky(e);return op(t,1)}))}}mk.className="GlobalMaxPooling1D",Kh(mk);class gk extends aw{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Hv(this.dataFormat),this.inputSpec=[new tw({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new ov}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class xk extends gk{call(e,t){return Qh((()=>{const t=Ky(e);return"channelsLast"===this.dataFormat?gp(t,[1,2]):gp(t,[2,3])}))}}xk.className="GlobalAveragePooling2D",Kh(xk);class bk extends gk{call(e,t){return Qh((()=>{const t=Ky(e);return"channelsLast"===this.dataFormat?op(t,[1,2]):op(t,[2,3])}))}}bk.className="GlobalMaxPooling2D",Kh(bk);class vk extends aw{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=yw(t.layer,n);delete t.layer;const i={layer:r};return Object.assign(i,t),new e(i)}}class yk extends vk{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Yy(e)).length<3)throw new av(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Yy(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Qh((()=>fS(((e,n)=>[Ky(this.layer.call(e,t)),[]]),e=Ky(e),[],!1,null,null,!1,!0)[1]))}}yk.className="TimeDistributed",Kh(yk);class wk extends vk{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=yw(n),t.goBackwards=!0!==t.goBackwards;const r={};var i;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=yw(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,i=this.mergeMode,kv(Vv,"BidirectionalMergeMode",i),e.weights)throw new ov("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,i=this.forwardLayer.computeOutputShape(e);return Array.isArray(i)&&Array.isArray(i[0])||(i=[i]),this.returnState?(r=i.slice(1),t=i[0]):t=i[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):pv(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const i=pS(e,n,r,this.numConstants);if(e=i.inputs,n=i.initialState,r=i.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],a=[];if(null!=n){const e=n.length;if(e%2>0)throw new av("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map((e=>new tw({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),a.push(...r)}if(null!=r)throw new ov("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof nw;for(const e of s)if(e instanceof nw!==o)throw new av("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(a),i=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=i,o}return super.apply(e,t)}call(e,t){return Qh((()=>{const n=t.initialState;let r,i,s,a;if(null==n)r=this.forwardLayer.call(e,t),i=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),a=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),i=this.backwardLayer.call(e,Object.assign(t,{initialState:a}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(i.slice(1))),r=r[0],i=i[0]),this.returnSequences&&(i=Vp(i,1)),"concat"===this.mergeMode?a=cy([r,i]):"sum"===this.mergeMode?a=od(r,i):"ave"===this.mergeMode?a=lp(.5,od(r,i)):"mul"===this.mergeMode?a=lp(r,i):null==this.mergeMode&&(a=[r,i]),this.returnState?null==this.mergeMode?a.concat(s):[a].concat(s):a}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Kv(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Kv(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=yw(t.layer);if(delete t.layer,null!=t.numConstants)throw new ov("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}wk.className="Bidirectional",Kh(wk),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(IS||(IS={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(ES||(ES={}));var _k,Sk,kk=n(719);function Ik(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const i=t(e);if(i.recurse&&null!==i.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(i.recurse){if(Mk(e)){const i=Array.isArray(e)?[]:{};r.add(e);for(const s in e){const a=Ik(e[s],t,n,r);i[s]=a}return r.delete(e),i}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,i.value),i.value}function Ek(e,t=Ck){return Tk(e,t)}function Tk(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const i=t(e);if(i.recurse&&null!==i.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(i.recurse){if(Mk(r)){const i=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=Tk(e.map((e=>e[s])),t,n);i[s]=r}return n.delete(r),i}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return i.value}function Ck(e){return null===e?null:Mk(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function Mk(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof gc))}function Ak(e){return Ik(e,Nk)}function Nk(e){return e instanceof gc?{value:e.clone(),recurse:!1}:Mk(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Rk{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Dk extends Rk{constructor(){super(Dk.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}Dk.INITIAL_CAPACITY=32;class Lk{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Vk(this,e)}filter(e){return new Uk(this,e)}map(e){return new Wk(this,e)}mapAsync(e){return new Gk(this,e)}serialMapAsync(e){return new Gk(this,e).serial()}flatmap(e){return new jk(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new Bk(this,e,t)}columnMajorBatch(e,t=!0,n=Ck){return this.rowMajorBatch(e,t).map((e=>Ek(e,n)))}concatenate(e,t){return new qk(new Fk([this,e]),t)}take(e){return e<0||null==e?this:new zk(this,e)}skip(e){return e<0||null==e?this:new Pk(this,e)}prefetch(e){return new Xk(this,e)}shuffle(e,t){return new Kk(this,e,t)}serial(){return new Ok(this)}}class Fk extends Lk{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:Ak(e),done:!1}}}class $k extends Lk{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class Ok extends Lk{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Pk extends Lk{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;ed(e.value)}return this.upstream.next()}}class zk extends Lk{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Bk extends Lk{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Uk extends Lk{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;ed(e.value)}}}class Wk extends Lk{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Cc(e.value),n=this.transform(e.value),r=Cc(n);for(const e of t)Tc(e,r)||e.dispose();return{value:n,done:!1}}}class Vk extends Lk{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Gk extends Lk{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Cc(e.value),n=await this.transform(e.value),r=Cc(n);for(const e of t)Tc(e,r)||e.dispose();return{value:n,done:!1}}}class Hk extends Lk{constructor(){super(),this.outputQueue=new Dk,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class jk extends Hk{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Cc(e.value),n=this.transform(e.value),r=Cc(n);this.outputQueue.pushAll(n);for(const e of t)Tc(e,r)||e.dispose();return!0}}class qk extends Lk{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(Sk=_k||(_k={}))[Sk.FAIL=0]="FAIL",Sk[Sk.SHORTEST=1]="SHORTEST",Sk[Sk.LONGEST=2]="LONGEST";class Xk extends Lk{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Rk(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Kk extends Xk{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=kk.alea(n||uc().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Yk{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return ma(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Zk((async()=>(await n.iterator()).columnMajorBatch(e,t,Jk)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Zk((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Zk((async()=>(await t.iterator()).filter((t=>Qh((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Zk((async()=>(await t.iterator()).map((t=>Qh((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return Zk((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Zk((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Zk((async()=>{return n=(i=async()=>({value:await t.iterator(),done:!1}),new $k(i)).take(e),new qk(n,r);var n,r,i}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Zk((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,i=kk.alea(t||uc().toString());return Zk((async()=>{let t=i.int32();return n&&(t+=i.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Zk((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Zk(e,t=null){return new class extends Yk{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Jk(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof gc||Na(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof gc?rf(e):Gc(t=e,n,Oc(t,r),r);var t,n,r}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function Qk(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ma("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}Yk.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const eI=ag;class tI extends ca{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new ua(this,Zh())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Ka().get("IS_NODE")&&Wm("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Da(n[0])){const i=n.map((e=>cc(e)));r=this.write(i,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r){this.data.set(e,{values:t,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?Gm(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>hc(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return wh(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return Zh().makeTensorFromDataId(r,t,n,this)}disposeData(e){if(this.data.has(e)){const{complexTensorInfos:t}=this.data.get(e);null!=t&&(this.disposeData(t.real.dataId),this.disposeData(t.imag.dataId)),this.data.delete(e)}}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.data.has(t)){const e=this.data.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}async time(e){const t=uc();return e(),{kernelMs:uc()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Qk([e],"where");const t=this.readSync(e.dataId);return eI(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function nI(e,t,n){return({inputs:r,attrs:i,backend:s})=>{const{x:a}=r;if(Qk(a,e),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,l=o.data.get(a.dataId).values,u=va(a.shape),c=n||a.dtype,h=Ma(c,u);for(let e=0;e<u;++e)h[e]=t(l[e],i);return o.makeTensorInfo(a.shape,c,h)}}function rI(e,t,n){return({inputs:r,attrs:i,backend:s})=>{const{x:a}=r;if(Qk(a,e),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,l=o.data.get(a.dataId).values,u=n||a.dtype,c=t(l,u,i);return o.makeTensorInfo(a.shape,u,c)}}nd("cpu",(()=>new tI),1);const iI=nI(Xo,(e=>e>=0?e:Math.exp(e)-1)),sI={kernelName:Xo,backendName:"cpu",kernelFunc:iI};function aI(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const oI={kernelName:hl,backendName:"cpu",kernelFunc:aI};function lI(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{alpha:s}=r;Qk([i],"leakyRelu");const a=va(i.shape),o=n.data.get(i.dataId).values,l=Ca("float32",a);for(let e=0;e<o.length;e++)l[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(i.shape,"float32",l)}const uI={kernelName:xl,backendName:"cpu",kernelFunc:lI};function cI(e){return(t,n,r,i,s)=>{const a=Xd(t,n),o=a.length,l=Pa(a),u=Ca(s,va(a)),c=t.length,h=n.length,d=Pa(t),p=Pa(n),f=jd(t,a),m=jd(n,a);if(f.length+m.length===0)for(let t=0;t<u.length;++t)u[t]=e(r[t%r.length],i[t%i.length]);else for(let t=0;t<u.length;++t){const n=ja(t,o,l),s=n.slice(-c);f.forEach((e=>s[e]=0));const a=Ha(s,c,d),g=n.slice(-h);m.forEach((e=>g[e]=0));const x=Ha(g,h,p);u[t]=e(r[a],i[x])}return[u,a]}}const hI=cI(((e,t)=>e<0?t*e:e));function dI(e){const{inputs:t,backend:n}=e,{x:r,alpha:i}=t;Qk([r,i],"prelu");const s=n.data.get(r.dataId).values,a=n.data.get(i.dataId).values,[o,l]=hI(r.shape,i.shape,s,a,r.dtype);return n.makeTensorInfo(l,r.dtype,o)}const pI={kernelName:Jl,backendName:"cpu",kernelFunc:dI},fI=nI(ru,(e=>Math.max(0,e))),mI={kernelName:ru,backendName:"cpu",kernelFunc:fI},gI=nI(uu,(e=>Math.min(Math.max(0,e),6))),xI={kernelName:uu,backendName:"cpu",kernelFunc:gI};function bI(e,t,n,r,i){if("linear"===n)return aI({inputs:{x:t},backend:e});if("relu"===n)return fI({inputs:{x:t},backend:e});if("elu"===n)return iI({inputs:{x:t},backend:e});if("relu6"===n)return gI({inputs:{x:t},backend:e});if("prelu"===n)return dI({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return lI({inputs:{x:t},backend:e,attrs:{alpha:i}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function vI(e){const{inputs:t,backend:n}=e,{real:r,imag:i}=t,s=n.data.get(r.dataId).values,a=n.data.get(i.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(i.shape,"float32",a)},o}const yI={kernelName:Io,backendName:"cpu",kernelFunc:vI};function wI(e,t,n="float32"){if("complex64"===n)return vI({inputs:{real:wI(e,t,"float32"),imag:wI(e,t,"float32")},backend:e});const r=Wa(va(t),n);return e.makeTensorInfo(t,n,r)}function _I(e){const{inputs:t,backend:n}=e,{input:r}=t,i=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(i.dataId).values;return n.makeTensorInfo(i.shape,i.dtype,s)}const SI={kernelName:tu,backendName:"cpu",kernelFunc:_I};function kI(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===i.dtype)return aI({inputs:{x:i},backend:n});const e=wI(n,i.shape,i.dtype),t=kI({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),r=vI({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===i.dtype){const e=_I({inputs:{input:i},backend:n}),t=kI({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!Aa(i.dtype,s)){const e=aI({inputs:{x:i},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){const e=n.data.get(i.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(i.shape,"int32",t)}if("bool"===s){const e=n.data.get(i.dataId).values,t=lc([0],i.dtype),[r,s]=cI(((e,t)=>e!==t?1:0))(i.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${s}`)}const II={kernelName:_o,backendName:"cpu",kernelFunc:kI};function EI(e,t,n,r){return null==n?({inputs:n,backend:i})=>{const{a:s,b:a}=n,o=i;Qk([s,a],e);const l=o.data.get(s.dataId).values,u=o.data.get(a.dataId).values,c=r||s.dtype,[h,d]=t(s.shape,a.shape,l,u,c);return o.makeTensorInfo(d,c,h)}:({inputs:e,backend:i})=>{const{a:s,b:a}=e,o=i;if("complex64"===s.dtype||"complex64"===a.dtype){const e=kI({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,i=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(i.dataId).values,c=kI({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,x,b]=n(s.shape,a.shape,l,u,f,m),v=o.makeTensorInfo(b,"float32",g),y=o.makeTensorInfo(b,"float32",x),w=vI({inputs:{real:v,imag:y},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(v),o.disposeIntermediateTensorInfo(y),w}{const e=o.data.get(s.dataId).values,n=o.data.get(a.dataId).values,i=r||s.dtype,[l,u]=t(s.shape,a.shape,e,n,i);return o.makeTensorInfo(u,i,l)}}}function TI(e){return(t,n,r,i,s,a)=>{const o=Xd(t,n),l=va(o),u=o.length,c=Pa(o),h=Ca("float32",l),d=Ca("float32",l),p=jd(t,o),f=jd(n,o),m=Gm(r,i),g=Gm(s,a),x=t.length,b=Pa(t),v=n.length,y=Pa(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%g.length,i=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=i.real,d[t]=i.imag}else for(let t=0;t<h.length;t++){const n=ja(t,u,c),r=n.slice(-x);p.forEach((e=>r[e]=0));const i=Ha(r,x,b),s=n.slice(-v);f.forEach((e=>s[e]=0));const a=Ha(s,v,y),o=e(m[2*i],m[2*i+1],g[2*a],g[2*a+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}const CI=cI(((e,t)=>e+t)),MI=TI(((e,t,n,r)=>({real:e+n,imag:t+r}))),AI=EI(ro,CI,MI),NI={kernelName:ro,backendName:"cpu",kernelFunc:AI};function RI(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{shape:s}=r,a=va(i.shape),o=Ia(s,a),l=va(o);ma(a===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${i.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(i.dataId);const u=n.data.get(i.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:i.dataId,shape:o,dtype:i.dtype}}const DI={kernelName:iu,backendName:"cpu",kernelFunc:RI};function LI(e){const{inputs:t,backend:n,attrs:r}=e,{a:i,b:s}=t,{transposeA:a,transposeB:o}=r;Qk([i,s],"matMul");const l=i.shape.length,u=s.shape.length,c=a?i.shape[l-2]:i.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],d=a?i.shape[l-1]:i.shape[l-2],p=o?s.shape[u-2]:s.shape[u-1],f=i.shape.slice(0,-2),m=s.shape.slice(0,-2),g=va(f),x=va(m);ma(l>=2&&u>=2&&(g===x||1===g||1===x),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const b=(g>x?i.shape.slice(0,-2):s.shape.slice(0,-2)).concat([d,p]);ma(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${i.shape} and ${s.shape} and transposeA=${a} and transposeB=${o} must match.`));const v=o?[x,p,h]:[x,h,p],y=RI({inputs:{x:i},backend:n,attrs:{shape:a?[g,c,d]:[g,d,c]}}),w=RI({inputs:{x:s},backend:n,attrs:{shape:v}}),_=a?y.shape[1]:y.shape[2],S=a?y.shape[2]:y.shape[1],k=o?w.shape[1]:w.shape[2],I=Math.max(g,x),E=n.data.get(y.dataId).values,T=n.data.get(w.dataId).values,C=Pa(y.shape),M=Pa(w.shape),[A,N,R]=a?[C[0],1,C[1]]:[C[0],C[1],1],[D,L,F]=o?[1,M[1],M[0]]:[M[1],1,M[0]],$=S*k,O=wh([I,S,k],y.dtype),P=O.values,z=n.blockSize;for(let e=0;e<I;e++)for(let t=0;t<S;t+=z)for(let n=0;n<k;n+=z)for(let r=0;r<_;r+=z){const i=Math.min(t+z,S),s=Math.min(n+z,k),a=Math.min(r+z,_);for(let o=t;o<i;o++)for(let t=n;t<s;t++){let n=0;for(let i=r;i<a;i++){const r=Math.min(e,g-1)*A,s=Math.min(e,x-1)*F;n+=E[r+o*N+i*R]*T[i*D+t*L+s]}P[e*$+(o*k+t)]+=n}}return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,O.dtype,O.values)}const FI={kernelName:vo,backendName:"cpu",kernelFunc:LI},$I={kernelName:Vu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:i,b:s,bias:a,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=LI({inputs:{a:i,b:s},attrs:{transposeA:l,transposeB:u},backend:n}),a&&(p=AI({inputs:{a:d,b:a},backend:n}),m.push(d),d=p),c&&(f=bI(n,d,c,o,h),m.push(d),d=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return d}};function OI(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const PI={kernelName:eo,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Qk(t,"abs");let r=new Float32Array(va(t.shape));return r=OI(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,"float32")}},zI=nI(to,(e=>Math.acos(e))),BI={kernelName:to,backendName:"cpu",kernelFunc:zI},UI=nI(no,(e=>Math.acosh(e))),WI={kernelName:no,backendName:"cpu",kernelFunc:UI},VI={kernelName:io,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;Qk(t,"addN");const i=r.map((e=>n.data.get(e.dataId).values)),s=wh(r[0].shape,r[0].dtype),a=s.values;for(let e=0;e<r.length;e++){const t=i[e];for(let e=0;e<a.length;e++)a[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function GI(e,t,n,r,i){const s=t.length,a=va(t),o=Pa(t),l=Pa(i),u=Ca(n,va(i));for(let t=0;t<a;++t){const n=ja(t,s,o),i=new Array(n.length);for(let e=0;e<i.length;e++)i[e]=n[r[e]];u[Ha(i,s,l)]=e[t]}return u}function HI(e){const{inputs:t,attrs:n,backend:r}=e,{x:i}=t,{perm:s}=n;Qk(i,"transpose");const a=i.shape.length,o=new Array(a);for(let e=0;e<o.length;e++)o[e]=i.shape[s[e]];const l=GI(r.data.get(i.dataId).values,i.shape,i.dtype,s,o);return{dataId:r.write(l,o,i.dtype),shape:o,dtype:i.dtype}}const jI={kernelName:$u,backendName:"cpu",kernelFunc:HI},qI={kernelName:so,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:s,keepDims:a}=r;Qk(i,"all");const o=Ea(s,i.shape);let l=o;const u=kp(l,i.shape.length);let c=i;null!=u&&(c=HI({inputs:{x:i},backend:n,attrs:{perm:u}}),l=Ep(l.length,i.shape.length)),Sp("all",l,c.shape.length);const[h,d]=wp(c.shape,l),p=va(d),f=Wa(va(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const e=RI({inputs:{x:g},backend:n,attrs:{shape:_p(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},XI={kernelName:ao,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:s,keepDims:a}=r;Qk(i,"any");const o=Ea(s,i.shape);let l=o;const u=kp(l,i.shape.length);let c=i;null!=u&&(c=HI({inputs:{x:i},backend:n,attrs:{perm:u}}),l=Ep(l.length,i.shape.length)),Sp("any",l,c.shape.length);const[h,d]=wp(c.shape,l),p=va(d),f=Wa(va(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const e=RI({inputs:{x:g},backend:n,attrs:{shape:_p(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},KI={kernelName:oo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:s}=r;Qk(i,"argMax");let a=Ea(s,i.shape);const o=kp(a,i.shape.length);let l=i;const u=[];null!=o&&(l=HI({inputs:{x:i},backend:n,attrs:{perm:o}}),u.push(l),a=Ep(a.length,l.shape.length)),a=[a[0]],Sp("argMax",a,l.shape.length);const[c,h]=wp(l.shape,a),d=Wa(va(c),"int32"),p=va(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const i=f[t+e];i>n&&(n=i,r=e)}d[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},YI={kernelName:lo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:s}=r;Qk(i,"argMin");let a=Ea(s,i.shape);const o=kp(a,i.shape.length);let l=i;const u=[];null!=o&&(l=HI({inputs:{x:i},backend:n,attrs:{perm:o}}),u.push(l),a=Ep(a.length,l.shape.length)),a=[a[0]],Sp("argMin",a,l.shape.length);const[c,h]=wp(l.shape,a),d=Wa(va(c),"int32"),p=va(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const i=f[t+e];i<n&&(n=i,r=e)}d[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},ZI=nI(uo,(e=>Math.asin(e))),JI={kernelName:uo,backendName:"cpu",kernelFunc:ZI},QI=nI(co,(e=>Math.asinh(e))),eE={kernelName:co,backendName:"cpu",kernelFunc:QI},tE=nI(ho,(e=>Math.atan(e))),nE={kernelName:ho,backendName:"cpu",kernelFunc:tE},rE=cI(((e,t)=>Math.atan2(e,t))),iE=EI(fo,rE),sE={kernelName:fo,backendName:"cpu",kernelFunc:iE},aE=nI(po,(e=>Math.atanh(e))),oE={kernelName:po,backendName:"cpu",kernelFunc:aE};function lE(e,t,n,r,i,s){const a=i.strideHeight,o=i.strideWidth,l=i.dilationHeight,u=i.dilationWidth,c=i.effectiveFilterHeight,h=i.effectiveFilterWidth,d=i.padInfo.top,p=i.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=wh(i.outShape,n),g=m.values,x=i.outShape[1]*i.outShape[2]*i.outShape[3],b=i.outShape[2]*i.outShape[3],v=i.outShape[3];for(let t=0;t<i.batchSize;++t){const n=t*x,m=t*r[0];for(let t=0;t<i.inChannels;++t)for(let x=0;x<i.outHeight;++x){const y=x*a-d,w=Math.max(0,y),_=Math.min(i.inHeight,c+y),S=n+x*b;for(let n=0;n<i.outWidth;++n){const a=n*o-p,c=Math.max(0,a),d=Math.min(i.inWidth,h+a);let x=f,b=0,y=0;for(let n=w;n<_;n+=l){const i=m+n*r[1];for(let n=c;n<d;n+=u){const a=e[i+n*r[2]+t];"max"===s&&a>x?x=a:"avg"===s&&(b+=a,y++)}if(isNaN(x))break}g[S+n*v+t]="avg"===s?b/y:x}}}return m}function uE(e,t,n,r,i=!1,s=!1){const a=wh(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=wh(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let x=g;for(;x<0;)x+=u;const b=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const v=Math.min(r.inWidth,d+h);let y=Number.NEGATIVE_INFINITY,w=-1;for(let n=x;n<b;n+=u){const a=n-g;for(let o=p;o<v;o+=c){const l=o-h,u=m.get(e,n,o,t);u>y&&(y=u,w=i?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:a*d+l)}}a.set(w,e,n,o,t)}}return a}function cE(e,t,n,r,i,s){const a=i.strideDepth,o=i.strideHeight,l=i.strideWidth,u=i.dilationDepth,c=i.dilationHeight,h=i.dilationWidth,d=i.effectiveFilterDepth,p=i.effectiveFilterHeight,f=i.effectiveFilterWidth,m=i.padInfo.front,g=i.padInfo.top,x=i.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=wh(i.outShape,n),y=v.values,w=i.outShape[1]*i.outShape[2]*i.outShape[3]*i.outShape[4],_=i.outShape[2]*i.outShape[3]*i.outShape[4],S=i.outShape[3]*i.outShape[4],k=i.outShape[4];for(let t=0;t<i.batchSize;++t){const n=t*w,v=t*r[0];for(let t=0;t<i.inChannels;++t)for(let w=0;w<i.outDepth;++w){const I=w*a-m;let E=I;for(;E<0;)E+=u;const T=Math.min(i.inDepth,d+I),C=n+w*_;for(let n=0;n<i.outHeight;++n){const a=n*o-g;let d=a;for(;d<0;)d+=c;const m=Math.min(i.inHeight,p+a),w=C+n*S;for(let n=0;n<i.outWidth;++n){const a=n*l-x;let o=a;for(;o<0;)o+=h;const p=Math.min(i.inWidth,f+a),g=w+n*k;let _=b,S=0,I=0;for(let n=E;n<T;n+=u){const i=v+n*r[1];for(let n=d;n<m;n+=c){const a=i+n*r[2];for(let n=o;n<p;n+=h){const i=e[a+n*r[3]+t];if("max"===s&&i>_?_=i:"avg"===s&&(S+=i,I++),isNaN(_))break}if(isNaN(_))break}if(isNaN(_))break}y[g+t]="avg"===s?S/I:_}}}}return v}const hE={kernelName:mo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t;Qk(i,"avgPool");const{filterSize:s,strides:a,pad:o,dimRoundingMode:l}=r;ma(_d(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=dd(i.shape,s,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&ya(u.inShape,u.outShape))c=aI({inputs:{x:i},backend:n});else{const e=n.data.get(i.dataId).values,t=Pa(i.shape),r=lE(e,i.shape,i.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,i.dtype,r.values)}return c}},dE={kernelName:xo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{filterSize:s,strides:a,pad:o,dimRoundingMode:l,dataFormat:u,dilations:c}=r;Qk(i,"avgPool3d");let h=c;null==h&&(h=[1,1,1]);const d=pd(i.shape,s,a,h,o,l,u),p=cE(n.data.get(i.dataId).values,i.shape,i.dtype,Pa(i.shape),d,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}},pE={kernelName:bo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:i,input:s}=t,{filterSize:a,strides:o,pad:l,dilations:u,dimRoundingMode:c}=r;Qk([i,s],"avgPool3DGrad");const h=pd(s.shape,a,o,u,l,c),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,x=h.filterWidth,b=h.dilationDepth,v=h.dilationHeight,y=h.dilationWidth,w=h.effectiveFilterDepth,_=h.effectiveFilterHeight,S=h.effectiveFilterWidth,k=w-1-h.padInfo.front,I=S-1-h.padInfo.left,E=_-1-h.padInfo.top,T=wh(s.shape,"float32"),C=1/(m*g*x),M=n.bufferSync(i);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let i=0;i<h.inWidth;++i){const s=n-k,a=r-E,o=i-I;let l=0;for(let n=0;n<w;n+=b){const r=(s+n)/d;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let n=0;n<_;n+=v){const i=(a+n)/p;if(!(i<0||i>=h.outHeight||Math.floor(i)!==i))for(let n=0;n<S;n+=y){const s=(o+n)/f;s<0||s>=h.outWidth||Math.floor(s)!==s||(l+=M.get(e,r,i,s,t))}}}T.set(l*C,e,n,r,i,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},fE={kernelName:go,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:i,input:s}=t,a=s;Qk([i,s],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=dd(a.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,x=c.effectiveFilterHeight,b=c.effectiveFilterWidth,v=b-1-c.padInfo.left,y=x-1-c.padInfo.top,w=wh(a.shape,"float32"),_=1/(p*f),S=n.data.get(i.dataId).values,k=wh(i.shape,"float32",S);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const i=n-y,s=r-v;let a=0;for(let n=0;n<x;n+=m){const r=(i+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const i=(s+n)/d;i<0||i>=c.outWidth||Math.floor(i)!==i||(a+=k.get(e,r,i,t))}}w.set(a*_,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},mE={kernelName:al,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,scale:s,offset:a,mean:o,variance:l}=t;ma(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ma(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ma(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Qk([i,o,l,s,a],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(i.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=s?n.data.get(s.dataId).values:new Float32Array([1]),f=a?n.data.get(a.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,x=p.length,b=d.length,v=h.length;let y=0,w=0,_=0,S=0;for(let e=0;e<c.length;++e)m[e]=f[y++]+(c[e]-h[w++])*p[_++]/Math.sqrt(d[S++]+u),y>=g&&(y=0),w>=v&&(w=0),_>=x&&(_=0),S>=b&&(S=0);return n.makeTensorInfo(i.shape,i.dtype,m)}};function gE(e,t,n,r,i){const s=Vh(r,t,n),a=va(n),o=Pa(r);if(s){const n=Gh(t,o);return"string"===i?e.slice(n,n+a):e.subarray(n,n+a)}const l=wh(r,i,"string"===i?ig(e):e),u=wh(n,i);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===i?sg(u.values):u.values}function xE(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{begin:s,size:a}=r;Qk(i,"slice");const[o,l]=Hh(i,s,a);Nh(i,o,l);const u=gE(n.data.get(i.dataId).values,o,l,i.shape,i.dtype);return n.makeTensorInfo(l,i.dtype,u)}const bE={kernelName:gu,backendName:"cpu",kernelFunc:xE},vE={kernelName:yo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{blockShape:s,crops:a}=r;Qk([i],"batchToSpaceND");const o=s.reduce(((e,t)=>e*t)),l=Im(i.shape,s,o),u=Em(l.length,s.length),c=Tm(i.shape,s,o),h=Cm(a,s.length),d=Mm(c,a,s.length),p=RI({inputs:{x:i},backend:n,attrs:{shape:l}}),f=HI({inputs:{x:p},backend:n,attrs:{perm:u}}),m=RI({inputs:{x:f},backend:n,attrs:{shape:c}}),g=xE({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function yE(e,t,n,r,i){const s=va(r),a=Wa(i,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=i||(a[r]+=s>0?t[n]:1)}return a}function wE(e,t,n,r=!1){const i=e.shape[0],s=e.shape[1],a=wh([i,n],t.dtype);for(let o=0;o<i;o++)for(let i=0;i<s;i++){const s=e.get(o,i);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?a.set(1,o,s):t.size>0?a.set(a.get(o,s)+t.get(o,i),o,s):a.set(a.get(o,s)+1,o,s))}return a}const _E={kernelName:wo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,weights:s}=t,{size:a}=r,o=yE(n.data.get(i.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,a);return n.makeTensorInfo([a],s.dtype,o)}};function SE(e){return(t,n,r)=>{const i=Ca(n,t.length);for(let n=0;n<t.length;++n)i[n]=e(t[n],r);return i}}const kE=SE((e=>Math.ceil(e))),IE=rI(So,kE),EE={kernelName:So,backendName:"cpu",kernelFunc:IE},TE=nI(ko,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),CE={kernelName:ko,backendName:"cpu",kernelFunc:TE},ME={kernelName:Eo,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(va(t.shape)),i=n.data.get(t.dataId),s=i.complexTensorInfos.real,a=i.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function AE(e,t,n,r){const i=Ma(n,va(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=va(e.shape);i.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const s="string"===n?ig(e.vals):e.vals;let a=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)i[o+t]=s[a++]}r+=e.shape[1]}))}return i}function NE(e){const{inputs:t,backend:n}=e,{input:r}=t,i=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(i.dataId).values;return n.makeTensorInfo(i.shape,i.dtype,s)}const RE={kernelName:pl,backendName:"cpu",kernelFunc:NE};function DE(e){const{inputs:t,backend:n,attrs:r}=e,{axis:i}=r,s=Ea(i,t[0].shape)[0];let a=wm(t.map((e=>e.shape)),s);if(0===va(a))return n.makeTensorInfo(a,t[0].dtype,[]);const o=t.filter((e=>va(e.shape)>0));if(1===o.length)return aI({inputs:{x:o[0]},backend:n});if(ym(o.map((e=>e.shape)),s),"complex64"===o[0].dtype){const e=o.map((e=>_I({inputs:{input:e},backend:n}))),t=o.map((e=>NE({inputs:{input:e},backend:n}))),r=DE({inputs:e,backend:n,attrs:{axis:s}}),i=DE({inputs:t,backend:n,attrs:{axis:s}}),a=vI({inputs:{real:r,imag:i},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),a}const l=o.map((e=>{const t=va(e.shape.slice(s));return RI({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));a=wm(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=AE(u,a,t[0].dtype,c),d=wm(o.map((e=>e.shape)),s),p=n.makeTensorInfo(d,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const LE={kernelName:To,backendName:"cpu",kernelFunc:DE};function FE(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,filter:s}=t,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;Qk([i,s],"conv2d");const h=Sd(l),d=fd(i.shape,s.shape,a,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,x=d.padInfo.left,b=d.padInfo.top,v="channelsLast"===d.dataFormat,y=new dc(d.outShape,i.dtype),w=Pa(i.shape),_=Pa(s.shape),S=w[0],k=v?w[1]:w[2],I=v?w[2]:1,E=v?1:w[1],T=y.strides[0],C=v?y.strides[1]:y.strides[2],M=v?y.strides[2]:1,A=v?1:y.strides[1],N=n.data.get(i.dataId).values,R=n.data.get(s.dataId).values,D=y.values;for(let e=0;e<d.batchSize;++e){const t=e*S,n=e*T;for(let e=0;e<d.outHeight;++e){const r=n+e*C,i=e*d.strideHeight-b;for(let e=0;e<p;++e){const n=i+e*m;if(n<0||n>=d.inHeight)continue;const s=e*_[0],a=t+n*k;for(let e=0;e<d.outWidth;++e){const t=r+e*M,n=e*d.strideWidth-x;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=d.inWidth)continue;const i=a+r*I;let o=s+e*_[1];for(let e=0;e<d.inChannels;++e){const n=N[i+e*E];for(let e=0;e<d.outChannels;++e)D[t+e*A]+=n*R[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(y.shape,y.dtype,D)}const $E={kernelName:Co,backendName:"cpu",kernelFunc:FE},OE={kernelName:Mo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,dy:s}=t,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;Qk([i,s],"conv2dBackpropFilter");const h=Sd(l),d=fd(i.shape,c,a,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,x="channelsLast"===d.dataFormat,b=new dc(d.filterShape,"float32"),v=d.padInfo.left,y=d.padInfo.top,w=n.data.get(i.dataId).values,_=n.data.get(s.dataId).values,S=new dc(i.shape,i.dtype,w),k=new dc(s.shape,s.dtype,_);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((y-e)/p)),n=Math.min(d.outHeight,(d.inHeight+y-e)/p);for(let r=0;r<g;++r){const i=Math.max(0,Math.ceil((v-r)/f)),s=Math.min(d.outWidth,(d.inWidth+v-r)/f);for(let a=0;a<d.inChannels;++a)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-y;for(let e=i;e<s;++e){const n=r+e*f-v;l+=x?S.get(u,t,n,a)*k.get(u,c,e,o):S.get(u,a,t,n)*k.get(u,o,c,e)}}b.set(l,e,r,a,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},PE={kernelName:Ao,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:i,filter:s}=t,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;Qk([i,s],"conv2dBackpropInput");const h=Pa(s.shape),d=Pa(i.shape);let p=Sd(u);const f=fd(a,s.shape,o,1,l,c,!1,p),m=new dc(f.inShape,"float32"),g=m.values,x=n.data.get(i.dataId).values,b=n.data.get(s.dataId).values,[v,y,w]=h,{batchSize:_,filterHeight:S,filterWidth:k,inChannels:I,inHeight:E,inWidth:T,outChannels:C,outHeight:M,outWidth:A,strideHeight:N,strideWidth:R}=f;p=f.dataFormat;const D=S-1-f.padInfo.top,L=k-1-f.padInfo.left,F="channelsLast"===p,$=m.strides[0],O=F?m.strides[1]:m.strides[2],P=F?m.strides[2]:1,z=F?1:m.strides[1],B=d[0],U=F?d[1]:d[2],W=F?d[2]:1,V=F?1:d[1];for(let e=0;e<_;++e)for(let t=0;t<I;++t)for(let n=0;n<E;++n){const r=n-D,i=Math.max(0,Math.ceil(r/N)),s=Math.min(M,(S+r)/N);for(let a=0;a<T;++a){const o=a-L,l=Math.max(0,Math.ceil(o/R)),u=Math.min(A,(k+o)/R);let c=0;for(let n=i;n<s;++n){const i=n*N-r;for(let r=l;r<u;++r){const s=B*e+U*n+W*r,a=v*(S-1-i)+y*(k-1-(r*R-o))+w*t;for(let e=0;e<C;++e)c+=x[s+V*e]*b[a+e]}}g[$*e+O*n+P*a+z*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},zE={kernelName:No,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,filter:s}=t,{strides:a,pad:o,dilations:l}=r;Qk([i,s],"conv3d");const u=md(i.shape,s.shape,a,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,x=g.front,b=g.left,v=g.top,y=new dc(u.outShape,i.dtype),w=n.data.get(i.dataId).values,_=n.data.get(s.dataId).values,S=y.values,k=Pa(i.shape),I=Pa(s.shape);for(let e=0;e<u.batchSize;++e){const t=e*k[0],n=e*y.strides[0];for(let e=0;e<u.outDepth;++e){const r=n+e*y.strides[1],i=e*u.strideDepth-x;for(let e=0;e<c;++e){const n=i+e*p;if(n<0||n>=u.inDepth)continue;const s=e*I[0],a=t+n*k[1];for(let e=0;e<u.outHeight;++e){const t=r+e*y.strides[2],n=e*u.strideHeight-v;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=u.inHeight)continue;const i=s+e*I[1],o=a+r*k[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<d;++e){const t=r+e*m;if(t<0||t>=u.inWidth)continue;const s=i+e*I[2],a=o+t*u.inChannels;let l=s;for(let e=0;e<u.inChannels;++e){const t=w[a+e];for(let e=0;e<u.outChannels;++e)S[n+e]+=t*_[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},BE={kernelName:Ro,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,dy:s}=t,{strides:a,pad:o,filterShape:l}=r;Qk([i,s],"conv3dBackpropFilterV2");const u=Pa(i.shape),c=Pa(s.shape),h=md(i.shape,l,a,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,x=h.filterWidth,b=new dc(h.filterShape,"float32"),v=b.values,[y,w,_,S]=b.strides,k=n.data.get(s.dataId).values,[I,E,T,C]=c,M=n.data.get(i.dataId).values,[A,N,R,D]=u,L=h.padInfo.front,F=h.padInfo.left,$=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((L-e)/d)),n=Math.min(h.outDepth,(h.inDepth+L-e)/d),r=e*y;for(let i=0;i<g;++i){const s=Math.max(0,Math.ceil(($-i)/p)),a=Math.min(h.outHeight,(h.inHeight+$-i)/p),o=i*w+r;for(let r=0;r<x;++r){const l=Math.max(0,Math.ceil((F-r)/f)),u=Math.min(h.outWidth,(h.inWidth+F-r)/f),c=r*_+o;for(let o=0;o<h.inChannels;++o){const m=o*S+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*A,x=m*I;for(let m=t;m<n;++m){const t=(e+m*d-L)*N+h,n=m*E+x;for(let e=s;e<a;++e){const s=(i+e*p-$)*R+t,a=e*T+n;for(let e=l;e<u;++e){const t=e*C+a;g+=M[(r+e*f-F)*D+s+o]*k[t+c]}}}}v[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},UE={kernelName:Do,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:i,filter:s}=t,{pad:a,strides:o,inputShape:l}=r;Qk([i],"conv3dBackpropInputV2");const u=Pa(i.shape),c=Pa(s.shape),h=md(l,s.shape,o,1,a),d=new dc(h.inShape,"float32"),p=d.values,[f,m,g,x]=d.strides,b=n.data.get(i.dataId).values,[v,y,w,_]=u,S=n.data.get(s.dataId).values,[k,I,E,T]=c,{batchSize:C,filterDepth:M,filterHeight:A,filterWidth:N,inChannels:R,inDepth:D,inHeight:L,inWidth:F,outChannels:$,outDepth:O,outHeight:P,outWidth:z,strideDepth:B,strideHeight:U,strideWidth:W}=h,V=M-1-h.padInfo.front,G=A-1-h.padInfo.top,H=N-1-h.padInfo.left;for(let e=0;e<C;++e)for(let t=0;t<R;++t)for(let n=0;n<D;++n){const r=n-V,i=Math.max(0,Math.ceil(r/B)),s=Math.min(O,(M+r)/B);for(let a=0;a<L;++a){const o=a-G,l=Math.max(0,Math.ceil(o/U)),u=Math.min(P,(A+o)/U);for(let c=0;c<F;++c){const h=c-H,d=Math.max(0,Math.ceil(h/W)),C=Math.min(z,(N+h)/W);let R=0;for(let n=i;n<s;++n){const i=n*B-r;for(let r=l;r<u;++r){const s=r*U-o;for(let a=d;a<C;++a){const o=v*e+y*n+w*r+_*a,l=k*(M-1-i)+I*(A-1-s)+E*(N-1-(a*W-h))+T*t;for(let e=0;e<$;++e)R+=b[o+e]*S[l+e]}}}p[f*e+m*n+g*a+x*c+t]=R}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},WE=nI(Lo,(e=>Math.cos(e))),VE={kernelName:Lo,backendName:"cpu",kernelFunc:WE},GE=nI(Fo,(e=>Math.cosh(e))),HE={kernelName:Fo,backendName:"cpu",kernelFunc:GE},jE={kernelName:Oo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:i,boxes:s,boxInd:a}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[c,h,d,p]=i.shape,f=s.shape[0],[m,g]=o,x=wh([f,m,g,p],"float32"),b=n.data.get(s.dataId).values,v=n.data.get(a.dataId).values,y=n.data.get(i.dataId).values,w=Pa(i.shape),_=Pa(x.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],i=b[t+2],s=b[t+3],a=v[e];if(a>=c)continue;const o=m>1?(i-n)*(h-1)/(m-1):0,f=g>1?(s-r)*(d-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+i)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<p;r++){const i=r+n*_[2]+t*_[1]+e*_[0];x.values[i]=u}else if("bilinear"===l){const n=Math.floor(c),i=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?r*(d-1)+l*f:.5*(r+s)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+l*_[2]+t*_[1]+e*_[0];x.values[r]=u}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let r=0;r<p;r++){let s=r+h*w[2]+n*w[1]+a*w[0];const u=y[s];s=r+m*w[2]+n*w[1]+a*w[0];const c=y[s];s=r+h*w[2]+i*w[1]+a*w[0];const d=y[s];s=r+m*w[2]+i*w[1]+a*w[0];const p=u+(c-u)*b,f=d+(y[s]-d)*b;s=r+l*_[2]+t*_[1]+e*_[0],x.values[s]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const i=g>1?r*(d-1)+n*f:.5*(r+s)*(d-1);if(i<0||i>d-1){for(let r=0;r<p;r++){const i=r+n*_[2]+t*_[1]+e*_[0];x.values[i]=u}continue}const o=Math.round(i),l=Math.round(c);for(let r=0;r<p;r++){const i=r+o*w[2]+l*w[1]+a*w[0],s=r+n*_[2]+t*_[1]+e*_[0];x.values[s]=y[i]}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},qE={kernelName:$o,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:s,exclusive:a,reverse:o}=r;Qk(i,"cumsum");const l=kp([s],i.shape.length);let u=i;null!=l&&(u=HI({inputs:{x:i},backend:n,attrs:{perm:l}}));const c=Ep(1,i.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=kc(u.dtype,"int32"),d=Wa(va(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=a?0:p[n];else{const r=m(e,t-1);d[n]=a?p[r]+d[r]:p[n]+d[r]}}const g=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=HI({inputs:{x:g},backend:n,attrs:{perm:Ip(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},XE={kernelName:Po,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,weights:s}=t,{size:a,binaryOutput:o}=r;if(1===i.shape.length){const e=yE(n.data.get(i.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,a);return n.makeTensorInfo([a],s.dtype,e)}if(2===i.shape.length){const e=wE(n.bufferSync(i),n.bufferSync(s),a,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}},KE={kernelName:zo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{blockSize:s,dataFormat:a}=r;ma("NHWC"===a,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`)),ma(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));const o=i.shape[0],l=i.shape[1],u=i.shape[2],c=i.shape[3],h=l*s,d=u*s,p=c/(s*s),f=n.data.get(i.dataId).values,m=new Float32Array(o*h*d*p);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/s),r=t%s;for(let t=0;t<d;++t){const i=Math.floor(t/s),a=(r*s+t%s)*p;for(let t=0;t<p;++t){const r=t+a+c*(i+u*(n+l*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,d,p],i.dtype,m)}};function YE(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,filter:s}=t,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;Qk([i,s],"depthwiseConv2DNative");const c=Pa(i.shape),h=Pa(s.shape);let d=l;null==d&&(d=[1,1]),ma(_d(a,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`));const p=fd(i.shape,s.shape,a,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:x,padInfo:b}=p,v=b.left,y=b.top,w=p.outChannels/p.inChannels,_=new dc(p.outShape,i.dtype),S=n.data.get(i.dataId).values,k=n.data.get(s.dataId).values,I=_.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*_.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*_.strides[1],i=e*p.strideHeight-v;for(let e=0;e<f;++e){const n=i+e*g;if(n<0||n>=p.inHeight)continue;const s=e*h[0],a=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*_.strides[2],n=e*p.strideWidth-y;for(let e=0;e<m;++e){const r=n+e*x;if(r<0||r>=p.inWidth)continue;const i=s+e*h[1],o=a+r*p.inChannels;let l=t,u=i;for(let e=0;e<p.inChannels;++e){const t=S[o+e];for(let e=0;e<w;++e)I[l+e]+=t*k[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(_.shape,_.dtype,_.values)}const ZE={kernelName:Bo,backendName:"cpu",kernelFunc:YE},JE={kernelName:Uo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,dy:s}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;Qk([i,s],"depthwiseConv2dNativeBackpropFilter");const h=fd(i.shape,c,a,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new dc(h.filterShape,"float32"),x=h.padInfo.left,b=h.padInfo.top,v=h.outChannels/h.inChannels,y=n.data.get(i.dataId).values,w=new dc(i.shape,i.dtype,y),_=n.data.get(s.dataId).values,S=new dc(s.shape,s.dtype,_);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/d)),n=Math.min(h.outHeight,(h.inHeight+b-e)/d);for(let r=0;r<m;++r){const i=Math.max(0,Math.ceil((x-r)/p)),s=Math.min(h.outWidth,(h.inWidth+x-r)/p);for(let a=0;a<h.outChannels;++a){const o=Math.trunc(a/v),l=a%v;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-b;for(let e=i;e<s;++e){const n=r+e*p-x;u+=w.get(l,t,n,o)*S.get(l,c,e,a)}}g.set(u,e,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},QE={kernelName:Wo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:i,filter:s}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;Qk([i,s],"depthwiseConv2DNativeBackpropInput");const h=Pa(i.shape),d=Pa(s.shape),p=fd(c,s.shape,a,o,l,u,!0),f=new dc(p.inShape,"float32"),m=f.values,[g,x,b]=f.strides,v=n.data.get(i.dataId).values,[y,w,_]=h,S=n.data.get(s.dataId).values,[k,I,E]=d,{batchSize:T,filterHeight:C,filterWidth:M,inChannels:A,inHeight:N,inWidth:R,outChannels:D,outHeight:L,outWidth:F,strideHeight:$,strideWidth:O}=p,P=C-1-p.padInfo.top,z=M-1-p.padInfo.left,B=D/A;for(let e=0;e<T;++e)for(let t=0;t<A;++t)for(let n=0;n<N;++n){const r=n-P,i=Math.max(0,Math.ceil(r/$)),s=Math.min(L,(C+r)/$);for(let a=0;a<R;++a){const o=a-z,l=Math.max(0,Math.ceil(o/O)),u=Math.min(F,(M+o)/O);let c=0;for(let n=i;n<s;++n){const i=n*$-r;for(let r=l;r<u;++r){const s=y*e+w*n+_*r,a=k*(C-1-i)+I*(M-1-(r*O-o))+E*t;for(let e=0;e<B;++e)c+=v[s+(t*B+e)]*S[a+e]}}m[g*e+x*n+b*a+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},eT={kernelName:Vo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,i=va(r.shape),s=n.data.get(r.dataId).values,a=wh([i,i],r.dtype),o=a.values;for(let e=0;e<s.length;e++)o[e*i+e]=s[e];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,a.dtype,a.values)}},tT={kernelName:Go,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:i}=e,{strides:s,pad:a,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(i.dataId).values,d=i.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:x,outWidth:b,padInfo:v,strideHeight:y,strideWidth:w,filterHeight:_,filterWidth:S,dilationHeight:k,dilationWidth:I,outShape:E}=hd(r.shape,i.shape,s,a,"NHWC",o),T=va(E),C=E.length,M=Ma(r.dtype,T);for(let e=0;e<p;++e)for(let t=0;t<x;++t){const n=t*y-v.top;for(let s=0;s<b;++s){const a=s*w-v.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<_;++t){const s=n+t*k;if(s>=0&&s<f)for(let n=0;n<S;++n){const p=a+n*I;if(p>=0&&p<m){const a=Ha([e,s,p,o],c,Pa(r.shape)),f=Ha([t,n,o],d,Pa(i.shape)),m=u[a]+h[f];m>l&&(l=m)}}}M[Ha([e,t,s,o],C,Pa(E))]=l}}}return{dataId:l.write(lc(M,r.dtype),E,r.dtype),shape:E,dtype:r.dtype}}},nT={kernelName:jo,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:i,dy:s}=e,{strides:a,pad:o,dilations:l}=n,u=t,c=Ba(r.shape,u.data.get(r.dataId).values),h=Ba(i.shape,u.data.get(i.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:x,padInfo:b,strideHeight:v,strideWidth:y,filterHeight:w,filterWidth:_,dilationHeight:S,dilationWidth:k,outShape:I}=hd(r.shape,i.shape,a,o,"NHWC",l);ma(s.rank===I.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${I.length}, but got ${s.rank}`));const E=Ba(I,u.data.get(s.dataId).values),T=Va(i.shape,i.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*v-b.top;for(let r=0;r<x;++r){const i=r*y-b.left;for(let s=0;s<m;++s){let a=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<w;++t){const r=n+t*S;if(r>=0&&r<p)for(let n=0;n<_;++n){const u=i+n*k;if(u>=0&&u<f){const i=c[e][r][u][s]+h[t][n][s];i>a&&(a=i,o=t,l=n)}}}T[o][l][s]+=E[e][t][r][s]}}}return{dataId:u.write(lc(T,r.dtype),i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}},rT={kernelName:Ho,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:i,dy:s}=e,{strides:a,pad:o,dilations:l}=n,u=t,c=Ba(r.shape,u.data.get(r.dataId).values),h=Ba(i.shape,u.data.get(i.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:x,padInfo:b,strideHeight:v,strideWidth:y,filterHeight:w,filterWidth:_,dilationHeight:S,dilationWidth:k,outShape:I}=hd(r.shape,i.shape,a,o,"NHWC",l);ma(s.rank===I.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${I.length}, but got ${s.rank}`));const E=Ba(I,u.data.get(s.dataId).values),T=Va(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*v-b.top;for(let r=0;r<x;++r){const i=r*y-b.left;for(let s=0;s<m;++s){let a=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=i<0?0:i;for(let t=0;t<w;++t){const r=n+t*S;if(r>=0&&r<p)for(let n=0;n<_;++n){const u=i+n*k;if(u>=0&&u<f){const i=c[e][r][u][s]+h[t][n][s];i>a&&(a=i,o=r,l=u)}}}T[e][o][l][s]+=E[e][t][r][s]}}}return{dataId:u.write(lc(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},iT={kernelName:Ko,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:i}=t;Qk([r,i],"eluGrad");const s=new Float32Array(va(i.shape)),a=n.data.get(i.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<a.length;++e){const t=a[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(i.shape,"float32",s)}},sT=cI(((e,t)=>e===t?1:0)),aT=EI(Zo,sT,null,"bool"),oT={kernelName:Zo,backendName:"cpu",kernelFunc:aT},lT=$m,uT=Om,cT=Pm,hT=zm,dT=Bm,pT=Um,fT=nI(Yo,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+lT*n);return t*(1-((((pT*r+dT)*r+hT)*r+cT)*r+uT)*r*Math.exp(-n*n))})),mT={kernelName:Yo,backendName:"cpu",kernelFunc:fT},gT=SE((e=>Math.exp(e))),xT=rI(Jo,gT),bT={kernelName:Jo,backendName:"cpu",kernelFunc:xT};function vT(e){const{inputs:t,backend:n,attrs:r}=e,{input:i}=t,{dim:s}=r,a=i.shape.length,o=i.shape.slice();let l=s;return s<0&&(ma(-(a+1)<=s,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+s+1),o.splice(l,0,1),RI({inputs:{x:i},backend:n,attrs:{shape:o}})}const yT={kernelName:Qo,backendName:"cpu",kernelFunc:vT},wT=SE((e=>Math.expm1(e))),_T=rI(el,wT),ST={kernelName:el,backendName:"cpu",kernelFunc:_T},kT=cI(((e,t)=>e*t)),IT=TI(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),ET=EI(Ul,kT,IT),TT={kernelName:Ul,backendName:"cpu",kernelFunc:ET},CT=cI(((e,t)=>e/t)),MT=EI(qo,CT),AT={kernelName:qo,backendName:"cpu",kernelFunc:MT},NT=cI(((e,t)=>e-t)),RT=TI(((e,t,n,r)=>({real:e-n,imag:t-r}))),DT=EI(Mu,NT,RT),LT={kernelName:Mu,backendName:"cpu",kernelFunc:DT};function FT(e,t,n){const r=e.shape,i=r[0],s=r[1],a=n.data.get(e.dataId),o=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[i,s],c=va(u),h=Ca("float32",c),d=Ca("float32",c);for(let e=0;e<i;e++){const r=xE({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=xE({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=vI({inputs:{real:r,imag:i},backend:n}),{real:u,imag:c}=$T(a,t,n),p=Gm(u,c);for(let t=0;t<s;t++){const n=Xm(p,t);h[e*s+t]=n.real,d[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=vI({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function $T(e,t,n){const r=va(e.shape),i=n.data.get(e.dataId),s=n.data.get(i.complexTensorInfos.real.dataId).values,a=n.data.get(i.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const i=OT(s,a,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",i.real),t=n.makeTensorInfo(o,"float32",i.imag),s=n.makeTensorInfo([],"float32",oc(r,"float32")),a=aI({inputs:{x:s},backend:n}),l=AT.kernelFunc({inputs:{a:e,b:s},backend:n}),u=AT.kernelFunc({inputs:{a:t,b:a},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return i}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let i=0;i<t;i++){let s=0,a=0;for(let r=0;r<t;r++){const o=Zm(i*r,t,n),l=Xm(e,r);s+=l.real*o.real-l.imag*o.imag,a+=l.real*o.imag+l.imag*o.real}n&&(s/=t,a/=t),Km(r,s,a,i)}return r}(Gm(s,a),r,t);return Hm(e)}var o}function OT(e,t,n,r,i){if(1===n)return{real:e,imag:t};const s=Gm(e,t),a=n/2,o=jm(s),l=o.real,u=o.imag,c=[l.length],h=i.makeTensorInfo(c,"float32",l),d=i.makeTensorInfo(c,"float32",u),p=vI({inputs:{real:h,imag:d},backend:i}),f=qm(s),m=f.real,g=f.imag,x=[m.length],b=i.makeTensorInfo(x,"float32",m),v=i.makeTensorInfo(x,"float32",g),y=vI({inputs:{real:b,imag:v},backend:i}),w=OT(l,u,a,r,i),_=w.real,S=w.imag,k=[_.length],I=i.makeTensorInfo(k,"float32",_),E=i.makeTensorInfo(k,"float32",S),T=vI({inputs:{real:I,imag:E},backend:i}),C=OT(m,g,a,r,i),M=C.real,A=C.imag,N=[M.length],R=i.makeTensorInfo(N,"float32",M),D=i.makeTensorInfo(N,"float32",A),L=vI({inputs:{real:R,imag:D},backend:i}),F=Ym(n,r),$=[F.real.length],O=i.makeTensorInfo($,"float32",F.real),P=i.makeTensorInfo($,"float32",F.imag),z=vI({inputs:{real:O,imag:P},backend:i}),B=ET({inputs:{a:z,b:L},backend:i}),U=AI({inputs:{a:T,b:B},backend:i}),W=DT({inputs:{a:T,b:B},backend:i}),V=_I({inputs:{input:U},backend:i}),G=_I({inputs:{input:W},backend:i}),H=NE({inputs:{input:U},backend:i}),j=NE({inputs:{input:W},backend:i}),q=DE({inputs:[V,G],backend:i,attrs:{axis:0}}),X=DE({inputs:[H,j],backend:i,attrs:{axis:0}}),K=i.data.get(q.dataId).values,Y=i.data.get(X.dataId).values;return i.disposeIntermediateTensorInfo(h),i.disposeIntermediateTensorInfo(d),i.disposeIntermediateTensorInfo(p),i.disposeIntermediateTensorInfo(b),i.disposeIntermediateTensorInfo(v),i.disposeIntermediateTensorInfo(y),i.disposeIntermediateTensorInfo(I),i.disposeIntermediateTensorInfo(E),i.disposeIntermediateTensorInfo(T),i.disposeIntermediateTensorInfo(R),i.disposeIntermediateTensorInfo(D),i.disposeIntermediateTensorInfo(L),i.disposeIntermediateTensorInfo(O),i.disposeIntermediateTensorInfo(P),i.disposeIntermediateTensorInfo(z),i.disposeIntermediateTensorInfo(B),i.disposeIntermediateTensorInfo(U),i.disposeIntermediateTensorInfo(W),i.disposeIntermediateTensorInfo(V),i.disposeIntermediateTensorInfo(H),i.disposeIntermediateTensorInfo(G),i.disposeIntermediateTensorInfo(j),i.disposeIntermediateTensorInfo(q),i.disposeIntermediateTensorInfo(X),{real:K,imag:Y}}const PT={kernelName:tl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,i=va(r.shape),s=r.shape[r.shape.length-1],a=RI({inputs:{x:r},backend:n,attrs:{shape:[i/s,s]}}),o=FT(a,!1,n),l=RI({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}};function zT(e){const{backend:t,attrs:n}=e,{shape:r,value:i,dtype:s}=n,a=s||Fa(i),o=Ma(a,va(r));return function(e,t,n){e.fill(t)}(o,i),t.makeTensorInfo(r,a,o)}const BT={kernelName:nl,backendName:"cpu",kernelFunc:zT},UT={kernelName:rl,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,i=n,s=Ca(r.dtype,va(r.shape)),[a,o,l,u]=r.shape,c=i.data.get(r.dataId).values;for(let e=0;e<a;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let r=0;r<l;r++){const i=r*u;for(let o=0;o<u;o++){const h=[a,e,r,o][2],d=Math.round(l-h),p=t+n+i+o;let f=c[p];d>=0&&d<l&&(f=c[t+n+d*u+o]),s[p]=f}}}}return{dataId:i.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},WT=SE((e=>Math.floor(e))),VT=rI(il,WT),GT={kernelName:il,backendName:"cpu",kernelFunc:VT},HT=cI(((e,t)=>Math.floor(e/t))),jT=EI(sl,HT,null,"int32"),qT={kernelName:sl,backendName:"cpu",kernelFunc:jT},XT={kernelName:Gu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,filter:s,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=FE({inputs:{x:i,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const e=m;m=AI({inputs:{a:m,b:a},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=bI(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},KT={kernelName:Hu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,filter:s,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=YE({inputs:{x:i,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const e=m;m=AI({inputs:{a:m,b:a},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=bI(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},YT={kernelName:ll,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:i}=t,s=va(r.shape),a=i.shape,o=a[a.length-1],[l,u,c,h]=Am(r,i);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const d=wh([u,c],r.dtype),p=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values;for(let e=0;e<u;e++){const t=[];let n=0;for(let r=0;r<o;r++){const i=p[e*o+r];n+=i*h[r],t.push(i)}if(n<0||n>=s/c)throw new Error(`Invalid indices: ${t} does not index into ${r.shape}`);for(let t=0;t<c;t++)d.values[e*c+t]=f[n*c+t]}return n.makeTensorInfo(l,d.dtype,d.values)}};function ZT(e,t,n){const r=wh(n,e.dtype);for(let n=0;n<r.size;++n){const i=r.indexToLoc(n).slice(),s=i[0],a=i[2],o=t.locToIndex([s,a]);i[2]=t.values[o];const l=e.locToIndex(i);r.values[n]=e.values[l]}return r}const JT={kernelName:ol,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,indices:s}=t,{axis:a,batchDims:o}=r;Qk([i,s],"gatherV2");let l=o;null==o&&(l=0);const u=va(s.shape),c=tg(i,s,Ea(a,i.shape)[0],l),h=RI({inputs:{x:i},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),d=RI({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}}),p=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize],f=n.bufferSync(d),m=ZT(n.bufferSync(h),f,p);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.makeTensorInfo(c.outputShape,m.dtype,m.values)}},QT=cI(((e,t)=>e>t?1:0)),eC=EI(ul,QT,null,"bool"),tC={kernelName:ul,backendName:"cpu",kernelFunc:eC},nC=cI(((e,t)=>e>=t?1:0)),rC=EI(cl,nC,null,"bool"),iC={kernelName:cl,backendName:"cpu",kernelFunc:rC},sC={kernelName:dl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,i=va(r.shape),s=r.shape[r.shape.length-1],a=RI({inputs:{x:r},backend:n,attrs:{shape:[i/s,s]}}),o=FT(a,!0,n),l=RI({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}},aC=nI(fl,(e=>Number.isFinite(e)?1:0),"bool"),oC={kernelName:fl,backendName:"cpu",kernelFunc:aC},lC=nI(ml,(e=>Math.abs(e)===1/0?1:0),"bool"),uC={kernelName:ml,backendName:"cpu",kernelFunc:lC},cC=nI(gl,(e=>Number.isNaN(e)?1:0),"bool"),hC={kernelName:gl,backendName:"cpu",kernelFunc:cC},dC=cI(((e,t)=>e<t?1:0)),pC=EI(bl,dC,null,"bool"),fC={kernelName:bl,backendName:"cpu",kernelFunc:pC},mC=cI(((e,t)=>e<=t?1:0)),gC=EI(vl,mC,null,"bool"),xC={kernelName:vl,backendName:"cpu",kernelFunc:gC};function bC(e,t,n){const r=(t-e)/(n-1),i=Wa(n,"float32");i[0]=e;for(let e=1;e<i.length;e++)i[e]=i[e-1]+r;return i}const vC={kernelName:yl,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:i,num:s}=n,a=bC(r,i,s);return t.makeTensorInfo([a.length],"float32",a)}},yC=SE((e=>Math.log(e))),wC=rI(wl,yC),_C={kernelName:wl,backendName:"cpu",kernelFunc:wC},SC=nI(_l,(e=>Math.log1p(e))),kC={kernelName:_l,backendName:"cpu",kernelFunc:SC},IC=cI(((e,t)=>e&&t)),EC=EI(Sl,IC,null,"bool"),TC={kernelName:Sl,backendName:"cpu",kernelFunc:EC},CC=nI(kl,(e=>e?0:1),"bool"),MC={kernelName:kl,backendName:"cpu",kernelFunc:CC},AC=cI(((e,t)=>e||t)),NC=EI(Il,AC,null,"bool"),RC={kernelName:Il,backendName:"cpu",kernelFunc:NC},DC={kernelName:El,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{depthRadius:s,bias:a,alpha:o,beta:l}=r;Qk(i,"LRN");const u=i.shape[3],c=u-1,h=n.data.get(i.dataId).values,d=va(i.shape),p=new Float32Array(d);function f(e){const t=e%u;let n=e-t+Math.max(0,t-s);const r=e-t+Math.min(t+s,c);let i=0;for(;n<=r;n++){const e=h[n];i+=e*e}return i}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(a+o*t,-l);p[e]=n}return n.makeTensorInfo(i.shape,i.dtype,p)}},LC={kernelName:Tl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,y:s,dy:a}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r;Qk(a,"LRNGrad");const h=va(a.shape),d=a.shape[3],p=n.data.get(a.dataId).values,f=n.data.get(i.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),x=h;for(let e=0;e<x;e++){const t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1);let i=0;for(let e=n;e<r;e++)i+=Math.pow(f[e],2);i=u*i+l;for(let t=n;t<r;t++){let n=-2*u*c*f[t]*m[e]/i;e===t&&(n+=Math.pow(i,-c)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(a.shape,i.dtype,g)}};function FC(e,t,n,r){const i=Ca(r,va(n));for(let n=0;n<i.length;++n){const r=n*t;let s=e[r];for(let n=0;n<t;++n){const t=e[r+n];t>s&&(s=t)}i[n]=s}return i}function $C(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{reductionIndices:s,keepDims:a}=r,o=n;let l=i.shape;const u=l.length,c=Ea(s,l);let h=c;const d=kp(h,u);let p=o.data.get(i.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=GI(p,l,i.dtype,d,e),h=Ep(h.length,u),l=e}Qk(i,"max"),Sp("max",h,u);const[f,m]=wp(l,h),g=FC(p,va(m),f,i.dtype),x=o.write(g,f,i.dtype);let b=f;return a&&(b=_p(f,c)),{dataId:x,shape:b,dtype:i.dtype}}const OC={kernelName:Cl,backendName:"cpu",kernelFunc:$C},PC=cI(((e,t)=>Math.max(e,t))),zC=EI(Ml,PC),BC={kernelName:Ml,backendName:"cpu",kernelFunc:zC},UC={kernelName:Al,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t;Qk(i,"maxPool");const{filterSize:s,strides:a,pad:o,dimRoundingMode:l}=r;ma(_d(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=dd(i.shape,s,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&ya(u.inShape,u.outShape))c=aI({inputs:{x:i},backend:n});else{const e=n.data.get(i.dataId).values,t=Pa(i.shape),r=lE(e,i.shape,i.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,i.dtype,r.values)}return c}},WC={kernelName:Rl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{filterSize:s,strides:a,pad:o,dimRoundingMode:l,dataFormat:u,dilations:c}=r;Qk(i,"maxPool3d");let h=c;null==h&&(h=[1,1,1]);const d=pd(i.shape,s,a,h,o,l,u),p=cE(n.data.get(i.dataId).values,i.shape,i.dtype,Pa(i.shape),d,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}},VC={kernelName:Dl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:i,input:s}=t,{filterSize:a,strides:o,pad:l,dilations:u,dimRoundingMode:c}=r;Qk([i,s],"maxPool3DGrad");const h=pd(s.shape,a,o,u,l,c),d=function(e,t){const n=wh(t.outShape,"int32"),r=t.strideDepth,i=t.strideHeight,s=t.strideWidth,a=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let x=0;x<t.outDepth;++x){const b=x*r-d;let v=b;for(;v<0;)v+=a;const y=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){const u=r*i-p;let d=u;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+u);for(let i=0;i<t.outWidth;++i){const p=i*s-f;let _=p;for(;_<0;)_+=l;const S=Math.min(t.inWidth,h+p);let k=Number.NEGATIVE_INFINITY,I=-1;for(let t=v;t<y;t+=a){const n=t-b;for(let r=d;r<w;r+=o){const i=r-u;for(let s=_;s<S;s+=l){const a=s-p,o=e.get(m,t,r,s,g);o>=k&&(k=o,I=n*c*h+i*c+a)}}}n.set(I,m,x,r,i,g)}}}return n}(n.bufferSync(s),h),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,g=h.dilationDepth,x=h.dilationHeight,b=h.dilationWidth,v=h.effectiveFilterDepth,y=h.effectiveFilterHeight,w=h.effectiveFilterWidth,_=v-1-h.padInfo.front,S=w-1-h.padInfo.left,k=y-1-h.padInfo.top,I=wh(s.shape,"float32"),E=n.bufferSync(i);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let i=0;i<h.inWidth;++i){const s=n-_,a=r-k,o=i-S;let l=0;for(let n=0;n<v;n+=g){const r=(s+n)/p;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let i=0;i<y;i+=x){const s=(a+i)/f;if(!(s<0||s>=h.outHeight||Math.floor(s)!==s))for(let a=0;a<w;a+=b){const u=(o+a)/m;if(u<0||u>=h.outWidth||Math.floor(u)!==u)continue;const c=v*y*w-1-d.get(e,r,s,u,t)===n*y*w+i*w+a?1:0;0!==c&&(l+=E.get(e,r,s,u,t)*c)}}}I.set(l,e,n,r,i,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},GC={kernelName:Nl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:i,input:s,output:a}=t,o=s;Qk([s,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=dd(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=wh(d.outShape,o.dtype,uE(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,x=d.dilationHeight,b=d.dilationWidth,v=d.effectiveFilterHeight,y=d.effectiveFilterWidth,w=y-1-d.padInfo.left,_=v-1-d.padInfo.top,S=wh(o.shape,"float32"),k=n.data.get(i.dataId).values,I=wh(i.shape,"float32",k);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const i=n-_,s=r-w;let a=0;for(let n=0;n<v;n+=x){const r=(i+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let i=0;i<y;i+=b){const o=(s+i)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=v*y-1-f.get(e,r,o,t)===n*y+i?1:0;0!==l&&(a+=I.get(e,r,o,t)*l)}}S.set(a,e,n,r,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},HC={kernelName:Ll,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:i,strides:s,pad:a,includeBatchInIndex:o}=t,l=n;Qk(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=dd(r.shape,i,s,[1,1],a),[h,d]=function(e,t,n,r,i){const s=lE(e,0,n,Pa(t),i,"max"),a=uE(e,t,n,i,!0,r);return[s.values,a.values]}(u,r.shape,r.dtype,o,c),p=l.write(h,c.outShape,r.dtype),f=l.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};function jC(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:s,keepDims:a}=r;let o;Qk(i,"sum"),o="bool"===i.dtype?kI({inputs:{x:i},backend:n,attrs:{dtype:"int32"}}):aI({inputs:{x:i},backend:n});const l=o.shape.length,u=Ea(s,o.shape),c=kp(u,l);let h=u,d=o;null!=c&&(d=HI({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Ep(h.length,l)),Sp("sum",h,d.shape.length);const[p,f]=wp(d.shape,h);let m=wI(n,p,kc(d.dtype,"int32"));const g=va(f),x=n.data.get(m.dataId).values,b=n.data.get(d.dataId).values;for(let e=0;e<x.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];x[e]=n}if(a){const e=m;m=RI({inputs:{x:m},backend:n,attrs:{shape:_p(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const qC={kernelName:Su,backendName:"cpu",kernelFunc:jC},XC={kernelName:Fl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:s,keepDims:a}=r,o=Ea(s,i.shape),l=va(wp(i.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=kI({inputs:{x:i},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=MT({inputs:{a:h,b:c},backend:n});u.push(d);const p=jC({inputs:{x:d},backend:n,attrs:{axis:s,keepDims:a}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},KC={kernelName:$l,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:s,keepDims:a}=r;Qk(i,"min");const o=Ea(s,i.shape);let l=o;const u=kp(l,i.shape.length);let c=i;null!=u&&(c=HI({inputs:{x:i},backend:n,attrs:{perm:u}}),l=Ep(l.length,i.shape.length)),Sp("min",l,c.shape.length);const[h,d]=wp(c.shape,l),p=va(d),f=Wa(va(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];r<n&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const e=RI({inputs:{x:g},backend:n,attrs:{shape:_p(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},YC=cI(((e,t)=>Math.min(e,t))),ZC=EI(Ol,YC),JC={kernelName:Ol,backendName:"cpu",kernelFunc:ZC},QC={kernelName:Pl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{paddings:s,mode:a}=r;Qk(i,"mirrorPad");const o=s.map(((e,t)=>e[0]+i.shape[t]+e[1])),l=s.map((e=>e[0])),u=s.map(((e,t)=>e[0]+i.shape[t])),c="reflect"===a?0:1,h=n.data.get(i.dataId).values,d=i.shape.length,p=Pa(i.shape),f=va(o),m=o.length,g=Pa(o),x=Ca(i.dtype,f);for(let e=0;e<f;e++){let t=ja(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=Ha(t,d,p);x[e]=h[n]}return{dataId:n.write(x,o,i.dtype),shape:o,dtype:i.dtype}}},eM=cI(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),tM=EI(zl,eM),nM={kernelName:zl,backendName:"cpu",kernelFunc:tM};var rM=n(5202);function iM(e){const{inputs:t,backend:n,attrs:r}=e,{logits:i}=t,{dim:s}=r,a=i.shape.length;let o=s;if(-1===o&&(o=a-1),o!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${o}`);const l=Ea([o],i.shape),u=$C({inputs:{x:i},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=_p(u.shape,l),h=RI({inputs:{x:u},backend:n,attrs:{shape:c}}),d=DT({inputs:{a:i,b:h},backend:n}),p=xT({inputs:{x:d},backend:n}),f=jC({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=RI({inputs:{x:f},backend:n,attrs:{shape:c}}),g=MT({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const sM={kernelName:Eu,backendName:"cpu",kernelFunc:iM},aM={kernelName:Bl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:i}=t,{numSamples:s,seed:a,normalized:o}=r;Qk(i,"multinomial");const l=o?i:iM({inputs:{logits:i},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,s],p=Wa(va(d),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=rM.alea(a.toString()),i=e*s;for(let e=0;e<s;++e){const t=r();p[i+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[i+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function oM(e,t,n){const r=oc(-1,n);return kT([],t,r,e,n)}const lM={kernelName:Wl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;Qk(r,"neg");const i=n.data.get(r.dataId).values,[s,a]=oM(i,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,s)}},uM=zf,cM={kernelName:Gl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:i,scores:s}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r;Qk(i,"NonMaxSuppression");const u=n.data.get(i.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:h}=uM(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},hM=Bf,dM={kernelName:Hl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:i,scores:s}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;Qk(i,"NonMaxSuppressionPadded");const c=n.data.get(i.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:p}=hM(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},pM=Uf,fM={kernelName:jl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:i,scores:s}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;Qk(i,"NonMaxSuppressionWithScore");const c=n.data.get(i.dataId).values,h=n.data.get(s.dataId).values,d=a,p=o,f=l,m=u,{selectedIndices:g,selectedScores:x}=pM(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}},mM=cI(((e,t)=>e!==t?1:0)),gM=EI(Vl,mM,null,"bool"),xM={kernelName:Vl,backendName:"cpu",kernelFunc:gM},bM={kernelName:Xl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:i}=t,{depth:s,onValue:a,offValue:o}=r;Qk(i,"oneHot");const l=va(i.shape),u=new Float32Array(l*s);u.fill(o);const c=n.data.get(i.dataId).values;for(let e=0;e<l;++e)c[e]>=0&&c[e]<s&&(u[e*s+c[e]]=a);return n.makeTensorInfo([...i.shape,s],"int32",u)}};function vM(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=_I({inputs:{input:r},backend:n}),t=vM({inputs:{x:e},backend:n}),i=NE({inputs:{input:r},backend:n}),s=vM({inputs:{x:i},backend:n}),a=vI({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),a}return zT({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const yM={kernelName:Bu,backendName:"cpu",kernelFunc:vM},wM={kernelName:ql,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:i}=n;if("string"===i.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===i.dtype){const t=_I({inputs:{input:i},backend:r}),n=e({inputs:{x:t},backend:r}),s=NE({inputs:{input:i},backend:r}),a=vM({inputs:{x:s},backend:r}),o=vI({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(a),o}return zT({backend:r,attrs:{shape:i.shape,value:1,dtype:i.dtype}})}};function _M(e){const{inputs:t,backend:n,attrs:r}=e,{axis:i}=r;if(1===t.length)return vT({inputs:{input:t[0]},backend:n,attrs:{dim:i}});const s=t[0].shape,a=t[0].dtype;t.forEach((e=>{ga(s,e.shape,"All tensors passed to stack must have matching shapes"),ma(a===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=DE({inputs:t.map((e=>{const t=vT({inputs:{input:e},backend:n,attrs:{dim:i}});return o.push(t),t})),backend:n,attrs:{axis:i}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const SM={kernelName:Kl,backendName:"cpu",kernelFunc:_M},kM={kernelName:Yl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{paddings:s,constantValue:a}=r;Qk(i,"pad");const o=s.map(((e,t)=>e[0]+i.shape[t]+e[1])),l=s.map((e=>e[0])),u=n.data.get(i.dataId).values,c=va(i.shape),h=i.shape.length,d=Pa(i.shape),p=va(o),f=o.length,m=Pa(o),g=Ca(i.dtype,p);0!==a&&g.fill(a);for(let e=0;e<c;e++)g[Ha(ja(e,h,d).map(((e,t)=>e+l[t])),f,m)]=u[e];return{dataId:n.write(g,o,i.dtype),shape:o,dtype:i.dtype}}},IM=cI(((e,t)=>Math.pow(e,t))),EM=EI(Zl,IM),TM={kernelName:Zl,backendName:"cpu",kernelFunc:EM};function CM(e,t,n,r){const[i,s]=wp(e,r),a=kc(t,"int32"),o=Wa(va(i),a),l=va(s);for(let e=0;e<o.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:i,outDtype:a}}const MM={kernelName:Ql,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:s,keepDims:a}=r;Qk(i,"prod");const o=i.shape.length,l=Ea(s,i.shape),u=kp(l,o);let c=l,h=i;const d=[];null!=u&&(h=HI({inputs:{x:i},backend:n,attrs:{perm:u}}),d.push(h),c=Ep(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=CM(h.shape,h.dtype,p,c);let x=m;return a&&(x=_p(m,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(x,g,f)}};function AM(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return Wa(0,r);const i=Wa(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),i[0]=e;for(let e=1;e<i.length;e++)i[e]=i[e-1]+n;return i}const NM={kernelName:eu,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:i,dtype:s,step:a}=n,o=AM(r,i,a,s);return t.makeTensorInfo([o.length],s,o)}},RM=nI(nu,(e=>1/e)),DM={kernelName:nu,backendName:"cpu",kernelFunc:RM},LM={kernelName:ou,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:i}=t,{alignCorners:s,halfPixelCenters:a,size:o}=r;Qk(i,"resizeBilinear");const l=Pa(i.shape),[u,c]=o,[h,d,p,f]=i.shape,m=n.data.get(i.dataId).values,g=new Float32Array(va([h,u,c,f])),x=[s&&u>1?d-1:d,s&&c>1?p-1:p],b=[s&&u>1?u-1:u,s&&c>1?c-1:c];let v=0;const y=x[0]/b[0],w=x[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=a?y*(t+.5)-.5:y*t;const r=Math.max(0,Math.floor(n)),i=n-r,s=Math.min(d-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+s*l[1];for(let e=0;e<c;e++){let t;t=a?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(p-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],d=o+s*l[2],x=u+s*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],s=t+(m[d+e]-t)*r,a=s+(n+(m[x+e]-n)*r-s)*i;g[v++]=a}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}},FM={kernelName:lu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:i,dy:s}=t,{alignCorners:a}=r;Qk([s,i],"resizeBilinearGrad");const o=Pa(i.shape),[l,u,c,h]=i.shape,[,d,p]=s.shape,f=new Float32Array(l*u*c*h),m=[a&&d>1?u-1:u,a&&p>1?c-1:c],g=[a&&d>1?d-1:d,a&&p>1?p-1:p],x=m[0]/g[0],b=m[1]/g[1],v=n.data.get(s.dataId).values;let y=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*x,r=Math.floor(n),i=Math.min(Math.ceil(n),u-1),s=t+r*o[1],a=t+i*o[1],l=n-r,d=1-l;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),i=t-n,u=1-i,p=s+n*o[2],m=s+r*o[2],g=a+n*o[2],x=a+r*o[2],w=d*u,_=d*i,S=l*u,k=l*i;for(let e=0;e<h;e++){const t=v[y++];f[p+e]+=t*w,f[m+e]+=t*_,f[g+e]+=t*S,f[x+e]+=t*k}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},$M={kernelName:su,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:i}=t,{alignCorners:s,halfPixelCenters:a,size:o}=r;Qk(i,"resizeNearestNeighbor");const l=Pa(i.shape),[u,c]=o,[h,d,p,f]=i.shape,m=n.data.get(i.dataId).values,g=new Float32Array(h*u*c*f),x=[s&&u>1?d-1:d,s&&c>1?p-1:p],b=[s&&u>1?u-1:u,s&&c>1?c-1:c],v=x[0]/b[0],y=x[1]/b[1];let w=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=a?v*(e+.5):v*e;let r=Math.min(d-1,s?Math.round(n):Math.floor(n));a&&(r=Math.max(0,r));const i=t+r*l[1];for(let e=0;e<c;e++){const t=a?y*(e+.5):y*e;let n=Math.min(p-1,s?Math.round(t):Math.floor(t));a&&(n=Math.max(0,n));const r=i+n*l[2];for(let e=0;e<f;e++){const t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([h,u,c,f],i.dtype,g)}},OM={kernelName:au,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:i,dy:s}=t,{alignCorners:a}=r;Qk([s,i],"resizeNearestNeighborGrad");const o=Pa(i.shape),l=Pa(s.shape),[u,c,h,d]=i.shape,[,p,f]=s.shape,m=new Float32Array(u*c*h*d),g=n.data.get(s.dataId).values,x=[a&&p>1?c-1:c,a&&f>1?h-1:h],b=[a&&p>1?p-1:p,a&&f>1?f-1:f],v=x[0]/b[0],y=x[1]/b[1],w=1/v,_=1/y,S=2*Math.ceil(w)+2,k=2*Math.ceil(_)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),i=Math.floor(r-S/2);for(let r=0;r<h;r++){const s=n+r*o[2],u=Math.floor(r*_),x=Math.floor(u-k/2);for(let n=0;n<d;n++){let o=0;for(let s=0;s<S;s++){const u=s+i;if(u<0||u>=p)continue;const d=t+u*l[1],m=u*v;if(e===Math.min(c-1,a?Math.round(m):Math.floor(m)))for(let e=0;e<k;e++){const t=e+x;if(t<0||t>=f)continue;const i=d+t*l[2],s=t*y;r===Math.min(h-1,a?Math.round(s):Math.floor(s))&&(o+=g[i+n])}}m[s+n]=o}}}}return n.makeTensorInfo(i.shape,i.dtype,m)}},PM={kernelName:cu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{dims:s}=r;Qk(i,"reverse");const a=i.shape.length,o=Ea(s,i.shape);if(0===a)return aI({inputs:{x:i},backend:n});const l=new dc(i.shape,i.dtype),u=n.bufferSync(i);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=i.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},zM={kernelName:Wu,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:i,fillValue:s,center:a}=t,o=n,l=Ca(r.dtype,va(r.shape)),[u,c,h,d]=r.shape,[p,f]=km(a,c,h),m=Math.sin(i),g=Math.cos(i),x=o.data.get(r.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let r=0;r<h;r++){const i=r*d;for(let a=0;a<d;a++){const o=[u,e,r,a],b=o[2],v=o[1];let y=(b-p)*g-(v-f)*m,w=(b-p)*m+(v-f)*g;y=Math.round(y+p),w=Math.round(w+f);let _=s;"number"!=typeof s&&(_=3===a?255:s[a]),y>=0&&y<h&&w>=0&&w<c&&(_=x[t+w*(h*d)+y*d+a]),l[t+n+i+a]=_}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},BM=nI(hu,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),UM={kernelName:hu,backendName:"cpu",kernelFunc:BM},WM=SE((e=>1/Math.sqrt(e))),VM=rI(du,WM),GM={kernelName:du,backendName:"cpu",kernelFunc:VM};function HM(e,t,n,r,i,s,a,o,l,u){const c=[r/i,i],h=e.values,d=t.values;if(0===r)return wh(n,t.dtype);const p=wh(c,t.dtype);p.values.fill(l);for(let e=0;e<s;e++){const s=[];let l=0;for(let t=0;t<a;t++){const n=h[e*a+t];s.push(n),l+=n*o[t]}if(l<0||l>=r/i)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<i;n++)u?p.values[l*i+n]+=d[e*i+n]:p.values[l*i+n]=0===t.rank?d[0]:d[e*i+n]}return p}const jM={kernelName:pu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:i,updates:s}=t,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Dm(0,i,a),d=HM(n.bufferSync(i),n.bufferSync(s),a,h,u,l,o,c,0,!0);return n.makeTensorInfo(a,d.dtype,d.values)}},qM={kernelName:fu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:i,e:s}=t;Qk([r,i,s],"select");const a=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,u=n.data.get(s.dataId).values,c=kc(i.dtype,s.dtype),h=Wa(va(i.shape),c);let d=0;const p=0===a||a>1||1===i.shape.length?1:va(i.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=l[e]:h[d++]=u[e];return n.makeTensorInfo(i.shape,c,h)}},XM=Lm,KM=Fm,YM=nI(mu,(e=>e>=0?KM*e:XM*(Math.exp(e)-1))),ZM={kernelName:mu,backendName:"cpu",kernelFunc:YM},JM=nI(yu,(e=>1/(1+Math.exp(-e)))),QM={kernelName:yu,backendName:"cpu",kernelFunc:JM},eA=nI(vu,(e=>e<0?-1:e>0?1:0)),tA={kernelName:vu,backendName:"cpu",kernelFunc:eA},nA=nI(xu,(e=>Math.sin(e))),rA={kernelName:xu,backendName:"cpu",kernelFunc:nA},iA=nI(bu,(e=>Math.sinh(e))),sA={kernelName:bu,backendName:"cpu",kernelFunc:iA},aA=Math.log(1.1920928955078125e-7)+2,oA=nI(wu,(e=>{const t=e>-aA,n=e<aA,r=Math.exp(e);let i;return i=n?r:t?e:Math.log(1+r),i})),lA={kernelName:wu,backendName:"cpu",kernelFunc:oA},uA={kernelName:ku,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{blockShape:s,paddings:a}=r;Qk([i],"spaceToBatchND");const o=va(s),l=[[0,0]];l.push(...a);for(let e=1+s.length;e<i.shape.length;++e)l.push([0,0]);const u=kM.kernelFunc({inputs:{x:i},backend:n,attrs:{paddings:l,constantValue:0}}),c=Im(u.shape,s,o,!1),h=Em(c.length,s.length,!1),d=Tm(u.shape,s,o,!1),p=RI({inputs:{x:u},backend:n,attrs:{shape:c}}),f=HI({inputs:{x:p},backend:n,attrs:{perm:h}}),m=RI({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}},cA={kernelName:Au,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:i,sparseValues:s,defaultValue:a}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Dm(0,i,o),p=HM(n.bufferSync(i),n.bufferSync(s),o,d,c,u,l,h,n.data.get(a.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}},hA={kernelName:Iu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{numOrSizeSplits:s,axis:a}=r,o=Ea(a,i.shape)[0],l=Jm(i,s,o),u=new Array(i.shape.length).fill(0),c=i.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const r=xE({inputs:{x:i},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},dA=nI(_u,(e=>Math.sqrt(e))),pA={kernelName:_u,backendName:"cpu",kernelFunc:dA},fA={kernelName:Cu,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;Qk(n,"square");const i=r.data.get(n.dataId).values,s=new Float32Array(i.length);for(let e=0;e<i.length;++e){const t=i[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},mA=cI(((e,t)=>{const n=e-t;return n*n})),gA=EI(Tu,mA),xA={kernelName:Tu,backendName:"cpu",kernelFunc:gA},bA=nI(Uu,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),vA={kernelName:Uu,backendName:"cpu",kernelFunc:bA};function yA(e,t,n,r){const i=wh(e,t.dtype);for(let e=0;e<i.size;e++){const s=i.indexToLoc(e),a=new Array(s.length);for(let e=0;e<a.length;e++)a[e]=s[e]*n[e]+r[e];i.set(t.get(...a),...s)}return i}const wA={kernelName:Nu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{begin:s,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;Qk(i,"stridedSlice");const{nonStrided:p,$begin:f,$strides:m,size:g,newShape:x,outShape:b}=jh(i.shape,s,a,o,l,u,c,h,d),v=RI({inputs:{x:i},backend:n,attrs:{shape:x}});let y;if(p){const e=xE({inputs:{x:v},backend:n,attrs:{begin:f,size:g}});y=RI({inputs:{x:e},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(e)}else if(b.some((e=>0===e)))y=n.makeTensorInfo(b,i.dtype,[]);else{const e=yA(b,n.bufferSync(v),m,f);y=n.makeTensorInfo(e.shape,e.dtype,e.values)}const w=RI({inputs:{x:y},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(y),w}},_A=nI(Ru,(e=>Math.tan(e))),SA={kernelName:Ru,backendName:"cpu",kernelFunc:_A},kA=nI(Du,(e=>Math.tanh(e)));function IA(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=wh(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),i=new Array(e.rank);for(let t=0;t<i.length;t++)i[t]=n[t]%e.shape[t];const s=e.locToIndex(i);r.values[t]=e.values[s]}return r}function EA(e,t,n,r,i){const s=t[t.length-1],[a,o]=[e.length/s,s],l=Ca(n,a*r),u=Ca("int32",a*r);for(let t=0;t<a;t++){const n=t*o,i=e.subarray(n,n+o),s=[];for(let e=0;e<i.length;e++)s.push({value:i[e],index:e});s.sort(((e,t)=>t.value-e.value));const a=t*r,c=l.subarray(a,a+r),h=u.subarray(a,a+r);for(let e=0;e<r;e++)c[e]=s[e].value,h[e]=s[e].index}const c=t.slice();return c[c.length-1]=r,[wh(c,n,l),wh(c,"int32",u)]}function TA(e,t,n,r){const i=Ea(t,n)[0],s=[1,n[0],1];for(let e=0;e<i;e++)s[0]*=n[e];s[1]=n[i];for(let e=i+1;e<n.length;e++)s[2]*=n[e];const a={},o=new Int32Array(n[i]),l=new dc(s,r,e),u=[],c=1===s[0]&&1===s[2];for(let t=0;t<n[i];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==a[n])o[t]=a[n];else{const e=Object.keys(a).length;a[n]=e,o[t]=e,u.push(t)}}const h=s.slice();h[1]=Object.keys(a).length;const d=new dc(h,r);u.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)d.set(l.get(n,e,r),n,t,r)}));const p=n.slice();return p[i]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const CA={kernelName:zu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,segmentIds:s}=t,{numSegments:a}=r;Qk(i,"unsortedSegmentSum");const o=[],l=[],u=i.shape.length-s.shape.length;let c=s;for(let e=0;e<u;++e){const t=vT({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<a;++e){const t=oc(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=aT({inputs:{a:r,b:c},backend:n}),a=kI({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=ET({inputs:{a,b:i},backend:n}),h=jC({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(r),l.push(s),l.push(a),l.push(u),l.push(h)}const h=_M({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},MA=[$I,PI,BI,WI,NI,VI,qI,XI,KI,YI,JI,eE,nE,sE,oE,hE,dE,pE,fE,FI,mE,vE,_E,II,EE,CE,yI,ME,LE,OE,PE,$E,BE,UE,zE,VE,HE,jE,qE,XE,KE,ZE,JE,QE,eT,tT,rT,nT,AT,sI,iT,oT,mT,bT,yT,ST,PT,BT,UT,GT,qT,XT,KT,YT,JT,tC,iC,oI,sC,RE,oC,uC,hC,uI,fC,xC,vC,_C,kC,TC,MC,RC,DC,LC,BC,UC,WC,VC,GC,HC,OC,XC,KC,JC,QC,nM,aM,TT,lM,cM,dM,fM,xM,bM,wM,SM,kM,TM,pI,MM,NM,SI,DM,mI,xI,DI,LM,FM,$M,OM,PM,zM,UM,GM,jM,qM,ZM,QM,tA,rA,sA,bE,sM,lA,uA,cA,hA,pA,fA,xA,vA,wA,LT,qC,SA,{kernelName:Du,backendName:"cpu",kernelFunc:kA},{kernelName:Lu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{reps:s}=r;Qk(i,"tile");const a=IA(n.bufferSync(i),s);return n.makeTensorInfo(a.shape,a.dtype,a.values)}},{kernelName:Fu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{k:s,sorted:a}=r;Qk(i,"topk");const o=n.data.get(i.dataId).values,[l,u]=EA(o,i.shape,i.dtype,s);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},jI,{kernelName:Ou,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:i}=n,{x:s}=t;Qk(s,"unique");const a=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=TA(a,i,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},{kernelName:Pu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:i}=t;let{axis:s}=r;s<0&&(s+=i.shape.length);const a=i.shape.length,o=i.shape[s],l=new Array(a-1);let u=0;for(let e=0;e<a;e++)e!==s&&(l[u++]=i.shape[e]);const c=new Array(a).fill(0),h=i.shape.slice();h[s]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[s]=e;const t=xE({inputs:{x:i},backend:n,attrs:{begin:c,size:h}});d[e]=RI({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}},CA,yM];for(const e of MA)Yu(e);const AA={},NA={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function RA(e){if(!(e in AA)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete AA[e]}),!1),1===e?t.getContext("webgl",NA)||t.getContext("experimental-webgl",NA):t.getContext("webgl2",NA)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;AA[e]=t}const t=AA[e];return t.isContextLost()?(delete AA[e],RA(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),AA[e])}var DA,LA,FA;function $A(e,t){return[t,e]}function OA(e){const t=va(e);return _a(Math.ceil(t/4))}function PA(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function zA(e,t){const n=e;let r,i,s,a,o,l,u,c,h,d;return 2===Ka().getNumber("WEBGL_VERSION")?(r=n.R32F,i=n.R16F,s=n.RGBA16F,a=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT):(r=e.RGBA,i=e.RGBA,s=e.RGBA,a=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT),l=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:i,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function BA(e,t){const n=t();return Ka().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function UA(e){return!!(Ka().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function WA(e,t){return YA(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(DA||(DA={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(LA||(LA={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(FA||(FA={}));const VA=/ERROR: [0-9]+:([0-9]+):/g;function GA(e,t){if(BA(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function HA(e,t,n,r,i,s,a){const o=e.getAttribLocation(t,n);return-1!==o&&(BA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),BA(e,(()=>e.vertexAttribPointer(o,i,e.FLOAT,!1,s,a))),BA(e,(()=>e.enableVertexAttribArray(o))),!0)}function jA(e,t,n,r){BA(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),BA(e,(()=>e.activeTexture(e.TEXTURE0+n))),BA(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),BA(e,(()=>e.uniform1i(n,r)))}function qA(e,t,n){BA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),BA(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function XA(e,t){BA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),BA(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function KA(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function YA(e,t,n){const r=BA(e,(()=>t()));if(null==r)throw new Error(n);return r}function ZA(e,t=2){return va(e.slice(0,e.length-t))}function JA(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function QA(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[ZA(e),...JA(e)]),t}function eN(e){return e%2==0}function tN(e,t){if(ya(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(eN(n)&&eN(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&eN(e[0])&&eN(t[0])}let nN,rN;function iN(e,t){return null!=e.getExtension(t)}function sN(e){try{if(null!=RA(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function aN(e){const t=zA(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),i}function oN(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ma("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const lN=Ka();function uN(){let e,t,n,r,i,s,a,o,l,u;return 2===Ka().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",i="texture",s="outputColor",a="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",i="texture2D",s="gl_FragColor",a="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:i,output:s,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function cN(e,t,n="index"){const r=Pa(t);return r.map(((t,i)=>`int ${e[i]} = ${n} / ${t}; ${i===r.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * ${t}`:`index -= ${e[i]} * ${t}`};`)).join("")}function hN(e){const t=Pa(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}lN.registerFlag("HAS_WEBGL",(()=>lN.getNumber("WEBGL_VERSION")>0)),lN.registerFlag("WEBGL_VERSION",(()=>sN(2)?2:sN(1)?1:0)),lN.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),lN.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===lN.get("WEBGL_VERSION"))),lN.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),lN.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),lN.registerFlag("WEBGL_PACK",(()=>lN.getBool("HAS_WEBGL"))),lN.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>lN.getBool("WEBGL_PACK"))),lN.registerFlag("WEBGL_PACK_CLIP",(()=>lN.getBool("WEBGL_PACK"))),lN.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),lN.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>lN.getBool("WEBGL_PACK"))),lN.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>lN.getBool("WEBGL_PACK"))),lN.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>lN.getBool("WEBGL_PACK"))),lN.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>lN.getBool("WEBGL_PACK"))),lN.registerFlag("WEBGL_PACK_REDUCE",(()=>lN.getBool("WEBGL_PACK"))),lN.registerFlag("WEBGL_LAZILY_UNPACK",(()=>lN.getBool("WEBGL_PACK"))),lN.registerFlag("WEBGL_CONV_IM2COL",(()=>lN.getBool("WEBGL_PACK"))),lN.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==nN){const t=RA(e);nN=t.getParameter(t.MAX_TEXTURE_SIZE)}return nN}(lN.getNumber("WEBGL_VERSION")))),lN.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==rN){const t=RA(e);rN=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,rN)}(lN.getNumber("WEBGL_VERSION")))),lN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=lN.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=RA(e);return t=iN(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:iN(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),lN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>lN.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!function(){if("undefined"!=typeof navigator&&null!=navigator){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}())),lN.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=RA(e);if(1===e){if(!iN(t,"OES_texture_float"))return!1}else if(!iN(t,"EXT_color_buffer_float"))return!1;return aN(t)}(lN.getNumber("WEBGL_VERSION")))),lN.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!lN.getBool("WEBGL_FORCE_F16_TEXTURES")&&lN.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),lN.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=RA(e);if(1!==e){if(iN(t,"EXT_color_buffer_float"))return aN(t);const e="EXT_color_buffer_half_float";if(iN(t,e)){const n=t.getExtension(e);return function(e,t){const n=zA(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),s}(t,n)}return!1}return!!iN(t,"OES_texture_float")&&!!iN(t,"WEBGL_color_buffer_float")&&aN(t)}(lN.getNumber("WEBGL_VERSION")))),lN.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=lN.getNumber("WEBGL_VERSION"))&&null!=RA(e).fenceSync;var e})),lN.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>lN.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),lN.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}));const dN="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class pN{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=DA.DENSE;const t=OA(e),n=uN();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${cN(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class fN{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=DA.DENSE;const t=OA(e),n=uN();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${cN(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class mN{constructor(e){this.variableNames=["A"],this.outTexUsage=LA.DOWNLOAD;const t=uN();this.outputShape=e,this.userCode=`\n      ${dN}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class gN{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=LA.DOWNLOAD;const t=uN();this.outputShape=e,this.userCode=`\n      ${dN}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class xN{constructor(e,t,n=!1){this.variableNames=["A"];const r=uN(),[i,s]=t;this.outputShape=e;let a="result";n&&(a="floor(result * 255. + 0.5)"),this.userCode=`\n      ${hN(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${s};\n        int c = imod(flatIndex, ${s});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${i}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}class bN{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=uN(),[i,s]=t;this.outputShape=e;let a="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const o=2*t+n;a+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${s};\n              c = imod(flatIndex, ${s});\n              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${i}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${hN(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${a}\n\n        ${r.output} = ${o};\n      }\n    `}}function vN(e,t,n,r,i,s){!function(e,t){const n=Ka().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const a=function(e){return YA(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return BA(e,(()=>e.bindTexture(o,a))),BA(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),BA(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),BA(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),BA(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),BA(e,(()=>e.texImage2D(o,0,r,t,n,0,i,s,null))),BA(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),a}function yN(e){return e.internalFormatFloat}function wN(e){return e.internalFormatHalfFloat}function _N(e){return e.downloadTextureFormat}function SN(e){return e.internalFormatPackedFloat}function kN(e){return e.internalFormatPackedHalfFloat}class IN{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Ka().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){AA[e]=t}(t,e)):this.gl=RA(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Ka().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=WA(this.gl,e),iN(this.gl,t))this.textureHalfFloatExtension=WA(this.gl,t);else if(Ka().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),iN(this.gl,r))this.colorBufferHalfFloatExtension=WA(this.gl,r);else if(Ka().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",iN(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!iN(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=YA(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return BA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),BA(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=YA(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return BA(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),BA(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return YA(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=zA(this.gl,this.textureHalfFloatExtension)}get debug(){return Ka().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;BA(e,(()=>e.finish())),BA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),BA(e,(()=>e.deleteFramebuffer(this.framebuffer))),BA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),BA(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),BA(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[i,s]=$A(t,n);return vN(e,i,s,yN(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[i,s]=$A(t,n);return vN(e,i,s,wN(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[i,s]=$A(t,n);return vN(e,i,s,_N(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){BA(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?BA(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):BA(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),BA(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,i,s){let a,o,l;BA(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),i instanceof Uint8Array?(a=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(a=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),a.set(i),BA(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,a))),BA(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[i,s]=PA(t,n);return vN(e,i,s,kN(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[i,s]=PA(t,n);return vN(e,i,s,SN(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(XA(this.gl,this.framebuffer),this.outputTexture=null),BA(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[i,s]=$A(t,n),a=new Uint8Array(t*n*4);return BA(e,(()=>e.readPixels(0,0,i,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,a))),new Float32Array(a.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,i,s){return function(e,t,n,r,i,s,a,o){const l=e,u=new Float32Array(function(e,t){const[n,r]=PA(e,t);return n*r*4}(s,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,i,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,i=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,i),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),i}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const i=e.createBuffer();BA(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,i)));const s=16*t*n;return BA(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),BA(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),BA(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),i}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Ka().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,i=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(i,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=i}else Ka().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Ka().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return BA(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=YA(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(BA(e,(()=>e.shaderSource(n,t))),BA(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=VA.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],i=e.split("\n"),s=i.length.toString().length+2,a=i.map(((e,t)=>Sa((t+1).toString(),s)+e));let o=0;for(let e=0;e<a.length;e++)o=Math.max(a[e].length,o);const l=a.slice(0,r-1),u=a.slice(r-1,r),c=a.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${Sa(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e),r=function(e){const t=uN();return function(e,t){const n=YA(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(BA(e,(()=>e.shaderSource(n,t))),BA(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t),i=function(e){return YA(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return BA(t,(()=>t.attachShader(i,r))),BA(t,(()=>t.attachShader(i,n))),function(e,t){if(BA(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,i),this.debug&&GA(t,i),this.vertexAttrsAreBound||(this.setProgram(i),this.vertexAttrsAreBound=function(e,t,n){return BA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),HA(e,t,"clipSpacePos",n,3,20,0)&&HA(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),i}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&BA(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&GA(this.gl,this.program),BA(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return YA(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),BA(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),jA(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,i]=PA(t,n);this.setOutputMatrixTextureDriver(e,r,i)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&GA(this.gl,this.program),KA(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),BA(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),BA(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=WA(this.gl,2===Ka().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Ka().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Ka().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await ka((()=>this.disposed||this.isQueryAvailable(e,Ka().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Ka().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||ka((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),qA(this.gl,e,this.framebuffer),this.debug&&KA(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(qA(this.gl,this.outputTexture,this.framebuffer),this.debug&&KA(this.gl)):XA(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;qA(r,e,this.framebuffer),this.debug&&KA(r),this.outputTexture=e,BA(r,(()=>r.viewport(0,0,t,n))),BA(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),BA(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:EN}=r;function TN(e,t,n,r){const i=[];e.forEach((e=>{const t=va(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?i.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(i.push(`uniform sampler2D ${e.name};`),i.push(`uniform int offset${e.name};`))}));const s=i.join("\n"),a=e.map((e=>function(e,t,n=!1){let r="";r+=n?MN(e):CN(e);const i=e.shapeInfo.logicalShape,s=t.logicalShape;return i.length<=s.length&&(r+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),i="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,a=t.logicalShape.length,o=EN(e.shapeInfo.logicalShape,t.logicalShape),l=$N(a),u=a-s;let c;const h=["x","y","z","w","u","v"];c=0===s?"":a<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let d="";d=a<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let p="return outputValue;";const f=1===va(e.shapeInfo.logicalShape),m=1===va(t.logicalShape);if(1!==s||f||m){if(f&&!m)p=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=s-2,t=s-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${i}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),i="get"+r+"AtOutCoords",s=t.texShape,a=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&ya(a,s))return`\n      float ${i}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=$N(l),c=EN(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${i}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t)),r}(e,t,r))).join("\n"),o=t.texShape,l=uN(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,h,d=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${AN}\n    ${NN}\n    ${RN}\n  `}(l);return t.isPacked?(c=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(ya(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),i=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),i=r*Math.ceil(e[e.length-2]/2);let s=i,a="",o="b, r, c";for(let t=2;t<e.length-1;t++)s*=e[e.length-t-1],a=`\n      int b${t} = index / ${s};\n      index -= b${t} * ${s};\n    `+a,o=`b${t}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${a}\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,o),h=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(l)):(c=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=t)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(e,t){return ya(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=cN(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=cN(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=cN(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=cN(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}var n}(t.logicalShape,o),h=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),r&&(d+=DN),[d,u,h,s,c,a,n].join("\n")}function CN(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,i]=e.shapeInfo.texShape;if(1===r&&1===i)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[s,a]=e.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${s}, ${a}, ${LN(t)});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${FN(e)}\n      }\n    `;const r=e.shapeInfo.texShape,i=r[0],s=r[1];if(1===s&&1===i)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const a=LN(t);return 1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${i}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===i?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${i}, ${s}, index + ${a});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=e.shapeInfo.texShape;if(null!=i&&ya(t,i)){const e=i[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:s,keptDims:a}=Ta(t),o=s;if(o.length<t.length){const t=["row","col"];return`\n      ${CN(ON(e,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${PN(t,a)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${FN(e)}\n      }\n    `;const l=i[0],u=i[1],c=LN(n);return 1===u?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=t[1]*t[2],s=t[2],{newShape:a,keptDims:o}=Ta(t),l=a;if(l.length<t.length){const t=["row","col","depth"];return`\n        ${CN(ON(e,l))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${PN(t,o)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${s}, 1)));\n        ${FN(e)}\n      }\n    `;const u=e.shapeInfo.texShape,c=u[0],h=u[1],d=e.shapeInfo.flatOffset;if(h===i&&null==d)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===s&&null==d)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${s} + depth + ${LN(n)};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=t[3],s=t[2]*i,a=t[1]*s,{newShape:o,keptDims:l}=Ta(t);if(o.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${CN(ON(e,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${PN(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${a}, ${s}, ${i}, 1)));\n        ${FN(e)}\n      }\n    `;const u=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,h=c[0],d=c[1];if(d===a&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===i&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${a} + col * ${s} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${d}, index + ${LN(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=t[4],s=t[3]*i,a=t[2]*s,o=t[1]*a,{newShape:l,keptDims:u}=Ta(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${CN(ON(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${PN(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${a}, ${s}, ${i})) +\n          depth3;\n        ${FN(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${s}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===i&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} + depth * ${s} +\n          depth2 * ${i} + depth3 + ${LN(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:i,keptDims:s}=Ta(t);if(i.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${CN(ON(e,i))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${PN(t,s)});\n      }\n    `}const a=t[5],o=t[4]*a,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${FN(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${a} + depth4 + ${LN(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function MN(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${uN().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],s=uN();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=e.shapeInfo.texShape,s=i[0],a=i[1],o=uN();if(null!=i&&ya(t,i))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${s}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(t[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=e.shapeInfo.texShape,s=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===t[0]){const n=[1,2],i=["b","row","col"];return`\n        ${MN(ON(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${PN(i,n)});\n        }\n      `}const a=s[0],o=s[1],l=Math.ceil(t[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${a}, ${o}, ${l*Math.ceil(t[1]/2)}, ${l}, b, row, col);\n      return ${uN().texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],o=a[0],l=a[1],u=Math.ceil(t[n-1]/2);let c=u*Math.ceil(t[n-2]/2),h="int b, int row, int col",d=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let e=2;e<n-1;e++)h=`int b${e}, `+h,c*=t[n-e-1],d=`b${e} * ${c} + `+d;return`\n    vec4 ${i}(${h}) {\n      int index = ${d};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${uN().texture2D}(${r}, uv);\n    }\n  `}(e)}}const AN="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",NN="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",RN="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",DN="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function LN(e){return`offset${e}`}function FN(e){const t=e.name,n=va(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function $N(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function ON(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function PN(e,t){return t.map((t=>e[t])).join(", ")}function zN(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,i=t[n],s=i.shape;if(!ya(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&i.isUniform)return;const a=e.texShape,o=i.isUniform?null:i.texData.texShape;if(!ya(a,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${o} must match`)}))}const{addImpl:BN,bincountImpl:UN,bincountReduceImpl:WN,ceilImpl:VN,concatImpl:GN,expImpl:HN,expm1Impl:jN,floorImpl:qN,gatherV2Impl:XN,greaterImpl:KN,lessImpl:YN,linSpaceImpl:ZN,logImpl:JN,maxImpl:QN,maximumImpl:eR,minimumImpl:tR,multiplyImpl:nR,negImpl:rR,prodImpl:iR,rangeImpl:sR,rsqrtImpl:aR,simpleAbsImpl:oR,sliceImpl:lR,stridedSliceImpl:uR,subImpl:cR,tileImpl:hR,topKImpl:dR,transposeImpl:pR,uniqueImpl:fR}=i;function mR(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function gR(e,t){return 1===t?[e]:mR(e,t)}class xR{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=gR("rc",t),r=$N(t),i=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let i=e-2;i<e;i++)r+=`${n[i]} >= ${t[i]}`,i<e-1&&(r+="||");return r}(t,e,n),s=function(e,t,n,r){if(1===e)return"";const i=r.slice(-2);return`\n    int r = ${i[0]};\n    int c = ${i[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),a=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let i=0;i<=1;i++){let s=`${0===r?"r":"rp1"}, ${0===i?"c":"cp1"}`;for(let n=2;n<e;n++)s=`${t[t.length-1-n]},`+s;n.push(s)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${i}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}}class bR{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${cN(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${hN(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class vR{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=wR(t,n),i=_R(e,r,n);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);const s=yR(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[i].shift();return this.usedTextures[i].push(e),e}let a;return r===FA.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===FA.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===FA.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===FA.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===FA.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[i].push(a),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),a}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const i=wR(n,r),s=_R(t,i,r);s in this.freeTextures||(this.freeTextures[s]=[]);const a=yR(t,i,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Ka().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=a):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[s],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function yR(e,t,n,r,i){const s=function(e,t){switch(e){case FA.PACKED_2X2_FLOAT32:return SN(t);case FA.PACKED_2X2_FLOAT16:return kN(t);case FA.UNPACKED_FLOAT32:return yN(t);case FA.UNPACKED_FLOAT16:return wN(t);case FA.PACKED_4X1_UNSIGNED_BYTE:return _N(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let a;if(i){const[t,n]=PA(e[0],e[1]);a=t*n}else{const[t,n]=$A(e[0],e[1]);a=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,s);return a*o}function wR(e,t){if(e===LA.UPLOAD)return FA.PACKED_2X2_FLOAT32;if(e===LA.RENDER||null==e)return function(e){return Ka().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?FA.PACKED_2X2_FLOAT32:FA.UNPACKED_FLOAT32:e?FA.PACKED_2X2_FLOAT16:FA.UNPACKED_FLOAT16}(t);if(e===LA.DOWNLOAD||e===LA.PIXELS)return FA.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function _R(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class SR{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const kR="return abs(x);",IR="return x;";class ER{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class TR{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=gR("rc",t),r=$N(t),i=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),a=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${i});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}const CR=ag,MR={};class AR extends ca{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Ka().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=RA(Ka().getNumber("WEBGL_VERSION"));this.binaryCache=((t=Ka().getNumber("WEBGL_VERSION"))in MR||(MR[t]={}),MR[t]),this.gpgpu=new IN(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new vR(this.gpgpu),this.numMBBeforeWarning=null==Ka().global.screen?1024:Ka().global.screen.height*Ka().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new ua(this,Zh())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((Ka().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Ka().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:LA.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}decComplexRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.complexParentRefCount>0&&t.refCount--}}move(e,t,n,r){if(Ka().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:LA.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:i,slice:s,shape:a,isPacked:o}=t;if(null!=s){let t;t=o?new ER(a,IR):new SR(a,IR);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:r}],r),i=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),i}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=uc()),c="complex64"===r?Gm(this.readSync(i.real.dataId),this.readSync(i.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=uc()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:i,dtype:s,complexTensorInfos:a,isPacked:o}=t;if(null!=i){let t;t=o?new ER(r,IR):new SR(r,IR);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),i=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),i}if(null!=n)return this.convertAndCacheOnCPU(e);if(!Ka().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Ka().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==s&&Ka().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture,...OA(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]);u=Gm(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=va(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}null!=l&&this.disposeIntermediateTensorInfo(l);const h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e),this.pendingDeletes--),h}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>hc(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return wh(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!UA(n)){if(Ka().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),i=va(t);if(Ka().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...OA(t)).subarray(0,i);return this.disposeIntermediateTensorInfo(n),s}const s=Ka().getBool("WEBGL_PACK")&&!0===r,a=s?QA(t):t,o=s?new gN(a):new mN(a),l=this.runWebGLProgram(o,[{shape:a,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(l),c}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const i=ba(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=ba(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Ka().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(i);a.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),a.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Ka().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:uc(),endMs:null}}endTimer(e){return Ka().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=uc(),e)}async getQueryTime(e){if(Ka().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){if(this.pendingDisposal.has(e))return;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),void this.pendingDeletes++;if(!this.texData.has(e))return;if(this.texData.get(e).complexParentRefCount>0)return void this.texData.get(e).refCount--;this.releaseGPUData(e);const{complexTensorInfos:t}=this.texData.get(e);null!=t&&(this.texData.get(t.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.real),this.texData.get(t.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.imag)),this.texData.delete(e)}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:i,isPacked:s,slice:a}=this.texData.get(e),o=a&&a.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,i,s)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return Ka().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Zh().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=128){const n=this.getCPUBackend();return Ka().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&e.every((e=>null==this.texData.get(e.dataId).texture&&va(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Wm("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return CR(e.shape,t)}packedUnaryOp(e,t,n){const r=new ER(e.shape,t);return this.compileAndRun(r,[e],n)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=oR(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Ka().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,kR,e.dtype);const t=new SR(e.shape,kR);return this.compileAndRun(t,[e])}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Da(n[0])){const i=n.map((e=>cc(e)));r=this.write(i,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Zh().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new TR(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new xR(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[ZA(e.shape),...JA(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},i=[ZA(t),...JA(t)],s=new bR(i,n),a=this.runWebGLProgram(s,[r],e.dtype,null,!0);return{dataId:a.dataId,shape:t,dtype:a.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:i}=t,s=QA(r);let a;return a=n?new fN(s):new pN(s),{dtype:i,shape:r,dataId:this.runWebGLProgram(a,[{shape:s,dtype:i,dataId:e}],i,null,!0).dataId}}runWebGLProgram(e,t,n,r,i=!1){const s=this.makeTensorInfo(e.outputShape,n),a=this.texData.get(s.dataId);if(e.packedOutput&&(a.isPacked=!0),e.outPackingScheme===DA.DENSE){const t=OA(e.outputShape);a.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(a.usage=e.outTexUsage),0===va(s.shape))return a.values=Ca(s.dtype,0),s;const o=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&va(t.shape)<=Ka().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!tN(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),o.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const u={shape:s.shape,texData:a,isUniform:!1},c=function(e,t,n){let r="";t.concat(n).forEach((e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${n}_${t}`}));const i=e.userCode;let s=e.constructor.name;return s+="_"+r+"_"+i,s}(e,l,u),h=this.getAndSaveBinary(c,(()=>function(e,t,n,r){const i=t.userCode,s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),a=s.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=TN(s,o,i,t.packedInputs),u=e.createProgram(l);let c=null;const h=e.getUniformLocation(u,"NAN",!1);1===Ka().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(u,"INFINITY",!1));const d={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n],i=!1;d[r]=e.getUniformLocation(u,r,i),d[`offset${r}`]=e.getUniformLocation(u,`offset${r}`,i)}return{program:t,source:l,webGLProgram:u,uniformLocations:d,inShapeInfos:a,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,e,l,u))),d=null!=this.activeTimers;let p;if(d&&(p=this.startTimer()),function(e,t,n,r,i){zN(t.inShapeInfos,n),zN([t.outShapeInfo],[r]);const s=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s,a[0],a[1]):e.setOutputMatrixTexture(s,a[0],a[1]),e.setProgram(t.webGLProgram),1===Ka().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const i=t.program.variableNames[r],s=t.uniformLocations[i],a=t.uniformLocations[`offset${i}`];if(null!=s)if(n.isUniform)if(va(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=a&&e.gl.uniform1i(a,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,s,r)})),null!=i&&i(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,h,l,u,r),o.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(p=this.endTimer(p),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(p)})),!Ka().getBool("WEBGL_LAZILY_UNPACK")&&a.isPacked&&!1===i){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,i=!1){n=n||t[0].dtype;const s=this.runWebGLProgram(e,t,n,r,i);return Zh().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Ka().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Qh((()=>{if(!Ka().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Ka().getBool("DEBUG");Ka().set("DEBUG",!1);const t=this.abs(id(1e-8)).dataSync()[0];if(Ka().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:i,texture:s,usage:a,isPacked:o}=t;if(null!=s)return;const l=null!=this.activeTimers;let u;l&&(u=uc());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=Ka().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?fa(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=Ta(e);e=t.newShape}let r=va(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=ZA(e);let n=2,i=2;return e.length&&([n,i]=JA(e)),r=t*(n/2)*(i/2),_a(r).map((e=>2*e))}return _a(r)}(n,o),t.texShape=c),null!=i){const e=QA(n);let s,a=c[1],h=c[0];const d=i instanceof Uint8Array;o?([a,h]=PA(c[0],c[1]),s=new bN(e,[h,a],d)):s=new xN(e,[h,a],d);const p=this.makeTensorInfo([h,a],r);this.texData.get(p.dataId).usage=d?LA.PIXELS:LA.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),a,h,i);const f=!0,m=this.runWebGLProgram(s,[p],r,null,f),g=this.texData.get(m.dataId);t.texture=g.texture,t.texShape=g.texShape,t.isPacked=g.isPacked,t.usage=g.usage,this.disposeIntermediateTensorInfo(p),this.texData.delete(m.dataId),t.values=null,l&&(this.uploadWaitMs+=uc()-u)}else{const e=this.acquireTexture(c,a,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Ra(t)}}Fc()&&nd("webgl",(()=>new AR),2);class NR{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Xd(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class RR{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Xd(t,n);const i=this.outputShape.length;let s="";if(r)if(0===i||1===va(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${$N(i)} coords = getOutputCoords();\n        `,1===i)s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=gR("coords",i);s+=`\n            bool nextRowOutOfBounds =\n              (${e[i-2]} + 1) >= ${this.outputShape[i-2]};\n            bool nextColOutOfBounds =\n              (${e[i-1]} + 1) >= ${this.outputShape[i-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}function DR(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const LR={kernelName:hl,backendName:"webgl",kernelFunc:DR};function FR(e){const{inputs:t,backend:n}=e,{real:r,imag:i}=t,s=n.makeTensorInfo(r.shape,"complex64"),a=n.texData.get(s.dataId),o=DR({inputs:{x:r},backend:n});n.texData.get(o.dataId).complexParentRefCount++;const l=DR({inputs:{x:i},backend:n});return n.texData.get(l.dataId).complexParentRefCount++,a.complexTensorInfos={real:o,imag:l},s}const $R={kernelName:Io,backendName:"webgl",kernelFunc:FR},OR="return (a < 0.) ? b * a : a;",PR="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",zR={kernelName:xl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{alpha:s}=r,a=n.makeTensorInfo([],"float32",oc(s,"float32")),o=Ka().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new RR(PR,i.shape,a.shape):new NR(OR,i.shape,a.shape),l=n.runWebGLProgram(o,[i,a],i.dtype);return n.disposeIntermediateTensorInfo(a),l}},BR="return (a < 0.) ? b * a : a;",UR="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",WR={kernelName:Jl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:i}=t,s=Ka().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new RR(UR,r.shape,i.shape):new NR(BR,r.shape,i.shape);return n.runWebGLProgram(s,[r,i],r.dtype)}};function VR({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:i,backend:s})=>{const{x:a}=i,o=s,l=r||a.dtype;if(o.shouldExecuteOnCPU([a])&&null!=n){const e=o.texData.get(a.dataId),t=n(e.values,l);return o.makeTensorInfo(a.shape,l,t)}let u;return u=Ka().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new ER(a.shape,t):new SR(a.shape,e),o.runWebGLProgram(u,[a],l)}}function GR({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:i,dtype:s}){return({inputs:a,backend:o})=>{const{a:l,b:u}=a,c=o;if(r&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,i]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,i={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:u.shape},a=new NR(e,l.shape,u.shape);return c.runWebGLProgram(a,[i,s],kc(n.dtype,r.dtype))})),s=FR({inputs:{real:r,imag:i},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(i),s}const h=s||kc(l.dtype,u.dtype);if(c.shouldExecuteOnCPU([l,u])&&null!=i){const e=c.texData.get(l.dataId),t=c.texData.get(u.dataId),[n,r]=i(l.shape,u.shape,e.values,t.values,h),s=c.makeTensorInfo(r,h);return c.texData.get(s.dataId).values=n,s}let d;return d=Ka().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new RR(t,l.shape,u.shape,n):new NR(e,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function HR(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?UR:BR;if("leakyrelu"===e)return t?PR:OR;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class jR{constructor(e,t,n,r=!1,i=!1,s=!1,a=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=r?e[1]:e[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=i?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";a&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,g="result = activation(result);");const x=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",v="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(v=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${v};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${x}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class qR{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Xd(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const XR="return a * b;";function KR(e){const{inputs:t,backend:n}=e,{a:r,b:i}=t,s=kc(r.dtype,i.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(i.dataId),s=new qR("return areal * breal - aimag * bimag;",r.shape,i.shape),a=new qR("return areal * bimag + aimag * breal;",r.shape,i.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:i.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:i.shape}],l=n.runWebGLProgram(s,o,"float32"),u=n.runWebGLProgram(a,o,"float32"),c=FR({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,i])){const e=n.texData.get(r.dataId),t=n.texData.get(i.dataId),[a,o]=nR(r.shape,i.shape,e.values,t.values,s),l=n.makeTensorInfo(o,s);return n.texData.get(l.dataId).values=a,l}let a;return a=Ka().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new RR(XR,r.shape,i.shape):new NR(XR,r.shape,i.shape),n.runWebGLProgram(a,[r,i],s)}const YR={kernelName:Ul,backendName:"webgl",kernelFunc:KR};function ZR(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{shape:s}=r,a=n,o=va(i.shape),l=Ia(s,o),u=va(l);ma(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${i.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=a.texData.get(i.dataId);return!c.isPacked||tN(i.shape,l)||null!==c.texture&&tN(c.shape,l)?(a.incRef(i.dataId),{dataId:i.dataId,shape:l,dtype:i.dtype}):function(e,t,n){const r=[ZA(e.shape),...JA(e.shape)],i={dtype:e.dtype,shape:r,dataId:e.dataId},s=[ZA(t),...JA(t)],a=new bR(s,r),o=n.runWebGLProgram(a,[i],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(i,l,a)}const JR={kernelName:iu,backendName:"webgl",kernelFunc:ZR};class QR{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:i,outSize:s}=e;this.outputShape=[r,s];const a=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${wa(e)?e.toPrecision(2):e}, ones);`}let u="";i%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class eD{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:i,outSize:s}=e;this.outputShape=[r,s];let a="0.0",o="";"prod"===t?a="1.0":"min"===t?(a="1.0 / 1e-20",o="min"):"max"===t&&(a="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===t?(a="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(a="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";i%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function tD(e,t,n,r){const i=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Sm(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let s=e;for(let a=0;a<i.length;a++){const{inSize:o,windowSize:l,outSize:u}=i[a];let c,h;c="mean"===n?0===a?new QR({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new QR({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new eD({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=s,s=r.runWebGLProgram(c,[s],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return s}class nD{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=$N(this.rank),i=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${i}));\n    }\n    `}}class rD{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=$N(this.rank),i=mR("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=i[e];const a=`vec2(${s.slice(-2).join()})`,o=`++${i[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${i[this.rank-1]};\n      if(++${i[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function iD(e,t,n){const r=Ka().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rD(e.shape,t):new nD(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function sD(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:s,keepDims:a}=r;return function(e,t,n,r){const i=t,s=e.shape.length,a=Ea(i,e.shape);let o=a;const l=kp(o,s),u=null!=l;let c=e;u&&(c=iD(e,l,r),o=Ep(o.length,s)),Sp("sum",o,s);const[h,d]=wp(c.shape,o);let p=h;n&&(p=_p(h,a));const f=va(d),m=ZR({inputs:{x:c},attrs:{shape:[va(e.shape)/f,f]},backend:r}),g=tD(m,Ic(e.dtype),"sum",r),x=ZR({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(c),x}(i,s,a,n)}const aD={kernelName:Su,backendName:"webgl",kernelFunc:sD};function oD(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{perm:s}=r,a=n,o=i.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=i.shape[s[e]];let u;if(a.shouldExecuteOnCPU([i])){const e=a.texData.get(i.dataId).values,t=pR(e,i.shape,i.dtype,s,l);u=a.makeTensorInfo(l,i.dtype),a.texData.get(u.dataId).values=t}else u=iD(i,s,a);return u}const lD={kernelName:$u,backendName:"webgl",kernelFunc:oD};function uD({a:e,b:t,transposeA:n,transposeB:r,backend:i,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=r?t.shape[c-1]:t.shape[c-2],p=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),x=va(m),b=va(g);ma(u>=2&&c>=2&&(x===b||1===x||1===b),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const v=(x>b?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([p,f]);ma(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=n?[x,h,p]:[x,p,h],w=r?[b,f,d]:[b,d,f],_=ZR({inputs:{x:e},backend:i,attrs:{shape:y}}),S=ZR({inputs:{x:t},backend:i,attrs:{shape:w}}),k=[_,S],I=Math.max(x,b),E=n?_.shape[1]:_.shape[2],T=null!=s,C=null!=a,M="leakyrelu"===l,A=null!=l?HR(l,!0):null;let N;if((1===p||1===f)&&E>1e3&&!1===(T||C||M||null!=A)){let e=_,t=S;n&&(e=oD({inputs:{x:_},backend:i,attrs:{perm:[0,2,1]}}),k.push(e)),r&&(t=oD({inputs:{x:S},backend:i,attrs:{perm:[0,2,1]}}),k.push(t));const s=1===f;let a=e;1!==f&&(a=ZR({inputs:{x:e},backend:i,attrs:{shape:[I,E,1]}}),k.push(a));const o=1===f?2:1;let l=t;s&&(l=ZR({inputs:{x:t},backend:i,attrs:{shape:[I,1,E]}}),k.push(l));const u=KR({inputs:{a,b:l},backend:i});N=sD({inputs:{x:u},backend:i,attrs:{axis:o,keepDims:!0}}),k.push(u)}else{const l=kc(e.dtype,t.dtype),u=new jR(y,w,[I,p,f],n,r,T,A,C,M),c=[_,S];if(null!=s&&c.push(s),C&&c.push(a),M){const e=i.makeTensorInfo([],"float32",oc(o,"float32"));c.push(e),k.push(e)}N=i.runWebGLProgram(u,c,l)}const R=ZR({inputs:{x:N},backend:i,attrs:{shape:v}});k.push(N);for(const e of k)i.disposeIntermediateTensorInfo(e);return R}const cD={kernelName:Vu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:i,b:s,bias:a,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return uD({a:i,b:s,transposeA:l,transposeB:u,backend:n,bias:a,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},hD="return abs(x);",dD={kernelName:eo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=oR(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let i;return i=Ka().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new ER(r.shape,hD):new SR(r.shape,hD),n.runWebGLProgram(i,[r],r.dtype)}},pD=VR({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),fD={kernelName:to,backendName:"webgl",kernelFunc:pD},mD=VR({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),gD={kernelName:no,backendName:"webgl",kernelFunc:mD},xD="return a + b;",bD=GR({opSnippet:xD,packedOpSnippet:xD,supportsComplex:!0,cpuKernelImpl:BN}),vD={kernelName:ro,backendName:"webgl",kernelFunc:bD};class yD{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class wD{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const _D={kernelName:io,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,i=n;if(1===i.length)return DR({inputs:{x:i[0]},backend:r});if(i.length>Ka().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(i.length/2),n=e({inputs:i.slice(0,t),backend:r}),s=e({inputs:i.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const s=i.map((e=>e.dtype)).reduce(((e,t)=>kc(e,t))),a=i.map((e=>e.shape)),o=Ka().getBool("WEBGL_PACK")?new wD(i[0].shape,a):new yD(i[0].shape,a);return r.runWebGLProgram(o,i,s)}},SD={kernelName:so,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:s,keepDims:a}=r,o=i.shape.length,l=Ea(s,i.shape);let u=l;const c=kp(u,o);let h=i;null!=c&&(h=oD({inputs:{x:i},backend:n,attrs:{perm:c}}),u=Ep(u.length,o)),Sp("all",u,o);const[d,p]=wp(h.shape,u),f=ZR({inputs:{x:h},backend:n,attrs:{shape:[-1,va(p)]}}),m=tD(f,f.dtype,"all",n);let g;return g=ZR(a?{inputs:{x:m},backend:n,attrs:{shape:_p(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},kD={kernelName:ao,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:s,keepDims:a}=r,o=i.shape.length,l=Ea(s,i.shape);let u=l;const c=kp(u,o);let h=i;null!=c&&(h=oD({inputs:{x:i},backend:n,attrs:{perm:c}}),u=Ep(u.length,o)),Sp("any",u,o);const[d,p]=wp(h.shape,u),f=ZR({inputs:{x:h},backend:n,attrs:{shape:[-1,va(p)]}}),m=tD(f,f.dtype,"any",n);let g;return g=ZR(a?{inputs:{x:m},backend:n,attrs:{shape:_p(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class ID{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:i,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[i,s];const a="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class ED{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,ma(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const i=e[e.length-1],s=Math.ceil(i/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,o=a.length,l=$N(o),u=gR("coords",o);let c,h;if(1===s){h=o+1;const e=$N(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),m=gR("sourceLocR",h-1).concat("inIdx.r"),g=gR("sourceLocG",h-1).concat("inIdx.g"),x=gR("sourceLocB",h-1).concat("inIdx.b"),b=gR("sourceLocA",h-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",y=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${x.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,_=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${_}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${a[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${a[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${y}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function TD(e,t,n,r=null){let i=t.shape[0],s=t.shape[1];null!=r&&(i=r.shape[0],s=r.shape[1]);const a=Sm(s),o={windowSize:a,inSize:s,batchSize:i,outSize:Math.ceil(s/a)},l=new ID(o,n,null==r),u=[t];null!=r&&u.push(r);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=TD(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function CD(e,t,n,r=null){const i=null!=r?r.shape:t.shape,s=Sm(i[i.length-1]),a=new ED(i,s,n,null==r),o=null==r?[t]:[t,r],l=e.runWebGLProgram(a,o,"int32");if(l.shape.length===t.shape.length){const r=CD(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function MD(e,t,n,r){const i=[n];if(Sp("arg"+r.charAt(0).toUpperCase()+r.slice(1),i,t.shape.length),!Ka().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[s,a]=wp(t.shape,i),o=va(a),l=ZR({inputs:{x:t},backend:e,attrs:{shape:[-1,o]}});n.push(l);const u=TD(e,l,r);n.push(u);const c=ZR({inputs:{x:u},backend:e,attrs:{shape:s}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),c}return CD(e,t,r)}const AD={kernelName:oo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:s}=r;let a=Ea(s,i.shape);const o=kp(a,i.shape.length);let l=i;const u=[];null!=o&&(l=oD({inputs:{x:i},backend:n,attrs:{perm:o}}),u.push(l),a=Ep(a.length,l.shape.length)),Sp("argMax",[a[0]],l.shape.length);const c=MD(n,l,a[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},ND={kernelName:lo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:s}=r;let a=Ea(s,i.shape);const o=kp(a,i.shape.length);let l=i;const u=[];null!=o&&(l=oD({inputs:{x:i},backend:n,attrs:{perm:o}}),u.push(l),a=Ep(a.length,l.shape.length)),Sp("argMin",[a[0]],l.shape.length);const c=MD(n,l,a[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},RD=VR({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),DD={kernelName:uo,backendName:"webgl",kernelFunc:RD},LD=VR({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),FD={kernelName:co,backendName:"webgl",kernelFunc:LD},$D=VR({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),OD={kernelName:ho,backendName:"webgl",kernelFunc:$D},PD=GR({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),zD={kernelName:fo,backendName:"webgl",kernelFunc:PD},BD=VR({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),UD={kernelName:po,backendName:"webgl",kernelFunc:BD};class WD{constructor(e,t,n,r=!1,i=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,a=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let x="0.0";if(f||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?i?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const v=4*Math.floor(s/4),y=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===y}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===y}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===y}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class VD{constructor(e,t,n,r=!1,i=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,a=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,x=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let v="0.0";if(b||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${x});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?i?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / count");const w=4*Math.floor(s/4),_=s%4,S=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${x});\n      const float initializationValue = ${v};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${v});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n          setOutput(${y});\n        }\n      }\n    `}}const GD={kernelName:mo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t;oN(i,"avgPool");const{filterSize:s,strides:a,pad:o,dimRoundingMode:l}=r;ma(_d(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=dd(i.shape,s,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&ya(u.inShape,u.outShape))return DR({inputs:{x:i},backend:n});const c=new WD(u,"avg",!1);return n.runWebGLProgram(c,[i],"float32")}},HD={kernelName:xo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{filterSize:s,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=pd(i.shape,s,a,[1,1,1],o,l,u),h=new VD(c,"avg",!1);return n.runWebGLProgram(h,[i],"float32")}};class jD{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,i=e.strideWidth,s=e.dilationHeight,a=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${i}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class qD{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,i=e.strideDepth,s=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${i}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const XD={kernelName:bo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:i,input:s}=t,a=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=pd(a.shape,o,l,[1,1,1],u,c),d=new qD(h);return n.runWebGLProgram(d,[i],a.dtype)}},KD={kernelName:go,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:i,input:s}=t,a=s;oN([i,s],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=dd(a.shape,o,l,1,u),h=new jD(c);return n.runWebGLProgram(h,[i],a.dtype)}},YD={kernelName:vo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:i,b:s}=t,{transposeA:a,transposeB:o}=r;return uD({a:i,b:s,transposeA:a,transposeB:o,backend:n})}};class ZD{constructor(e,t,n,r,i,s){this.outputShape=[],this.variableNames=["x","mean","variance"],Xd(e,t),Xd(e,n);let a="0.0";null!=r&&(Xd(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="1.0";null!=i&&(Xd(e,i),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class JD{constructor(e,t,n,r,i,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Xd(e,t),Xd(e,n);let a="vec4(0.0)";null!=r&&(Xd(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=i&&(Xd(e,i),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const QD={kernelName:al,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:i,variance:s,offset:a,scale:o}=e;ma(i.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ma(null==a||i.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ma(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,i,s];let c=null;null!=a&&(c=a.shape,u.push(a));let h=null;null!=o&&(h=o.shape,u.push(o));const d=Ka().getBool("WEBGL_PACK_NORMALIZATION")?new JD(r.shape,i.shape,s.shape,c,h,l):new ZD(r.shape,i.shape,s.shape,c,h,l);return t.runWebGLProgram(d,u,u[0].dtype)}};class eL{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=$N(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return tL.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let i;i=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${tL[t]} = start[${t}] + coords.${tL[t]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${i}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const tL=["x","y","z","w","u","v"];class nL{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=$N(this.rank),n=gR("coords",this.rank),r=gR("sourceLoc",this.rank),i=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${i})`,a=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${a}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}function rL(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{begin:s,size:a}=r,[o,l]=Hh(i,s,a);if(Nh(i,o,l),0===va(l))return n.makeTensorInfo(l,i.dtype,[]);if(n.shouldExecuteOnCPU([i])||"string"===i.dtype){const e=n.texData.get(i.dataId),t=lR(e.values,o,l,i.shape,i.dtype);return n.makeTensorInfo(l,i.dtype,t)}const{isPacked:u}=n.texData.get(i.dataId),c=Vh(i.shape,o,l);if(u||!c){const e=Ka().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nL(l):new eL(l),t=e.getCustomSetupFunc(o);return n.runWebGLProgram(e,[i],i.dtype,t)}return n.uploadToGPU(i.dataId),function(e,t,n,r){const i=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),a=r.texData.get(s.dataId);Object.assign(a,i),a.complexParentRefCount=0,a.refCount=1,a.shape=n,a.dtype=e.dtype;let o=Gh(t,Pa(e.shape));i.slice&&(o+=i.slice.flatOffset),a.slice={flatOffset:o,origDataId:i.slice&&i.slice.origDataId||e.dataId};const l=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,l+1),s}(i,o,l,n)}const iL={kernelName:gu,backendName:"webgl",kernelFunc:rL},sL={kernelName:yo,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{blockShape:s,crops:a}=r;ma(i.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),l=Im(i.shape,s,o),u=Em(l.length,s.length),c=Tm(i.shape,s,o),h=Cm(a,s.length),d=Mm(c,a,s.length),p=[],f=ZR({inputs:{x:i},backend:n,attrs:{shape:l}}),m=oD({inputs:{x:f},backend:n,attrs:{perm:u}}),g=ZR({inputs:{x:m},backend:n,attrs:{shape:c}}),x=rL({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},aL={kernelName:wo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,weights:s}=t,{size:a}=r,o=n.readSync(i.dataId),l=n.readSync(s.dataId),u=UN(o,l,s.dtype,s.shape,a);return n.makeTensorInfo([a],s.dtype,u)}},oL=GR({opSnippet:"return float(a != b);",dtype:"bool"}),lL={kernelName:Vl,backendName:"webgl",kernelFunc:oL};function uL(e){const{inputs:t,backend:n}=e,{input:r}=t;return DR({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const cL={kernelName:tu,backendName:"webgl",kernelFunc:uL},hL={kernelName:_o,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:i}=t,{x:s}=n,{dtype:a}=i;if("complex64"===a){if("complex64"===s.dtype)return DR({inputs:{x:s},backend:r});const t=Rp(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),i=FR({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),i}if("complex64"===s.dtype){const t=uL({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:a}});return r.disposeIntermediateTensorInfo(t),n}if(!Aa(s.dtype,a)){const e=DR({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:a}}if("int32"===a)return function(e,t){const n=new SR(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===a){const e=r.makeTensorInfo([],"bool",Ca("bool",1)),t=oL({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}},dL="return ceil(x);",pL=VR({opSnippet:dL,packedOpSnippet:dL,cpuKernelImpl:VN}),fL={kernelName:So,backendName:"webgl",kernelFunc:pL};class mL{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class gL{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const xL={kernelName:ko,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{clipValueMin:s,clipValueMax:a}=r;let o;o=Ka().getBool("WEBGL_PACK_CLIP")?new gL(i.shape):new mL(i.shape);const l=o.getCustomSetupFunc(s,a);return n.runWebGLProgram(o,[i],i.dtype,l)}};class bL{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function vL(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const yL={kernelName:Eo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,i=n.texData.get(r.dataId),s=new bL(r.shape),a=[vL(r,i.complexTensorInfos.real),vL(r,i.complexTensorInfos.imag)];return n.runWebGLProgram(s,a,a[0].dtype)}};class wL{constructor(e){this.outputShape=[],this.outputShape=wm(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,i=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${i}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class _L{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=wm(e,t);const n=this.outputShape,r=n.length,i=$N(r),s=gR("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=a[t],u=a.slice(-2),c=a.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${SL(a,l,t)}),\n            vec2(${SL(u,l,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${SL(a,l,p)}),\n          vec2(${SL(u,l,p)}));`,this.userCode=`\n      float getValue(${a.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function SL(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function kL(e){const{inputs:t,backend:n}=e,{input:r}=t;return DR({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const IL={kernelName:pl,backendName:"webgl",kernelFunc:kL};function EL(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>uL({inputs:{input:e},backend:n}))),i=e.map((e=>kL({inputs:{input:e},backend:n}))),s=EL(r,t,n),a=EL(i,t,n),o=FR({inputs:{real:s,imag:a},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),i.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}if("string"===r){const{tensors2D:i,outShape:s}=TL(e,t,n),a=i.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=1===i[0].shape[0],l=GN(a,s,r,o),u=wm(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,r,l);return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>Ka().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),i=EL(e.slice(0,r),t,n),s=EL(e.slice(r),t,n),a=EL([i,s],t,n);return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),a}if(Ka().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const i=new _L(e.map((e=>e.shape)),t);return n.runWebGLProgram(i,e,r)}const{tensors2D:i,outShape:s}=TL(e,t,n),a=new wL(i.map((e=>e.shape))),o=n.runWebGLProgram(a,i,r);i.forEach((e=>n.disposeIntermediateTensorInfo(e)));const l=ZR({inputs:{x:o},attrs:{shape:s},backend:n});return n.disposeIntermediateTensorInfo(o),l}function TL(e,t,n){const r=wm(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>ZR({inputs:{x:e},attrs:{shape:[-1,va(e.shape.slice(t))]},backend:n}))),outShape:r}}function CL(e){const{inputs:t,backend:n,attrs:r}=e,{axis:i}=r,s=Ea(i,t[0].shape)[0],a=wm(t.map((e=>e.shape)),s);if(0===va(a))return n.makeTensorInfo(a,t[0].dtype,[]);const o=t.filter((e=>va(e.shape)>0));return 1===o.length?DR({inputs:{x:o[0]},backend:n}):(ym(o.map((e=>e.shape)),s),EL(o,s,n))}const ML={kernelName:To,backendName:"webgl",kernelFunc:CL};class AL{constructor(e,t=!1,n=null,r=!1,i=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,a=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,x=m?2:3,b=m?3:1;let v="",y="";n&&(v=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:i?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,y="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${v}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${x}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${y}\n        setOutput(result);\n      }\n    `}}class NL{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,i=e.strideDepth,s=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${i}, ${s}, ${a});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class RL{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:i,strideWidth:s,strideHeight:a,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:d,top:p}=o,f=i*r,m=uN(),g="channelsLast"===h,x=g?0:1,b=g?1:2;let v="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)v+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${a} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[x]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${s}. - ${d}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${i}.));\n\n              if(d1 < ${t[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${i}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${v}\n\n        ${m.output} = result;\n      }\n    `}}function DL({x:e,filter:t,convInfo:n,backend:r,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:o=null}){const l=e.shape,u=r.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,p="channelsLast"===n.dataFormat;let f;const m=[],g=(1===h||1===d)&&c>1e3,x=l[2]%2!=0&&!!u.isPacked;if(!g&&Ka().getBool("WEBGL_LAZILY_UNPACK")&&Ka().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&x){const c=p?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,ma(tN(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const g=ZR({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(g);const x=uD({a:h,b:g,backend:r,transposeA:!1,transposeB:!1,bias:i,activation:o,preluActivationWeights:s,leakyreluAlpha:a}),b=r.texData.get(x.dataId);ma(b.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,b.shape=n.outShape,f=DR({inputs:{x},backend:r}),f.shape=n.outShape,m.push(x)}else{const u=ZR({inputs:{x:e},backend:r,attrs:{shape:[1,p?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=ZR({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=uD({a:u,b:c,transposeA:!1,transposeB:!1,backend:r,bias:i,activation:o,preluActivationWeights:s,leakyreluAlpha:a});f=ZR({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(u),m.push(c),m.push(h)}for(const e of m)r.disposeIntermediateTensorInfo(e);return f}function LL({x:e,filter:t,convInfo:n,backend:r,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=l*u*c,g=d*h,x=[m,g],b=[],v=ZR({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),y=ZR({inputs:{x:t},backend:r,attrs:{shape:[1,m,va(t.shape)/m]}});b.push(v),b.push(y);const w=new RL(x,v.shape,n),_=r.runWebGLProgram(w,[v],"float32"),S=ZR({inputs:{x:_},backend:r,attrs:{shape:[1,x[0],x[1]]}});b.push(_),b.push(S);const k=null!=i,I=null!=s,E="leakyrelu"===o,T=o?HR(o,!0):null,C=new jR(S.shape,y.shape,[1,g,n.outChannels],!0,!1,k,T,I,E),M=[S,y];if(i&&M.push(i),I&&M.push(s),E){const e=r.makeTensorInfo([],"float32",oc(a,"float32"));M.push(e),b.push(e)}const A=r.runWebGLProgram(C,M,"float32"),N=ZR({inputs:{x:A},backend:r,attrs:{shape:f?[1,d,h,n.outChannels]:[1,n.outChannels,d,h]}});b.push(A);for(const e of b)r.disposeIntermediateTensorInfo(e);return N}const FL={kernelName:Co,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,filter:s}=t,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=Sd(l),d=fd(i.shape,s.shape,a,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(Ka().getBool("WEBGL_CONV_IM2COL")&&1===i.shape[0])p=LL({x:i,filter:s,convInfo:d,backend:n});else{const e=new AL(d);p=n.runWebGLProgram(e,[i,s],"float32")}else p=DL({x:i,filter:s,convInfo:d,backend:n});const f=ZR({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class $L{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,i=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${i};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class OL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,i=e.strideWidth,s="channelsLast"===e.dataFormat,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${i}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class PL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,i=e.padInfo.front,s=e.padInfo.top,a=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${i};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${a};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,i=e.strideDepth,s=e.strideHeight,a=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${i}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const BL={kernelName:Mo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,dy:s}=t,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=Sd(l),d=fd(i.shape,c,a,1,o,u,!1,h),p=new $L(d);return n.runWebGLProgram(p,[i,s],"float32")}},UL={kernelName:Ao,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:i,filter:s}=t,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=Sd(u),d=fd(a,s.shape,o,1,l,c,!1,h),p=new OL(d);return n.runWebGLProgram(p,[i,s],"float32")}},WL={kernelName:No,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,filter:s}=t,{strides:a,pad:o,dilations:l}=r,u=md(i.shape,s.shape,a,l,o),c=new NL(u);return n.runWebGLProgram(c,[i,s],"float32")}},VL={kernelName:Ro,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,dy:s}=t,{strides:a,pad:o,filterShape:l}=r,u=md(i.shape,l,a,1,o),c=new PL(u);return n.runWebGLProgram(c,[i,s],"float32")}},GL={kernelName:Do,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:i,filter:s}=t,{pad:a,strides:o,inputShape:l}=r,u=md(l,s.shape,o,1,a),c=new zL(u);return n.runWebGLProgram(c,[i,s],"float32")}},HL=VR({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),jL={kernelName:Lo,backendName:"webgl",kernelFunc:HL},qL=VR({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),XL={kernelName:Fo,backendName:"webgl",kernelFunc:qL};class KL{constructor(e,t,n,r,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,a,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[a-1+".0",o-1+".0"],[m,g,x]=c>1?[""+(a-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,v,y]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${v};\n\n        float in_y = ${x};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${i}));\n          return;\n        }\n        float in_x = ${y};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${i}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const YL={kernelName:Oo,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:i,boxes:s,boxInd:a}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new KL(i.shape,s.shape,o,l,u);return n.runWebGLProgram(c,[i,s,a],"float32")}};class ZL{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,i=t?"0.0":`getX(${JL(r,"coords")})`,s=e[e.length-1];let a="",o="";t?(a=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(a=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${$N(r)} coords = getOutputCoords();\n        int end = ${QL(r,"coords")};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${a}) {\n          int idx = ${o};\n          ${QL(r,"coords")} = idx;\n          val += getX(${JL(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function JL(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function QL(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const eF={kernelName:$o,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:s,exclusive:a,reverse:o}=r,l=i.shape.length,u=kp([s],l);let c=i;null!=u&&(c=oD({inputs:{x:i},backend:n,attrs:{perm:u}}));const h=Ep(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${i.shape.length-1} but got axis=${s}`);const d=c.shape[h];let p=DR({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){const t=new ZL(c.shape,!1,o),r=t.getCustomSetupFunc(e),i=p;p=n.runWebGLProgram(t,[p],p.dtype,r),n.disposeIntermediateTensorInfo(i)}if(a){const e=new ZL(c.shape,a,o),t=p;p=n.runWebGLProgram(e,[p],p.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){const e=oD({inputs:{x:p},backend:n,attrs:{perm:Ip(u)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),e}return p}},tF={kernelName:Po,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,weights:s}=t,{size:a,binaryOutput:o}=r;if(1===i.shape.length){const e=n.readSync(i.dataId),t=n.readSync(s.dataId),r=UN(e,t,s.dtype,s.shape,a);return n.makeTensorInfo([a],s.dtype,r)}if(2===i.shape.length){const e=n.bufferSync(i),t=n.bufferSync(s),r=WN(e,t,a,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}};class nF{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const rF={kernelName:zo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{blockSize:s,dataFormat:a}=r;ma(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));const o=i.shape[0],l="NHWC"===a?i.shape[1]:i.shape[2],u="NHWC"===a?i.shape[2]:i.shape[3],c="NHWC"===a?i.shape[3]:i.shape[1],h=l*s,d=u*s,p=c/(s*s),f=new nF("NHWC"===a?[o,h,d,p]:[o,p,h,d],s,a);return n.runWebGLProgram(f,[i],i.dtype)}};class iF{constructor(e,t=!1,n=null,r=!1,i=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.inHeight,a=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let g="",x="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:i?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${a}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${x}\n        setOutput(result);\n      }\n    `}}class sF{constructor(e,t=!1,n=null,r=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const s=e.inHeight,a=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,m=f;let g="int xR; int xC; int xCOffset;";for(let e=0;e<p;e++)for(let t=0;t<f;t++)g+=`\n          vec4 xTexelR${e}C${2*t} = vec4(0.);\n          vec4 wR${e}C${t} = vec4(0.);\n          vec4 xR${e}C${t} = vec4(0.);`;for(let e=0;e<p;e++)for(let t=0;t<m;t++){const n=2*t;if(g+=`\n          xR = xRCorner + ${e*h};\n          xC = xCCorner + ${n*d};\n        `,1===c){if(n<f&&(g+=l%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${a}) {\n                    xTexelR${e}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${a}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${a}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${e}C${n} = vec4(previous.zw, xTexelR${e}C${n}.xy);\n                } else {\n                  xR${e}C${n} = vec4(0, 0, xTexelR${e}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${s} && xC >= 0 && xC < ${a}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xR${e}C${n} = xTexelR${e}C${n};\n              `,n+1<f)){const t=l%2==0?fa(d):d;d%2==0&&l%2==1||d%2!=0&&l%2!=1?(g+=`\n                  xCOffset = xC + ${l%2} + ${t};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${a}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,d>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${s} &&\n                      xCOffset >= 0 && xCOffset < ${a}) {\n                      xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${e}C${n} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${t};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${a}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${e}C${n+1} = xTexelR${e}C${n+2};\n                `}}else n<f&&(g+=`\n              if(xR >= 0 && xR < ${s}) {\n            `,l%2==1?(g+=`\n                xCOffset = xC + 1 - ${c};\n                if(xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${a}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n              `,n+1<f&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${c};\n                  if(xCOffset >= 0 && xCOffset < ${a}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${e}C${n+1} = vec4(xTexelR${e}C${n+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${a}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${c};\n                if(xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.xy, xTexelR${e}C${n+2}.xy);\n              `,n+1<f&&(g+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n                `)),g+="}");n<f&&(g+=`\n            vec4 wTexelR${e}C${n} = getW(${e}, ${n}, d1, q);\n            wR${e}C${n} = vec4(wTexelR${e}C${n}.xz, wTexelR${e}C${n}.xz);\n          `,n+1<f&&(g+=`\n              vec4 wTexelR${e}C${n+1} = getW(${e}, ${n+1}, d1, q);\n              wR${e}C${n+1} =\n                vec4(wTexelR${e}C${n+1}.xz, wTexelR${e}C${n+1}.xz);`))}for(let e=0;e<p;e++)for(let t=0;t<f;t++)g+=`dotProd += xR${e}C${t} * wR${e}C${t};`;let x="",b="";n&&(x=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:i?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,b="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${v}\n        ${b}\n        setOutput(result);\n      }\n    `}}const aF={kernelName:Bo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,filter:s}=t,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),ma(_d(a,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`));const h=fd(i.shape,s.shape,a,c,o,u,!0);let d;return d=Ka().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new sF(h):new iF(h),n.runWebGLProgram(d,[i,s],"float32")}};class oF{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,i=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${i};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class lF{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,i=e.strideWidth,s=t-1-e.padInfo.top,a=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${i}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const uF={kernelName:Uo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,dy:s}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=fd(i.shape,c,a,o,l,u,!0),d=new oF(h);return n.runWebGLProgram(d,[i,s],"float32")}},cF={kernelName:Wo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:i,filter:s}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=fd(c,s.shape,a,o,l,u,!0),d=new lF(h);return n.runWebGLProgram(d,[i,s],"float32")}};class hF{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const dF={kernelName:Vo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,i=[...r.shape,...r.shape],s=va(r.shape),a=ZR({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new hF(s),l=n.runWebGLProgram(o,[a],a.dtype),u=ZR({inputs:{x:l},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),u}};class pF{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:i,strideWidth:s,filterHeight:a,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${s});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${a}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const fF={kernelName:Go,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,filter:s}=t,{strides:a,pad:o,dilations:l}=r,u=hd(i.shape,s.shape,a,o,"NHWC",l);let c;const h=new pF(u);c=n.runWebGLProgram(h,[i,s],"float32");const d=ZR({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}},mF=VR({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),gF={kernelName:Xo,backendName:"webgl",kernelFunc:mF},xF={kernelName:Ko,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:i}=t,s=Ka().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new RR("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,i.shape):new NR("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,i.shape);return n.runWebGLProgram(s,[r,i],r.dtype)}},bF=GR({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),vF={kernelName:Zo,backendName:"webgl",kernelFunc:bF},yF=VR({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${$m};\n  float a1 = ${Om};\n  float a2 = ${Pm};\n  float a3 = ${zm};\n  float a4 = ${Bm};\n  float a5 = ${Um};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),wF={kernelName:Yo,backendName:"webgl",kernelFunc:yF},_F="return exp(x);",SF=VR({opSnippet:_F,packedOpSnippet:_F,cpuKernelImpl:HN}),kF={kernelName:Jo,backendName:"webgl",kernelFunc:SF};function IF(e){const{inputs:t,attrs:n,backend:r}=e,{dim:i}=n,{input:s}=t,a=s.shape.length,o=s.shape.slice();let l=i;return i<0&&(ma(-(a+1)<=i,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+i+1),o.splice(l,0,1),ZR({inputs:{x:s},backend:r,attrs:{shape:o}})}const EF={kernelName:Qo,backendName:"webgl",kernelFunc:IF},TF="return exp(x) - 1.0;",CF=VR({opSnippet:TF,packedOpSnippet:TF,cpuKernelImpl:jN}),MF={kernelName:el,backendName:"webgl",kernelFunc:CF};class AF{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const i=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let a;if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${i};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function NF(e,t,n){const r=n.texData.get(e.dataId),i=va(e.shape),s=e.shape[e.shape.length-1],a=ZR({inputs:{x:e},backend:n,attrs:{shape:[i/s,s]}}),o=a.shape,l=new AF("real",o,t),u=new AF("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=FR({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=ZR({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(p),f}const RF={kernelName:tl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return NF(r,!1,n)}};class DF{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}function LF(e){const{backend:t,attrs:n}=e,{shape:r,value:i}=n;let{dtype:s}=n;if(s=s||Fa(i),"string"===s){const e=Ma(s,va(r));return e.fill(i),t.makeTensorInfo(r,s,e)}{const e=new DF(r,i),n=e.getCustomSetupFunc(i);return t.runWebGLProgram(e,[],s,n)}}const FF={kernelName:nl,backendName:"webgl",kernelFunc:LF};class $F{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const OF={kernelName:rl,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,i=new $F(n.shape);return r.runWebGLProgram(i,[n],n.dtype)}},PF="return floor(x);",zF=VR({opSnippet:PF,packedOpSnippet:PF,cpuKernelImpl:qN}),BF={kernelName:il,backendName:"webgl",kernelFunc:zF},UF=GR({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),WF={kernelName:sl,backendName:"webgl",kernelFunc:UF};class VF{constructor(e){this.variableNames=["A"];const t=uN(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class GF{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=uN(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const HF={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:i}=t;const{numChannels:s}=r,a="undefined"!=typeof HTMLVideoElement&&i instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&i instanceof HTMLImageElement,l="undefined"!=typeof ImageBitmap&&i instanceof ImageBitmap,[u,c]=a?[i.videoWidth,i.videoHeight]:[i.width,i.height],h=[c,u],d=[c,u,s];(o||a||l)&&(null==jF&&(jF=document.createElement("canvas").getContext("2d")),jF.canvas.width=u,jF.canvas.height=c,jF.drawImage(i,0,0,u,c),i=jF.canvas);const p=n.makeTensorInfo(h,"int32");n.texData.get(p.dataId).usage=LA.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),i);const f=Ka().getBool("WEBGL_PACK")?new GF(d):new VF(d),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}};let jF;const qF={kernelName:Gu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,filter:s,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=Sd(c),g=fd(i.shape,s.shape,l,h,u,d,!1,m);let x;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Ka().getBool("WEBGL_CONV_IM2COL")&&1===i.shape[0])x=LL({x:i,filter:s,convInfo:g,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=a,t=null!=o,r="leakyrelu"===p,l=p?HR(p,!1):null,u=new AL(g,e,l,t,r),c=[i,s];if(a&&c.push(a),o&&c.push(o),r){const e=n.makeTensorInfo([],"float32",oc(f,"float32"));c.push(e),b.push(e)}x=n.runWebGLProgram(u,c,"float32")}else x=DL({x:i,filter:s,convInfo:g,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const v=ZR({inputs:{x},backend:n,attrs:{shape:g.outShape}});return b.push(x),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}},XF={kernelName:Hu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,filter:s,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let m=c;null==m&&(m=[1,1]),ma(_d(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=fd(i.shape,s.shape,l,m,u,h,!0),x=Ka().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=d?HR(d,x):null,v=[i,s],y=null!=a,w=null!=o,_="leakyrelu"===d;if(y&&v.push(a),w&&v.push(o),_){const e=n.makeTensorInfo([],"float32",oc(p,"float32"));v.push(e),f.push(e)}let S;S=x?new sF(g,y,b,w,_):new iF(g,y,b,w,_);const k=n.runWebGLProgram(S,v,"float32");return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),k}};class KF{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=$N(t.length),i=$N(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${i} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const YF={kernelName:ll,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:i}=t,s=i.shape,a=s[s.length-1],[o,l,u,c]=Am(r,i),h=ZR({inputs:{x:i},backend:n,attrs:{shape:[l,a]}}),d=ZR({inputs:{x:r},backend:n,attrs:{shape:[va(r.shape)/u,u]}}),p=new KF(a,c,[l,u]),f=n.runWebGLProgram(p,[d,h],d.dtype),m=ZR({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};class ZF{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=$N(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const JF={kernelName:ol,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,indices:s}=t,{axis:a,batchDims:o}=r,l=tg(i,s,Ea(a,i.shape)[0],o),u=va(s.shape),c=[],h=ZR({inputs:{x:i},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=ZR({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});c.push(h),c.push(d);const p=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([i,s])||"string"===i.dtype){const e=n.bufferSync(d),t=n.bufferSync(h),r=XN(t,e,p);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const f=new ZF(h.shape,p),m=n.runWebGLProgram(f,[h,d],h.dtype);c.push(m);const g=ZR({inputs:{x:m},backend:n,attrs:{shape:l.outputShape}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},QF=GR({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:KN,dtype:"bool"}),e$={kernelName:ul,backendName:"webgl",kernelFunc:QF},t$=GR({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),n$={kernelName:cl,backendName:"webgl",kernelFunc:t$},r$={kernelName:dl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return NF(r,!0,n)}},i$=VR({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),s$={kernelName:fl,backendName:"webgl",kernelFunc:i$},a$=VR({opSnippet:"return float(isinf(x));",dtype:"bool"}),o$={kernelName:ml,backendName:"webgl",kernelFunc:a$},l$=VR({opSnippet:"return float(isnan(x));",dtype:"bool"}),u$={kernelName:gl,backendName:"webgl",kernelFunc:l$},c$=GR({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:YN,dtype:"bool"}),h$={kernelName:bl,backendName:"webgl",kernelFunc:c$},d$=GR({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),p$={kernelName:vl,backendName:"webgl",kernelFunc:d$},f$={kernelName:yl,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:i,num:s}=n,a=ZN(r,i,s);return t.makeTensorInfo([a.length],"float32",a)}},m$=VR({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:JN}),g$={kernelName:wl,backendName:"webgl",kernelFunc:m$},x$=VR({opSnippet:"return log(1.0 + x);"}),b$={kernelName:_l,backendName:"webgl",kernelFunc:x$},v$=GR({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),y$={kernelName:Sl,backendName:"webgl",kernelFunc:v$},w$=VR({opSnippet:"return float(!(x >= 1.0));"}),_$={kernelName:kl,backendName:"webgl",kernelFunc:w$},S$=GR({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),k$={kernelName:Il,backendName:"webgl",kernelFunc:S$};class I${constructor(e,t,n,r,i){this.variableNames=["x"],this.outputShape=[];const s=t,a=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===i?`inversesqrt(${l})`:1===i?`1.0/(${l})`:`exp(log(${l}) * float(-${i}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class E${constructor(e,t,n,r,i){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,a=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===i?`inversesqrt(${l})`:1===i?`1.0/(${l})`:`exp(log(${l}) * float(-${i}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const T$={kernelName:El,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{depthRadius:s,bias:a,alpha:o,beta:l}=r,u=Ka().getBool("WEBGL_PACK_NORMALIZATION")?new E$(i.shape,s,a,o,l):new I$(i.shape,s,a,o,l);return n.runWebGLProgram(u,[i],i.dtype)}};class C${constructor(e,t,n,r,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=i,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${i})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${i});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const M$={kernelName:Tl,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:i,y:s,dy:a}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new C$(i.shape,o,l,u,c);return n.runWebGLProgram(h,[i,s,a],i.dtype)}};function A$(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{reductionIndices:s,keepDims:a}=r,o=i.shape.length,l=Ea(s,i.shape);let u=l;const c=kp(u,o),h=null!=c,d=n.shouldExecuteOnCPU([i]);let p=i;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=i.shape[c[e]];const r=pR(e,i.shape,i.dtype,c,t);p=n.makeTensorInfo(t,i.dtype),n.texData.get(p.dataId).values=r}else p=iD(i,c,n);u=Ep(u.length,o)}Sp("max",u,o);const[f,m]=wp(p.shape,u);let g,x=f;if(a&&(x=_p(f,l)),d){const e=n.texData.get(p.dataId).values,t=QN(e,va(m),x,i.dtype);g=n.makeTensorInfo(x,i.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const i=va(t),s=ZR({inputs:{x:e},attrs:{shape:[va(e.shape)/i,i]},backend:r}),a=tD(s,e.dtype,"max",r),o=ZR({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(a),o}(p,m,x,n);return h&&n.disposeIntermediateTensorInfo(p),g}const N$={kernelName:Cl,backendName:"webgl",kernelFunc:A$},R$=GR({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:eR}),D$={kernelName:Ml,backendName:"webgl",kernelFunc:R$},L$={kernelName:Al,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t;oN(i,"maxPool");const{filterSize:s,strides:a,pad:o,dimRoundingMode:l}=r;ma(_d(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=dd(i.shape,s,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&ya(u.inShape,u.outShape))return DR({inputs:{x:i},backend:n});const c=new WD(u,"max",!1);return n.runWebGLProgram(c,[i],i.dtype)}},F$={kernelName:Rl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{filterSize:s,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=pd(i.shape,s,a,[1,1,1],o,u,l),h=new VD(c,"max",!1);return n.runWebGLProgram(h,[i],i.dtype)}};class $${constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,i=e.effectiveFilterHeight,s=e.effectiveFilterWidth,a=i-1-e.padInfo.top,o=s-1-e.padInfo.left,l=i*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class O${constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,i=e.dilationDepth,s=e.dilationHeight,a=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const P$={kernelName:Dl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:i,input:s}=t,a=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=pd(a.shape,o,l,[1,1,1],u,c),d=new VD(h,"max",!0),p=n.runWebGLProgram(d,[a],a.dtype),f=new O$(h),m=n.runWebGLProgram(f,[i,p],a.dtype);return n.disposeIntermediateTensorInfo(p),m}},z$={kernelName:Nl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:i,input:s,output:a}=t,o=s;oN([s,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=dd(o.shape,l,u,1,c,h),p=new WD(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new $$(d),g=n.runWebGLProgram(m,[i,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},B$={kernelName:Ll,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:i,strides:s,pad:a,includeBatchInIndex:o}=t,l=n;ma(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];ma(_d(s,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`));const c=dd(r.shape,i,s,u,a),[h,d]=function(e,t,n,r){let i=new WD(n,"max",!1);const s=r.runWebGLProgram(i,[e],"float32");return i=new WD(n,"max",!0,!0,t),[s,r.runWebGLProgram(i,[e],"float32")]}(r,o,c,l);return[h,d]}},U$={kernelName:Fl,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:i,axis:s}=t,a=n,o=r.shape.length,l=Ea(s,r.shape);let u=l;const c=kp(u,o),h=null!=c,d=a.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const e=a.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=pR(e,r.shape,r.dtype,c,t);f=a.makeTensorInfo(t,r.dtype),a.texData.get(f.dataId).values=n}else f=iD(r,c,a);p.push(f),u=Ep(u.length,o)}Sp("sum",u,o);const[m,g]=wp(f.shape,u);let x=m;i&&(x=_p(m,l));const b=function(e,t,n,r){const i=va(t),s=ZR({inputs:{x:e},attrs:{shape:[va(e.shape)/i,i]},backend:r}),a=tD(s,"float32","mean",r),o=ZR({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(a),o}(f,g,x,a);for(const e of p)a.disposeIntermediateTensorInfo(e);return b}},W$={kernelName:$l,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:s,keepDims:a}=r,o=i.shape.length,l=Ea(s,i.shape);let u=l;const c=kp(u,o);let h=i;null!=c&&(h=oD({inputs:{x:i},backend:n,attrs:{perm:c}}),u=Ep(u.length,i.shape.length)),Sp("min",u,o);const[d,p]=wp(h.shape,u),f=ZR({inputs:{x:h},backend:n,attrs:{shape:[-1,va(p)]}}),m=tD(f,f.dtype,"min",n);let g;return g=ZR(a?{inputs:{x:m},backend:n,attrs:{shape:_p(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},V$=GR({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:tR}),G$={kernelName:Ol,backendName:"webgl",kernelFunc:V$};class H${constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,i=$N(r),s=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${i} start = ${i}(${s});\n      ${i} end = ${i}(${a});\n\n      void main() {\n        ${i} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${i} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class j${constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,i=$N(r),s=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=gR("rc",r),l=gR("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${i} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${i} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${i} source = rc;\n        ${i} lt = ${i}(lessThan(source, start));\n        ${i} gte = ${i}(greaterThanEqual(source, end));\n        ${i} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${i} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${i} start = ${i}(${s});\n      const ${i} end = ${i}(${a});\n\n      void main() {\n        ${i} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const q$={kernelName:Pl,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:i,mode:s}=n,a=Ka().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new j$(r.shape,i,s):new H$(r.shape,i,s);return t.runWebGLProgram(a,[r],r.dtype)}},X$=GR({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),K$={kernelName:zl,backendName:"webgl",kernelFunc:X$};class Y${constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const Z$=GR({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),J$={kernelName:qo,backendName:"webgl",kernelFunc:Z$},Q$="return a - b;",eO=GR({opSnippet:Q$,packedOpSnippet:Q$,supportsComplex:!0,cpuKernelImpl:cR}),tO={kernelName:Mu,backendName:"webgl",kernelFunc:eO};function nO(e){const{inputs:t,backend:n,attrs:r}=e,{logits:i}=t,{dim:s}=r,a=Ea([s],i.shape),o=A$({inputs:{x:i},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),l=_p(o.shape,a),u=ZR({inputs:{x:o},backend:n,attrs:{shape:l}}),c=eO({inputs:{a:i,b:u},backend:n}),h=SF({inputs:{x:c},backend:n}),d=sD({inputs:{x:h},backend:n,attrs:{axis:a,keepDims:!1}}),p=ZR({inputs:{x:d},backend:n,attrs:{shape:l}}),f=Z$({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const rO={kernelName:Eu,backendName:"webgl",kernelFunc:nO},iO={kernelName:Bl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:i}=t,{numSamples:s,seed:a,normalized:o}=r,l=o?i:nO({inputs:{logits:i},backend:n,attrs:{dim:i.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new Y$(u,c,s),d=h.getCustomSetupFunc(a),p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},sO="return -x;",aO={kernelName:Wl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,i]=rR(e.values,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,t)}let i;return i=Ka().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new ER(r.shape,sO):new SR(r.shape,sO),n.runWebGLProgram(i,[r],r.dtype)}},oO=zf,lO={kernelName:Gl,backendName:"webgl",kernelFunc:function(e){Wm("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:i,scores:s}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(i.dataId),c=n.readSync(s.dataId),{selectedIndices:h}=oO(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},uO=Bf,cO={kernelName:Hl,backendName:"webgl",kernelFunc:function(e){Wm("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:i,scores:s}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(i.dataId),h=n.readSync(s.dataId),{selectedIndices:d,validOutputs:p}=uO(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},hO=Uf,dO={kernelName:jl,backendName:"webgl",kernelFunc:function(e){Wm("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:i,scores:s}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(i.dataId),h=n.readSync(s.dataId),d=a,p=o,f=l,m=u,{selectedIndices:g,selectedScores:x}=hO(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}};class pO{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const fO={kernelName:Xl,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:i}=t,{depth:s,onValue:a,offValue:o}=r,l=va(i.shape),u=new pO(l,s,a,o),c=ZR({inputs:{x:i},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[c],i.dtype);n.disposeIntermediateTensorInfo(c);const d=ZR({inputs:{x:h},backend:n,attrs:{shape:[...i.shape,s]}});return n.disposeIntermediateTensorInfo(h),d}};function mO(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=uL({inputs:{input:r},backend:n}),t=mO({inputs:{x:e},backend:n}),i=kL({inputs:{input:r},backend:n}),s=mO({inputs:{x:i},backend:n}),a=FR({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),a}return LF({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const gO={kernelName:Bu,backendName:"webgl",kernelFunc:mO},xO={kernelName:ql,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:i}=n;if("string"===i.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===i.dtype){const t=uL({inputs:{input:i},backend:r}),n=e({inputs:{x:t},backend:r}),s=kL({inputs:{input:i},backend:r}),a=mO({inputs:{x:s},backend:r}),o=FR({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(a),o}return LF({attrs:{shape:i.shape,dtype:i.dtype,value:1},backend:r})}},bO={kernelName:Kl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:i}=r;if(1===t.length)return IF({inputs:{input:t[0]},backend:n,attrs:{dim:i}});const s=t[0].shape,a=t[0].dtype;t.forEach((e=>{ga(s,e.shape,"All tensors passed to stack must have matching shapes"),ma(a===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=CL({inputs:t.map((e=>{const t=IF({inputs:{input:e},backend:n,attrs:{dim:i}});return o.push(t),t})),backend:n,attrs:{axis:i}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class vO{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,i=$N(r),s=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${i} start = ${i}(${s});\n      ${i} end = ${i}(${a});\n\n      void main() {\n        ${i} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${i} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class yO{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,i=$N(r),s=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=gR("rc",r),l=gR("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${i} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(${n});\n        } else {\n          ${i} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${i} start = ${i}(${s});\n      const ${i} end = ${i}(${a});\n\n      void main() {\n        ${i} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const wO=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{paddings:s,constantValue:a}=r,o=Ka().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yO(i.shape,s,a):new vO(i.shape,s,a);return n.runWebGLProgram(o,[i],i.dtype)},_O={kernelName:Yl,backendName:"webgl",kernelFunc:wO},SO=GR({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),kO={kernelName:Zl,backendName:"webgl",kernelFunc:SO},IO={kernelName:Ql,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{axis:s,keepDims:a}=r,o=i.shape.length,l=[],u=Ea(s,i.shape);let c=u;const h=kp(c,o);let d,p=i;if(null!=h&&(p=oD({inputs:{x:i},backend:n,attrs:{perm:h}}),c=Ep(c.length,o),l.push(p)),Sp("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:i}=iR(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,i,t)}else{const[e,t]=wp(p.shape,c),r=va(t),s=ZR({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),a=tD(s,Ic(i.dtype),"prod",n);d=ZR({inputs:{x:a},backend:n,attrs:{shape:e}}),l.push(s),l.push(a)}if(a){l.push(d);const e=_p(d.shape,u);d=ZR({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},EO=e=>{const{backend:t,attrs:n}=e,{start:r,stop:i,step:s,dtype:a}=n,o=sR(r,i,s,a);return t.makeTensorInfo([o.length],a,o)},TO={kernelName:eu,backendName:"webgl",kernelFunc:EO},CO=VR({opSnippet:"return 1.0 / x;"}),MO={kernelName:nu,backendName:"webgl",kernelFunc:CO},AO=VR({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),NO={kernelName:ru,backendName:"webgl",kernelFunc:AO},RO=VR({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),DO={kernelName:uu,backendName:"webgl",kernelFunc:RO};class LO{constructor(e,t,n,r,i){this.variableNames=["A"],this.outputShape=[];const[s,a,o,l]=e;this.outputShape=[s,t,n,l];const u=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=i?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class FO{constructor(e,t,n,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,a,o,l]=e;this.outputShape=[s,t,n,l];const u=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=i?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const $O={kernelName:ou,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:i}=t,{alignCorners:s,halfPixelCenters:a,size:o}=r,[l,u]=o,c=Ka().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new FO(i.shape,l,u,s,a):new LO(i.shape,l,u,s,a);return n.runWebGLProgram(c,[i],"float32")}};class OO{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,i]=t,[,s,a]=e,o=[n&&s>1?r-1:r,n&&a>1?i-1:i],l=[n&&s>1?s-1:s,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${i-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const PO={kernelName:lu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:i,dy:s}=t,{alignCorners:a}=r,o=new OO(s.shape,i.shape,a);return n.runWebGLProgram(o,[s],s.dtype)}};class zO{constructor(e,t,n,r,i){this.variableNames=["A"],this.outputShape=[];const[s,a,o,l]=e;this.outputShape=[s,t,n,l];const u=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=i?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const BO={kernelName:su,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:i}=t,{alignCorners:s,halfPixelCenters:a,size:o}=r,[l,u]=o,c=new zO(i.shape,l,u,s,a);return n.runWebGLProgram(c,[i],i.dtype)}};class UO{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,i]=t,[,s,a]=e,o=[n&&s>1?r-1:r,n&&a>1?i-1:i],l=[n&&s>1?s-1:s,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${i}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const WO={kernelName:au,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:i,dy:s}=t,{alignCorners:a}=r,o=new UO(s.shape,i.shape,a);return n.runWebGLProgram(o,[s],s.dtype)}};class VO{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),i=$N(n);this.userCode=`\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class GO{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=gR("rc",n),i=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,a=$N(n);function o(n){const r=e.map(((r,i)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(i,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${i}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${i}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${i}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const HO={kernelName:cu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{dims:s}=r,a=i.shape.length,o=Ea(s,i.shape);if(0===a)return DR({inputs:{x:i},backend:n});const l=Ka().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new GO(i.shape,o):new VO(i.shape,o);return n.runWebGLProgram(l,[i],i.dtype)}};class jO{constructor(e,t,n,r){this.variableNames=["Image"],this.outputShape=[];const i=e[1],s=e[2],a=Math.sin(t).toFixed(3),o=Math.cos(t).toFixed(3);this.outputShape=e;const[l,u]=km(r,i,s),c=l.toFixed(3),h=u.toFixed(3);let d="";d="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${c}) * ${o} - (float(y) - ${h}) * ${a};\n          float coordYFloat = (float(x) - ${c}) * ${a} + (float(y) - ${h}) * ${o};\n          int coordX = int(round(coordXFloat + ${c}));\n          int coordY = int(round(coordYFloat + ${h}));\n          ${d}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${i}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const qO={kernelName:Wu,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:i,fillValue:s,center:a}=t,o=n,l=new jO(r.shape,i,s,a);return o.runWebGLProgram(l,[r],r.dtype)}},XO=VR({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),KO={kernelName:hu,backendName:"webgl",kernelFunc:XO},YO=VR({opSnippet:"return inversesqrt(x);",cpuKernelImpl:aR}),ZO={kernelName:du,backendName:"webgl",kernelFunc:YO};class JO{constructor(e,t,n,r,i,s,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=$N(i.length),l=$N(s.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${i});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const QO={kernelName:pu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:i,updates:s}=t,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Dm(0,i,a),d=[h/u,u];if(0===h)return n.makeTensorInfo(a,i.dtype);const p=ZR({inputs:{x:i},backend:n,attrs:{shape:[l,o]}}),f=ZR({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new JO(l,o,p.shape.length,f.shape.length,c,d),x=n.runWebGLProgram(g,[f,p,m],f.dtype),b=ZR({inputs:{x},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(m),b}};class eP{constructor(e,t,n){let r,i;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)i="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],a=[];for(let r=0;r<t.length;r++)a.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),i=a.join()}const s=$N(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${i}));\n        } else {\n          setOutput(getB(${i}));\n        }\n      }\n    `}}const tP={kernelName:fu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:i,e:s}=t,a=new eP(r.shape.length,i.shape,i.shape.length);return n.runWebGLProgram(a,[r,i,s],kc(i.dtype,s.dtype))}},nP=VR({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Lm};\n  float scale = ${Fm};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),rP={kernelName:mu,backendName:"webgl",kernelFunc:nP},iP=VR({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),sP={kernelName:yu,backendName:"webgl",kernelFunc:iP},aP=VR({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),oP={kernelName:vu,backendName:"webgl",kernelFunc:aP},lP=VR({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),uP={kernelName:xu,backendName:"webgl",kernelFunc:lP},cP=VR({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),hP={kernelName:bu,backendName:"webgl",kernelFunc:cP},dP=VR({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),pP={kernelName:wu,backendName:"webgl",kernelFunc:dP},fP={kernelName:ku,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{blockShape:s,paddings:a}=r;ma(i.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...a);for(let e=1+s.length;e<i.shape.length;++e)l.push([0,0]);const u=[],c=wO({inputs:{x:i},backend:n,attrs:{paddings:l,constantValue:0}}),h=Im(c.shape,s,o,!1),d=Em(h.length,s.length,!1),p=Tm(c.shape,s,o,!1),f=ZR({inputs:{x:c},backend:n,attrs:{shape:h}}),m=oD({inputs:{x:f},backend:n,attrs:{perm:d}}),g=ZR({inputs:{x:m},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},mP={kernelName:Au,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:i,sparseValues:s,defaultValue:a}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:c,outputSize:h}=Dm(0,i,o),d=new JO(u,l,i.shape.length,s.shape.length,c,[h,1],!1),p=n.runWebGLProgram(d,[s,i,a],s.dtype),f=ZR({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),f}},gP={kernelName:Iu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{numOrSizeSplits:s,axis:a}=r,o=Ea(a,i.shape)[0],l=Jm(i,s,o),u=i.shape.length,c=new Array(u).fill(0),h=i.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const r=rL({inputs:{x:i},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},xP=VR({opSnippet:"return sqrt(x);"}),bP={kernelName:_u,backendName:"webgl",kernelFunc:xP},vP={kernelName:Cu,backendName:"webgl",kernelFunc:VR({opSnippet:"return x * x;"})},yP="return (a - b) * (a - b);",wP=GR({opSnippet:yP,packedOpSnippet:yP}),_P={kernelName:Tu,backendName:"webgl",kernelFunc:wP},SP={kernelName:Uu,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,i=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new SR(r.shape,i);return n.runWebGLProgram(s,[r],r.dtype)}};class kP{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,i=$N(n.length),s=$N(n.length);let a="";if(1===r)a="coords * strides + begin";else{let e=0;a=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${i} begin = ${i}(${e});\n      ${i} strides = ${i}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}const IP={kernelName:Nu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{begin:s,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{nonStrided:p,$begin:f,$strides:m,size:g,newShape:x,outShape:b}=jh(i.shape,s,a,o,l,u,c,h,d),v=ZR({inputs:{x:i},backend:n,attrs:{shape:x}});let y;if(p){const e=rL({inputs:{x:v},backend:n,attrs:{begin:f,size:g}});y=ZR({inputs:{x:e},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(e)}else if(b.some((e=>0===e)))y=n.makeTensorInfo(b,i.dtype,[]);else if(n.shouldExecuteOnCPU([v])){const e=n.texData.get(v.dataId).values,t=wh(v.shape,v.dtype,e),r=uR(b,t,m,f);y=n.makeTensorInfo(b,v.dtype,r.values)}else{const e=new kP(f,m,b);y=n.runWebGLProgram(e,[v],v.dtype)}const w=ZR({inputs:{x:y},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(y),w}},EP=VR({opSnippet:"return tan(x);"}),TP={kernelName:Ru,backendName:"webgl",kernelFunc:EP},CP=VR({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),MP={kernelName:Du,backendName:"webgl",kernelFunc:CP};class AP{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=$N(this.rank),i=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${i}));\n      }\n    `}}function NP(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{reps:s}=r;if("string"===i.dtype){const e=n.readSync(i.dataId).map((e=>hc(e))),t=wh(i.shape,i.dtype,e),r=hR(t,s);return n.makeTensorInfo(r.shape,r.dtype,r.values)}const a=new AP(i.shape,s);return n.runWebGLProgram(a,[i],i.dtype)}const RP={kernelName:Lu,backendName:"webgl",kernelFunc:NP},DP={kernelName:Fu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i}=t,{k:s,sorted:a}=r,o=n.readSync(i.dataId),[l,u]=dR(o,i.shape,i.dtype,s,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},LP={kernelName:Ou,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:i}=n,{x:s}=t;oN(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=fR(a,i,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},FP={kernelName:Pu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:i}=t;let{axis:s}=r;s<0&&(s+=i.shape.length);const a=i,o=a.shape.length,l=i.shape[s],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==s&&(u[c++]=a.shape[e]);const h=[],d=new Array(o).fill(0),p=a.shape.slice();p[s]=1;const f=new Array(l);for(let e=0;e<f.length;e++){d[s]=e;const t=rL({inputs:{x:a},backend:n,attrs:{begin:d,size:p}}),r=ZR({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class $P{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,i=e.inSize,s=e.numSegments,a=s*Math.ceil(i/n);this.outputShape=[r,a];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";i%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return initializationValue;\n        }\n      `);let h="";i%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const OP=[T$,M$,cD,dD,fD,gD,vD,_D,SD,kD,AD,ND,DD,FD,zD,OD,UD,HD,GD,XD,KD,YD,QD,sL,aL,hL,fL,xL,yL,$R,ML,BL,UL,FL,VL,GL,WL,jL,XL,YL,eF,tF,rF,uF,cF,aF,dF,fF,gF,xF,vF,wF,kF,EF,MF,RF,FF,OF,BF,WF,HF,qF,XF,YF,JF,e$,n$,LR,r$,IL,s$,o$,u$,zR,h$,p$,f$,b$,g$,y$,_$,k$,N$,F$,L$,P$,z$,B$,D$,U$,W$,G$,q$,K$,iO,YR,aO,lO,cO,dO,lL,fO,xO,bO,_O,kO,WR,IO,TO,cL,J$,MO,DO,NO,JR,$O,PO,BO,WO,HO,qO,KO,ZO,QO,tP,rP,sP,oP,uP,hP,iL,rO,pP,fP,mP,gP,bP,vP,_P,SP,IP,tO,aD,TP,MP,RP,DP,lD,LP,FP,{kernelName:zu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:i,segmentIds:s}=t,{numSegments:a}=r,o=i.shape.length,l=[];let u=0;const c=kp([u],o);let h=i;null!=c&&(h=oD({inputs:{x:i},backend:n,attrs:{perm:c}}),l.push(h),u=Ep(1,o)[0]);const d=eg(h.shape,u,a),p=va([h.shape[u]]),f=ZR({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=Ic(i.dtype),g=(e,t,r,i,s)=>{const a=e.shape[0],o=e.shape[1],u=Qm(o,s),c=new $P({windowSize:u,inSize:o,batchSize:a,numSegments:s},t),h=n.compileAndRun(c,[e,r],i);if(l.push(h),h.shape[1]===s)return h;const d=EO({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),p=NP({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(p),g(h,t,p,i,s)},x=ZR({inputs:{x:g(f,"unsortedSegmentSum",s,m,a)},backend:n,attrs:{shape:d}});let b=x;if(null!=c){l.push(x);const e=Ip(c);b=oD({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},gO];for(const e of OP)Yu(e);var PP=n(9645),zP=n(2861),BP=n(906);const UP=function(){if("undefined"!=typeof globalThis)return globalThis;if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==n.g)return n.g;throw new Error("cannot find the global object")}(),WP=(UP.fetch.bind(UP),UP.performance,UP.navigator,!!UP.webkitOfflineAudioContext),VP=void 0!==UP.WorkerGlobalScope,GP=void 0!==n.g&&void 0!==n.g.process;var HP;GP?n(3300):window.fetch.bind(window),GP?n(858):window.performance,GP?n(8249):window.navigator,function(e){e[e.NONE=0]="NONE",e[e.WARN=5]="WARN",e[e.INFO=10]="INFO",e[e.DEBUG=20]="DEBUG"}(HP||(HP={}));const jP=function(e){if(e=WP?44100:e,VP)throw new Error("Cannot use offline audio context in a web worker.");const t=UP.webkitOfflineAudioContext;return WP?new t(1,e,e):new UP.OfflineAudioContext(1,e,e)}(16e3);function qP(e,t){t.power||(t.power=2);const n=function(e,t){const n=t.nFft||2048,r=t.winLength||n,i=t.hopLength||Math.floor(r/4);let s=function(e){const t=new Float32Array(e);for(let n=0;n<e;n++)t[n]=.5*(1-Math.cos(2*Math.PI*n/(e-1)));return t}(r);s=function(e,t){if(e.length>t)throw new Error("Data is longer than length.");const n=Math.floor((t-e.length)/2);return QP(e,[n,t-e.length-n])}(s,n);const a=function(e,t,n){const r=Math.floor((e.length-t)/n)+1,i=Array.from({length:r},((e,n)=>new Float32Array(t)));for(let s=0;s<r;s++){const r=s*n,a=e.slice(r,r+t);i[s].set(a),a.length}return i}(e=function(e,t){const n=QP(e,t);for(let e=0;e<t;e++)n[e]=n[2*t-e],n[n.length-e-1]=n[n.length-2*t+e-1];return n}(e,Math.floor(n/2)),n,i),o=[],l=a.length,u=n+2;for(let e=0;e<l;e++){const t=new Float32Array(u);o[e]=t}for(let e=0;e<l;e++){const t=ez(JP(a[e],s));o[e].set(t.slice(0,u))}return o}(e,t),[r,i]=function(e,t){const n=e.map((e=>function(e,t){return e.map((e=>Math.pow(e,t)))}(function(e){const t=new Float32Array(e.length/2);for(let n=0;n<e.length/2;n++)t[n]=Math.sqrt(e[2*n]*e[2*n]+e[2*n+1]*e[2*n+1]);return t}(e),t)));return[n,e[0].length-1]}(n,t.power);t.nFft=i;const s=function(e){const t=e.fMin||0,n=e.fMax||e.sampleRate/2,r=e.nMels||128,i=e.nFft||2048,s=function(e,t){return tz(0,e/2,Math.floor(1+t/2))}(e.sampleRate,i),a=function(e,t,n){return tz(nz(t),nz(n),e).map((e=>function(e){return 700*(Math.exp(e/1125)-1)}(e)))}(r+2,t,n),o=function(e){const t=new Float32Array(e.length-1);for(let n=0;n<e.length;n++)t[n]=e[n+1]-e[n];return t}(a),l=function(e,t){const n=[];for(let r=0;r<e.length;r++)n[r]=new Float32Array(t.length);for(let r=0;r<e.length;r++)for(let i=0;i<t.length;i++)n[r][i]=e[r]-t[i];return n}(a,s),u=l[0].length,c=[];for(let e=0;e<r;e++){c[e]=new Float32Array(u);for(let t=0;t<l[e].length;t++){const n=-l[e][t]/o[e],r=l[e+2][t]/o[e+1],i=Math.max(0,Math.min(n,r));c[e][t]=i}}for(let e=0;e<c.length;e++){const t=2/(a[2+e]-a[e]);c[e]=c[e].map((e=>e*t))}return c}(t);return function(e,t){const n=[];for(let r=0;r<e.length;r++)n[r]=ZP(e[r],t);return n}(r,s)}function XP(e,t=1e-10,n=80){const r=e.length,i=e[0].length,s=[];for(let e=0;e<r;e++)s[e]=new Float32Array(i);for(let n=0;n<r;n++)for(let r=0;r<i;r++){const i=e[n][r];s[n][r]=10*Math.log10(Math.max(t,i))}if(n){if(n<0)throw new Error("topDb must be non-negative.");for(let e=0;e<r;e++){const t=s[e].reduce(((e,t)=>Math.max(e,t)));for(let r=0;r<i;r++)s[e][r]=Math.max(s[e][r],t-n)}}return s}function KP(e){if(1===e.numberOfChannels)return e.getChannelData(0);if(2!==e.numberOfChannels)throw Error(`${e.numberOfChannels} channel audio is not supported.`);const t=e.getChannelData(0),n=e.getChannelData(1),r=new Float32Array(e.length);for(let i=0;i<e.length;++i)r[i]=(t[i]+n[i])/2;return r}async function YP(e,t=16e3){if(e.sampleRate===t)return KP(e);const n=e.sampleRate,r=e.length*t/n;if(WP){!function(e,t="Magenta.js",n=10){if(0===n)throw Error("Logging level cannot be NONE.");10>=n&&(5===n?console.warn:console.log)(`%c ${t} `,"background:magenta; color:white",e)}("Safari does not support WebAudio resampling, so this may be slow.","O&F",5);const t=KP(e),n=new Float32Array(r);return BP(zP(n,[r]),zP(t,[t.length])),n}{const n=new OfflineAudioContext(e.numberOfChannels,e.duration*t,t),r=n.createBufferSource();return r.buffer=e,r.connect(n.destination),r.start(),n.startRendering().then((e=>e.getChannelData(0)))}}function ZP(e,t){if(e.length!==t[0].length)throw new Error(`Each entry in filterbank should have dimensions matching FFT. |mags| = ${e.length}, |filterbank[0]| = ${t[0].length}.`);const n=new Float32Array(t.length);for(let r=0;r<t.length;r++){const i=JP(e,t[r]);n[r]=i.reduce(((e,t)=>e+t))}return n}function JP(e,t){if(e.length!==t.length)return console.error(`Buffer length ${e.length} != window length ${t.length}.`),null;const n=new Float32Array(e.length);for(let r=0;r<e.length;r++)n[r]=t[r]*e[r];return n}function QP(e,t){let n,r;"object"==typeof t?[n,r]=t:n=r=t;const i=new Float32Array(e.length+n+r);return i.set(e,n),i}function ez(e){const t=new PP(e.length),n=t.createComplexArray(),r=t.toComplexArray(e);return t.transform(n,r),n}function tz(e,t,n){const r=(t-e)/(n-1),i=new Float32Array(n);for(let t=0;t<n;t++)i[t]=e+r*t;return i}function nz(e){return 1125*Math.log(1+e/700)}var rz,iz,sz,az,oz,lz,uz,cz,hz;!1===la.isWebGL2Available()&&document.body.appendChild(la.getWebGL2ErrorMessage());var dz=200,pz=200,fz=document.getElementById("test_fileInput");function mz(){rz.aspect=window.innerWidth/window.innerHeight,rz.updateProjectionMatrix(),sz.setSize(window.innerWidth,window.innerHeight),vz()}function gz(e){hz.x=e.clientX/window.innerWidth*2-1,hz.y=-e.clientY/window.innerHeight*2+1}function xz(e,t,n){for(var r=new Uint8Array(e*t*n*4),i=0,s=0;s<n;s++)for(var a=0;a<t;a++)for(var o=0;o<e;o++)r[i+0]=o/e*255,r[i+1]=a/t*255,r[i+2]=s/n*255,r[i+3]=255,i+=4;var l=new ge(r,e,t,n);return l.format=y,l.unpackAlignment=1,l.needsUpdate=!0,l}function bz(e,t){for(var n=new Uint8Array(e*t*4),r=0,i=0;i<t;i++)for(var s=0;s<e;s++)n[r+0]=s/e*255,n[r+1]=i/t*255,n[r+2]=0,n[r+3]=255,r+=4;var a=new ds(n,e,t);return a.format=y,a.minFilter=d,a.magFilter=d,a.unpackAlignment=1,a.needsUpdate=!0,a}function vz(){sz.render(iz,rz)}addEventListener("change",(function(){return e=fz,"test",document.getElementById("".concat("test","_fileBtn")).setAttribute("disabled",""),async function(e){const t=new FileReader;return new Promise(((n,r)=>{t.onerror=()=>{t.abort(),r(new DOMException("Something went wrong reading that file."))},t.onload=()=>{n(t.result)},t.readAsArrayBuffer(e)})).then((e=>jP.decodeAudioData(e)))}(e.files[0]).then((function(e){return function(e){return t=this,n=void 0,i=function(){return function(e,t){var n,r,i,s,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(i=2&s[0]?r.return:s[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,s[1])).done)return i;switch(r=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,r=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==s[0]&&2!==s[0])){a=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){a.label=s[1];break}if(6===s[0]&&a.label<i[1]){a.label=i[1],i=s;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(s);break}i[2]&&a.ops.pop(),a.trys.pop();continue}s=t.call(e,a)}catch(e){s=[6,e],r=0}finally{n=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}}(this,(function(t){switch(t.label){case 0:return[4,YP(e)];case 1:return[2,XP(qP(t.sent(),{sampleRate:16e3,hopLength:512,nMels:229,nFft:2048,fMin:20}))]}}))},new((r=void 0)||(r=Promise))((function(e,s){function a(e){try{l(i.next(e))}catch(e){s(e)}}function o(e){try{l(i.throw(e))}catch(e){s(e)}}function l(t){var n;t.done?e(t.value):(n=t.value,n instanceof r?n:new r((function(e){e(n)}))).then(a,o)}l((i=i.apply(t,n||[])).next())}));var t,n,r,i}(e)})).then((function(e){return function(e,t,n){for(var r=new Float32Array(t*n*4),i=0,s=0;s<n;s++)for(var a=0;a<t;a++)r[i+0]=e[a][s],r[i+1]=0,r[i+2]=0,r[i+3]=0,i+=4;var o=Math.max.apply(null,r),l=Math.min.apply(null,r);for(i=0;i<t*n*4;)r[i]=(r[i]-l)/(o-l),i+=4;var u=new ds(r,t,n);return u.format=y,u.type=x,u.minFilter=d,u.magFilter=d,u.unpackAlignment=1,u.needsUpdate=!0,u}(e,e.length,229)})).then((function(e){return t=e,uz.material.map=t,void(cz.material.uniforms.spectrum.value=t);var t}));var e})),function(){iz=new hs,(sz=new cs({antialias:!0})).setPixelRatio(window.devicePixelRatio),sz.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(sz.domElement);var e=window.innerWidth/window.innerHeight;(rz=new wn(45,e,.01,1e3)).position.set(0,0,10),iz.add(rz),(az=new sa(rz,sz.domElement)).addEventListener("change",vz),az.minZoom=.1,az.maxZoom=10,az.enablePan=!1,az.update();var t=new ks(.1,.5,8);t.rotateX(.5*Math.PI);var n=new Is;new pn(t,n).matrixAutoUpdate=!1;var r=new Fn(10,10),i=new Lt({map:bz(dz,pz),side:2});(uz=new pn(r,i)).position.set(0,0,-1),iz.add(uz);var s=new mn(1,1,1),a={volume_scale:{value:new be(1,1,1)},volume:{value:xz(dz,pz,1)},volume_dims:{value:new be(dz,pz,1)},aabb_min:{value:new be},aabb_max:{value:new be},dt_scale:{value:.1},spectrum:{value:bz(dz,pz)}},o=new vn({uniforms:a,vertexShader:"\nuniform vec3 volume_scale;\nout vec3 vray_dir;\nflat out vec3 transformed_eye;\nvoid main(void) {\n\t// TODO: For non-uniform size volumes we need to transform them differently as well\n\t// to center them properly\n\tvec3 volume_translation = vec3(0.5) - volume_scale * 0.5;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1);\n\ttransformed_eye = (cameraPosition - volume_translation) / volume_scale;\n\tvray_dir = position - transformed_eye;\n}",fragmentShader:"\nprecision highp int;\nprecision highp float;\nuniform highp sampler3D volume;\nuniform highp sampler2D spectrum;\nuniform ivec3 volume_dims;\nuniform float dt_scale;\nuniform vec3 aabb_min;\nuniform vec3 aabb_max;\nin vec3 vray_dir;\nflat in vec3 transformed_eye;\n\nvec2 intersect_box(vec3 aabbMin, vec3 aabbMax, vec3 orig, vec3 dir) {\n\n\tvec3 inv_dir = 1.0 / dir;\n\tvec3 tmin_tmp = (aabbMin - orig) * inv_dir;\n\tvec3 tmax_tmp = (aabbMax - orig) * inv_dir;\n\tvec3 tmin = min(tmin_tmp, tmax_tmp);\n\tvec3 tmax = max(tmin_tmp, tmax_tmp);\n\tfloat t0 = max(tmin.x, max(tmin.y, tmin.z));\n\tfloat t1 = min(tmax.x, min(tmax.y, tmax.z));\n\treturn vec2(t0, t1);\n}\n// Pseudo-random number gen from\n// http://www.reedbeta.com/blog/quick-and-easy-gpu-random-numbers-in-d3d11/\n// with some tweaks for the range of values\nfloat wang_hash(int seed) {\n\tseed = (seed ^ 61) ^ (seed >> 16);\n\tseed *= 9;\n\tseed = seed ^ (seed >> 4);\n\tseed *= 0x27d4eb2d;\n\tseed = seed ^ (seed >> 15);\n\treturn float(seed % 2147483647) / float(2147483647);\n}\nfloat linear_to_srgb(float x) {\n\tif (x <= 0.0031308f) {\n\t\treturn 12.92f * x;\n\t}\n\treturn 1.055f * pow(x, 1.f / 2.4f) - 0.055f;\n}\nvec4 color_transfer(float intensity)\n{\n  vec3 high = vec3(0.0, 0.0, 0.0);\n  vec3 low = vec3(1.0, 1.0, 1.0);\n  float alpha = (exp(intensity) - 1.0) / (exp(1.0) - 1.0);\n  return vec4(intensity * high + (1.0 - intensity) * low, alpha);\n}\nvec4 dist_transfer(float dist){\n  float res = 0.0;\n  if (dist > 0.0){\n    res = abs(dist);\n  }\n  vec3 high = vec3(1.0, 1.0, 1.0);\n  vec3 low = vec3(0.0, 0.0, 0.0);\n  float alpha = (exp(res) - 1.0) / (exp(1.0) - 1.0);\n  return vec4(res * high + (1.0 - res) * low, alpha);\n}\n\nfloat sdSphere( vec3 p, vec3 offset, float scale )\n{\n  float dist = length(p - offset) - scale;\n  return 1.0 - clamp(dist, 0.0, 1.0);\n}\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\nvoid main(void) {\n\tvec3 ray_dir = normalize(vray_dir);\n  vec4 color = vec4(0.0);\n\tvec2 t_hit = intersect_box(aabb_min, aabb_max, transformed_eye, ray_dir);\n\tif (t_hit.x > t_hit.y) {\n\t\tdiscard;\n\t}\n\tt_hit.x = max(t_hit.x, 0.0);\n\tvec3 dt_vec = 1.0 / (vec3(volume_dims) * abs(ray_dir));\n\tfloat dt = dt_scale * min(dt_vec.x, min(dt_vec.y, dt_vec.z));\n\t// float offset = wang_hash(int(gl_FragCoord.x + 640.0 * gl_FragCoord.y));\n  // computing the offset for each fragment is too expensive\n  // vec3 p = transformed_eye + (t_hit.x + offset * dt) * ray_dir;\n\tvec3 p = transformed_eye + (t_hit.x + dt) * ray_dir;\n  int step = 0;\n  int maxStep = 100 ;\n\tfor (float t = t_hit.x; t < t_hit.y; t += dt) {\n    if (step > maxStep){\n      break;\n    }\n    //float val = texture(volume, p).r;\n    //float val = texture(spectrum, p.xy).r;\n    //vec4 val_color = vec4(color_transfer(val).rgb, 1.0);\n    // vec4 val_color = texture(spectrum, p.xy);\n    float dist = sdSphere(p, vec3(0.0), 0.6);\n    // sample spectrogram at sdf value \n    vec4 spec_val = texture(spectrum, vec2(0.0, dist));\n    vec4 val_color = vec4(spec_val.r,0.0,0.0,1.0);\n\n    // Opacity correction\n    val_color.w = 1.0 - pow(1.0 - val_color.w, dt_scale);\n\n    // Alpha-blending\n    color.xyz += (1.0 - color.w) * val_color.w * val_color.xyz;\n    color.w += (1.0 - color.w) * val_color.w;\n    if (color.w > 0.99) {\n      break;\n    }\n    if (val_color.w < 0.1) {\n      discard;\n    }\n\t\tp += ray_dir * dt;\n    step++;\n\t}\n  color.x = linear_to_srgb(color.x);\n  color.y = linear_to_srgb(color.y);\n  color.z = linear_to_srgb(color.z);\n  gl_FragColor = color;\n\n}\n",side:2});(cz=new pn(s,o)).matrixAutoUpdate=!1,cz.geometry.computeBoundingBox(),cz.material.uniforms.aabb_min.value=cz.geometry.boundingBox.min,cz.material.uniforms.aabb_max.value=cz.geometry.boundingBox.max,iz.add(cz),hz=new j,window.addEventListener("pointerMove",gz);var l=new Fn(25,25),u=new Lt({visible:!1});(lz=new pn(l,u)).rotation.x=-.5*Math.PI,iz.add(lz),lz.name="plane",new Ws,function(e){var t=new js(10,10);e.add(t),oz=oa(),document.body.appendChild(oz.dom);var n=new qs(3);e.add(n)}(iz),vz(),document.addEventListener("pointermove",gz),window.addEventListener("resize",mz)}(),function e(){oz.update(),requestAnimationFrame(e),vz()}()})()})();
//# sourceMappingURL=bundle.4035a919c6118ff3903a.js.map