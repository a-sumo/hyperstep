{"version":3,"file":"bundle.73ace0e61cd6279b91c7.js","mappings":"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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///./src/volume/script.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/amd define","webpack:///webpack/runtime/amd options","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","\nimport '../style.css';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport Stats from 'three/examples/jsm/libs/stats.module';\nimport WebGL from 'three/examples/jsm/capabilities/WebGL.js';\nimport {loadAudioFromFile, resampleAndMakeMono, melSpectrogram, powerToDb} from '@magenta/music/esm/core/audio_utils';\nimport { GUI } from 'dat.gui/build/dat.gui.min.js';\n\n// This project may use WebGL2-exclusive features\n// See:  https://webgl2fundamentals.org/webgl/lessons/webgl2-whats-new.html\nif ( WebGL.isWebGL2Available() === false ) {\n\n  document.body.appendChild( WebGL.getWebGL2ErrorMessage() );\n\n}\n\nlet camera, \n  scene, \n  renderer, \n  controls, \n  stats\n\nlet debugPlaneMesh,\n  volumeMesh,\n  clock,\n  curveMesh,\n  curve_data\n\nlet analyser,\n  fileURL,\n  audioBuffer\n\n\n// global var for web audio API AudioContext\nlet audioCtx;\n\ntry {\n    audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n    //audioCtx = new AudioContext();\n} catch (e) {\n    throw \"Could not instantiate AudioContext: \" + e.message;\n}\n\n// Volume constants\nconst x_dim = 4;\nconst y_dim = 4;\nconst z_dim = 4;\nconst x_scale = 1;\nconst y_scale = 1;\nconst z_scale = 1;\n\n// Magenta Music  spectrogram constants\nconst SAMPLE_RATE = 16000;\nconst MEL_SPEC_BINS = 229;\nconst SPEC_HOP_LENGTH = 512;\nconst F_MIN = 30;\nconst F_MAX = SAMPLE_RATE / 2;\n\n// Live Audio spectrogram constants\n\nconst FFT_SIZE = 2048;\nconst NUM_FRAMES = 1024;\nconst MIN_DB = -80;\nconst MAX_DB = -10;\nanalyser = audioCtx.createAnalyser();\n\n// Curve constants\nconst NUM_CURVE_POINTS = 5;\n\n// GUI\nconst gui = new GUI( {width: 200 } );\n// gui parameters\n\nconst params = {\n  df_type: 0,dist_func_tube: 1.0, dist_func_box: 1.0, dist_func_plane: 1.0, df_sphere_tube : 0.0,\n  df_sphere_box: 0.0, df_sphere_plane: 0.0, df_tube_box: 0.0, df_tube_plane: 0.0, df_plane_box: 0.0,\n  scale_x: 1, scale_y: 1, scale_z: 1,\n  global_scale: 0.03,  min_dist:0, max_dist:1,\n  rot_x: 0, rot_y: 0, rot_z: 0,\n  translation_x: 0, translation_y: 0, translation_z: 0,\n  playback_rate: 1.0,\n  color_mode: 0, color_preset_type: 0, color_space: 0, uni_color: \"#9838ff\",\n  color_1: \"#000000\", color_2: \"#ffffff\",\n  sample_rate: SAMPLE_RATE,\n  mel_spec_bins: MEL_SPEC_BINS,\n  fft_size: FFT_SIZE,\n  spec_hop_length: SPEC_HOP_LENGTH,\n  f_min: F_MIN,\n  f_max: F_MAX,\n  dt_scale: 0.1,\n  max_steps: 100,\n};\n\n// Set up UI Elements \nconst fileInput = document.getElementById('loadFileInput');\nconst audioEl = document.getElementById('audio')\nconst blob = window.URL || window.webkitURL;\n// const updateEl = document.getElementById('update'); \n// updateEl.addEventListener('click', () => loadFile(fileInput));\nfileInput.addEventListener('change', () => loadFile(fileInput));\n\n\n// Load audio file, generate mel spectrogram \n// and return the spectrogram's data texture\nfunction loadFile(inputElement) {\n  //document.getElementById(`${prefix}_fileBtn`).setAttribute('disabled', '');\n  audioBuffer = loadAudioFromFile(inputElement.files[0]);\n  fileURL = blob.createObjectURL(inputElement.files[0]);\n  audioEl.src = fileURL;\n  return audioBuffer\n  .then(\n    (buffer) => {return preprocessAudio(buffer)})\n  .then(\n    (melSpec) => {\n      return createMMSpectrumDataTexture(melSpec, melSpec.length, MEL_SPEC_BINS)\n      } \n  )\n  .then(\n    (dataTexture) => {return setMeshTexture(dataTexture)}\n  );\n}\n\n// Compute mel spectrogram\nasync function preprocessAudio(audioBuffer) {\n  const resampledMonoAudio = await resampleAndMakeMono(audioBuffer);\n  return powerToDb(melSpectrogram(resampledMonoAudio, {\n    sampleRate: params.sample_rate,\n    hopLength: params.spec_hop_length,\n    nMels: params.mel_spec_bins,\n    nFft: params.fft_size,\n    fMin: params.f_min,\n    fMax: params.f_max,\n  }));\n}\n// Play Audio File\n// async function playAudio(audioBuffer){\n//   const source = audioCtx.createBufferSource();\n//   source.buffer = audioBuffer;\n//   source.connect(audioCtx.destination);\n//   source.start();\n// }\n\n\n// Shaders \nconst raycastVertexShader = /* glsl */`\nuniform vec3 volume_scale;\nout vec3 vray_dir;\nflat out vec3 transformed_eye;\n\nvoid main(void) {\n\tvec3 volume_translation = vec3(0.5) - volume_scale * 0.5;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1);\n\ttransformed_eye = (cameraPosition - volume_translation) / volume_scale;\n\tvray_dir = position - transformed_eye;\n}`;\nconst raycastFragmentShader = /* glsl */`\nprecision highp int;\nprecision highp float;\nin vec3 vray_dir;\nflat in vec3 transformed_eye;\nconst float Epsilon = 1e-10;\n// Scene\nuniform highp sampler3D volume;\nuniform highp sampler2D spectrum;\nuniform highp sampler2D curve_data;\nuniform vec3 aabb_min;\nuniform vec3 aabb_max;\n\n// playback \nuniform float time;\nuniform float playback_progress;\nuniform float playback_rate;\n\n//distance field \nuniform int df_type;\nuniform vec3 df_scale;\nuniform float global_scale;\nuniform float df_sphere_tube;\nuniform float df_sphere_box;\nuniform float df_sphere_plane;\nuniform float df_tube_box;\nuniform float df_tube_plane;\nuniform float df_plane_box;\nuniform vec3 df_rot;\nuniform vec3 df_translation;\nuniform float min_dist;\nuniform float max_dist;\n\n// raycasting volume\nuniform float dt_scale;\nuniform int max_steps;\nuniform ivec3 volume_dims;\nuniform vec3 volume_scale;\nuniform int color_space;\nuniform int color_mode;\nuniform int color_preset_type;\nuniform vec3 uni_color;\nuniform vec3 color_1;\nuniform vec3 color_2;\n\n\n// Axis-Aligned Bounding Box intersection\nvec2 intersect_box(vec3 aabbMin, vec3 aabbMax, vec3 orig, vec3 dir) {\n\n\tvec3 inv_dir = 1.0 / dir;\n\tvec3 tmin_tmp = (aabbMin - orig) * inv_dir;\n\tvec3 tmax_tmp = (aabbMax - orig) * inv_dir;\n\tvec3 tmin = min(tmin_tmp, tmax_tmp);\n\tvec3 tmax = max(tmin_tmp, tmax_tmp);\n\tfloat t0 = max(tmin.x, max(tmin.y, tmin.z));\n\tfloat t1 = min(tmax.x, min(tmax.y, tmax.z));\n\treturn vec2(t0, t1);\n}\n// Color conversions\n// from: http://lolengine.net/blog/2013/07/27/rgb-to-hsv-in-gls\nvec3 rgb2hsv(vec3 c) {\n  vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n  vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n  vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n  float d = q.x - min(q.w, q.y);\n  float e = 1.0e-10;\n  return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c) {\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat linear_to_srgb(float x) {\n\tif (x <= 0.0031308f) {\n\t\treturn 12.92f * x;\n\t}\n\treturn 1.055f * pow(x, 1.f / 2.4f) - 0.055f;\n}\n\n// Clamping\nfloat smoothClamp(float x, float a, float b)\n{\n    return smoothstep(0., 1., (x - a)/(b - a))*(b - a) + a;\n}\n\nfloat softClamp(float x, float a, float b)\n{\n    return smoothstep(0., 1., (2./3.)*(x - a)/(b - a) + (1./6.))*(b - a) + a;\n}\n\nfloat sdSphere( vec3 p, vec3 offset, float scale )\n{\n  float dist = length(p - offset) - scale;\n  return 1.0 - clamp(dist, 0.0, 1.0);\n}\n\nfloat sdPlane( vec3 p, vec3 n, float h )\n{\n  // n must be normalized\n  return dot(p,n) + h;\n}\n\nfloat sdRoundBox( vec3 p, vec3 b, float r )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n}\n\n//3d rotation: https://gist.github.com/yiwenl/3f804e80d0930e34a0b33359259b556c\nmat4 rotationMatrix(vec3 axis, float angle) {\n  axis = normalize(axis);\n  float s = sin(angle);\n  float c = cos(angle);\n  float oc = 1.0 - c;\n  \n  return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,\n              oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,\n              oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,\n              0.0,                                0.0,                                0.0,                                1.0);\n}\n\nvec3 rotate(vec3 v, vec3 axis, float angle) {\n  mat4 m = rotationMatrix(axis, angle);\n  return (m * vec4(v, 1.0)).xyz;\n}\nfloat distCurve(vec3 p){\n  // Experimental: compute distance from 3d curve\n  float min_d = 10.0;\n  float du = 0.2;\n  float u = 0.0;\n  while(u < 1.0 ){\n    vec2 v_pos = vec2(u, 0.0);\n    // point normals are stored in the 3rd row of the texture\n    // whose UV.v coordinate is 0.75\n    vec2 v_norm = vec2(u, 0.75);\n    vec3 dir_vec = p - texture(curve_data, v_pos).rgb ;\n\n    min_d = min(min_d, length(dir_vec));\n    u += du;\n  }\n  return min_dist;\n}\n\nvoid main(void) {\n\tvec3 ray_dir = normalize(vray_dir);\n  vec4 color = vec4(0.0);\n\tvec2 t_hit = intersect_box(aabb_min, aabb_max, transformed_eye, ray_dir);\n\n\tif (t_hit.x > t_hit.y) {\n\t\tdiscard;\n\t}\n\n\tt_hit.x = max(t_hit.x, 0.0);\n\tvec3 dt_vec = 1.0 / (vec3(volume_dims) * abs(ray_dir));\n\tfloat dt = dt_scale * min(dt_vec.x, min(dt_vec.y, dt_vec.z));\n\tvec3 p = transformed_eye + (t_hit.x + dt) * ray_dir;\n\n  vec4 spec_val = texture(spectrum, vec2(0.0, 0.0));\n  spec_val.rgba = vec4(0.0);\n\n  // Frequency coordinate\n  float u_coords = 0.0;\n  // Time coordinate\n  float v_coords = 0.0;\n\n  float dist = 0.0;\n\n  int step = 0;\n\tfor (float t = t_hit.x; t < t_hit.y; t += dt) {\n    if (step > max_steps){\n      break;\n    }\n\n    // position used for distance field calculation\n    vec3 p_dist = p;\n    vec3 p_dist_r = vec3(0.0);\n    vec3 p_dist_t = vec3(0.0);\n    vec3 p_dist_r_t = vec3(0.0);\n\n    // rotate\n    p_dist_r = rotate(p_dist, vec3(1.0, 0.0, 0.0) , radians( df_rot.x));\n    p_dist_r = rotate(p_dist_r, vec3(0.0, 1.0, 0.0) , radians( df_rot.y));\n    p_dist_r = rotate(p_dist_r, vec3(0.0, 0.0, 1.0) , radians( df_rot.z));\n\n    // translate\n    p_dist_t = p_dist - df_translation;\n    \n    // rotate then translate \n    p_dist_r_t = p_dist_r - df_translation;\n\n    // distance function\n    // sphere\n    float dist_sphere = clamp(length(p_dist_r_t), 0.0, 1.0);\n    float u_coords_sphere = playback_progress;\n\n    // tube\n    float dist_tube = length(p_dist_r_t.xy);\n    float u_coords_tube = (p_dist_r_t.z - 0.5) / playback_rate + playback_progress;\n\n    // plane\n    // normal vector \n    vec3 plane_n = vec3(0.0);\n    plane_n = rotate(vec3(0.0,1.0,0.0), vec3(1.0, 0.0, 0.0) , radians( df_rot.x));\n    plane_n = rotate(plane_n, vec3(0.0, 1.0, 0.0) , radians( df_rot.y));\n    plane_n = rotate(plane_n, vec3(0.0, 0.0, 1.0) , radians( df_rot.z));\n    float dist_plane = dot(p_dist_t, plane_n);\n    float u_coords_plane = playback_progress;\n\n    // round box \n    float dist_box = sdRoundBox(p_dist_r_t, df_scale * global_scale * 1.3, 0.0);\n    float u_coords_box = u_coords_sphere;\n\n    // TODO: curve\n    float dist_curve = distCurve(p_dist);\n    float u_coords_curve = u_coords_tube;\n\n    // Interpolate between distance functions\n    if(df_type ==  0){\n      u_coords =  mix(u_coords_sphere, u_coords_tube, df_sphere_tube);\n      dist =  mix(dist_sphere, dist_tube, df_sphere_tube);\n    }\n    else if ( df_type == 1){\n      u_coords =  mix(u_coords_sphere, u_coords_box, df_sphere_box);\n      dist =  mix(dist_sphere, dist_box, df_sphere_box);      \n    }\n    else if ( df_type == 2){\n      u_coords =  mix(u_coords_sphere, u_coords_plane, df_sphere_plane);\n      dist =  mix(dist_sphere, dist_plane, df_sphere_plane);         \n    }\n    else if ( df_type == 3){\n      u_coords =  mix(u_coords_tube, u_coords_box, df_tube_box);\n      dist =  mix(dist_tube, dist_box, df_tube_box);   \n    }\n    else if (df_type == 4){\n      u_coords =  mix(u_coords_tube, u_coords_plane, df_tube_plane);\n      dist =  mix(dist_tube, dist_plane, df_tube_plane);   \n    }\n    else if (df_type == 5){\n      u_coords =  mix(u_coords_plane, u_coords_box, df_plane_box);\n      dist =  mix(dist_plane, dist_box, df_plane_box);   \n    }\n\n    v_coords = length(df_scale) * global_scale / max(pow(dist,2.0), Epsilon);\n\n    spec_val = texture(spectrum, vec2(u_coords, v_coords));\n\n    // THREE.js sets values outside texture borders(outside the [0,1] x [0,1] range) \n    // to the values at the borders\n    // This an undesired effect for our purposes so we set those values \n    // to zero. \n    if (u_coords < 0. || u_coords > 1. || \n      v_coords < 0. || v_coords > 1.){\n      spec_val = vec4(0.0);\n    }\n    // Soft Clamp values\n    if (dist < min_dist || dist > max_dist){\n      spec_val *= softClamp(dist - max_dist, 0., 1.);\n    }\n    vec4 val_color = vec4(0.0);\n\n    float mixValue = max(dist, Epsilon);\n    vec3 mix_color = vec3(0.0);\n    if (color_mode == 0) {\n      // Use color presets\n      vec4 preset_color = vec4(pow(spec_val.r,10.0) * 1./dist,\n      pow(spec_val.r, 2.0),\n      pow(spec_val.r, 0.0) * 1./dist, spec_val.r) ;\n\n      // swizzle color components to define presets\n      if ( color_preset_type == 0){\n        val_color = preset_color.xyzw;\n      }\n      if ( color_preset_type == 1){\n        val_color = preset_color.zxyw;\n      }\n      else if(color_preset_type == 2) {\n        val_color = preset_color.zyxw;\n      }\n      else if(color_preset_type == 3) {\n        val_color = preset_color.xzyw;\n      }\n      else if(color_preset_type == 4) {\n        val_color = preset_color.yxzw;\n      }\n    }\n    else if (color_mode == 1) {\n      // Use color  gradient\n      if (color_space == 0) {\n        // mix color in rgb space\n        mix_color = mix(color_1, color_2, mixValue);\n      }\n      else if (color_space == 1) {\n        // Mix color in  hsv space\n        vec3 hsv1 = rgb2hsv(color_1);\n        vec3 hsv2 = rgb2hsv(color_2);\n        float hue = (mod(mod((hsv2.x - hsv1.x), 1.) + 1.5, 1.) - 0.5) * mixValue + hsv1.x;\n        vec3 hsv = vec3(hue, mix(hsv1.yz, hsv2.yz, mixValue));\n        mix_color = hsv2rgb(hsv);\n      }\n      val_color = vec4(mix_color, spec_val.r);\n    }\n    else if (color_mode == 2) {\n      // Use unique color\n\n      val_color = vec4(\n        pow(spec_val.r, (1.0 - uni_color.x) * 10.0), \n        pow(spec_val.r, (1.0 - uni_color.y) * 10.0), \n        pow(spec_val.r, (1.0 - uni_color.z) * 10.0), \n        spec_val.r);\n        val_color.xyz *= 1.0 / max(dist, Epsilon);\n    }\n    // Opacity correction\n    val_color.w = 1.0 - pow(1.0 - val_color.w, dt_scale);\n\n    // Alpha-blending\n    color.xyz += (1.0 - color.w) * val_color.w * val_color.xyz;\n    color.w += (1.0 - color.w) * val_color.w;\n    if (color.w > 0.99) {\n      break;\n    }\n    if (val_color.w < 0.0) {\n      discard;\n    }\n    // step along the ray direction\n\t\tp += ray_dir * dt;\n    step++;\n\t}\n\n  color.x = linear_to_srgb(color.x);\n  color.y = linear_to_srgb(color.y);\n  color.z = linear_to_srgb(color.z);\n\n  gl_FragColor = color;\n\n}\n`;\n\n// Main body\ninit();\nanimate();\n\n\nfunction init() {\n  scene = new THREE.Scene();\n\n  // Renderer\n  renderer = new THREE.WebGLRenderer({antialias: true});\n  renderer.setPixelRatio( window.devicePixelRatio );\n  renderer.setSize( window.innerWidth, window.innerHeight );\n  document.body.appendChild( renderer.domElement );\n\n  // Camera\n  // Perspective\n  const aspect = window.innerWidth / window.innerHeight;\n  camera = new THREE.PerspectiveCamera( 45, aspect, 0.01, 1000 );\n  // // Orthographic\n  // const width = 5;\n  // const h = 2 * width; // frustum height\n  // const aspect = window.innerWidth / window.innerHeight;\n  // camera = new THREE.OrthographicCamera( - h * aspect / 2, h * aspect / 2, h / 2, - h / 2, 0.01, 1000 );\n  camera.position.set( -2, 1, 2 );\n  scene.add(camera);\n\n  // Clock\n  clock = new THREE.Clock();\n\n  // Controls\n  controls = new OrbitControls( camera, renderer.domElement );\n  controls.addEventListener( 'change', render );\n  controls.minZoom = 0.1;\n  controls.maxZoom = 10;\n  controls.enablePan = false;\n  controls.update();\n\n  // GUI\n  addGUI();\n\n  // Debug spectrogram texture\n  let planeGeo1 = new THREE.PlaneGeometry(2, 2);\n  let planeMat1 = new THREE.MeshBasicMaterial({ map: createDataTexture(x_dim, y_dim), side: THREE.DoubleSide});\n  debugPlaneMesh = new THREE.Mesh(planeGeo1, planeMat1);\n  debugPlaneMesh .position.set( -2, 0, -1 );\n  // scene.add(debugPlaneMesh);\n\n\n  const curve = initCurveData(NUM_CURVE_POINTS);\n  const points = curve.getPoints( 5 );\n  const curve_geometry = new THREE.BufferGeometry().setFromPoints( points );\n  const curve_material = new THREE.LineBasicMaterial( { color: 0xff0000 } );\n\n  // Create curveMesh to add to the scene\n  curveMesh = new THREE.Line( curve_geometry, curve_material );\n  curveMesh.matrixAutoUpdate = false;\n  // scene.add(curveMesh);\n\n  // Volume \n  const volumeGeometry = new THREE.BoxGeometry( x_scale, y_scale, z_scale);\n\n  const volumeUniforms =  {\n    'volume_scale': { value: new THREE.Vector3( x_scale, y_scale, z_scale ) },\n    'volume': { value: create3dDataTexture(x_dim, y_dim, z_dim) },\n    'volume_dims': { value: new THREE.Vector3( x_dim, y_dim, z_dim) },\n    'min_dist': { value: params.min_dist},\n    'max_dist': { value: params.max_dist},\n    'color_mode': { value: params.color_mode},\n    'color_preset_type': { value: params.color_preset_type},\n    'color_space': {value: params.color_space},\n    'uni_color': { value: new THREE.Color(params.uni_color) },\n    'color_1': { value: new THREE.Color(params.color_1) },\n    'color_2': { value: new THREE.Color(params.color_2)},\n    'aabb_min': { value: new THREE.Vector3()},\n    'aabb_max': { value: new THREE.Vector3()},\n    'dt_scale': { value: params.dt_scale},\n    'max_steps': { value: params.max_steps},\n    'spectrum': { value: createDataTexture(NUM_FRAMES, FFT_SIZE / 2) },\n    'curve_data': { value: createCurveDataTexture(curve_data) },\n    'time': {value: clock.getElapsedTime()},\n    'playback_progress': {value: 0.0},\n    'df_sphere_tube': {value: params.df_sphere_tube},\n    'df_sphere_box': {value: params.df_sphere_box},\n    'df_sphere_plane': {value: params.df_sphere_plane},\n    'df_tube_box': {value: params.df_tube_box},\n    'df_tube_plane': {value: params.df_tube_plane},\n    'df_plane_box': {value: params.df_plane_box},\n    'playback_rate': {value: 1.0},\n    'df_translation': {value: new THREE.Vector3(params.translation_x,params.translation_y,params.translation_z)},\n    'df_rot': {value: new THREE.Vector3(params.rot_x,params.rot_y,params.rot_z)},\n    'df_scale': {value: new THREE.Vector3(params.scale_x,params.scale_y,params.scale_z)},\n    'global_scale': {value: params.global_scale},\n    'df_type':{value: 0}\n  };\n\n  const volumeMaterial = new THREE.ShaderMaterial({\n    uniforms: volumeUniforms,\n    vertexShader: raycastVertexShader,\n    fragmentShader: raycastFragmentShader,\n    side: THREE.DoubleSide,\n    transparent: true\n  });\n\n  volumeMesh = new THREE.Mesh( volumeGeometry, volumeMaterial);\n  volumeMesh.matrixAutoUpdate = true;\n  volumeMesh.geometry.computeBoundingBox();\n\n  (volumeMesh.material).uniforms['aabb_min']['value'] = volumeMesh.geometry.boundingBox.min;\n  (volumeMesh.material).uniforms['aabb_max']['value'] = volumeMesh.geometry.boundingBox.max;\n\n  scene.add(volumeMesh);\n\n  //addHelpers(scene);\n  window.addEventListener( 'resize', onWindowResize );\n  \n  render();\n\n}\n\n\nfunction animate(){\n  requestAnimationFrame(animate);\n  updateUniforms();\n  //stats.update();\n  render();\n}\nfunction render() {\n  renderer.render(scene, camera);\n}\n\nfunction onWindowResize() {\n  // Orthographic Camera\n  // renderer.setSize( window.innerWidth, window.innerHeight );\n\n  // const aspect = window.innerWidth / window.innerHeight;\n\n  // const frustumHeight = camera.top - camera.bottom;\n\n  // camera.left = - frustumHeight * aspect / 2;\n  // camera.right = frustumHeight * aspect / 2;\n\n  // Perspective Camera\n  // camera.updateProjectionMatrix();\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n\n  renderer.setSize( window.innerWidth, window.innerHeight );\n  render();\n\n}\n\nfunction addHelpers (scene) {\n  const gridHelper = new THREE.GridHelper( 10, 10);\n  scene.add( gridHelper );\n  stats = Stats();\n  document.body.appendChild(stats.dom)\n  const axesHelper = new THREE.AxesHelper( 1 );\n  scene.add( axesHelper );\n}\n\nfunction updateUniforms(){\n  (volumeMesh.material).uniforms['time']['value'] = clock.getElapsedTime();\n  (volumeMesh.material).uniforms['curve_data']['value'] =  updateCurveData(curveMesh, NUM_CURVE_POINTS);\n  (volumeMesh.material).uniforms['playback_progress']['value'] = (audioEl.currentTime) / audioEl.duration;\n}\n// Creates 3D texture with RGB gradient along the XYZ axes\nfunction create3dDataTexture(width, height, depth) {\n\tconst d = new Uint8Array( width * height * depth * 4 );\n\tlet stride = 0;\n\n\tfor ( let z = 0; z < depth; z ++ ) {\n\t\tfor ( let y = 0; y < height; y ++ ) {\n\t\t\tfor ( let x = 0; x < width; x ++ ) {\n \t\t\t\td[stride + 0] = (x / width) * 255;\n\t\t\t\td[stride + 1] = (y / height) * 255;\n\t\t\t\td[stride + 2] = (z / depth) * 255; \n        d[stride + 3] = 255;\n\t\t\t\tstride += 4;\n\t\t\t}\n\t\t}\n\t}\n\tconst texture = new THREE.Data3DTexture( d, width, height, depth );\n\ttexture.format = THREE.RGBAFormat;\n  //texture.type = THREE.FloatType;\n\ttexture.minFilter = THREE.NearestFilter;\n\ttexture.magFilter = THREE.NearestFilter;\n\ttexture.unpackAlignment = 1;\n\ttexture.needsUpdate = true;\n\n\treturn texture;\n}\nfunction createDataTexture(width, height) {\n\n\tconst d = new Float32Array( width * height * 4 );\n\n\tlet stride = 0;\n  for ( let y = 0; y < height; y ++ ) {\n    for ( let x = 0; x < width; x ++ ) {\n      d[stride + 0] = 0;\n      d[stride + 1] = 0;\n      d[stride + 2] = 0;\n      d[stride + 3] = 1;\n      stride += 4;\n    }\n\t}\n\tconst texture = new THREE.DataTexture( d, width, height );\n\ttexture.format = THREE.RGBAFormat;\n  texture.type = THREE.FloatType;\n\ttexture.minFilter = THREE.NearestFilter;\n\ttexture.magFilter = THREE.NearestFilter;\n\ttexture.unpackAlignment = 1;\n\ttexture.needsUpdate = true;\n\n\treturn texture;\n}\nfunction createMMSpectrumDataTexture(data, width, height) {\n\tconst d = new Float32Array( width * height * 4 );\n\tlet stride = 0;\n  for ( let y = 0; y < height; y ++ ) {\n    for ( let x = 0; x < width; x ++ ) {\n      d[stride + 0] = data[x][y];\n      d[stride + 1] = 0;\n      d[stride + 2] = 0;\n      d[stride + 3] = 0;\n      stride += 4;\n    }\n\t}\n  var max = -Infinity; \n  var min = Infinity; \n  for(var i = 0; i < d.length; i++ ) if (d[i] > max) max = d[i];\n  for(var i = 0; i < d.length; i++ ) if (d[i] < min) min = d[i];\n\n  // normalize array \n  stride = 0;\n  while(stride < width * height * 4 ){\n    d[stride] = (d[stride] - min) / (max - min);\n    stride +=4;\n  }\n\tconst texture = new THREE.DataTexture( d, width, height );\n\ttexture.format = THREE.RGBAFormat;\n  texture.type = THREE.FloatType;\n\ttexture.minFilter = THREE.NearestFilter;\n\ttexture.magFilter = THREE.NearestFilter;\n\ttexture.unpackAlignment = 1;\n\ttexture.needsUpdate = true;\n\n\treturn texture;\n}\n\nfunction createCurveDataTexture(data){\n\tconst d = new Float32Array( data.numPoints *  4 * 4 );\n\tlet stride = 0;\n  const pt_data = [data.positions, data.tangents, data.normals, data.binormals];\n  for ( let j = 0; j < 4; j ++ ) {\n    for ( let k = 0; k < data.numPoints; k ++ ) {\n      d[stride + 0] = pt_data[j][k].x;\n      d[stride + 1] = pt_data[j][k].y;\n      d[stride + 2] = pt_data[j][k].z;\n      d[stride + 3] = 1.0;\n      stride += 4; \n    }\n  }\n  const texture = new THREE.DataTexture( d, data.numPoints, 1 );\n  texture.type = THREE.FloatType;\n  texture.format = THREE.RGBAFormat;\n  texture.minFilter = THREE.NearestFilter;\n\ttexture.magFilter = THREE.NearestFilter;\n\ttexture.unpackAlignment = 1;\n\ttexture.needsUpdate = true;\n  return texture\n}\n\nfunction initCurveData(num_points){\n\n  const curve = new THREE.CatmullRomCurve3( [\n    new THREE.Vector3( 0, 0.0, -0.5 ),\n    new THREE.Vector3(0, 0.0,  -0.25 ),\n    new THREE.Vector3( 0, 0.0 , 0),\n    new THREE.Vector3( 0, 0.0, 0.25 ),\n    new THREE.Vector3( 0, 0.0, 0.5 )\n  ] );\n  const cPoints = curve.getSpacedPoints(num_points);\n  const  cObjects = curve.computeFrenetFrames(num_points, true);\n\n  curve_data =  {\n    positions : cPoints,\n    tangents :cObjects.tangents,\n    normals : cObjects.normals,\n    binormals : cObjects.binormals,\n    numPoints : num_points\n  }\n  return curve;\n}\n\nfunction updateCurveData(curve_mesh, num_points){\n\n  const geo_array = curve_mesh.geometry.attributes.position.array;\n\n  // rebuild the curve\n  const positions = Array(num_points);\n  let i3 = 0;\n\tfor (let i = 0; i < num_points ; i ++ ) {\n    if(i == num_points - 1){\n      positions[i] = new THREE.Vector3(\n        geo_array[i3 + 0],\n        geo_array[i3 + 1] + Math.abs(Math.sin(clock.getElapsedTime())),\n        geo_array[i3 + 2]);\n    }\n    else{\n      positions[i] = new THREE.Vector3(\n        geo_array[i3 + 0],\n        geo_array[i3 + 1],\n        geo_array[i3 + 2]);   \n    }\n    i3 += 3;\n  }\n\n  const curve = new THREE.CatmullRomCurve3(positions); \n  const cPoints = curve.getSpacedPoints(num_points);\n  const  cObjects = curve.computeFrenetFrames(num_points, true);\n\n  // update curve_data interface\n  curve_data =  {\n    positions : cPoints,\n    tangents :cObjects.tangents,\n    normals : cObjects.normals,\n    binormals : cObjects.binormals,\n    numPoints : num_points\n  }\n\n  return createCurveDataTexture(curve_data);\n}\nfunction setMeshTexture(texture){\n  (debugPlaneMesh.material).map = texture;\n  (debugPlaneMesh.material).dispose();\n  (volumeMesh.material).uniforms['spectrum']['value'] = texture;\n  (volumeMesh.material).dispose();\n}\n\nfunction addGUI() {\n  gui.add( params, 'playback_rate').step(0.001).name( 'playback_rate' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['playback_rate']['value'] = 1.0 / value;\n    audioEl.playbackRate = value;\n  } );\n  // Distance Function\n  const df_folder = gui.addFolder('distance function') ;\n  df_folder.add( params, 'min_dist').step(0.01).name( 'min_dist' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['min_dist']['value'] = value;\n  } );\n  df_folder.add( params, 'max_dist').step(0.01).name( 'max_dist' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['max_dist']['value'] = value;\n  } );\n  df_folder.add( params, 'df_type', {\n    'Sphere - Tube': 0,'Sphere - Box': 1,'Sphere - Plane': 2,\n    'Tube - Box': 3, 'Tube - Plane': 4,'Plane - Box': 5}).name( 'sphere/tube' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_type']['value'] = value;\n  } );\n  df_folder.add( params, 'df_sphere_tube', 0, 1).step(0.01).name( 'sphere/tube' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_sphere_tube']['value'] = value;\n  } );\n  df_folder.add( params, 'df_sphere_box', 0, 1).step(0.01).name( 'sphere/box' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_sphere_box']['value'] = value;\n  } );\n  df_folder.add( params, 'df_sphere_plane', 0, 1).step(0.01).name( 'sphere/plane' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_sphere_plane']['value'] = value;\n  } );\n  df_folder.add( params, 'df_tube_box', 0, 1).step(0.01).name( 'tube/box' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_tube_box']['value'] = value;\n  } );\n  df_folder.add( params, 'df_tube_plane', 0, 1).step(0.01).name( 'tube/plane' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_tube_plane']['value'] = value;\n  } );\n  df_folder.add( params, 'df_plane_box', 0, 1).step(0.01).name( 'plane/box' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_plane_box']['value'] = value;\n  } );\n  df_folder.add( params, 'global_scale').step(0.0001).name( 'global_scale' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['global_scale']['value'] = value;\n  } );\n  const transforms = gui.addFolder('transforms') ;\n  transforms.add( params, 'scale_x', 0, 1).step(0.00001).name( 'scale_x' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_scale']['value'] = new THREE.Vector3(value, params.scale_y, params.scale_z);\n  } );\n  transforms .add( params, 'scale_y', 0, 1).step(0.00001).name( 'scale_y' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_scale']['value'] = new THREE.Vector3(params.scale_x, value, params.scale_z);\n  } );\n  transforms.add( params, 'scale_z', 0, 1).step(0.00001).name( 'scale_z' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_scale']['value'] = new THREE.Vector3(params.scale_x, params.scale_y, value);\n  } );\n  transforms.add( params, 'rot_x', -360, 360).step(0.1).name( 'rotate_x' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_rot']['value'] = new THREE.Vector3(value, params.rot_y, params.rot_z);\n  } );\n  transforms.add( params, 'rot_y', -360, 360).step(0.1).name( 'rotate_y' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_rot']['value'] = new THREE.Vector3(params.rot_x, value, params.rot_z);\n  } );\n  transforms.add( params, 'rot_z', -360, 360).step(0.1).name( 'rotate_z' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_rot']['value'] = new THREE.Vector3(params.rot_x, params.rot_y, value);\n  } );\n  transforms.add( params, 'translation_x').step(0.01).name( 'translate_x' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_translation']['value'] = new THREE.Vector3(value, params.translation_y, params.translation_z);\n  } );\n  transforms.add( params, 'translation_y').step(0.01).name( 'translate_y' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_translation']['value'] = new THREE.Vector3(params.translation_x, value, params.translation_z);\n  } );\n  transforms.add( params, 'translation_z').step(0.01).name( 'translate_z' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_translation']['value'] = new THREE.Vector3(params.translation_x, params.translation_y, value);\n  } );\n  // Color\n  const color_folder = gui.addFolder('color') ;\n  color_folder.add( params, 'color_mode', {'Presets': 0, 'Gradient': 1, 'Unicolor': 2}).name( 'color_mode' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['color_mode']['value'] = value;\n  } );\n  color_folder.add( params, 'color_preset_type', 0, 4).step(1).name( 'color_preset' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['color_preset_type']['value'] = value;\n  } );\n  color_folder.add( params, 'color_space', {'RBG': 0, 'HSV': 1}).name( 'color_space' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['color_space']['value'] = value ;\n  } );\n  color_folder.addColor( params, 'uni_color').name( 'unicolor' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['uni_color']['value'] = new THREE.Color(value) ;\n  } );\n  color_folder.addColor( params, 'color_1').name( 'color_1' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['color_1']['value'] = new THREE.Color(value) ;\n  } );\n  color_folder.addColor( params, 'color_2').name( 'color_2' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['color_2']['value'] = new THREE.Color(value) ;\n  } ); \n  // Spectrogram\n  const spectrogram_folder = gui.addFolder('spectrogram') ;\n  spectrogram_folder.add( params, 'sample_rate',16000, 41000 ).step(1000).name( 'sample_rate' ).onChange( function ( value ) {\n  } );\n  spectrogram_folder.add( params, 'mel_spec_bins', 229,512).step(1).name( 'mel_spec_bins' );\n  // spectrogram_folder.add( params, 'spec_hop_length', 8,).step(1).name( 'spec_hop_length' );\n  // spectrogram_folder.add( params, 'fft_size', {'128': 128, '256': 256,\n  //  '512':512, '1024': 1024, '2048':2048} ).name( 'fft_size' );\n  spectrogram_folder.add( params, 'f_min', 30, ).step(10).name( 'f_min' );\n  spectrogram_folder.add( params, 'f_max', 30, 16000).step(10).name( 'f_max' );\n  // Raycasting\n  const raycasting_folder = gui.addFolder('raycasting') ;\n  raycasting_folder.add( params, 'dt_scale', 0.005,).step(0.001).name( 'dt_scale' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['dt_scale']['value'] = value;    \n  } );\n  raycasting_folder.add( params, 'max_steps', 1,).step(1).name( 'max_steps' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['max_steps']['value'] = value;    \n  } );\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdD = function () {\n\tthrow new Error('define cannot be used indirect');\n};","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t414: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk\"] = self[\"webpackChunk\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [216], () => (__webpack_require__(7039)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","camera","scene","renderer","controls","debugPlaneMesh","volumeMesh","clock","curveMesh","curve_data","analyser","fileURL","audioBuffer","audioCtx","WebGL","document","body","appendChild","window","AudioContext","webkitAudioContext","e","message","createAnalyser","gui","GUI","width","params","df_type","dist_func_tube","dist_func_box","dist_func_plane","df_sphere_tube","df_sphere_box","df_sphere_plane","df_tube_box","df_tube_plane","df_plane_box","scale_x","scale_y","scale_z","global_scale","min_dist","max_dist","rot_x","rot_y","rot_z","translation_x","translation_y","translation_z","playback_rate","color_mode","color_preset_type","color_space","uni_color","color_1","color_2","sample_rate","mel_spec_bins","fft_size","spec_hop_length","f_min","f_max","SAMPLE_RATE","dt_scale","max_steps","fileInput","getElementById","audioEl","blob","URL","webkitURL","render","onWindowResize","aspect","innerWidth","innerHeight","updateProjectionMatrix","setSize","create3dDataTexture","height","depth","d","Uint8Array","stride","z","y","x","texture","THREE","format","minFilter","magFilter","unpackAlignment","needsUpdate","createDataTexture","Float32Array","type","createCurveDataTexture","data","numPoints","pt_data","positions","tangents","normals","binormals","j","k","addEventListener","loadFile","inputElement","loadAudioFromFile","files","createObjectURL","src","then","buffer","async","resampledMonoAudio","resampleAndMakeMono","powerToDb","melSpectrogram","sampleRate","hopLength","nMels","nFft","fMin","fMax","preprocessAudio","melSpec","max","min","Infinity","i","length","createMMSpectrumDataTexture","dataTexture","material","map","dispose","uniforms","antialias","setPixelRatio","devicePixelRatio","domElement","position","set","add","OrbitControls","minZoom","maxZoom","enablePan","update","step","name","onChange","value","playbackRate","df_folder","addFolder","transforms","color_folder","addColor","spectrogram_folder","raycasting_folder","addGUI","planeGeo1","planeMat1","side","points","num_points","curve","cPoints","getSpacedPoints","cObjects","computeFrenetFrames","initCurveData","getPoints","curve_geometry","setFromPoints","curve_material","color","matrixAutoUpdate","volumeGeometry","volumeUniforms","FFT_SIZE","getElapsedTime","volumeMaterial","vertexShader","fragmentShader","transparent","geometry","computeBoundingBox","boundingBox","init","animate","requestAnimationFrame","curve_mesh","geo_array","attributes","array","Array","i3","Math","abs","sin","updateCurveData","currentTime","duration","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","call","m","amdD","Error","amdO","O","result","chunkIds","fn","priority","notFulfilled","fulfilled","Object","keys","every","key","splice","r","n","getter","__esModule","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}