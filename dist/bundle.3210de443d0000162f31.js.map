{"version":3,"file":"bundle.3210de443d0000162f31.js","mappings":"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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///./src/volume/ringbuf.js/index.js","webpack:///./src/assets/audio/r2d2_talk.mp3","webpack:///./src/volume/script.js","webpack:///./src/assets/audio/synth_melody.mp3","webpack:///./src/assets/audio/theremin_tone.mp3","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/publicPath","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n// Send audio interleaved audio frames between threads, wait-free.\n//\n// Those classes allow communicating between a non-real time thread (browser\n// main thread or worker) and a real-time thread (in an AudioWorkletProcessor).\n// Write and Reader cannot change role after setup, unless externally\n// synchronized.\n//\n// GC _can_ happen during the initial construction of this object when hopefully\n// no audio is being output. This depends on how implementations schedule GC\n// passes. After the setup phase no GC is triggered on either side of the queue..\n\n// Interleaved -> Planar audio buffer conversion\n//\n// `input` is an array of n*128 frames arrays, interleaved, where n is the\n// channel count.\n// output is an array of 128-frames arrays.\n//\n// This is useful to get data from a codec, the network, or anything that is\n// interleaved, into planar format, for example a Web Audio API AudioBuffer or\n// the output parameter of an AudioWorkletProcessor.\nfunction deinterleave(input, output) {\n  var channel_count = input.length / 256;\n  if (output.length != channel_count) {\n    throw \"not enough space in output arrays\";\n  }\n  for (var i = 0; i < channelCount; i++) {\n    let out_channel = output[i];\n    let interleaved_idx = i;\n    for (var j = 0; j < 128; ++j) {\n      out_channel[j] = input[interleaved_idx];\n      interleaved_idx += channel_count;\n    }\n  }\n}\n// Planar -> Interleaved audio buffer conversion\n//\n// Input is an array of `n` 128 frames Float32Array that hold the audio data.\n// output is a Float32Array that is n*128 elements long. This function is useful\n// to get data from the Web Audio API (that does planar audio), into something\n// that codec or network streaming library expect.\nfunction interleave(input, output) {\n  if (input.length * 128 != output.length) {\n    throw \"input and output of incompatible sizes\";\n  }\n  var out_idx = 0;\n  for (var i = 0; i < 128; i++) {\n    for (var channel = 0; j < output.length; j++) {\n      output[out_idx] = input[channel][i];\n      out_idx++;\n    }\n  }\n}\n\nclass AudioWriter {\n  // From a RingBuffer, build an object that can enqueue enqueue audio in a ring\n  // buffer.\n  constructor(ringbuf) {\n    if (ringbuf.type() != \"Float32Array\") {\n      throw \"This class requires a ring buffer of Float32Array\";\n    }\n    this.ringbuf = ringbuf;\n  }\n  // Enqueue a buffer of interleaved audio into the ring buffer.\n  // Returns the number of samples that have been successfuly written to the\n  // queue. `buf` is not written to during this call, so the samples that\n  // haven't been written to the queue are still available.\n  enqueue(buf) {\n    return this.ringbuf.push(buf);\n  }\n  // Query the free space in the ring buffer. This is the amount of samples that\n  // can be queued, with a guarantee of success.\n  available_write() {\n    return this.ringbuf.available_write();\n  }\n}\n\nclass AudioReader {\n  constructor(ringbuf) {\n    if (ringbuf.type() != \"Float32Array\") {\n      throw \"This class requires a ring buffer of Float32Array\";\n    }\n    this.ringbuf = ringbuf;\n  }\n  // Attempt to dequeue at most `buf.length` samples from the queue. This\n  // returns the number of samples dequeued. If greater than 0, the samples are\n  // at the beginning of `buf`\n  dequeue(buf) {\n    if (this.ringbuf.empty()) {\n      return 0;\n    }\n    return this.ringbuf.pop(buf);\n  }\n  // Query the occupied space in the queue. This is the amount of samples that\n  // can be read with a guarantee of success.\n  available_read() {\n    return this.ringbuf.available_read();\n  }\n}\n\n// Communicate parameter changes, lock free, no gc.\n//\n// between a UI thread (browser main thread or worker) and a real-time thread\n// (in an AudioWorkletProcessor). Write and Reader cannot change role after\n// setup, unless externally synchronized.\n//\n// GC can happen during the initial construction of this object when hopefully\n// no audio is being output. This depends on the implementation.\n//\n// Parameter changes are like in the VST framework: an index and a float value\n// (no restriction on the value).\n//\n// This class supports up to 256 parameters, but this is easy to extend if\n// needed.\n//\n// An element is a index, that is an unsigned byte, and a float32, which is 4\n// bytes.\n\nclass ParameterWriter {\n  // From a RingBuffer, build an object that can enqueue a parameter change in\n  // the queue.\n  constructor(ringbuf) {\n    if (ringbuf.type() != \"Uint8Array\") {\n      throw \"This class requires a ring buffer of Uint8Array\";\n    }\n    const SIZE_ELEMENT = 5;\n    this.ringbuf = ringbuf;\n    this.mem = new ArrayBuffer(SIZE_ELEMENT);\n    this.array = new Uint8Array(this.mem);\n    this.view = new DataView(this.mem);\n  }\n  // Enqueue a parameter change for parameter of index `index`, with a new value\n  // of `value`.\n  // Returns true if enqueuing suceeded, false otherwise.\n  enqueue_change(index, value) {\n    const SIZE_ELEMENT = 5;\n    this.view.setUint8(0, index);\n    this.view.setFloat32(1, value);\n    if (this.ringbuf.available_write() < SIZE_ELEMENT) {\n      return false;\n    }\n    return this.ringbuf.push(this.array) == SIZE_ELEMENT;\n  }\n}\n\nclass ParameterReader {\n  constructor(ringbuf) {\n    const SIZE_ELEMENT = 5;\n    this.ringbuf = ringbuf;\n    this.mem = new ArrayBuffer(SIZE_ELEMENT);\n    this.array = new Uint8Array(this.mem);\n    this.view = new DataView(this.mem);\n  }\n  dequeue_change(o) {\n    if (this.ringbuf.empty()) {\n      return false;\n    }\n    var rv = this.ringbuf.pop(this.array);\n    o.index = this.view.getUint8(0);\n    o.value = this.view.getFloat32(1);\n\n    return true;\n  }\n}\n\n// A Single Producer - Single Consumer thread-safe wait-free ring buffer.\n//\n// The producer and the consumer can be separate thread, but cannot change role,\n// except with external synchronization.\n\nclass RingBuffer {\n  static getStorageForCapacity(capacity, type) {\n    if (!type.BYTES_PER_ELEMENT) {\n      throw \"Pass in a ArrayBuffer subclass\";\n    }\n    var bytes = 8 + (capacity + 1) * type.BYTES_PER_ELEMENT;\n    return new SharedArrayBuffer(bytes);\n  }\n  // `sab` is a SharedArrayBuffer with a capacity calculated by calling\n  // `getStorageForCapacity` with the desired capacity.\n  constructor(sab, type) {\n    if (!ArrayBuffer.__proto__.isPrototypeOf(type) &&\n      type.BYTES_PER_ELEMENT !== undefined) {\n      throw \"Pass a concrete typed array class as second argument\";\n    }\n\n    // Maximum usable size is 1<<32 - type.BYTES_PER_ELEMENT bytes in the ring\n    // buffer for this version, easily changeable.\n    // -4 for the write ptr (uint32_t offsets)\n    // -4 for the read ptr (uint32_t offsets)\n    // capacity counts the empty slot to distinguish between full and empty.\n    this._type = type;\n    this.capacity = (sab.byteLength - 8) / type.BYTES_PER_ELEMENT;\n    this.buf = sab;\n    this.write_ptr = new Uint32Array(this.buf, 0, 1);\n    this.read_ptr = new Uint32Array(this.buf, 4, 1);\n    this.storage = new type(this.buf, 8, this.capacity);\n  }\n  // Returns the type of the underlying ArrayBuffer for this RingBuffer. This\n  // allows implementing crude type checking.\n  type() {\n    return this._type.name;\n  }\n  // Push bytes to the ring buffer. `bytes` is an typed array of the same type\n  // as passed in the ctor, to be written to the queue.\n  // Returns the number of elements written to the queue.\n  push(elements) {\n    var rd = Atomics.load(this.read_ptr, 0);\n    var wr = Atomics.load(this.write_ptr, 0);\n\n    if ((wr + 1) % this._storage_capacity() == rd) {\n      // full\n      return 0;\n    }\n\n    let to_write = Math.min(this._available_write(rd, wr), elements.length);\n    let first_part = Math.min(this._storage_capacity() - wr, to_write);\n    let second_part = to_write - first_part;\n\n    this._copy(elements, 0, this.storage, wr, first_part);\n    this._copy(elements, first_part, this.storage, 0, second_part);\n\n    // publish the enqueued data to the other side\n    Atomics.store(\n      this.write_ptr,\n      0,\n      (wr + to_write) % this._storage_capacity()\n    );\n\n    return to_write;\n  }\n  // Read `elements.length` elements from the ring buffer. `elements` is a typed\n  // array of the same type as passed in the ctor.\n  // Returns the number of elements read from the queue, they are placed at the\n  // beginning of the array passed as parameter.\n  pop(elements) {\n    var rd = Atomics.load(this.read_ptr, 0);\n    var wr = Atomics.load(this.write_ptr, 0);\n\n    if (wr == rd) {\n      return 0;\n    }\n\n    let to_read = Math.min(this._available_read(rd, wr), elements.length);\n\n    let first_part = Math.min(this._storage_capacity() - rd, elements.length);\n    let second_part = to_read - first_part;\n\n    this._copy(this.storage, rd, elements, 0, first_part);\n    this._copy(this.storage, 0, elements, first_part, second_part);\n\n    Atomics.store(this.read_ptr, 0, (rd + to_read) % this._storage_capacity());\n\n    return to_read;\n  }\n\n  // True if the ring buffer is empty false otherwise. This can be late on the\n  // reader side: it can return true even if something has just been pushed.\n  empty() {\n    var rd = Atomics.load(this.read_ptr, 0);\n    var wr = Atomics.load(this.write_ptr, 0);\n\n    return wr == rd;\n  }\n\n  // True if the ring buffer is full, false otherwise. This can be late on the\n  // write side: it can return true when something has just been poped.\n  full() {\n    var rd = Atomics.load(this.read_ptr, 0);\n    var wr = Atomics.load(this.write_ptr, 0);\n\n    return (wr + 1) % this.capacity != rd;\n  }\n\n  // The usable capacity for the ring buffer: the number of elements that can be\n  // stored.\n  capacity() {\n    return this.capacity - 1;\n  }\n\n  // Number of elements available for reading. This can be late, and report less\n  // elements that is actually in the queue, when something has just been\n  // enqueued.\n  available_read() {\n    var rd = Atomics.load(this.read_ptr, 0);\n    var wr = Atomics.load(this.write_ptr, 0);\n    return this._available_read(rd, wr);\n  }\n\n  // Number of elements available for writing. This can be late, and report less\n  // elemtns that is actually available for writing, when something has just\n  // been dequeued.\n  available_write() {\n    var rd = Atomics.load(this.read_ptr, 0);\n    var wr = Atomics.load(this.write_ptr, 0);\n    return this._available_write(rd, wr);\n  }\n\n  // private methods //\n\n  // Number of elements available for reading, given a read and write pointer..\n  _available_read(rd, wr) {\n    if (wr > rd) {\n      return wr - rd;\n    } else {\n      return wr + this._storage_capacity() - rd;\n    }\n  }\n\n  // Number of elements available from writing, given a read and write pointer.\n  _available_write(rd, wr) {\n    let rv = rd - wr - 1;\n    if (wr >= rd) {\n      rv += this._storage_capacity();\n    }\n    return rv;\n  }\n\n  // The size of the storage for elements not accounting the space for the index.\n  _storage_capacity() {\n    return this.capacity;\n  }\n\n  // Copy `size` elements from `input`, starting at offset `offset_input`, to\n  // `output`, starting at offset `offset_output`.\n  _copy(input, offset_input, output, offset_output, size) {\n    for (var i = 0; i < size; i++) {\n      output[offset_output + i] = input[offset_input + i];\n    }\n  }\n}\n\nexports.AudioReader = AudioReader;\nexports.AudioWriter = AudioWriter;\nexports.ParameterReader = ParameterReader;\nexports.ParameterWriter = ParameterWriter;\nexports.RingBuffer = RingBuffer;\nexports.deinterleave = deinterleave;\nexports.interleave = interleave;\n//sourceMappingURL=index.js.map\n","export default __webpack_public_path__ + \"3e3ec63d65dbac197668e8a818ca1190.mp3\";","import '../style.css';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport Stats from 'three/examples/jsm/libs/stats.module';\nimport WebGL from 'three/examples/jsm/capabilities/WebGL.js';\nimport { GUI } from 'dat.gui/build/dat.gui.min.js';\nimport audioFile1 from \"[javascript/auto]!=!!!file-loader!../assets/audio/r2d2_talk.mp3\";\nimport audioFile2 from \"[javascript/auto]!=!!!file-loader!../assets/audio/synth_melody.mp3\";\nimport audioFile3 from \"[javascript/auto]!=!!!file-loader!../assets/audio/theremin_tone.mp3\";\n\n// import msp from './audio-processors/melspectrogram-processor.js?raw'\n\nconst audioFiles = {\n  \"audio-1\" : audioFile1,\n  \"audio-2\" : audioFile2,\n  \"audio-3\" : audioFile3,\n}\n\nif (WebGL.isWebGL2Available() === false) {\n  document.body.appendChild(WebGL.getWebGL2ErrorMessage());\n}\n\nlet camera,\n  scene,\n  renderer,\n  controls,\n  stats,\n  raycaster\n\nlet planeMesh,\n  debugPlaneMesh,\n  volumeMesh,\n  pointer,\n  specTexture,\n  clock,\n  curveMesh,\n  curve_data\n\nlet AudioContext;\n// global var for web audio API AudioContext\nlet audioCtx;\nlet bufferSize = 1024;\nlet hopSize = 512;\nlet melNumBands = 96;\nlet numFrames = 1;\nlet exports = {};\nexports = require('./ringbuf.js/index.js')\nlet scaledMelspectrum = [];\nlet recording,running\n\nconst gui = new GUI( {width: 200 } );\n// gui parameters\n\nconst params = {\n  df_type: 0,dist_func_tube: 1.0, dist_func_box: 1.0, dist_func_plane: 1.0, df_sphere_tube : 0.0,\n  df_sphere_box: 0.0, df_sphere_plane: 0.0, df_tube_box: 0.0, df_tube_plane: 0.0, df_plane_box: 0.0,\n  scale_x: 1, scale_y: 1, scale_z: 1,\n  global_scale: 0.03,  min_dist:0, max_dist:1,\n  rot_x: 0, rot_y: 0, rot_z: 0,\n  translation_x: 0, translation_y: 0, translation_z: 0,\n  playback_rate: 1.0,\n  color_mode: 0, color_preset_type: 0, color_space: 0, uni_color: \"#9838ff\",\n  color_1: \"#000000\", color_2: \"#ffffff\",\n  mel_spec_bins: melNumBands,\n  num_frames: numFrames,\n  fft_size: bufferSize,\n  dt_scale: 0.1,\n  max_steps: 100,\n};\n\n// From a series of URL to js files, get an object URL that can be loaded in an\n// AudioWorklet. This is useful to be able to use multiple files (utils, data\n// structure, main DSP, etc.) without either using static imports, eval, manual\n// concatenation with or without a build step, etc.\nfunction URLFromFiles(files) {\n  const promises = files\n    .map((file) => fetch(file)\n      .then((response) => response.text()));\n  return Promise\n    .all(promises)\n    .then((texts) => {\n      texts.unshift(\"var exports = {};\"); // hack to make injected umd modules work\n      const text = texts.join('');\n      const blob = new Blob([text], { type: \"text/javascript\" });\n\n      return URL.createObjectURL(blob);\n    });\n}\n\ntry {\n  AudioContext = window.AudioContext || window.webkitAudioContext;\n  audioCtx = new AudioContext();\n} catch (e) {\n  throw \"Could not instantiate AudioContext: \" + e.message;\n}\n// global var getUserMedia mic stream\nlet gumStream;\n// global audio node variables\nlet source, mic;\n\nlet gain;\nlet melspectrogramNode;\n\n// Shared data with AudioWorkletGlobalScope\nlet audioReader;\n\n// Curve constants\nconst NUM_CURVE_POINTS = 5;\n\n// Volume constants\nconst x_dim = 4;\nconst y_dim = 4;\nconst z_dim = 4;\nconst x_scale = 1;\nconst y_scale = 1;\nconst z_scale = 1;\n\n// Setup audio\n\n// Some browsers partially implement mediaDevices. We can't assign an object\n// with getUserMedia as it would overwrite existing properties.\n// Add the getUserMedia property if it's missing.\nlet navigatorCopy = navigator;\nif (navigatorCopy.mediaDevices === undefined) {\n  navigatorCopy.mediaDevices = {};\n}\n// Set up UI Elements\nconst fileInput = document.getElementById('loadFileInput');\nconst recordButton = document.getElementById('recordButton');\nconst player = document.getElementById(\"audioPlayer\");\nplayer.src = audioFiles['audio-1'];\nplayer.load();\n\nconst blob = window.URL || window.webkitURL;\nconst buttonGroup = document.getElementById(\"button-group\");\n\nfunction onLoadFile(inputElement){\n  player.src = blob.createObjectURL(inputElement.files[0]);\n  player.load();\n}\n\n// Shaders \nconst raycastVertexShader = /* glsl */`\nuniform vec3 volume_scale;\nout vec3 vray_dir;\nflat out vec3 transformed_eye;\n\nvoid main(void) {\n\tvec3 volume_translation = vec3(0.5) - volume_scale * 0.5;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1);\n\ttransformed_eye = (cameraPosition - volume_translation) / volume_scale;\n\tvray_dir = position - transformed_eye;\n}`;\nconst raycastFragmentShader = /* glsl */`\nprecision highp int;\nprecision highp float;\nin vec3 vray_dir;\nflat in vec3 transformed_eye;\nconst float Epsilon = 1e-10;\n// Scene\nuniform highp sampler3D volume;\nuniform highp sampler2D spectrum;\nuniform highp sampler2D curve_data;\nuniform vec3 aabb_min;\nuniform vec3 aabb_max;\n\n// playback \nuniform float time;\nuniform float playback_progress;\nuniform float playback_rate;\n\n//distance field \nuniform int df_type;\nuniform vec3 df_scale;\nuniform float global_scale;\nuniform float df_sphere_tube;\nuniform float df_sphere_box;\nuniform float df_sphere_plane;\nuniform float df_tube_box;\nuniform float df_tube_plane;\nuniform float df_plane_box;\nuniform vec3 df_rot;\nuniform vec3 df_translation;\nuniform float min_dist;\nuniform float max_dist;\n\n// raycasting volume\nuniform float dt_scale;\nuniform int max_steps;\nuniform ivec3 volume_dims;\nuniform vec3 volume_scale;\nuniform int color_space;\nuniform int color_mode;\nuniform int color_preset_type;\nuniform vec3 uni_color;\nuniform vec3 color_1;\nuniform vec3 color_2;\n\n\n// Axis-Aligned Bounding Box intersection\nvec2 intersect_box(vec3 aabbMin, vec3 aabbMax, vec3 orig, vec3 dir) {\n\n\tvec3 inv_dir = 1.0 / dir;\n\tvec3 tmin_tmp = (aabbMin - orig) * inv_dir;\n\tvec3 tmax_tmp = (aabbMax - orig) * inv_dir;\n\tvec3 tmin = min(tmin_tmp, tmax_tmp);\n\tvec3 tmax = max(tmin_tmp, tmax_tmp);\n\tfloat t0 = max(tmin.x, max(tmin.y, tmin.z));\n\tfloat t1 = min(tmax.x, min(tmax.y, tmax.z));\n\treturn vec2(t0, t1);\n}\n// Color conversions\n// from: http://lolengine.net/blog/2013/07/27/rgb-to-hsv-in-gls\nvec3 rgb2hsv(vec3 c) {\n  vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n  vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n  vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n  float d = q.x - min(q.w, q.y);\n  float e = 1.0e-10;\n  return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c) {\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat linear_to_srgb(float x) {\n\tif (x <= 0.0031308f) {\n\t\treturn 12.92f * x;\n\t}\n\treturn 1.055f * pow(x, 1.f / 2.4f) - 0.055f;\n}\n\n// Clamping\nfloat smoothClamp(float x, float a, float b)\n{\n    return smoothstep(0., 1., (x - a)/(b - a))*(b - a) + a;\n}\n\nfloat softClamp(float x, float a, float b)\n{\n    return smoothstep(0., 1., (2./3.)*(x - a)/(b - a) + (1./6.))*(b - a) + a;\n}\n\nfloat sdSphere( vec3 p, vec3 offset, float scale )\n{\n  float dist = length(p - offset) - scale;\n  return 1.0 - clamp(dist, 0.0, 1.0);\n}\n\nfloat sdPlane( vec3 p, vec3 n, float h )\n{\n  // n must be normalized\n  return dot(p,n) + h;\n}\n\nfloat sdRoundBox( vec3 p, vec3 b, float r )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n}\n\n//3d rotation: https://gist.github.com/yiwenl/3f804e80d0930e34a0b33359259b556c\nmat4 rotationMatrix(vec3 axis, float angle) {\n  axis = normalize(axis);\n  float s = sin(angle);\n  float c = cos(angle);\n  float oc = 1.0 - c;\n  \n  return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,\n              oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,\n              oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,\n              0.0,                                0.0,                                0.0,                                1.0);\n}\n\nvec3 rotate(vec3 v, vec3 axis, float angle) {\n  mat4 m = rotationMatrix(axis, angle);\n  return (m * vec4(v, 1.0)).xyz;\n}\nfloat distCurve(vec3 p){\n  // Experimental: compute distance from 3d curve\n  float min_d = 10.0;\n  float du = 0.2;\n  float u = 0.0;\n  while(u < 1.0 ){\n    vec2 v_pos = vec2(u, 0.0);\n    // point normals are stored in the 3rd row of the texture\n    // whose UV.v coordinate is 0.75\n    vec2 v_norm = vec2(u, 0.75);\n    vec3 dir_vec = p - texture(curve_data, v_pos).rgb ;\n\n    min_d = min(min_d, length(dir_vec));\n    u += du;\n  }\n  return min_dist;\n}\n\nvoid main(void) {\n\tvec3 ray_dir = normalize(vray_dir);\n  vec4 color = vec4(0.0);\n\tvec2 t_hit = intersect_box(aabb_min, aabb_max, transformed_eye, ray_dir);\n\n\tif (t_hit.x > t_hit.y) {\n\t\tdiscard;\n\t}\n\n\tt_hit.x = max(t_hit.x, 0.0);\n\tvec3 dt_vec = 1.0 / (vec3(volume_dims) * abs(ray_dir));\n\tfloat dt = dt_scale * min(dt_vec.x, min(dt_vec.y, dt_vec.z));\n\tvec3 p = transformed_eye + (t_hit.x + dt) * ray_dir;\n\n  vec4 spec_val = texture(spectrum, vec2(0.0, 0.0));\n  spec_val.rgba = vec4(0.0);\n\n  // Frequency coordinate\n  float u_coords = 0.0;\n  // Time coordinate\n  float v_coords = 0.0;\n\n  float dist = 0.0;\n\n  int step = 0;\n\tfor (float t = t_hit.x; t < t_hit.y; t += dt) {\n    if (step > max_steps){\n      break;\n    }\n\n    // position used for distance field calculation\n    vec3 p_dist = p;\n    vec3 p_dist_r = vec3(0.0);\n    vec3 p_dist_t = vec3(0.0);\n    vec3 p_dist_r_t = vec3(0.0);\n\n    // rotate\n    p_dist_r = rotate(p_dist, vec3(1.0, 0.0, 0.0) , radians( df_rot.x));\n    p_dist_r = rotate(p_dist_r, vec3(0.0, 1.0, 0.0) , radians( df_rot.y));\n    p_dist_r = rotate(p_dist_r, vec3(0.0, 0.0, 1.0) , radians( df_rot.z));\n\n    // translate\n    p_dist_t = p_dist - df_translation;\n    \n    // rotate then translate \n    p_dist_r_t = p_dist_r - df_translation;\n\n    // distance function\n    // sphere\n    float dist_sphere = clamp(length(p_dist_r_t), 0.0, 1.0);\n    float u_coords_sphere = playback_progress;\n\n    // tube\n    float dist_tube = length(p_dist_r_t.xy);\n    float u_coords_tube = (p_dist_r_t.z - 0.5) / playback_rate + playback_progress;\n\n    // plane\n    // normal vector \n    vec3 plane_n = vec3(0.0);\n    plane_n = rotate(vec3(0.0,1.0,0.0), vec3(1.0, 0.0, 0.0) , radians( df_rot.x));\n    plane_n = rotate(plane_n, vec3(0.0, 1.0, 0.0) , radians( df_rot.y));\n    plane_n = rotate(plane_n, vec3(0.0, 0.0, 1.0) , radians( df_rot.z));\n    float dist_plane = dot(p_dist_t, plane_n);\n    float u_coords_plane = playback_progress;\n\n    // round box \n    float dist_box = sdRoundBox(p_dist_r_t, df_scale * global_scale * 1.3, 0.0);\n    float u_coords_box = u_coords_sphere;\n\n    // TODO: curve\n    float dist_curve = distCurve(p_dist);\n    float u_coords_curve = u_coords_tube;\n\n    // Interpolate between distance functions\n    if(df_type ==  0){\n      u_coords =  mix(u_coords_sphere, u_coords_tube, df_sphere_tube);\n      dist =  mix(dist_sphere, dist_tube, df_sphere_tube);\n    }\n    else if ( df_type == 1){\n      u_coords =  mix(u_coords_sphere, u_coords_box, df_sphere_box);\n      dist =  mix(dist_sphere, dist_box, df_sphere_box);      \n    }\n    else if ( df_type == 2){\n      u_coords =  mix(u_coords_sphere, u_coords_plane, df_sphere_plane);\n      dist =  mix(dist_sphere, dist_plane, df_sphere_plane);         \n    }\n    else if ( df_type == 3){\n      u_coords =  mix(u_coords_tube, u_coords_box, df_tube_box);\n      dist =  mix(dist_tube, dist_box, df_tube_box);   \n    }\n    else if (df_type == 4){\n      u_coords =  mix(u_coords_tube, u_coords_plane, df_tube_plane);\n      dist =  mix(dist_tube, dist_plane, df_tube_plane);   \n    }\n    else if (df_type == 5){\n      u_coords =  mix(u_coords_plane, u_coords_box, df_plane_box);\n      dist =  mix(dist_plane, dist_box, df_plane_box);   \n    }\n\n    v_coords = length(df_scale) * global_scale / max(pow(dist,2.0), Epsilon);\n\n    spec_val = texture(spectrum, vec2(u_coords, v_coords));\n\n    // THREE.js sets values outside texture borders(outside the [0,1] x [0,1] range) \n    // to the values at the borders\n    // This an undesired effect for our purposes so we set those values \n    // to zero. \n    if (u_coords < 0. || u_coords > 1. || \n      v_coords < 0. || v_coords > 1.){\n      spec_val = vec4(0.0);\n    }\n    // Soft Clamp values\n    if (dist < min_dist || dist > max_dist){\n      spec_val *= softClamp(dist - max_dist, 0., 1.);\n    }\n    vec4 val_color = vec4(0.0);\n\n    float mixValue = max(dist, Epsilon);\n    vec3 mix_color = vec3(0.0);\n    if (color_mode == 0) {\n      // Use color presets\n      vec4 preset_color = vec4(pow(spec_val.r,10.0) * 1./dist,\n      pow(spec_val.r, 2.0),\n      pow(spec_val.r, 0.0) * 1./dist, spec_val.r) ;\n\n      // swizzle color components to define presets\n      if ( color_preset_type == 0){\n        val_color = preset_color.xyzw;\n      }\n      if ( color_preset_type == 1){\n        val_color = preset_color.zxyw;\n      }\n      else if(color_preset_type == 2) {\n        val_color = preset_color.zyxw;\n      }\n      else if(color_preset_type == 3) {\n        val_color = preset_color.xzyw;\n      }\n      else if(color_preset_type == 4) {\n        val_color = preset_color.yxzw;\n      }\n    }\n    else if (color_mode == 1) {\n      // Use color  gradient\n      if (color_space == 0) {\n        // mix color in rgb space\n        mix_color = mix(color_1, color_2, mixValue);\n      }\n      else if (color_space == 1) {\n        // Mix color in  hsv space\n        vec3 hsv1 = rgb2hsv(color_1);\n        vec3 hsv2 = rgb2hsv(color_2);\n        float hue = (mod(mod((hsv2.x - hsv1.x), 1.) + 1.5, 1.) - 0.5) * mixValue + hsv1.x;\n        vec3 hsv = vec3(hue, mix(hsv1.yz, hsv2.yz, mixValue));\n        mix_color = hsv2rgb(hsv);\n      }\n      val_color = vec4(mix_color, spec_val.r);\n    }\n    else if (color_mode == 2) {\n      // Use unique color\n\n      val_color = vec4(\n        pow(spec_val.r, (1.0 - uni_color.x) * 10.0), \n        pow(spec_val.r, (1.0 - uni_color.y) * 10.0), \n        pow(spec_val.r, (1.0 - uni_color.z) * 10.0), \n        spec_val.r);\n        val_color.xyz *= 1.0 / max(dist, Epsilon);\n    }\n    // Opacity correction\n    val_color.w = 1.0 - pow(1.0 - val_color.w, dt_scale);\n\n    // Alpha-blending\n    color.xyz += (1.0 - color.w) * val_color.w * val_color.xyz;\n    color.w += (1.0 - color.w) * val_color.w;\n    if (color.w > 0.99) {\n      break;\n    }\n    if (val_color.w < 0.0) {\n      discard;\n    }\n    // step along the ray direction\n\t\tp += ray_dir * dt;\n    step++;\n\t}\n\n  color.x = linear_to_srgb(color.x);\n  color.y = linear_to_srgb(color.y);\n  color.z = linear_to_srgb(color.z);\n\n  gl_FragColor = color;\n\n}\n`;\n\n// Main body\ninit();\nanimate();\n\nfunction init() {\n  scene = new THREE.Scene();\n\n  // Renderer\n  renderer = new THREE.WebGLRenderer({antialias: true});\n  renderer.setPixelRatio( window.devicePixelRatio );\n  renderer.setSize( window.innerWidth, window.innerHeight );\n  document.body.appendChild( renderer.domElement );\n\n  // Camera\n  // Perspective\n  const aspect = window.innerWidth / window.innerHeight;\n  camera = new THREE.PerspectiveCamera( 45, aspect, 0.01, 1000 );\n  // // Orthographic\n  // const width = 5;\n  // const h = 2 * width; // frustum height\n  // const aspect = window.innerWidth / window.innerHeight;\n  // camera = new THREE.OrthographicCamera( - h * aspect / 2, h * aspect / 2, h / 2, - h / 2, 0.01, 1000 );\n  camera.position.set( -2, 1, 2 );\n  scene.add(camera);\n\n  // Controls\n  controls = new OrbitControls(camera, renderer.domElement);\n  controls.addEventListener('change', render);\n  controls.minZoom = 0.1;\n  controls.maxZoom = 10;\n  controls.enablePan = false;\n  controls.update();\n\n  // GUI\n  addGUI();\n\n  // Clock \n  clock = new THREE.Clock();\n\n  // Debug spectrogram texture\n  let planeGeo1 = new THREE.PlaneGeometry(2, 2);\n  let planeMat1 = new THREE.MeshBasicMaterial({ map: createDataTexture(x_dim, y_dim), side: THREE.DoubleSide});\n  debugPlaneMesh = new THREE.Mesh(planeGeo1, planeMat1);\n  debugPlaneMesh .position.set( -2, 0, -1 );\n  // scene.add(debugPlaneMesh);\n\n  specTexture = createDataTexture(numFrames, melNumBands);\n\n  // Curve\n  const curve = initCurveData(NUM_CURVE_POINTS);\n  const points = curve.getPoints(5);\n  const geometry = new THREE.BufferGeometry().setFromPoints(points);\n  const material = new THREE.LineBasicMaterial({ color: 0xff0000 });\n\n  // Create curveMesh to add to the scene\n  curveMesh = new THREE.Line(geometry, material);\n  curveMesh.matrixAutoUpdate = false;\n  //scene.add(curveMesh);\n\n  // Volume \n  const volumeGeometry = new THREE.BoxGeometry( x_scale, y_scale, z_scale);\n\n  const volumeUniforms =  {\n    'volume_scale': { value: new THREE.Vector3( x_scale, y_scale, z_scale ) },\n    'volume': { value: create3dDataTexture(x_dim, y_dim, z_dim) },\n    'volume_dims': { value: new THREE.Vector3( x_dim, y_dim, z_dim) },\n    'min_dist': { value: params.min_dist},\n    'max_dist': { value: params.max_dist},\n    'color_mode': { value: params.color_mode},\n    'color_preset_type': { value: params.color_preset_type},\n    'color_space': {value: params.color_space},\n    'uni_color': { value: new THREE.Color(params.uni_color) },\n    'color_1': { value: new THREE.Color(params.color_1) },\n    'color_2': { value: new THREE.Color(params.color_2)},\n    'aabb_min': { value: new THREE.Vector3()},\n    'aabb_max': { value: new THREE.Vector3()},\n    'dt_scale': { value: params.dt_scale},\n    'max_steps': { value: params.max_steps},\n    'spectrum': { value: createDataTexture(x_dim, y_dim) },\n    'curve_data': { value: createCurveDataTexture(curve_data) },\n    'time': {value: clock.getElapsedTime()},\n    'playback_progress': {value: 0.0},\n    'df_sphere_tube': {value: params.df_sphere_tube},\n    'df_sphere_box': {value: params.df_sphere_box},\n    'df_sphere_plane': {value: params.df_sphere_plane},\n    'df_tube_box': {value: params.df_tube_box},\n    'df_tube_plane': {value: params.df_tube_plane},\n    'df_plane_box': {value: params.df_plane_box},\n    'playback_rate': {value: 1.0},\n    'df_translation': {value: new THREE.Vector3(params.translation_x,params.translation_y,params.translation_z)},\n    'df_rot': {value: new THREE.Vector3(params.rot_x,params.rot_y,params.rot_z)},\n    'df_scale': {value: new THREE.Vector3(params.scale_x,params.scale_y,params.scale_z)},\n    'global_scale': {value: params.global_scale},\n    'df_type':{value: 0}\n  };\n\n  const volumeMaterial = new THREE.ShaderMaterial({\n    uniforms: volumeUniforms,\n    vertexShader: raycastVertexShader,\n    fragmentShader: raycastFragmentShader,\n    side: THREE.DoubleSide,\n    transparent: true\n  });\n\n  volumeMesh = new THREE.Mesh( volumeGeometry, volumeMaterial);\n  volumeMesh.matrixAutoUpdate = true;\n  volumeMesh.geometry.computeBoundingBox();\n\n  (volumeMesh.material).uniforms['aabb_min']['value'] = volumeMesh.geometry.boundingBox.min;\n  (volumeMesh.material).uniforms['aabb_max']['value'] = volumeMesh.geometry.boundingBox.max;\n\n  scene.add(volumeMesh);\n\n\n  pointer = new THREE.Vector2();\n\n  window.addEventListener('pointerMove', onPointerMove);\n\n  const planeGeo = new THREE.PlaneGeometry(25, 25);\n  const planeMat = new THREE.MeshBasicMaterial({ visible: false });\n  planeMesh = new THREE.Mesh(planeGeo, planeMat);\n  planeMesh.rotation.x = -0.5 * Math.PI;\n  // scene.add(planeMesh);\n  // planeMesh.name = 'plane';\n\n  raycaster = new THREE.Raycaster();\n\n  // Add helpers\n  //addHelpers(scene);\n  render();\n  document.addEventListener('pointermove', onPointerMove);\n  window.addEventListener('resize', onWindowResize);\n  recordButton.addEventListener('click', onRecordClickHandler);\n  player.addEventListener('play', startAudioProcessingMediaElt);\n  player.addEventListener('pause', stopAudioProcessingMediaElt);\n  \n  fileInput.addEventListener('change', () => {onLoadFile(fileInput)});\n  buttonGroup.addEventListener(\"click\", (e) => { \n    const isButton = e.target.nodeName === 'BUTTON';\n    if(!isButton) {\n      return\n    }\n    player.src = audioFiles[e.target.id];\n    player.load();\n  });\n}\n\nfunction render() {\n  renderer.render(scene, camera);\n}\n\nfunction onWindowResize() {\n\n  // renderer.setSize( window.innerWidth, window.innerHeight );\n\n  // const aspect = window.innerWidth / window.innerHeight;\n\n  // const frustumHeight = camera.top - camera.bottom;\n\n  // camera.left = - frustumHeight * aspect / 2;\n  // camera.right = frustumHeight * aspect / 2;\n\n  // camera.updateProjectionMatrix();\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n\n  renderer.setSize(window.innerWidth, window.innerHeight);\n\n  render();\n\n}\n\nfunction onPointerMove(event) {\n\n  pointer.x = (event.clientX / window.innerWidth) * 2 - 1;\n  pointer.y = - (event.clientY / window.innerHeight) * 2 + 1;\n\n}\n\nfunction addHelpers(scene) {\n  // const gridHelper = new THREE.GridHelper(10, 10);\n  // scene.add(gridHelper);\n  // stats = Stats();\n  //document.body.appendChild(stats.dom)\n  const axesHelper = new THREE.AxesHelper(3);\n  scene.add(axesHelper);\n}\n\nfunction updateUniforms(){\n  (volumeMesh.material).uniforms['time']['value'] = clock.getElapsedTime();\n  (volumeMesh.material).uniforms['curve_data']['value'] =  updateCurveData(curveMesh, NUM_CURVE_POINTS);\n  (volumeMesh.material).uniforms['playback_progress']['value'] = (player.currentTime) / player.duration;\n}\nfunction animate() {\n  requestAnimationFrame(animate);\n  updateMeshTexture();\n  updateUniforms();\n  //stats.update();\n  render();\n}\n\n// Creates 3D texture with RGB gradient along the XYZ axes\nfunction create3dDataTexture(width, height, depth) {\n  const d = new Uint8Array(width * height * depth * 4);\n  let stride = 0;\n\n  for (let z = 0; z < depth; z++) {\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        d[stride + 0] = (x / width) * 255;\n        d[stride + 1] = (y / height) * 255;\n        d[stride + 2] = (z / depth) * 255;\n        d[stride + 3] = 255;\n        stride += 4;\n      }\n    }\n  }\n  const texture = new THREE.Data3DTexture(d, width, height, depth);\n  texture.format = THREE.RGBAFormat;\n  // texture.type = THREE.FloatType;\n  // texture.minFilter = THREE.NearestFilter;\n  // texture.magFilter = THREE.NearestFilter;\n  texture.unpackAlignment = 1;\n  texture.needsUpdate = true;\n\n  return texture;\n}\nfunction createDataTexture(width, height) {\n\n  const d = new Uint8Array(width * height * 4);\n\n  let stride = 0;\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      d[stride + 0] = 1;\n      d[stride + 1] = 0;\n      d[stride + 2] = 0;\n      d[stride + 3] = 1;\n      stride += 4;\n    }\n  }\n  const texture = new THREE.DataTexture(d, width, height);\n  texture.format = THREE.RedFormat;\n  // texture.type = THREE.FloatType;\n  // texture.minFilter = THREE.NearestFilter;\n  // texture.magFilter = THREE.NearestFilter;\n  texture.unpackAlignment = 1;\n\n  return texture;\n}\n\nfunction updateSpectrumData(texture, new_data) {\n  const width = numFrames;\n  const height = melNumBands;\n  const data = texture.image.data;\n  let stride = 0;\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      if (x < width - 1) {\n        // shift the index by 4 to get R,G,B or A value of the subsequent column\n        data[stride] = data[stride + 4];\n      } else {\n        // set red value of texture\n        data[stride] = new_data[y];\n      }\n      data[stride + 1] = 0;\n      data[stride + 2] = 0;\n      data[stride + 3] = 1;\n      stride += 4;\n    }\n  }\n  const new_texture = new THREE.DataTexture(data , width, height);\n  new_texture.format = THREE.RGBAFormat;\n  // new_texture.type = THREE.FloatType;\n  // new_texture.minFilter = THREE.NearestFilter;\n  // new_texture.magFilter = THREE.NearestFilter;\n  new_texture.unpackAlignment = 1;\n  new_texture.needsUpdate = true; \n  setMeshTexture(new_texture);\n  new_texture.dispose();\n\n}\nfunction createCurveDataTexture(data) {\n  const d = new Float32Array(data.numPoints * 4 * 4);\n  let stride = 0;\n  const pt_data = [data.positions, data.tangents, data.normals, data.binormals];\n  for (let j = 0; j < 4; j++) {\n    for (let k = 0; k < data.numPoints; k++) {\n      d[stride + 0] = pt_data[j][k].x;\n      d[stride + 1] = pt_data[j][k].y;\n      d[stride + 2] = pt_data[j][k].z;\n      d[stride + 3] = 1.0;\n      stride += 4;\n    }\n  }\n  const texture = new THREE.DataTexture(d, data.numPoints, 1);\n  texture.type = THREE.FloatType;\n  texture.format = THREE.RGBAFormat;\n  texture.minFilter = THREE.NearestFilter;\n  texture.magFilter = THREE.NearestFilter;\n  texture.unpackAlignment = 1;\n  texture.needsUpdate = true;\n  return texture\n}\n\nfunction initCurveData(num_points) {\n\n  const curve = new THREE.CatmullRomCurve3([\n    new THREE.Vector3(0, 0.0, -0.5),\n    new THREE.Vector3(0, 0.0, -0.25),\n    new THREE.Vector3(0, 0.0, 0),\n    new THREE.Vector3(0, 0.0, 0.25),\n    new THREE.Vector3(0, 0.0, 0.5)\n  ]);\n  const cPoints = curve.getSpacedPoints(num_points);\n  const cObjects = curve.computeFrenetFrames(num_points, true);\n\n  curve_data = {\n    positions: cPoints,\n    tangents: cObjects.tangents,\n    normals: cObjects.normals,\n    binormals: cObjects.binormals,\n    numPoints: num_points\n  }\n  return curve;\n}\n\nfunction updateCurveData(curve_mesh, num_points) {\n\n  const geo_array = curve_mesh.geometry.attributes.position.array;\n\n  // rebuild the curve\n  const positions = Array(num_points);\n  let i3 = 0;\n  for (let i = 0; i < num_points; i++) {\n    if (i == num_points - 1) {\n      positions[i] = new THREE.Vector3(\n        geo_array[i3 + 0],\n        geo_array[i3 + 1] + Math.abs(Math.sin(clock.getElapsedTime())),\n        geo_array[i3 + 2]);\n    }\n    else {\n      positions[i] = new THREE.Vector3(\n        geo_array[i3 + 0],\n        geo_array[i3 + 1],\n        geo_array[i3 + 2]);\n    }\n    i3 += 3;\n  }\n\n  const curve = new THREE.CatmullRomCurve3(positions);\n  const cPoints = curve.getSpacedPoints(num_points);\n  const cObjects = curve.computeFrenetFrames(num_points, true);\n\n  // update curve_data interface\n  curve_data = {\n    positions: cPoints,\n    tangents: cObjects.tangents,\n    normals: cObjects.normals,\n    binormals: cObjects.binormals,\n    numPoints: num_points\n  }\n\n  return createCurveDataTexture(curve_data);\n}\nfunction setMeshTexture(texture) {\n  (debugPlaneMesh.material).map = texture;\n  (volumeMesh.material).uniforms['spectrum']['value'] = texture;\n  texture.dispose();\n}\n\n\nfunction onRecordClickHandler() {\n  recording = recordButton.classList.contains(\"recording\");\n  if (recording) {\n    recordButton.classList.remove(\"recording\");\n    recordButton.innerHTML = \"Record\";\n    recordButton.classList.remove(\"bg-emerald-200\");\n    recordButton.disabled = false;\n    stopMicRecordStream();\n  } else {\n\n    recordButton.disabled = true;\n    // start microphone stream using getUserMedia and run feature extraction\n    startMicRecordStream();\n  }\n}\n\n// record native microphone input and do further audio processing on each audio buffer using the given callback functions\nfunction startMicRecordStream() {\n  if (navigator.mediaDevices.getUserMedia) {\n    console.log(\"Initializing audio...\");\n    navigator.mediaDevices.getUserMedia({ audio: true, video: false })\n      .then(startAudioProcessingStream)\n      .catch(function (message) {\n        throw \"Could not access microphone - \" + message;\n      });\n  } else {\n    throw \"Could not access microphone - getUserMedia not available\";\n  }\n}\n\nfunction startAudioProcessingStream(stream) {\n  gumStream = stream;\n  if (gumStream.active) {\n    if (audioCtx.state == \"closed\") {\n      audioCtx = new AudioContext();\n    }\n    else if (audioCtx.state == \"suspended\") {\n      audioCtx.resume();\n    }\n\n    mic = audioCtx.createMediaStreamSource(gumStream);\n    gain = audioCtx.createGain();\n    gain.gain.setValueAtTime(0, audioCtx.currentTime);\n\n    let codeForProcessorModule = [\"https://cdn.jsdelivr.net/npm/essentia.js@0.1.3/dist/essentia-wasm.umd.js\",\n      \"https://cdn.jsdelivr.net/npm/essentia.js@0.1.3/dist/essentia.js-extractor.umd.js\",\n      \"https://raw.githack.com/MTG/essentia.js/master/examples/demos/melspectrogram-rt/melspectrogram-processor.js\",\n      \"https://unpkg.com/ringbuf.js@0.1.0/dist/index.js\"];\n\n    // inject Essentia.js code into AudioWorkletGlobalScope context, then setup audio graph and start animation\n    URLFromFiles(codeForProcessorModule)\n      .then((concatenatedCode) => {\n        audioCtx.audioWorklet.addModule(concatenatedCode)\n          .then(setupAudioGraphStream)\n          .catch(function moduleLoadRejected(msg) {\n            console.log(`There was a problem loading the AudioWorklet module code: \\n ${msg}`);\n          });\n      })\n      .catch((msg) => {\n        console.log(`There was a problem retrieving the AudioWorklet module code: \\n ${msg}`);\n      })\n    //  // set button to stop\n    recordButton.classList.add(\"recording\");\n    recordButton.innerHTML = \"Stop\";\n    recordButton.classList.add(\"bg-emerald-200\");\n    recordButton.disabled = false;\n  } else {\n    throw \"Mic stream not active\";\n  }\n}\nfunction startAudioProcessingMediaElt() {\n  if (audioCtx.state == \"closed\") {\n    audioCtx = new AudioContext();\n  }\n  else if (audioCtx.state == \"suspended\") {\n    audioCtx.resume();\n  }\n\n  source = audioCtx.createMediaElementSource(player);\n  gain = audioCtx.createGain();\n  gain.gain.setValueAtTime(0, audioCtx.currentTime);\n  let codeForProcessorModule = [\"https://cdn.jsdelivr.net/npm/essentia.js@0.1.3/dist/essentia-wasm.umd.js\",\n    \"https://cdn.jsdelivr.net/npm/essentia.js@0.1.3/dist/essentia.js-extractor.umd.js\",\n    \"https://raw.githack.com/MTG/essentia.js/master/examples/demos/melspectrogram-rt/melspectrogram-processor.js\",\n    \"https://unpkg.com/ringbuf.js@0.1.0/dist/index.js\"];\n\n  // inject Essentia.js code into AudioWorkletGlobalScope context, then setup audio graph and start animation\n  URLFromFiles(codeForProcessorModule)\n    .then((concatenatedCode) => {\n      audioCtx.audioWorklet.addModule(concatenatedCode)\n        .then(setupAudioGraphMediaElt)\n        .catch(function moduleLoadRejected(msg) {\n          console.log(`There was a problem loading the AudioWorklet module code: \\n ${msg}`);\n        });\n    })\n    .catch((msg) => {\n      console.log(`There was a problem retrieving the AudioWorklet module code: \\n ${msg}`);\n    })\n}\nfunction stopMicRecordStream() {\n  // stop mic stream\n  gumStream.getAudioTracks().forEach(function (track) {\n    track.stop();\n    gumStream.removeTrack(track);\n  });\n\n  audioCtx.close().then(function () {\n    // manage button state\n    recordButton.classList.remove(\"recording\");\n    recordButton.innerHTML = 'Record';\n\n    // disconnect nodes\n    mic.disconnect();\n    melspectrogramNode.disconnect();\n    gain.disconnect();\n    mic = undefined;\n    melspectrogramNode = undefined;\n    gain = undefined;\n\n    console.log(\"Stopped recording ...\");\n  });\n}\nfunction stopAudioProcessingMediaElt() {\n  player.pause();\n  audioCtx.close().then(function () {\n    // disconnect nodes\n    source.disconnect();\n    melspectrogramNode.disconnect();\n    source = undefined;\n    melspectrogramNode = undefined;\n  });\n}\nfunction setupAudioGraphStream() {\n  // increase buffer size in case of glitches\n  let sab = exports.RingBuffer.getStorageForCapacity(melNumBands * 18, Float32Array);\n  let rb = new exports.RingBuffer(sab, Float32Array);\n  audioReader = new exports.AudioReader(rb);\n\n  melspectrogramNode = new AudioWorkletNode(audioCtx, 'melspectrogram-processor', {\n    processorOptions: {\n      bufferSize: bufferSize,\n      hopSize: hopSize,\n      melNumBands: melNumBands,\n      sampleRate: audioCtx.sampleRate,\n    }\n  });\n\n  try {\n    melspectrogramNode.port.postMessage({\n      sab: sab,\n    });\n  } catch (_) {\n    alert(\"No SharedArrayBuffer transfer support, try another browser.\");\n    recordButton.disabled = true;\n    return;\n  }\n  recording = recordButton.classList.contains(\"recording\");\n  mic.connect(melspectrogramNode);\n  melspectrogramNode.connect(gain);\n  gain.connect(audioCtx.destination);\n\n}\n\nfunction setupAudioGraphMediaElt() {\n  // increase buffer size in case of glitches\n  let sab = exports.RingBuffer.getStorageForCapacity(melNumBands * 18, Float32Array);\n  let rb = new exports.RingBuffer(sab, Float32Array);\n  audioReader = new exports.AudioReader(rb);\n  melspectrogramNode = new AudioWorkletNode(audioCtx, 'melspectrogram-processor', {\n    processorOptions: {\n      bufferSize: 1024,\n      hopSize: 512,\n      melNumBands: melNumBands,\n      sampleRate: audioCtx.sampleRate,\n    }\n  });\n  // The AudioWorklet node causes cracking noises during playback so we \n  // connect it with a \n  try {\n    melspectrogramNode.port.postMessage({\n      sab: sab,\n    });\n  } catch (_) {\n    alert(\"No SharedArrayBuffer transfer support, try another browser.\");\n    return;\n  }\n  // connect source to destination for playback\n  source.connect(audioCtx.destination);\n  // connect source to AudioWorklet node for feature extraction\n  source.connect(melspectrogramNode);\n  // melspectrogramNode.connect(gain);\n  // gain.connect(audioCtx.destination);\n}\n\nfunction updateMeshTexture() {\n  let melspectrumBuffer = new Float32Array(melNumBands);\n  if (audioReader !== undefined){\n    if (audioReader.available_read() >= melNumBands) {\n      let toread = audioReader.dequeue(melspectrumBuffer);\n      if (toread !== 0) {\n        // scale spectrum values to 0 - 255\n        scaledMelspectrum = melspectrumBuffer.map(x => Math.round(x * 35.5))\n      }\n    }\n  }\n  updateSpectrumData(specTexture, scaledMelspectrum);\n}\n\nfunction addGUI() {\n  gui.add( params, 'playback_rate').step(0.001).name( 'playback_rate' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['playback_rate']['value'] = 1.0 / value;\n    player.playbackRate = value;\n  } );\n  gui.add( params, 'num_frames').step(1).name( 'num_frames' ).onChange( function ( value ) {\n    specTexture = createDataTexture(value, melNumBands);\n    updateMeshTexture();\n    numFrames = value;\n  } );\n  // Distance Function\n  const df_folder = gui.addFolder('distance function') ;\n  df_folder.add( params, 'min_dist').step(0.01).name( 'min_dist' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['min_dist']['value'] = value;\n  } );\n  df_folder.add( params, 'max_dist').step(0.01).name( 'max_dist' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['max_dist']['value'] = value;\n  } );\n  df_folder.add( params, 'df_type', {\n    'Sphere - Tube': 0,'Sphere - Box': 1,'Sphere - Plane': 2,\n    'Tube - Box': 3, 'Tube - Plane': 4,'Plane - Box': 5}).name( 'sphere/tube' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_type']['value'] = value;\n  } );\n  df_folder.add( params, 'df_sphere_tube', 0, 1).step(0.01).name( 'sphere/tube' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_sphere_tube']['value'] = value;\n  } );\n  df_folder.add( params, 'df_sphere_box', 0, 1).step(0.01).name( 'sphere/box' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_sphere_box']['value'] = value;\n  } );\n  df_folder.add( params, 'df_sphere_plane', 0, 1).step(0.01).name( 'sphere/plane' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_sphere_plane']['value'] = value;\n  } );\n  df_folder.add( params, 'df_tube_box', 0, 1).step(0.01).name( 'tube/box' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_tube_box']['value'] = value;\n  } );\n  df_folder.add( params, 'df_tube_plane', 0, 1).step(0.01).name( 'tube/plane' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_tube_plane']['value'] = value;\n  } );\n  df_folder.add( params, 'df_plane_box', 0, 1).step(0.01).name( 'plane/box' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_plane_box']['value'] = value;\n  } );\n  df_folder.add( params, 'global_scale').step(0.0001).name( 'global_scale' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['global_scale']['value'] = value;\n  } );\n  const transforms = gui.addFolder('transforms') ;\n  transforms.add( params, 'scale_x', 0, 1).step(0.00001).name( 'scale_x' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_scale']['value'] = new THREE.Vector3(value, params.scale_y, params.scale_z);\n  } );\n  transforms .add( params, 'scale_y', 0, 1).step(0.00001).name( 'scale_y' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_scale']['value'] = new THREE.Vector3(params.scale_x, value, params.scale_z);\n  } );\n  transforms.add( params, 'scale_z', 0, 1).step(0.00001).name( 'scale_z' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_scale']['value'] = new THREE.Vector3(params.scale_x, params.scale_y, value);\n  } );\n  transforms.add( params, 'rot_x', -360, 360).step(0.1).name( 'rotate_x' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_rot']['value'] = new THREE.Vector3(value, params.rot_y, params.rot_z);\n  } );\n  transforms.add( params, 'rot_y', -360, 360).step(0.1).name( 'rotate_y' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_rot']['value'] = new THREE.Vector3(params.rot_x, value, params.rot_z);\n  } );\n  transforms.add( params, 'rot_z', -360, 360).step(0.1).name( 'rotate_z' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_rot']['value'] = new THREE.Vector3(params.rot_x, params.rot_y, value);\n  } );\n  transforms.add( params, 'translation_x').step(0.01).name( 'translate_x' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_translation']['value'] = new THREE.Vector3(value, params.translation_y, params.translation_z);\n  } );\n  transforms.add( params, 'translation_y').step(0.01).name( 'translate_y' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_translation']['value'] = new THREE.Vector3(params.translation_x, value, params.translation_z);\n  } );\n  transforms.add( params, 'translation_z').step(0.01).name( 'translate_z' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['df_translation']['value'] = new THREE.Vector3(params.translation_x, params.translation_y, value);\n  } );\n  // Color\n  const color_folder = gui.addFolder('color') ;\n  color_folder.add( params, 'color_mode', {'Presets': 0, 'Gradient': 1, 'Unicolor': 2}).name( 'color_mode' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['color_mode']['value'] = value;\n  } );\n  color_folder.add( params, 'color_preset_type', 0, 4).step(1).name( 'color_preset' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['color_preset_type']['value'] = value;\n  } );\n  color_folder.add( params, 'color_space', {'RBG': 0, 'HSV': 1}).name( 'color_space' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['color_space']['value'] = value ;\n  } );\n  color_folder.addColor( params, 'uni_color').name( 'unicolor' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['uni_color']['value'] = new THREE.Color(value) ;\n  } );\n  color_folder.addColor( params, 'color_1').name( 'color_1' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['color_1']['value'] = new THREE.Color(value) ;\n  } );\n  color_folder.addColor( params, 'color_2').name( 'color_2' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['color_2']['value'] = new THREE.Color(value) ;\n  } ); \n  // Spectrogram\n  const spectrogram_folder = gui.addFolder('spectrogram') ;\n  spectrogram_folder.add( params, 'mel_spec_bins', 10, 96).step(1).name( 'mel_spec_bins' ).onChange( function ( value ) {\n    melNumBands = value ;\n  } ); \n  // Raycasting\n  const raycasting_folder = gui.addFolder('raycasting') ;\n  raycasting_folder.add( params, 'dt_scale', 0.005,).step(0.001).name( 'dt_scale' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['dt_scale']['value'] = value;    \n  } );\n  raycasting_folder.add( params, 'max_steps', 1,).step(1).name( 'max_steps' ).onChange( function ( value ) {\n    (volumeMesh.material).uniforms['max_steps']['value'] = value;    \n  } );\n}\n\n\n\n\n\n\n\n\n\n\n","export default __webpack_public_path__ + \"af94b875b527644acadfbc1422bef6af.mp3\";","export default __webpack_public_path__ + \"7b5db9c538fd2fd44406c940edd0f9a9.mp3\";","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"/hyperstep/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t414: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk\"] = self[\"webpackChunk\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [365,621], () => (__webpack_require__(917)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","Object","defineProperty","exports","value","AudioReader","constructor","ringbuf","type","this","dequeue","buf","empty","pop","available_read","AudioWriter","enqueue","push","available_write","ParameterReader","mem","ArrayBuffer","array","Uint8Array","view","DataView","dequeue_change","o","index","getUint8","getFloat32","ParameterWriter","enqueue_change","setUint8","setFloat32","RingBuffer","static","capacity","BYTES_PER_ELEMENT","bytes","SharedArrayBuffer","sab","__proto__","isPrototypeOf","undefined","_type","byteLength","write_ptr","Uint32Array","read_ptr","storage","name","elements","rd","Atomics","load","wr","_storage_capacity","to_write","Math","min","_available_write","length","first_part","second_part","_copy","store","to_read","_available_read","full","rv","input","offset_input","output","offset_output","size","i","deinterleave","channel_count","channelCount","out_channel","interleaved_idx","j","interleave","out_idx","audioFiles","camera","scene","renderer","controls","raycaster","planeMesh","debugPlaneMesh","volumeMesh","pointer","specTexture","clock","curveMesh","curve_data","AudioContext","audioCtx","WebGL","document","body","appendChild","melNumBands","numFrames","require","recording","scaledMelspectrum","gui","GUI","width","params","df_type","dist_func_tube","dist_func_box","dist_func_plane","df_sphere_tube","df_sphere_box","df_sphere_plane","df_tube_box","df_tube_plane","df_plane_box","scale_x","scale_y","scale_z","global_scale","min_dist","max_dist","rot_x","rot_y","rot_z","translation_x","translation_y","translation_z","playback_rate","color_mode","color_preset_type","color_space","uni_color","color_1","color_2","mel_spec_bins","num_frames","fft_size","dt_scale","max_steps","URLFromFiles","files","promises","map","file","fetch","then","response","text","Promise","all","texts","unshift","join","blob","Blob","URL","createObjectURL","window","webkitAudioContext","e","message","gumStream","source","mic","gain","melspectrogramNode","audioReader","navigatorCopy","navigator","mediaDevices","fileInput","getElementById","recordButton","player","src","webkitURL","buttonGroup","render","onWindowResize","aspect","innerWidth","innerHeight","updateProjectionMatrix","setSize","onPointerMove","event","x","clientX","y","clientY","create3dDataTexture","height","depth","d","stride","z","texture","THREE","format","unpackAlignment","needsUpdate","createDataTexture","createCurveDataTexture","data","Float32Array","numPoints","pt_data","positions","tangents","normals","binormals","k","minFilter","magFilter","onRecordClickHandler","classList","contains","remove","innerHTML","disabled","getAudioTracks","forEach","track","stop","removeTrack","close","disconnect","console","log","getUserMedia","audio","video","startAudioProcessingStream","catch","startMicRecordStream","stream","active","state","resume","createMediaStreamSource","createGain","setValueAtTime","currentTime","concatenatedCode","audioWorklet","addModule","setupAudioGraphStream","msg","add","startAudioProcessingMediaElt","createMediaElementSource","setupAudioGraphMediaElt","stopAudioProcessingMediaElt","pause","getStorageForCapacity","rb","AudioWorkletNode","processorOptions","bufferSize","hopSize","sampleRate","port","postMessage","_","alert","connect","destination","updateMeshTexture","melspectrumBuffer","round","new_data","image","new_texture","material","uniforms","dispose","setMeshTexture","updateSpectrumData","antialias","setPixelRatio","devicePixelRatio","domElement","position","set","OrbitControls","addEventListener","minZoom","maxZoom","enablePan","update","step","onChange","playbackRate","df_folder","addFolder","transforms","color_folder","addColor","raycasting_folder","addGUI","planeGeo1","planeMat1","side","points","num_points","curve","cPoints","getSpacedPoints","cObjects","computeFrenetFrames","initCurveData","getPoints","geometry","setFromPoints","color","matrixAutoUpdate","volumeGeometry","volumeUniforms","getElapsedTime","volumeMaterial","vertexShader","fragmentShader","transparent","computeBoundingBox","boundingBox","max","planeGeo","planeMat","visible","rotation","PI","inputElement","target","nodeName","id","init","animate","requestAnimationFrame","curve_mesh","geo_array","attributes","Array","i3","abs","sin","updateCurveData","duration","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","keys","every","key","splice","r","definition","enumerable","get","obj","prop","prototype","hasOwnProperty","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}