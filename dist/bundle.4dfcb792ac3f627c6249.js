/*! For license information please see bundle.4dfcb792ac3f627c6249.js.LICENSE.txt */
(self.webpackChunk=self.webpackChunk||[]).push([[53],{2524:(e,t,n)=>{"use strict";n.d(t,{lj:()=>HR,k5:()=>qR,ZP:()=>KR,qn:()=>YR});var r={};n.r(r),n.d(r,{assertParamsValid:()=>Ts,computeFlatOffset:()=>Us,computeOutShape:()=>Rs,getNormalizedAxes:()=>Ls,isSliceContinous:()=>Ws,maskToAxes:()=>As,parseSliceParams:()=>Vs,sliceInfo:()=>Gs,startForAxis:()=>Bs,startIndicesWithElidedDims:()=>Os,stopForAxis:()=>Ps,stopIndicesWithElidedDims:()=>Ms,stridesForAxis:()=>zs,stridesWithElidedDims:()=>Fs});var s={};n.r(s),n.d(s,{collectGatherOpShapeInfo:()=>Ql,computeOutShape:()=>Zl,segOpComputeOptimalWindowSize:()=>Jl});var a={};n.r(a),n.d(a,{ERF_A1:()=>Ll,ERF_A2:()=>Ol,ERF_A3:()=>Ml,ERF_A4:()=>zl,ERF_A5:()=>Bl,ERF_P:()=>Dl,PARALLELIZE_THRESHOLD:()=>vl,SELU_SCALE:()=>_l,SELU_SCALEALPHA:()=>Fl,applyActivation:()=>Io,assertAndGetBroadcastShape:()=>Ha,assertAxesAreInnerMostDims:()=>wi,assertParamsConsistent:()=>yl,assignToTypedArray:()=>ql,axesAreInnerMostDims:()=>bi,calculateShapes:()=>Rl,castTensor:()=>eu,combineLocations:()=>yi,complexWithEvenIndex:()=>Gl,complexWithOddIndex:()=>jl,computeConv2DInfo:()=>da,computeConv3DInfo:()=>pa,computeDefaultPad:()=>fa,computeDilation2DInfo:()=>ua,computeOptimalWindowSize:()=>wl,computeOutAndReduceShapes:()=>xi,computeOutShape:()=>xl,computePool2DInfo:()=>ca,computePool3DInfo:()=>ha,convertConv2DDataFormat:()=>wa,eitherStridesOrDilationsAreOne:()=>va,expandShapeToKeepDim:()=>vi,exponent:()=>Xl,exponents:()=>Kl,fromStringArrayToUint8:()=>ru,fromUint8ToStringArray:()=>nu,getAxesPermutation:()=>ki,getBroadcastDims:()=>Ga,getComplexWithIndex:()=>Hl,getFusedBiasGradient:()=>ko,getFusedDyActivation:()=>wo,getImageCenter:()=>kl,getInnerMostAxes:()=>Ci,getPermuted:()=>Cl,getReductionAxes:()=>ja,getReshaped:()=>Il,getReshapedPermuted:()=>Nl,getSliceBeginCoords:()=>$l,getSliceSize:()=>Sl,getUndoAxesPermutation:()=>Ii,log:()=>Wl,mergeRealAndImagArrays:()=>Ul,prepareAndValidate:()=>El,prepareSplitSize:()=>Yl,reshapeTensor:()=>tu,segment_util:()=>s,shouldFuse:()=>Co,slice_util:()=>r,splitRealAndImagArrays:()=>Vl,tupleValuesAreOne:()=>xa,upcastType:()=>kr,validateInput:()=>Al,validateUpdateShape:()=>Tl,warn:()=>Pl});var i={};n.r(i),n.d(i,{addImpl:()=>Sy,bincountImpl:()=>xx,bincountReduceImpl:()=>vx,ceilImpl:()=>Ix,concatImpl:()=>Tx,expImpl:()=>gv,expm1Impl:()=>vv,floorImpl:()=>Wv,gatherV2Impl:()=>Yv,greaterImpl:()=>Zv,lessImpl:()=>hw,linSpaceImpl:()=>bw,logImpl:()=>xw,maxImpl:()=>Dw,maximumImpl:()=>Mw,minimumImpl:()=>Xw,multiplyImpl:()=>Iv,negImpl:()=>ik,notEqualImpl:()=>fk,prodImpl:()=>Sk,rangeImpl:()=>Tk,rsqrtImpl:()=>Wk,simpleAbsImpl:()=>Oy,sliceImpl:()=>gx,squaredDifferenceImpl:()=>fI,stridedSliceImpl:()=>xI,subImpl:()=>Av,tileImpl:()=>CI,topKImpl:()=>NI,transposeImpl:()=>Vy,uniqueImpl:()=>$I});class o{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class l{decComplexRef(e){}time(e){return u("time")}read(e){return u("read")}readSync(e){return u("readSync")}numDataIds(){return u("numDataIds")}disposeData(e){return u("disposeData")}write(e,t,n){return u("write")}move(e,t,n,r){return u("move")}memory(){return u("memory")}floatPrecision(){return u("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(e,t,n,r){return u("batchMatMul")}fusedBatchMatMul({a:e,b:t,transposeA:n,transposeB:r,bias:s,activation:a,preluActivationWeights:i}){return u("fusedBatchMatMul")}slice(e,t,n){return u("slice")}stridedSlice(e,t,n,r){return u("stridedSlice")}unstack(e,t){return u("unstack")}reverse(e,t){return u("reverse")}concat(e,t){return u("concat")}neg(e){return u("neg")}add(e,t){return u("add")}addN(e){return u("addN")}subtract(e,t){return u("subtract")}multiply(e,t){return u("multiply")}realDivide(e,t){return u("realDivide")}floorDiv(e,t){return u("floorDiv")}sum(e,t){return u("sum")}prod(e,t){return u("prod")}unsortedSegmentSum(e,t,n){return u("unsortedSegmentSum")}argMin(e,t){return u("argMin")}argMax(e,t){return u("argMax")}equal(e,t){return u("equal")}notEqual(e,t){return u("notEqual")}less(e,t){return u("less")}lessEqual(e,t){return u("lessEqual")}greater(e,t){return u("greater")}greaterEqual(e,t){return u("greaterEqual")}logicalNot(e){return u("logicalNot")}logicalAnd(e,t){return u("logicalAnd")}logicalOr(e,t){return u("logicalOr")}where(e){return u("where")}select(e,t,n){return u("select")}topk(e,t,n){return u("topk")}min(e,t){return u("min")}minimum(e,t){return u("minimum")}mod(e,t){return u("mod")}max(e,t){return u("max")}maximum(e,t){return u("maximum")}all(e,t){return u("all")}any(e,t){return u("any")}squaredDifference(e,t){return u("squaredDifference")}ceil(e){return u("ceil")}floor(e){return u("floor")}round(e){return u("round")}sign(e){return u("sign")}isNaN(e){return u("isNaN")}isInf(e){return u("isInf")}isFinite(e){return u("isFinite")}pow(e,t){return u("pow")}exp(e){return u("exp")}expm1(e){return u("expm1")}softmax(e,t){return u("softmax")}log(e){return u("log")}log1p(e){return u("log1p")}sqrt(e){return u("sqrt")}rsqrt(e){return u("rsqrt")}square(e){return u("square")}reciprocal(e){return u("reciprocal")}relu(e){return u("relu")}relu6(e){return u("relu6")}prelu(e,t){return u("prelu")}elu(e){return u("elu")}eluDer(e,t){return u("eluDer")}selu(e){return u("selu")}int(e){return u("int")}clip(e,t,n){return u("clip")}abs(e){return u("abs")}complexAbs(e){return u("complexAbs")}sigmoid(e){return u("sigmoid")}softplus(e){return u("softplus")}sin(e){return u("sin")}cos(e){return u("cos")}tan(e){return u("tan")}asin(e){return u("asin")}acos(e){return u("acos")}atan(e){return u("atan")}atan2(e,t){return u("atan2")}sinh(e){return u("sinh")}cosh(e){return u("cosh")}tanh(e){return u("tanh")}asinh(e){return u("asinh")}acosh(e){return u("acosh")}atanh(e){return u("atanh")}erf(e){return u("erf")}step(e,t){return u("step")}fusedConv2d({input:e,filter:t,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){return u("fusedConv2d")}conv2d(e,t,n){return u("conv2d")}conv2dDerInput(e,t,n){return u("conv2dDerInput")}conv2dDerFilter(e,t,n){return u("conv2dDerFilter")}fusedDepthwiseConv2D({input:e,filter:t,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){return u("fusedDepthwiseConv2D")}depthwiseConv2D(e,t,n){return u("depthwiseConv2D")}depthwiseConv2DDerInput(e,t,n){return u("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(e,t,n){return u("depthwiseConv2DDerFilter")}conv3d(e,t,n){return u("conv3d")}conv3dDerInput(e,t,n){return u("conv3dDerInput")}conv3dDerFilter(e,t,n){return u("conv3dDerFilter")}maxPool(e,t){return u("maxPool")}maxPoolBackprop(e,t,n,r){return u("maxPoolBackprop")}avgPool(e,t){return u("avgPool")}avgPoolBackprop(e,t,n){return u("avgPoolBackprop")}avgPool3d(e,t){return u("avgPool3d")}avgPool3dBackprop(e,t,n){return u("avgPool3dBackprop")}maxPool3d(e,t){return u("maxPool3d")}maxPool3dBackprop(e,t,n,r){return u("maxPool3dBackprop")}reshape(e,t){return u("reshape")}cast(e,t){return u("cast")}tile(e,t){return u("tile")}pad(e,t,n){return u("pad")}transpose(e,t){return u("transpose")}gather(e,t,n,r=0){return u("gather")}gatherND(e,t){return u("gatherND")}scatterND(e,t,n){return u("scatterND")}batchToSpaceND(e,t,n){return u("batchToSpaceND")}spaceToBatchND(e,t,n){return u("spaceToBatchND")}resizeBilinear(e,t,n,r,s){return u("resizeBilinear")}resizeBilinearBackprop(e,t,n){return u("resizeBilinearBackprop")}resizeNearestNeighbor(e,t,n,r,s){return u("resizeNearestNeighbor")}resizeNearestNeighborBackprop(e,t,n){return u("resizeNearestNeighborBackprop")}batchNorm(e,t,n,r,s,a){return u("batchNorm")}localResponseNormalization4D(e,t,n,r,s){return u("localResponseNormalization4D")}LRNGrad(e,t,n,r,s,a,i){return u("LRNGrad")}multinomial(e,t,n,r){return u("multinomial")}oneHot(e,t,n,r){return u("oneHot")}cumsum(e,t,n,r){return u("cumsum")}nonMaxSuppression(e,t,n,r,s){return u("nonMaxSuppression")}fft(e){return u("fft")}ifft(e){return u("ifft")}complex(e,t){return u("complex")}real(e){return u("real")}imag(e){return u("imag")}cropAndResize(e,t,n,r,s,a){return u("cropAndResize")}depthToSpace(e,t,n){return u("depthToSpace")}split(e,t,n){return u("split")}sparseToDense(e,t,n,r){return u("sparseToDense")}diag(e){return u("diag")}fill(e,t,n){return u("fill")}onesLike(e){return u("onesLike")}zerosLike(e){return u("zerosLike")}linspace(e,t,n){return u("linspace")}dispose(){return u("dispose")}}function u(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function c(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function h(e,t,n){return Math.max(e,Math.min(t,n))}function d(e){return e%2==0?e:e+1}function p(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function f(e,t,n=""){p(y(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function g(e){p(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function m(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||T(e)&&!n)for(let r=0;r<e.length;++r)m(e[r],t,n);else t.push(e);return t}function b(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function x(e){return e%1==0}function v(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function k(e,t=(e=>0),n){return new Promise(((r,s)=>{let a=0;const i=()=>{if(e())return void r();a++;const o=t(a);null!=n&&a>=n?s():setTimeout(i,o)};i()}))}function I(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function C(e,t){const n=t.length;return p((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),p(e.every((e=>x(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function N(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:C(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function $(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function S(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function E(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function T(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function A(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function R(e){return"string"==typeof e||e instanceof String}function F(e){return"number"==typeof e}function _(e){return Array.isArray(e)?_(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":F(e)?"float32":R(e)?"string":"boolean"==typeof e?"bool":"float32"}function D(e){return!!(e&&e.constructor&&e.call&&e.apply)}function L(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function O(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function M(e,t,n){const r=new Array;if(1===t.length){const s=t[0];for(let t=0;t<s;t++)r[t]=n[e+t]}else{const s=t[0],a=t.slice(1),i=a.reduce(((e,t)=>e*t));for(let t=0;t<s;t++)r[t]=M(e+t*i,a,n)}return r}function z(e,t){if(0===e.length)return t[0];const n=e.reduce(((e,t)=>e*t));if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return M(0,e,t)}function B(e,t){const n=P(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function P(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function W(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return z(e,new Float32Array(n));if("int32"===t)return z(e,new Int32Array(n));if("bool"===t)return z(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function U(e){e.forEach((t=>{p(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function V(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function G(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function j(e){return e&&e.then&&"function"==typeof e.then}class H{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(j(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function q(){return X}let K,X=null;function Y(){if(null==K){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}K=e}return K}function J(e,t){const n=function(){const e=Y();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const Z="Abs",Q="Acos",ee="Acosh",te="Add",ne="AddN",re="All",se="Any",ae="ArgMax",ie="ArgMin",oe="Asin",le="Asinh",ue="Atan",ce="Atanh",he="Atan2",de="AvgPool",pe="AvgPoolGrad",fe="AvgPool3D",ge="AvgPool3DGrad",me="BatchMatMul",be="BatchToSpaceND",ye="Bincount",xe="Cast",ve="Ceil",we="ClipByValue",ke="Complex",Ie="ComplexAbs",Ce="Concat",Ne="Conv2D",$e="Conv2DBackpropFilter",Se="Conv2DBackpropInput",Ee="Conv3D",Te="Conv3DBackpropFilterV2",Ae="Conv3DBackpropInputV2",Re="Cos",Fe="Cosh",_e="Cumsum",De="CropAndResize",Le="DenseBincount",Oe="DepthToSpace",Me="DepthwiseConv2dNative",ze="DepthwiseConv2dNativeBackpropFilter",Be="DepthwiseConv2dNativeBackpropInput",Pe="Diag",We="Dilation2D",Ue="Dilation2DBackpropInput",Ve="Dilation2DBackpropFilter",Ge="RealDiv",je="Elu",He="EluGrad",qe="Erf",Ke="Equal",Xe="Exp",Ye="ExpandDims",Je="Expm1",Ze="FFT",Qe="Fill",et="FlipLeftRight",tt="Floor",nt="FloorDiv",rt="FusedBatchNorm",st="GatherV2",at="GatherNd",it="Greater",ot="GreaterEqual",lt="Identity",ut="IFFT",ct="Imag",ht="IsFinite",dt="IsInf",pt="IsNan",ft="LeakyRelu",gt="Less",mt="LessEqual",bt="LinSpace",yt="Log",xt="Log1p",vt="LogicalAnd",wt="LogicalNot",kt="LogicalOr",It="LRN",Ct="LRNGrad",Nt="Max",$t="Maximum",St="MaxPool",Et="MaxPoolGrad",Tt="MaxPool3D",At="MaxPool3DGrad",Rt="MaxPoolWithArgmax",Ft="Mean",_t="Min",Dt="Minimum",Lt="MirrorPad",Ot="Mod",Mt="Multinomial",zt="Multiply",Bt="Neg",Pt="NotEqual",Wt="NonMaxSuppressionV3",Ut="NonMaxSuppressionV4",Vt="NonMaxSuppressionV5",Gt="OnesLike",jt="OneHot",Ht="Pack",qt="PadV2",Kt="Pow",Xt="Prelu",Yt="Prod",Jt="Range",Zt="Real",Qt="Reciprocal",en="Relu",tn="Reshape",nn="ResizeNearestNeighbor",rn="ResizeNearestNeighborGrad",sn="ResizeBilinear",an="ResizeBilinearGrad",on="Relu6",ln="Reverse",un="Round",cn="Rsqrt",hn="ScatterNd",dn="Select",pn="Selu",fn="Slice",gn="Sin",mn="Sinh",bn="Sign",yn="Sigmoid",xn="Softplus",vn="Sqrt",wn="Sum",kn="SpaceToBatchND",In="SplitV",Cn="Softmax",Nn="SquaredDifference",$n="Square",Sn="Sub",En="SparseToDense",Tn="StridedSlice",An="Tan",Rn="Tanh",Fn="Tile",_n="TopK",Dn="Transpose",Ln="Unique",On="Unpack",Mn="UnsortedSegmentSum",zn="ZerosLike",Bn="Step",Pn="RotateWithOffset",Wn="_FusedMatMul",Un="FusedConv2D",Vn="FusedDepthwiseConv2D",Gn=J("kernelRegistry",(()=>new Map)),jn=J("gradRegistry",(()=>new Map));function Hn(e){return jn.get(e)}function qn(e){const t=Gn.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function Kn(e){const{kernelName:t,backendName:n}=e,r=Yn(t,n);Gn.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),Gn.set(r,e)}function Xn(e){const{kernelName:t}=e;jn.has(t)&&q().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),jn.set(t,e)}function Yn(e,t){return`${t}_${e}`}class Jn{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Qn)}profileKernel(e,t,n){let r;const s=this.backendTimer.time((()=>{r=n()}));if(q().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Zn(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function Zn(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Qn{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?w(`${r}ms`,9):r.error,o=w(e,25),l=t.rank,u=t.size,c=w(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function er(e,t,n,r){const s=O(t),a=function(e,t,n,r){const s=b(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?sr(e):e;if(o>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],tr(l[t+e],0,n).length)}return i}(e,t,n,s),i=t.length,o=rr(e,t,n,s,a),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function tr(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:R(e)?`'${e}'`:"bool"===n?nr(e):parseFloat(e.toFixed(7)).toString(),w(r,t)}function nr(e){return 0===e?"false":"true"}function rr(e,t,n,r,s,a=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[tr(sr(e)[0],0,n)]:"bool"===n?[nr(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=sr(r),a=sr(a)),["["+r.map(((e,t)=>tr(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>tr(e,s[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?sr(e):Array.from(e)).map(((e,t)=>tr(e,s[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,a=r+h;d.push(...rr(e.slice(r,a),u,n,c,s,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h,a=r+h;d.push(...rr(e.slice(r,a),u,n,c,s,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,a=r+h;d.push(...rr(e.slice(r,a),u,n,c,s,t===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function sr(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}function ar(e,t){return"string"===t?lr(e):ir([e],t)}function ir(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=m(e)),q().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function or(){return q().platform.now()}function lr(e,t="utf-8"){return t=t||"utf-8",q().platform.encode(e,t)}function ur(e,t="utf-8"){return t=t||"utf-8",q().platform.decode(e,t)}class cr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=b(e),null!=n){const e=n.length;p(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||S(t,this.size),this.strides=O(e)}set(e,...t){0===t.length&&(t=[0]),p(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return hr().makeTensor(this.values,this.shape,this.dtype)}}let hr=null,dr=null,pr=null;class fr{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=b(e),this.strides=O(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return dr.buffer(this.shape,this.dtype,e)}bufferSync(){return dr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return z(this.shape,e)}arraySync(){return z(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=hr().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>ur(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=hr().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>ur(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await hr().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(hr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return dr.print(this,e)}clone(){return this.throwIfDisposed(),dr.clone(this)}toString(e=!1){return er(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),dr.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),hr().makeVariable(this,e,t,n)}}Object.defineProperty(fr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed});class gr extends fr{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!y(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);hr().disposeTensor(this),this.dataId=e.dataId,hr().incRef(this,null)}dispose(){hr().disposeVariable(this),this.isDisposedInternal=!0}}var mr,br,yr,xr,vr;Object.defineProperty(gr,Symbol.hasInstance,{value:e=>e instanceof fr&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(mr||(mr={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(br||(br={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(yr||(yr={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(xr||(xr={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(vr||(vr={}));const wr={float32:xr,int32:br,bool:yr,complex64:vr};function kr(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return wr[e][t]}function Ir(e){return kr(e,"int32")}function Cr(e,t){if(e.dtype===t.dtype)return[e,t];const n=kr(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Nr(e,t){return t.some((t=>t.id===e.id))}function $r(e){const t=[];return Sr(e,t,new Set),t}function Sr(e,t,n){if(null==e)return;if(e instanceof fr)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),Sr(r,t,n))}}class Er{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Tr{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Er}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Jn(this.backendInstance),!0}setupRegisteredKernels(){qn(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){qn(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof l||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t);r.disposeData(t),n.backend=e,e.move(t,s,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Tr.nextTensorId++}nextVariableId(){return Tr.nextVariableId++}clone(e){const t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t="float32",n={x:e},r={dtype:t};return Rr.runKernelFunc((n=>n.cast(e,t)),n,null,xe,r)}})),[],{}),t}runKernel(e,t,n,r,s){return this.runKernelFunc(null,t,null,e,n,r,s)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e,t,n,r,s,a,i){let o,l=[];const u=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const c=this.state.numBytes,h=this.state.numTensors;let d;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const p=function(e,t){const n=Yn(e,t);return Gn.get(n)}(r,this.backendName);let f,g;if(null!=p)d=()=>{const e=this.backend.numDataIds();f=p.kernelFunc({inputs:t,attrs:s,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,e,n);const o=n.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(u){let e=this.getTensorsForGradient(r,t,o);if(null==e){null==i&&(i=[]);const t=o.filter(((e,t)=>i[t]));e=(a||[]).slice().concat(t)}l=this.saveTensorsForBackwardMode(e)}return o};else{if(null==e)throw new Error(`Error running ${r}: Neither modular kernel nor forward func passed`);const t=e=>{u&&(l=e.map((e=>this.keep(this.clone(e)))))};d=()=>{const n=this.backend.numDataIds();f=this.tidy((()=>e(this.backend,t)));const s=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,s),s}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(g=this.profiler.profileKernel(r,t,(()=>d())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(g),o=g.outputs):o=d()})),u&&this.addTapeNode(r,t,o,n,l,s),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-c,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map((e=>null!=t[e]?t[e].shape:null)),outputShapes:o.map((e=>e.shape)),kernelTimeMs:g.timeMs,extraInfo:g.extraInfo}),Array.isArray(f)?o:o[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=Hn(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(p(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return a.concat(i)}return null}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&R(e[0])&&(s=e.map((e=>lr(e))));const a=r.write(s,t,n),i=new fr(t,n,a,this.nextTensorId());if(this.incRef(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s=new fr(t,n=n||"float32",e,this.nextTensorId());return this.incRef(s,r),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new gr(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}incRef(e,t){const n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*A(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof gr||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,"string"===e.dtype&&this.state.numStringTensors--;const t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?("complex64"!==e.dtype&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):(t.backend.decComplexRef(e.dataId),this.state.tensorInfo.get(e.dataId).refCount--)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=Hn(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=P(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=$r(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(p(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));p(s instanceof fr,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=B(b(e),"float32");return Rr.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!y(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),Fr);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return p(D(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;p(t.every((e=>e instanceof fr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc(((r,s)=>(n=e(...t,s),p(n.value instanceof fr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),p(D(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value)),r,((e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];p(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),p(a.every((e=>e instanceof fr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i}))}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=or(),n=await this.backend.time(e);return n.wallMs=or()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Er;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Ar(){const e=Y();if(null==e._tfengine){const t=new H(e);e._tfengine=new Tr(t)}var t;return t=e._tfengine.ENV,X=t,hr=()=>e._tfengine,e._tfengine}Tr.nextTensorId=0,Tr.nextVariableId=0;const Rr=Ar();function Fr(e,t){const n={a:e,b:t};return Rr.runKernel(te,n)}function _r(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Dr=q();function Lr(e,t){let n=e;if(T(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||T(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&q().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Or(e,r,[]),r}function Or(e,t,n){if(n=n||[],!Array.isArray(e)&&!T(e))return void p(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));p(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),p(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)Or(e[t],r,n.concat(t))}function Mr(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function zr(e,t,n,r="numeric"){if(e instanceof fr)return Mr(r,e.dtype,t,n),e;let s=_(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Mr(r,s,t,n),null==e||!T(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=Lr(e,s);T(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?ir(e,s):m(e,[],!0);return Rr.makeTensor(i,a,s)}function Br(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>zr(e,`${t}[${s}]`,n,r)))}function Pr(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{Rr.startScope(n);try{const t=r(...e);return j(t)&&console.error("Cannot return a Promise inside of tidy."),Rr.endScope(t),t}catch(e){throw Rr.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}Dr.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Dr.registerFlag("IS_BROWSER",(()=>_r())),Dr.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Dr.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Dr.registerFlag("PROD",(()=>!1)),Dr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Dr.getBool("DEBUG"))),Dr.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Dr.registerFlag("IS_TEST",(()=>!1)),Dr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0));const Wr=Pr({complex_:function(e,t){const n=zr(e,"real","complex"),r=zr(t,"imag","complex");f(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return Rr.runKernel(ke,s)}});function Ur(e,t,n,r){if(null==r&&(r=_(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!T(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){U(t);const e=b(t),r=b(n);p(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==b(t.slice(e));p(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return T(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?ir(e,r):m(e,[],!0),Rr.makeTensor(e,t,r)}async function Vr(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Gr(await Promise.all(r)),specs:n}}function Gr(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const jr="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Hr(e){return jr?Buffer.byteLength(e):new Blob([e]).size}function qr(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Kr(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Hr(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Hr(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}class Xr{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Xr.instance&&(Xr.instance=new Xr),Xr.instance}static registerSaveRouter(e){Xr.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Xr.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Xr.getHandlers(e,"save")}static getLoadHandlers(e,t){return Xr.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Xr.getInstance().loadRouters:Xr.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const Yr="tensorflowjs",Jr="models_store",Zr="model_info_store";function Qr(){if(!q().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function es(e){const t=e.result;t.createObjectStore(Jr,{keyPath:"modelPath"}),t.createObjectStore(Zr,{keyPath:"modelPath"})}class ts{constructor(e){if(this.indexedDB=Qr(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Yr,1);r.onupgradeneeded=()=>es(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(Jr,"readonly"),r=t.objectStore(Jr).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=Kr(t),a=s.transaction(Zr,"readwrite");let i=a.objectStore(Zr);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=s.transaction(Jr,"readwrite");const o=l.objectStore(Jr).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=a.objectStore(Zr);const t=i.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(o.error)),t.onerror=e=>(s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}ts.URL_SCHEME="indexeddb://";const ns=e=>{return q().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ts.URL_SCHEME)?(t=e.slice(ts.URL_SCHEME.length),new ts(t)):null;var t};Xr.registerSaveRouter(ns),Xr.registerLoadRouter(ns);class rs{constructor(){this.indexedDB=Qr()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Yr,1);n.onupgradeneeded=()=>es(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Zr,"readonly"),a=s.objectStore(Zr).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(ts.URL_SCHEME)?t.slice(ts.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Yr,1);r.onupgradeneeded=()=>es(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(Zr,"readwrite"),i=a.objectStore(Zr),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{l=s.transaction(Jr,"readwrite");const r=l.objectStore(Jr).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const ss="/",as="tensorflowjs_models",is="info",os="model_topology",ls="weight_specs",us="weight_data",cs="model_metadata";function hs(e){return{info:[as,e,is].join(ss),topology:[as,e,os].join(ss),weightSpecs:[as,e,ls].join(ss),weightData:[as,e,us].join(ss),modelMetadata:[as,e,cs].join(ss)}}function ds(e){const t=e.split(ss);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ss)}class ps{constructor(e){if(!q().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=hs(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Kr(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(jr)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(jr){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}ps.URL_SCHEME="localstorage://";const fs=e=>{return q().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ps.URL_SCHEME)?(t=e.slice(ps.URL_SCHEME.length),new ps(t)):null;var t};Xr.registerSaveRouter(fs),Xr.registerLoadRouter(fs);class gs{constructor(){p(q().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),p("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=as+ss,n=ss+is;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[ds(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=hs(e=(t=e).startsWith(ps.URL_SCHEME)?t.slice(ps.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class ms{constructor(){this.managers={}}static getInstance(){return null==ms.instance&&(ms.instance=new ms),ms.instance}static registerManager(e,t){p(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),p(e.length>0,(()=>"scheme must not be an empty string."));const n=ms.getInstance();p(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class bs{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(q().get("IS_BROWSER")){q().setPlatform("browser",new bs);try{ms.registerManager(ps.URL_SCHEME,new gs)}catch(e){}try{ms.registerManager(ts.URL_SCHEME,new rs)}catch(e){}}let ys;function xs(e,t="float32",n){return t=t||"float32",U(e),new cr(e,t,n)}q().get("IS_NODE")&&q().setPlatform("node",new class{constructor(){this.util=n(4673),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=q().global.fetch?q().global.fetch(e,t):(null==ys&&(ys=n(5751)),ys(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const vs=Pr({cast_:function(e,t){const n=zr(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return Rr.runKernel(xe,r,s)}}),ws=Pr({clone_:function(e){const t={x:zr(e,"x","clone","string_or_numeric")};return Rr.runKernel(lt,t)}});function ks(e){return new Promise((e=>setTimeout(e))).then(e)}Ar(),dr={buffer:xs,cast:vs,clone:ws,print:function(e,t=!1){console.log(e.toString(t))}};class Is{constructor(e){if(!q().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Is.URL_SCHEME)&&(e=e.slice(Is.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);const s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await ks((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await ks((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Kr(e)}}}}function Cs(e,t,n,r){!function(e){p(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){p(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),p(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),p(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function Ns(e,t){null==t&&(t={});const n=null==t.fetchFunc?q().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await Cs(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await Cs(s,t.onProgress,.5,1)}Is.URL_SCHEME="downloads://",Xr.registerSaveRouter((e=>q().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Is.URL_SCHEME)?function(e="model"){return new Is(e)}(e.slice(Is.URL_SCHEME.length)):null));class $s{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(p("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=q().platform.fetch,p(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&p(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Kr(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,s=t.generatedBy,a=t.convertedBy,i=t.format,o=t.signature,l=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;if(null!=r){const e=await this.loadWeights(r);[u,c]=e}const h={modelTopology:n,weightSpecs:u,weightData:c,generatedBy:s,convertedBy:a,format:i};null!=o&&(h.signature=o),null!=l&&(h.userDefinedMetadata=l);const d=t.modelInitializer;return d&&(h.modelInitializer=d),h}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(s+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,qr(await Ns(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Ss(e){return null!=e.match($s.URL_SCHEME_REGEX)}$s.URL_SCHEME_REGEX=/^https?:\/\//;const Es=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Ss(e))):Ss(e),n)return function(e,t){return new $s(e,t)}(e,t)}return null};function Ts(e,t,n){const r=e.shape.length;p(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),p(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)p(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function As(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Rs(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function Fs(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function _s(e,t,n){return n<=e?n:n-(t-1)}function Ds(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Ls(e,t,n,r,s,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Os(i,l,u,r,e),h=Ms(o,l,u,s,e),d=Fs(a,l,u,e)}else for(let t=0;t<u;t++)c[t]=Bs(i,r,a,e,t,l),h[t]=Ps(o,s,a,e,t,l),d[t]=zs(a,t,l);return{begin:c,end:h,strides:d}}function Os(e,t,n,r,s){const a=[...s],i=Ds(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=_s(t,n,s);let o=r[i];e&1<<i&&(o=0),a[s]=o}return a}function Ms(e,t,n,r,s){const a=[...s],i=Ds(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=_s(t,n,s);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let e=0;e<a.length;e++){const t=s[e];a[e]<0&&(a[e]+=t),a[e]=h(0,a[e],s[e])}return a}function zs(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Bs(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=h(0,i,l-1),i}function Ps(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=o>0?h(0,i,l):h(-1,i,l-1),i}function Ws(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function Us(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Vs(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{p(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(p(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function Gs(e,t,n,r,s,a,i,o,l){let u=t.slice(),c=n.slice(),h=r;null==r&&(h=new Array(u.length));const d=As(i);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=e.length-u.length,f=As(o),g=e.slice();f.forEach((e=>{u[e]=0,c[e]=1,g.splice(e,0,1)}));const{begin:m,end:b,strides:y}=Ls(g,d,p,u,c,h,s,a,i);u=m,c=b,h=y;const x=As(l);x.forEach((e=>{c[e]=u[e]+1,h[e]=1}));const v=Rs(u,c,h),w=v.filter(((e,t)=>-1===x.indexOf(t)));return{nonStrided:h.every((e=>1===e)),$begin:u,$end:c,$strides:h,size:v,newShape:g,outShape:w}}Xr.registerSaveRouter(Es),Xr.registerLoadRouter(Es);class js{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Hs{constructor(){this.classNameMap={}}static getMap(){return null==Hs.instance&&(Hs.instance=new Hs),Hs.instance}static register(e){Hs.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function qs(e){p(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),p("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),p(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Hs.register(e)}function Ks(e){q().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Xs(){return Rr}function Ys(){return Rr.memory()}function Js(e,t){return Rr.tidy(e,t)}function Zs(e){$r(e).forEach((e=>e.dispose()))}function Qs(e){return Rr.keep(e)}function ea(e,t,n=1){return Rr.registerBackend(e,t,n)}function ta(e){return Rr.customGrad(e)}function na(e,t){if((T(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&T(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ur(e,[],[],t)}pr=Ks;class ra extends js{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return Zs(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){p(D(e),(()=>"The f passed in variableGrads(f) must be a function")),p(null==t||Array.isArray(t)&&t.every((e=>e instanceof gr)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Rr.registeredVariables)t.push(Rr.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;p((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:i}=Rr.gradients(e,t,null,!0);p(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),p(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:a,grads:o}}(e,t)}dispose(){null!=this.iterations_&&Zs(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:na(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(ra,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const sa=Pr({abs_:function(e){const t=zr(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Rr.runKernel(Ie,e)}{const e={x:t};return Rr.runKernel(Z,e)}}}),aa=Pr({add_:function(e,t){let n=zr(e,"a","add"),r=zr(t,"b","add");[n,r]=Cr(n,r);const s={a:n,b:r};return Rr.runKernel(te,s)}}),ia=Pr({all_:function(e,t=null,n=!1){const r={x:zr(e,"x","all","bool")},s={axis:t,keepDims:n};return Rr.runKernel(re,r,s)}}),oa=Pr({any_:function(e,t=null,n=!1){const r={x:zr(e,"x","any","bool")},s={axis:t,keepDims:n};return Rr.runKernel(se,r,s)}}),la=Pr({argMax_:function(e,t=0){const n={x:zr(e,"x","argMax")},r={axis:t};return Rr.runKernel(ae,n,r)}});function ua(e,t,n,r,s="NHWC",a){return da(e,[...t,e[3]],n,a,r,null,null,wa(s))}function ca(e,t,n,r,s,a,i="channelsLast"){const[o,l]=ga(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return da(e,u,n,r,s,a,!1,i)}function ha(e,t,n,r,s,a,i="NDHWC"){const[o,l,u]=ma(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return pa(e,c,n,r,s,!1,h,a)}function da(e,t,n,r,s,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[g,m]=ga(n),[b,y]=ga(r),x=ba(d,b),v=ba(p,y),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,r,s,a,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=fa(e,t,n));const a=e[1];return[ya((e[0]-t+2*r)/n+1,s),ya((a-t+2*r)/n+1,s)]}([t,n],a,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},c=ya((t-a+d+p)/r+1,o),h=ya((n-i+f+g)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,g,m,x,v,a,o),C=i?f*h:f;let N;return"channelsFirst"===o?N=[l,C,k,I]:"channelsLast"===o&&(N=[l,k,I,C]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:C,padInfo:w,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:b,dilationWidth:y,inShape:e,outShape:N,filterShape:t}}function pa(e,t,n,r,s,a=!1,i="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,c,h]=e}const[p,f,g,,m]=t,[b,y,x]=ma(n),[v,w,k]=ma(r),I=ba(p,v),C=ba(f,w),N=ba(g,k),{padInfo:$,outDepth:S,outHeight:E,outWidth:T}=function(e,t,n,r,s,a,i,o,l,u,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,s,a){null==s&&(s=fa(e,t,r));const i=e[1],o=e[2];return[ya((e[0]-t+2*s)/r+1,a),ya((i-t+2*s)/r+1,a),ya((o-t+2*s)/r+1,a),1]}([t,n,r,1],o,0,s,e,c);d=a[0],p=a[1],f=a[2]}else if("same"===e){d=Math.ceil(t/s),p=Math.ceil(n/a),f=Math.ceil(r/i);const e=(d-1)*s+o-t,c=(p-1)*a+l-n,g=(f-1)*i+u-r,m=Math.floor(e/2),b=e-m,y=Math.floor(c/2),x=c-y,v=Math.floor(g/2);h={top:y,bottom:x,left:v,right:g-v,front:m,back:b,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/s),p=Math.ceil((n-l+1)/a),f=Math.ceil((r-u+1)/i)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,b,y,x,I,C,N,o),A=a?m*d:m;let R;return"channelsFirst"===i?R=[l,A,S,E,T]:"channelsLast"===i&&(R=[l,S,E,T,A]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:S,outHeight:E,outWidth:T,outChannels:A,padInfo:$,strideDepth:b,strideHeight:y,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:I,effectiveFilterHeight:C,effectiveFilterWidth:N,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:R,filterShape:t}}function fa(e,t,n,r=1){const s=ba(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function ga(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function ma(e){return"number"==typeof e?[e,e,e]:e}function ba(e,t){return t<=1?e:e+(e-1)*(t-1)}function ya(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function xa(e){const[t,n,r]=ga(e);return 1===t&&1===n&&1===r}function va(e,t){return xa(e)||xa(t)}function wa(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}const ka=Pr({reshape_:function(e,t){const n={x:zr(e,"x","reshape","string_or_numeric")},r={shape:t};return Rr.runKernel(tn,n,r)}}),Ia=Pr({avgPool_:function(e,t,n,r,s){const a=zr(e,"x","avgPool","float32");p(va(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=ka(a,[1,a.shape[0],a.shape[1],a.shape[2]])),p(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=s&&p(x(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=Rr.runKernel(de,l,u);return c=vs(c,a.dtype),o?ka(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ca=Pr({avgPool3d_:function(e,t,n,r,s,a="NDHWC",i){null==i?i=[1,1,1]:Ks("dilations is deprecated, this field will be gone in v3.0.0.");const o=zr(e,"x","avgPool3d","float32");let l=o,u=!1;4===o.rank&&(u=!0,l=ka(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),p(5===l.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`)),p("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),p(va(n,i),(()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=s&&p(x(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const c={x:l},h={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a,dilations:i};let d=Rr.runKernel(fe,c,h);return d=vs(d,l.dtype),u?ka(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Na=Pr({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const i=zr(e,"x","batchNorm"),o=zr(t,"mean","batchNorm"),l=zr(n,"variance","batchNorm");let u,c;null!=s&&(u=zr(s,"scale","batchNorm")),null!=r&&(c=zr(r,"offset","batchNorm")),p(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),p(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),p(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(e){let t;return t=0===e.rank||1===e.rank?ka(e,[1,1,1,e.size]):2===e.rank?ka(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?ka(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),d={x:h,scale:u,offset:c,mean:o,variance:l},f={varianceEpsilon:a},g=Rr.runKernel(rt,d,f);return ka(g,i.shape)}}),$a=Pr({batchNorm2d_:function(e,t,n,r,s,a){const i=zr(e,"x","batchNorm"),o=zr(t,"mean","batchNorm"),l=zr(n,"variance","batchNorm");let u,c;return null!=s&&(u=zr(s,"scale","batchNorm")),null!=r&&(c=zr(r,"offset","batchNorm")),p(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),p(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),p(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&p(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&p(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Na(i,o,l,c,u,a)}}),Sa=Pr({batchNorm3d_:function(e,t,n,r,s,a){const i=zr(e,"x","batchNorm"),o=zr(t,"mean","batchNorm"),l=zr(n,"variance","batchNorm");let u,c;return null!=s&&(u=zr(s,"scale","batchNorm")),null!=r&&(c=zr(r,"offset","batchNorm")),p(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),p(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),p(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&p(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&p(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Na(i,o,l,c,u,a)}}),Ea=Pr({batchNorm4d_:function(e,t,n,r,s,a){const i=zr(e,"x","batchNorm"),o=zr(t,"mean","batchNorm"),l=zr(n,"variance","batchNorm");let u,c;return null!=s&&(u=zr(s,"scale","batchNorm")),null!=r&&(c=zr(r,"offset","batchNorm")),p(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),p(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),p(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&p(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&p(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Na(i,o,l,c,u,a)}}),Ta=Pr({clipByValue_:function(e,t,n){const r=zr(e,"x","clipByValue");p(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const s={x:r},a={clipValueMin:t,clipValueMax:n};return Rr.runKernel(we,s,a)}}),Aa=Pr({concat_:function(e,t=0){p(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Br(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return ws(n[0]);const r=n,s={axis:t};return Rr.runKernel(Ce,r,s)}}),Ra=Pr({concat1d_:function(e){return Aa(e,0)}}),Fa=Pr({concat2d_:function(e,t){return Aa(e,t)}}),_a=Pr({concat3d_:function(e,t){return Aa(e,t)}}),Da=Pr({concat4d_:function(e,t){return Aa(e,t)}}),La=Pr({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=zr(e,"x","conv2d"),l=zr(t,"filter","conv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=ka(o,[1,o.shape[0],o.shape[1],o.shape[2]])),p(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),p(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=i&&p(x(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h="NHWC"===s?u.shape[3]:u.shape[1];p(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),p(va(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const d={x:u,filter:l},f={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},g=Rr.runKernel(Ne,d,f);return c?ka(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),Oa=Pr({conv1d_:function(e,t,n,r,s="NWC",a=1,i){const o=zr(e,"x","conv1d"),l=zr(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=ka(o,[1,o.shape[0],o.shape[1]])),p(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),p(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=i&&p(x(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),p(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),p(va(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),p("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=ka(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=ka(u,[u.shape[0],1,u.shape[1],u.shape[2]]),f=La(d,h,[1,n],r,"NHWC",[1,a],i);return ka(f,c?[f.shape[2],f.shape[3]]:[f.shape[0],f.shape[2],f.shape[3]])}}),Ma=Pr({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",i){p(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=ka(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),p(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),p(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),p(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];p(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),p(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&p(x(s),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const d={dy:l,filter:n},f={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},g=Rr.runKernel(Se,d,f);return u?ka(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),za=Pr({conv2dTranspose_:function(e,t,n,r,s,a){const i=zr(e,"x","conv2dTranspose"),o=zr(t,"filter","conv2dTranspose");return Ma(n,i,o,r,s,"NHWC",a)}}),Ba=Pr({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const i=zr(e,"x","conv3d"),o=zr(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=ka(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),p(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),p(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),p(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),p(va(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),p("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:a},d=Rr.runKernel(Ee,c,h);return u?ka(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Pa=Pr({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=zr(e,"x","depthwiseConv2d"),l=zr(t,"filter","depthwiseConv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=ka(o,[1,o.shape[0],o.shape[1],o.shape[2]])),p(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),p(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),p(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=i&&p(x(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h={x:u,filter:l},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=Rr.runKernel(Me,h,d);return c?ka(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Wa=Pr({floorDiv_:function(e,t){let n=zr(e,"a","floorDiv"),r=zr(t,"b","floorDiv");[n,r]=Cr(n,r);const s={a:n,b:r};return Rr.runKernel(nt,s)}}),Ua=Pr({div_:function(e,t){let n=zr(e,"a","div"),r=zr(t,"b","div");if([n,r]=Cr(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Wa(n,r);const s={a:n,b:r};return Rr.runKernel(Ge,s,{})}}),Va=Pr({elu_:function(e){const t={x:zr(e,"x","elu")};return Rr.runKernel(je,t)}});function Ga(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function ja(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function Ha(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}const qa=Pr({equal_:function(e,t){let n=zr(e,"a","equal"),r=zr(t,"b","equal");[n,r]=Cr(n,r),Ha(n.shape,r.shape);const s={a:n,b:r};return Rr.runKernel(Ke,s)}}),Ka=Pr({expandDims_:function(e,t=0){const n=zr(e,"x","expandDims","string_or_numeric");p(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return Rr.runKernel(Ye,r,s)}}),Xa=Pr({tile_:function(e,t){const n=zr(e,"x","tile","string_or_numeric");p(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return Rr.runKernel(Fn,r,s)}}),Ya=Pr({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=xs([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const i=ka(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Xa(Ka(i,0),[n[0],1,1]);if(2===n.length)return Xa(Ka(Ka(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Xa(Ka(Ka(Ka(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Ja(e,t,n){const r={shape:e,value:t,dtype:n};return Rr.runKernel(Qe,{},r)}const Za=Pr({floor_:function(e){const t={x:zr(e,"x","floor")};return Rr.runKernel(tt,t)}}),Qa=Pr({gather_:function(e,t,n=0,r=0){const s={x:zr(e,"x","gather"),indices:zr(t,"indices","gather","int32")},a={axis:n,batchDims:r};return Rr.runKernel(st,s,a)}}),ei=Pr({greater_:function(e,t){let n=zr(e,"a","greater"),r=zr(t,"b","greater");[n,r]=Cr(n,r),Ha(n.shape,r.shape);const s={a:n,b:r};return Rr.runKernel(it,s)}}),ti=Pr({greaterEqual_:function(e,t){let n=zr(e,"a","greaterEqual"),r=zr(t,"b","greaterEqual");[n,r]=Cr(n,r),Ha(n.shape,r.shape);const s={a:n,b:r};return Rr.runKernel(ot,s)}}),ni=Pr({leakyRelu_:function(e,t=.2){const n={x:zr(e,"x","leakyRelu")},r={alpha:t};return Rr.runKernel(ft,n,r)}}),ri=Pr({log_:function(e){const t={x:zr(e,"x","log")};return Rr.runKernel(yt,t)}}),si=Pr({exp_:function(e){const t={x:zr(e,"x","exp")};return Rr.runKernel(Xe,t)}}),ai=Pr({max_:function(e,t=null,n=!1){const r={x:zr(e,"x","max")},s={reductionIndices:t,keepDims:n};return Rr.runKernel(Nt,r,s)}}),ii=Pr({mul_:function(e,t){let n=zr(e,"a","mul"),r=zr(t,"b","mul");[n,r]=Cr(n,r);const s={a:n,b:r};return Rr.runKernel(zt,s)}}),oi=Pr({sub_:function(e,t){let n=zr(e,"a","sub"),r=zr(t,"b","sub");[n,r]=Cr(n,r);const s={a:n,b:r};return Rr.runKernel(Sn,s)}}),li=Pr({sum_:function(e,t=null,n=!1){let r=zr(e,"x","sum");"bool"===r.dtype&&(r=vs(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Rr.runKernel(wn,s,a)}}),ui=Pr({logSoftmax_:function(e,t=-1){const n=zr(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=ta(((e,n)=>{const r=ai(e,t,!0),s=oi(e,r),a=oi(vs(s,"float32"),ri(li(si(s),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[r]=n,s=si(r);return oi(e,ii(li(e,t,!0),s))}}}));return r(n)}}),ci=Pr({logicalAnd_:function(e,t){const n=zr(e,"a","logicalAnd","bool"),r=zr(t,"b","logicalAnd","bool");Ha(n.shape,r.shape);const s={a:n,b:r};return Rr.runKernel(vt,s)}}),hi=Pr({maxPool_:function(e,t,n,r,s){const a=zr(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=ka(a,[1,a.shape[0],a.shape[1],a.shape[2]])),p(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),p(va(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=s&&p(x(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=Rr.runKernel(St,l,u);return o?ka(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),di=Pr({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC",i){null==i?i=[1,1,1]:Ks("dilations is deprecated, this field will be gone in v3.0.0.");const o=zr(e,"x","maxPool3d");let l=o,u=!1;4===o.rank&&(u=!0,l=ka(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),p(5===l.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`)),p("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),p(va(n,i),(()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=s&&p(x(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const c={x:l},h={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a,dilations:i},d=Rr.runKernel(Tt,c,h);return u?ka(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),pi=Pr({maximum_:function(e,t){let n=zr(e,"a","maximum"),r=zr(t,"b","maximum");[n,r]=Cr(n,r),"bool"===n.dtype&&(n=vs(n,"int32"),r=vs(r,"int32")),Ha(n.shape,r.shape);const s={a:n,b:r};return Rr.runKernel($t,s)}}),fi=Pr({mean_:function(e,t=null,n=!1){const r={x:zr(e,"x","mean")},s={axis:t,keepDims:n};return Rr.runKernel(Ft,r,s)}}),gi=Pr({min_:function(e,t=null,n=!1){const r={x:zr(e,"x","min")},s={axis:t,keepDims:n};return Rr.runKernel(_t,r,s)}}),mi=Pr({minimum_:function(e,t){let n=zr(e,"a","minimum"),r=zr(t,"b","minimum");[n,r]=Cr(n,r),"bool"===n.dtype&&(n=vs(n,"int32"),r=vs(r,"int32")),Ha(n.shape,r.shape);const s={a:n,b:r};return Rr.runKernel(Dt,s)}});function bi(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function yi(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function xi(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function vi(e,t){return yi(e,t.map((e=>1)),t)}function wi(e,t,n){p(bi(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function ki(e,t){if(bi(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Ii(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Ci(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Ni=Pr({square_:function(e){const t=zr(e,"x","square");return Rr.runKernel("Square",{x:t},{})}}),$i=Pr({moments_:function(e,t=null,n=!1){const r=C(t,(e=zr(e,"x","moments")).shape),s=fi(e,r,n);let a=s.shape;n||(a=vi(s.shape,r));const i=Ni(oi(vs(e,"float32"),ka(s,a)));return{mean:s,variance:fi(i,r,n)}}}),Si=Pr({neg_:function(e){const t={x:zr(e,"x","neg")};return Rr.runKernel(Bt,t)}}),Ei=Pr({notEqual_:function(e,t){let n=zr(e,"a","notEqual"),r=zr(t,"b","notEqual");[n,r]=Cr(n,r),Ha(n.shape,r.shape);const s={a:n,b:r};return Rr.runKernel(Pt,s)}}),Ti=Pr({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const s={indices:zr(e,"indices","oneHot","int32")},a={depth:t,onValue:n,offValue:r};return Rr.runKernel(jt,s,a)}});function Ai(e,t="float32"){if("complex64"===t){const t=Ai(e,"float32"),n=Ai(e,"float32");return Wr(t,n)}const n=P(b(e),t);return Rr.makeTensor(n,e,t)}function Ri(e,t="float32"){if("complex64"===t){const t=Ri(e,"float32"),n=Ai(e,"float32");return Wr(t,n)}const n=B(b(e),t);return Rr.makeTensor(n,e,t)}const Fi=Pr({onesLike_:function(e){const t={x:zr(e,"x","onesLike")};return Rr.runKernel(Gt,t)}}),_i=Pr({pad_:function(e,t,n=0){const r=zr(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return Rr.runKernel(qt,a,s)}}),Di=Pr({prelu_:function(e,t){const n={x:zr(e,"x","prelu"),alpha:zr(t,"alpha","prelu")};return Rr.runKernel(Xt,n)}});var Li=n(6823);class Oi{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=Li.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Mi{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Li.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const zi=Pr({randomNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new Oi(t,n,r,!1,s),i=xs(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Bi=Pr({randomUniform_:function(e,t=0,n=1,r="float32",s){const a=xs(e,r),i=new Mi(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}}),Pi=Pr({relu_:function(e){const t={x:zr(e,"x","relu")};return Rr.runKernel(en,t)}}),Wi=Pr({reverse_:function(e,t){const n={x:zr(e,"x","reverse")},r={dims:t};return Rr.runKernel(ln,n,r)}}),Ui=Pr({selu_:function(e){const t={x:zr(e,"x","selu")};return Rr.runKernel(pn,t)}}),Vi=Pr({separableConv2d_:function(e,t,n,r,s,a=[1,1],i="NHWC"){const o=zr(e,"x","separableConv2d"),l=zr(t,"depthwiseFilter","separableConv2d"),u=zr(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=ka(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");p(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),p(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),p(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),p(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),p(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],f=l.shape[3];p(u.shape[2]===d*f,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*f}, but got ${u.shape[2]}.`));const g=Pa(c,l,r,s,i,a),m=La(g,u,1,"valid",i);return h?ka(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Gi=Pr({sigmoid_:function(e){const t={x:zr(e,"x","sigmoid")};return Rr.runKernel(yn,t)}}),ji=Pr({slice_:function(e,t,n){const r=zr(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return Rr.runKernel(fn,s,a)}}),Hi=Pr({slice1d_:function(e,t,n){const r=zr(e,"x","slice1d");return p(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),ji(r,[t],[n])}}),qi=Pr({slice2d_:function(e,t,n){const r=zr(e,"x","slice2d");return p(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),ji(r,t,n)}}),Ki=Pr({slice3d_:function(e,t,n){const r=zr(e,"x","slice3d");return p(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),ji(r,t,n)}}),Xi=Pr({slice4d_:function(e,t,n){const r=zr(e,"x","slice4d");return p(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),ji(r,t,n)}}),Yi=Pr({softmax_:function(e,t=-1){const n=zr(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return Rr.runKernel(Cn,r,s)}}),Ji=Pr({softplus_:function(e){const t={x:zr(e,"x","softplus")};return Rr.runKernel(xn,t)}}),Zi=Pr({split_:function(e,t,n=0){const r={x:zr(e,"x","split")},s={numOrSizeSplits:t,axis:n};return Rr.runKernel(In,r,s)}}),Qi=Pr({sqrt_:function(e){const t={x:zr(e,"x","sqrt")};return Rr.runKernel(vn,t)}}),eo=Pr({squeeze_:function(e,t){const n=zr(e,"x","squeeze");return ka(n,N(n.shape,t).newShape)}}),to=Pr({stack_:function(e,t=0){const n=Br(e,"tensors","stack","string_or_numeric");p(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&p(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return Rr.runKernel(Ht,r,s)}}),no=Pr({tanh_:function(e){const t={x:zr(e,"x","tanh")};return Rr.runKernel(Rn,t)}});function ro(e,t){g(e);const n=Lr(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ur(e,null,n,t)}const so=Pr({truncatedNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new Oi(t,n,r,!0,s),i=xs(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),ao=Pr({unstack_:function(e,t=0){const n=zr(e,"x","unstack","string_or_numeric");p(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return Rr.runKernel(On,r,s)}}),io=Pr({broadcastTo_:function(e,t){let n=zr(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=ka(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return ws(n);const i={x:n},o={reps:a};return Rr.runKernel(Fn,i,o)}}),oo=Pr({where_:function(e,t,n){const r=zr(t,"a","where"),s=zr(n,"b","where"),a=zr(e,"condition","where","bool"),i=Ha(r.shape,s.shape),o=io(r,i),l=io(s,i);1===a.rank&&p(a.shape[0]===r.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==a.rank&&f(a.shape,l.shape,"Error in where: ");const u={condition:a,t:o,e:l};return Rr.runKernel(dn,u)}}),lo=Pr({zerosLike_:function(e){const t={x:zr(e,"x","zerosLike")};return Rr.runKernel(zn,t)}}),uo=Pr({transpose_:function(e,t){const n=zr(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),p(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{p(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:t};return Rr.runKernel(Dn,r,s)}}),co=Pr({dropout_:function(e,t,n,r){const s=zr(e,"x","dropout");if(p("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),p(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof fr?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(y(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,o=Ua(Za(aa(Bi(a,0,1,"float32",r),i)),i);return ii(s,o)}}),ho=Pr({imag_:function(e){const t={input:zr(e,"input","imag")};return Rr.runKernel(ct,t)}}),po=Pr({real_:function(e){const t={input:zr(e,"input","real")};return Rr.runKernel(Zt,t)}}),fo=Pr({fft_:function(e){p("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Rr.runKernel(Ze,t)}}),go=Pr({rfft_:function(e,t){p("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=ji(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=Aa([e,Ai(r)],e.shape.length-1),n=t}else s=e;const a=lo(s),i=ka(Wr(s,a),[r,n]),o=fo(i),l=Math.floor(n/2)+1,u=po(o),c=ho(o),h=Zi(u,[l,n-l],u.shape.length-1),d=Zi(c,[l,n-l],c.shape.length-1),f=s.shape.slice();return f[s.shape.length-1]=l,ka(Wr(h[0],d[0]),f)}}),mo=Pr({ifft_:function(e){p("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Rr.runKernel(ut,t)}}),bo=Pr({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=ka(e,[n,t]);r=mo(s)}else{const s=[n,2*(t-1)],a=ka(po(e),[n,t]),i=ka(ho(e),[n,t]),o=Wi(ji(a,[0,1],[n,t-2]),1),l=ii(Wi(ji(i,[0,1],[n,t-2]),1),na(-1)),u=Aa([a,o],1),c=Aa([i,l],1),h=ka(Wr(u,c),[s[0],s[1]]);r=mo(h)}if(r=po(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=ka(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),yo=Pr({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",i){let o=e;3===e.rank&&(o=ka(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=ka(t,[1,t.shape[0],t.shape[1],t.shape[2]])),p(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),p(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),p(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];p(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),p(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=i&&p(x(s),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const h={x:o,dy:l},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return Rr.runKernel($e,h,d)}}),xo=Pr({relu6_:function(e){const t={x:zr(e,"x","relu6")};return Rr.runKernel(on,t)}}),vo=Pr({step_:function(e,t=0){const n={x:zr(e,"x","step")},r={alpha:t};return Rr.runKernel(Bn,n,r)}});function wo(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return ii(e,vo(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function ko(e,t){let n=t;const r=ja(e.shape,t.shape);return r.length>0&&(n=li(n,r)),ka(n,e.shape)}function Io(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Pi(e);if("elu"===t)return Va(e);if("relu6"===t)return xo(e);if("prelu"===t)return Di(e,n);if("leakyrelu"===t)return ni(e,r);throw new Error(`Unknown fused activation ${t}.`)}const Co=(e,t)=>!(e>0)||"linear"===t,No=Pr({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===Co(Rr.state.gradientDepth,l)){let h=La(e,t,n,r,s,a,i);return null!=o&&(h=aa(h,o)),Io(h,l,u,c)}const h=zr(e,"x","conv2d"),d=zr(t,"filter","conv2d");let f=h,g=!1;3===h.rank&&(g=!0,f=ka(h,[1,h.shape[0],h.shape[1],h.shape[2]])),p(4===f.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`)),p(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),null!=i&&p(x(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),p(f.shape[3]===d.shape[2],(()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${d.shape[2]}.`)),p(va(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),p("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const m=da(f.shape,d.shape,n,a,r,i);let b,y;null!=o&&(b=zr(o,"bias","fused conv2d"),[b]=Cr(b,h),Ha(m.outShape,b.shape)),null!=u&&(y=zr(u,"prelu weights","fused conv2d"));const v=(e,t)=>{const[s,i,o,u]=t,c=wo(e,o,l);p(xa(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const h=[Ma(i.shape,c,s,n,r),yo(i,c,s.shape,n,r)];if(null!=u){const e=ko(u,c);h.push(e)}return h},w={x:f,filter:d,bias:b,preluActivationWeights:y},k={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=ta(((e,t,n)=>{let r=Rr.runKernel(Un,w,k);return n([t,e,r]),g&&(r=ka(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return e(f,d)}{const e=ta(((e,t,n,r)=>{let s=Rr.runKernel(Un,w,k);return r([t,e,s,n]),g&&(s=ka(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:v}}));return e(f,d,b)}}}),$o=Pr({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],i){let o=e;3===e.rank&&(o=ka(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=ka(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return Rr.runKernel(ze,u,c)}}),So=Pr({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=ka(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:e},h=Rr.runKernel(Be,u,c);return l?ka(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});Pr({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===Co(Rr.state.gradientDepth,l)){let h=Pa(e,t,n,r,s,a,i);return null!=o&&(h=aa(h,o)),Io(h,l,u,c)}const h=zr(e,"x","depthwiseConv2d"),d=zr(t,"filter","depthwiseConv2d");let f=h,g=!1;3===h.rank&&(g=!0,f=ka(h,[1,h.shape[0],h.shape[1],h.shape[2]])),p(4===f.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),p(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),p(f.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==a&&(a=[1,1]),p(va(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=i&&p(x(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`));const m=da(f.shape,d.shape,n,a,r,i,!0);let b,y;null!=o&&(b=zr(o,"bias","fused conv2d"),[b]=Cr(b,h),Ha(m.outShape,b.shape)),null!=u&&(y=zr(u,"prelu weights","fused depthwiseConv2d"));const v=(e,t)=>{p(xa(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,o,u,c]=t,h=wo(e,u,l),d=So(o.shape,h,s,n,r,a,i),f=$o(o,h,s.shape,n,r,a,i);return null!=c?[d,f,ko(b,h)]:[d,f]},w={x:f,filter:d,bias:b,preluActivationWeights:y},k={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=ta(((e,t,n)=>{let r=Rr.runKernel(Vn,w,k);return n([t,e,r]),g&&(r=ka(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return e(f,d)}{const e=ta(((e,t,n,r)=>{let s=Rr.runKernel(Vn,w,k);return r([t,e,s,n]),g&&(s=ka(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:v}}));return e(f,d,b)}}});const Eo=Pr({matMul_:function(e,t,n=!1,r=!1){let s=zr(e,"a","matMul"),a=zr(t,"b","matMul");[s,a]=Cr(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return Rr.runKernel(me,i,o)}}),To=Pr({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Co(Rr.state.gradientDepth,a)){let l=Eo(e,t,n,r);return null!=s&&(l=aa(l,s)),Io(l,a,i,o)}let l=zr(e,"a","fused matMul"),u=zr(t,"b","fused matMul");[l,u]=Cr(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],f=r?u.shape[u.rank-2]:u.shape[u.rank-1],g=l.shape.slice(0,-2),m=u.shape.slice(0,-2),x=b(g),v=b(m);p(l.rank>=2&&u.rank>=2&&l.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`)),p(y(g,m),(()=>`Error in fused matMul: outer dimensions (${g}) and (${m}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`)),p(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=l.shape.slice(0,-2).concat([d,f]),k=ka(l,n?[x,c,d]:[x,d,c]),I=ka(u,r?[v,f,h]:[v,h,f]);let C,N;null!=s&&(C=zr(s,"bias","fused matMul"),[C]=Cr(C,l),Ha(w,C.shape)),null!=i&&(N=zr(i,"prelu weights","fused matMul"));const $=(e,t)=>{const[i,o,l,u]=t,c=wo(ka(e,l.shape),l,a);let h,d;return n||r?!n&&r?(h=Eo(c,o,!1,!1),d=Eo(c,i,!0,!1)):n&&!r?(h=Eo(o,c,!1,!0),d=Eo(i,c,!1,!1)):(h=Eo(o,c,!0,!0),d=Eo(c,i,!0,!0)):(h=Eo(c,o,!1,!0),d=Eo(i,c,!0,!1)),null!=s?[h,d,ko(u,c)]:[h,d]},S={a:k,b:I,bias:C,preluActivationWeights:N},E={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:o};if(null==s){const e=ta(((e,t,n)=>{const r=Rr.runKernel(Wn,S,E);return n([e,t,r]),{value:ka(r,w),gradFunc:$}}));return e(k,I)}{const e=ta(((e,t,n,r)=>{const s=Rr.runKernel(Wn,S,E);return r([e,t,s,n]),{value:ka(s,w),gradFunc:$}}));return e(k,I,C)}}});function Ao(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return ro(s,"float32")}Pr({hammingWindow_:function(e){return Ao(e,.54,.46)}});const Ro=Pr({hannWindow_:function(e){return Ao(e,.5,.5)}});function Fo(e,t,n){if(g(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Lr(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ur(e,t,r,n)}const _o=Pr({frame_:function(e,t,n,r=!1,s=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(ji(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=Aa([ji(e,a,t-r),Ja([r],s)]);i.push(o),a+=n}return 0===i.length?Fo([],[0,t]):ka(Aa(i),[i.length,t])}});function Do(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),p(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),p(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),p(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),p(1===t.rank,(()=>"scores must be a 1D tensor")),p(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),p(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}function Lo(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||Oo)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function Oo(e,t){return e>t?1:e<t?-1:0}function Mo(e,t,n,r,s){return Po(e,t,n,r,s,0)}function zo(e,t,n,r,s,a){return Po(e,t,n,r,s,0,!1,a,!0)}function Bo(e,t,n,r,s,a){return Po(e,t,n,r,s,a,!0)}function Po(e,t,n,r,s,a,i=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>s&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Vo);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=Wo(e,a,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*Uo(r,c,i),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>s&&Lo(u,t,Vo))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return i&&(g.selectedScores=d),l&&(g.validOutputs=p),g}function Wo(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-a)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(a,u),m=Math.max(i,c),b=Math.min(o,h),y=Math.min(l,d),x=Math.max(b-g,0)*Math.max(y-m,0);return x/(p+f-x)}function Uo(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Vo(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}Pr({stft_:function(e,t,n,r,s=Ro){var a;null==r&&(a=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));const i=_o(e,t,n),o=ii(i,s(t)),l=[];for(let e=0;e<i.shape[0];e++)l.push(go(ji(o,[e,0],[1,t]),r));return Aa(l)}}),Pr({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const i=zr(e,"image","cropAndResize"),o=zr(t,"boxes","cropAndResize","float32"),l=zr(n,"boxInd","cropAndResize","int32"),u=o.shape[0];p(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),p(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),p(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),p(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),p(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),p("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:i,boxes:o,boxInd:l},h={method:s,extrapolationValue:a,cropSize:r};return Rr.runKernel(De,c,h)}}),Pr({flipLeftRight_:function(e){const t=zr(e,"image","flipLeftRight","float32");p(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Rr.runKernel(et,n,{})}}),Pr({rotateWithOffset_:function(e,t,n=0,r=.5){const s=zr(e,"image","rotateWithOffset","float32");p(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:t,fillValue:n,center:r};return Rr.runKernel(Pn,a,i)}}),Pr({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=zr(e,"boxes","nonMaxSuppression"),i=zr(t,"scores","nonMaxSuppression"),o=Do(a,i,n,r,s),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return Rr.runKernel(Wt,{boxes:a,scores:i},l)}}),Pr({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=zr(e,"boxes","nonMaxSuppression"),o=zr(t,"scores","nonMaxSuppression"),l=Do(i,o,n,r,s,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=Rr.runKernel(Vt,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Pr({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=zr(e,"boxes","nonMaxSuppression"),o=zr(t,"scores","nonMaxSuppression"),l=Do(i,o,n,r,s,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=Rr.runKernel(Ut,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const Go=Pr({resizeBilinear_:function(e,t,n=!1,r=!1){const s=zr(e,"images","resizeBilinear");p(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),p(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),p(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=ka(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=Rr.runKernel(sn,o,l);return i?ka(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),jo=Pr({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=zr(e,"images","resizeNearestNeighbor");p(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),p(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),p("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),p(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=ka(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=Rr.runKernel(nn,o,l);return i?ka(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Ho=Pr({lessEqual_:function(e,t){let n=zr(e,"a","lessEqual"),r=zr(t,"b","lessEqual");[n,r]=Cr(n,r),Ha(n.shape,r.shape);const s={a:n,b:r};return Rr.runKernel(mt,s)}});function qo(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return Rr.runKernel(Jt,{},s)}const Ko=Pr({bandPart_:function(e,t,n){p(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),p(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=zr(e,"a","bandPart");p(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=ka(qo(0,a,1,"int32"),[-1,1]),l=qo(0,i,1,"int32"),u=oi(o,l),c=ci(Ho(u,na(+t,"int32")),ti(u,na(-n,"int32"))),h=Ai([a,i],r.dtype);return ka(to(ao(ka(r,[-1,a,i])).map((e=>oo(c,e,h)))),s)}}),Xo=Pr({pow_:function(e,t){let n=zr(e,"base","pow"),r=zr(t,"exp","pow");[n,r]=Cr(n,r);const s={a:n,b:r};return Rr.runKernel(Kt,s)}});function Yo(e,t,n=null){if(0===e.rank)return sa(e);if(1!==e.rank&&null===n)return Yo(ka(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return li(sa(e),n);if(t===1/0)return ai(sa(e),n);if(t===-1/0)return gi(sa(e),n);if("euclidean"===t||2===t)return Qi(li(Xo(sa(e),na(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return ai(li(sa(e),n[0]),n[1]-1);if(t===1/0)return ai(li(sa(e),n[1]),n[0]);if(t===-1/0)return gi(li(sa(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Qi(li(Ni(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Jo=Pr({norm_:function(e,t="euclidean",n=null,r=!1){const s=Yo(e=zr(e,"x","norm"),t,n);let a=s.shape;if(r){const t=C(n,e.shape);a=vi(s.shape,t)}return ka(s,a)}}),Zo=Pr({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,p(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)p(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Zi(e,e.shape[0],0).map((e=>eo(e,[0])));p(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(Rr.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=ii(li(ii(n[r],e)),n[r]);e=oi(e,t)}return Ua(e,Jo(e,"euclidean"))})));return t?to(n,0):n}});function Qo(e,t=!1){return Rr.tidy((()=>{p(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=Ya(n),a=ws(e);const i=Fo([[1]],[1,1]);let o=ws(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=a,l=o,u=s;[o,a,s]=Rr.tidy((()=>{const t=ji(a,[e,e],[n-e,1]),l=Jo(t),u=ji(a,[e,e],[1,1]),c=oo(ei(u,0),Fo([[-1]]),Fo([[1]])),h=oi(u,ii(c,l)),d=Ua(t,h);o=1===d.shape[0]?ws(i):Aa([i,ji(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Si(Ua(Eo(c,h),l)),f=ji(a,[e,0],[n-e,r]),g=ii(p,o),m=uo(o);if(0===e)a=oi(f,Eo(g,Eo(m,f)));else{const t=oi(f,Eo(g,Eo(m,f)));a=Aa([ji(a,[0,0],[e,r]),t],0)}const b=uo(g),y=ji(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=oi(y,Eo(Eo(y,o),b));else{const t=oi(y,Eo(Eo(y,o),b));s=Aa([ji(s,[0,0],[n,e]),t],1)}return[o,a,s]})),Zs([t,l,u])}return!t&&n>r&&(s=ji(s,[0,0],[n,r]),a=ji(a,[0,0],[r,r])),[s,a]}))}const el=Pr({qr_:function(e,t=!1){if(p(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Qo(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=ao(ka(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach((e=>{const[n,r]=Qo(e,t);s.push(n),a.push(r)})),[ka(to(s,0),e.shape),ka(to(a,0),e.shape)]}}});var tl;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(tl||(tl={}));const nl=Pr({computeWeightedLoss_:function(e,t,n=tl.SUM_BY_NONZERO_WEIGHTS){const r=zr(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=zr(t,"weights","computeWeightedLoss"));const a=null==s?r:ii(r,s);if(n===tl.NONE)return a;if(n===tl.SUM)return li(a);if(n===tl.MEAN){if(null==s)return fi(a);{const e=r.size/s.size,t=Ua(li(a),li(s));return e>1?Ua(t,na(e)):t}}if(n===tl.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Ua(li(a),na(r.size));{const e=ii(s,Ri(r.shape)),t=vs(li(Ei(e,na(0))),"float32");return Ua(li(a),t)}}throw Error(`Unknown reduction: ${n}`)}});Pr({absoluteDifference_:function(e,t,n,r=tl.SUM_BY_NONZERO_WEIGHTS){const s=zr(e,"labels","absoluteDifference"),a=zr(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=zr(n,"weights","absoluteDifference")),f(s.shape,a.shape,"Error in absoluteDifference: ");const o=sa(oi(s,a));return nl(o,i,r)}}),Pr({cosineDistance_:function(e,t,n,r,s=tl.SUM_BY_NONZERO_WEIGHTS){const a=zr(e,"labels","cosineDistance"),i=zr(t,"predictions","cosineDistance");let o=null;null!=r&&(o=zr(r,"weights","cosineDistance")),f(a.shape,i.shape,"Error in cosineDistance: ");const l=na(1),u=oi(l,li(ii(a,i),n,!0));return nl(u,o,s)}}),Pr({hingeLoss_:function(e,t,n,r=tl.SUM_BY_NONZERO_WEIGHTS){let s=zr(e,"labels","hingeLoss");const a=zr(t,"predictions","hingeLoss");let i=null;null!=n&&(i=zr(n,"weights","hingeLoss")),f(s.shape,a.shape,"Error in hingeLoss: ");const o=na(1);s=oi(ii(na(2),s),o);const l=Pi(oi(o,ii(s,a)));return nl(l,i,r)}}),Pr({huberLoss_:function(e,t,n,r=1,s=tl.SUM_BY_NONZERO_WEIGHTS){const a=zr(e,"labels","huberLoss"),i=zr(t,"predictions","huberLoss");let o=null;null!=n&&(o=zr(n,"weights","huberLoss")),f(a.shape,i.shape,"Error in huberLoss: ");const l=na(r),u=sa(oi(i,a)),c=mi(u,l),h=oi(u,c),d=aa(ii(na(.5),Ni(c)),ii(l,h));return nl(d,o,s)}}),Pr({logLoss_:function(e,t,n,r=1e-7,s=tl.SUM_BY_NONZERO_WEIGHTS){const a=zr(e,"labels","logLoss"),i=zr(t,"predictions","logLoss");let o=null;null!=n&&(o=zr(n,"weights","logLoss")),f(a.shape,i.shape,"Error in logLoss: ");const l=na(1),u=na(r),c=Si(ii(a,ri(aa(i,u)))),h=ii(oi(l,a),ri(aa(oi(l,i),u))),d=oi(c,h);return nl(d,o,s)}});const rl=Pr({squaredDifference_:function(e,t){let n=zr(e,"a","squaredDifference"),r=zr(t,"b","squaredDifference");[n,r]=Cr(n,r),Ha(n.shape,r.shape);const s={a:n,b:r};return Rr.runKernel(Nn,s,{})}});Pr({meanSquaredError_:function(e,t,n,r=tl.SUM_BY_NONZERO_WEIGHTS){const s=zr(e,"labels","meanSquaredError"),a=zr(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=zr(n,"weights","meanSquaredError")),f(s.shape,a.shape,"Error in meanSquaredError: ");const o=rl(s,a);return nl(o,i,r)}});const sl=Pr({log1p_:function(e){const t={x:zr(e,"x","log1p")};return Rr.runKernel(xt,t)}});Pr({sigmoidCrossEntropy_:function(e,t,n,r=0,s=tl.SUM_BY_NONZERO_WEIGHTS){let a=zr(e,"multiClassLabels","sigmoidCrossEntropy");const i=zr(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=zr(n,"weights","sigmoidCrossEntropy")),f(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=na(r),t=na(1),n=na(.5);a=aa(ii(a,oi(t,e)),ii(n,e))}const l=function(e,t){const n=zr(e,"labels","sigmoidCrossEntropyWithLogits"),r=zr(t,"logits","sigmoidCrossEntropyWithLogits");f(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Pi(r),a=ii(r,n),i=sl(si(Si(sa(r))));return aa(oi(s,a),i)}(a,i);return nl(l,o,s)}});const al=Pr({logSumExp_:function(e,t=null,n=!1){const r=zr(e,"x","logSumExp"),s=C(t,r.shape),a=ai(r,s,!0),i=oi(r,a),o=si(i),l=li(o,s),u=ri(l),c=aa(ka(a,u.shape),u);if(n){const e=vi(c.shape,s);return ka(c,e)}return c}});Pr({softmaxCrossEntropy_:function(e,t,n,r=0,s=tl.SUM_BY_NONZERO_WEIGHTS){let a=zr(e,"onehotLabels","softmaxCrossEntropy");const i=zr(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=zr(n,"weights","softmaxCrossEntropy")),f(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=na(r),t=na(1),n=na(a.shape[1]);a=aa(ii(a,oi(t,e)),Ua(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=ta(((e,t,r)=>{const s=al(t,[n],!0),a=oi(vs(t,"float32"),s);r([e,a]);const i=Si(ii(a,e));return{value:li(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=vi(e.shape,[n]);return[ii(ka(e,a),oi(vs(r,"float32"),si(s))),ii(ka(e,a),oi(si(s),vs(r,"float32")))]}}}));return r(e,t)}(a,i);return nl(l,o,s)}});const il={bandPart:Ko,gramSchmidt:Zo,qr:el};class ol extends ra{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Rr.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Rr.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Js((()=>lo(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Js((()=>lo(r).variable(!1)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Js((()=>{const e=aa(ii(a,this.rho),ii(Ni(s),1-this.rho)),t=ii(Ua(Qi(aa(i,this.epsilon)),Qi(aa(a,this.epsilon))),s),n=aa(ii(i,this.rho),ii(Ni(t),1-this.rho));a.assign(e),i.assign(n);const o=aa(ii(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Zs(this.accumulatedGrads.map((e=>e.variable))),Zs(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}ol.className="Adadelta",qs(ol);class ll extends ra{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Rr.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Js((()=>Ja(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;Js((()=>{const e=aa(a,Ni(s));a.assign(e);const t=aa(ii(Ua(s,Qi(aa(e,Rr.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Zs(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}ll.className="Adagrad",qs(ll);class ul extends ra{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Js((()=>{this.accBeta1=na(t).variable(),this.accBeta2=na(n).variable()})),null==r&&(this.epsilon=Rr.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Js((()=>{const n=oi(1,this.accBeta1),r=oi(1,this.accBeta2);t.forEach(((t,s)=>{const a=Rr.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Js((()=>lo(a).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:Js((()=>lo(a).variable(!1)))});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=aa(ii(o,this.beta1),ii(i,1-this.beta1)),c=aa(ii(l,this.beta2),ii(Ni(i),1-this.beta2)),h=Ua(u,n),d=Ua(c,r);o.assign(u),l.assign(c);const p=aa(ii(Ua(h,aa(Qi(d),this.epsilon)),-this.learningRate),a);a.assign(p)})),this.accBeta1.assign(ii(this.accBeta1,this.beta1)),this.accBeta2.assign(ii(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Zs(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Zs(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Js((()=>{this.accBeta1.assign(Xo(this.beta1,this.iterations_+1)),this.accBeta2.assign(Xo(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}ul.className="Adam",qs(ul);class cl extends ra{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Js((()=>{this.iteration=na(0).variable(),this.accBeta1=na(t).variable()})),null==r&&(this.epsilon=Rr.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Js((()=>{const n=oi(1,this.accBeta1),r=Ua(-this.learningRate,aa(ii(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=Rr.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:lo(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:lo(a).variable(!1)});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=aa(ii(o,this.beta1),ii(i,1-this.beta1)),c=ii(l,this.beta2),h=sa(i),d=pi(c,h);o.assign(u),l.assign(d);const p=aa(ii(Ua(r,n),Ua(u,aa(d,this.epsilon))),a);a.assign(p)})),this.iteration.assign(aa(this.iteration,1)),this.accBeta1.assign(ii(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Zs(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Zs(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}cl.className="Adamax",qs(cl);class hl extends ra{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=Rr.registeredVariables[t];Js((()=>{const e=aa(ii(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Qs(na(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}hl.className="SGD",qs(hl);class dl extends hl{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=na(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Rr.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Js((()=>lo(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&Js((()=>{let e;const t=aa(ii(this.m,s),a);e=this.useNesterov?aa(ii(this.c,aa(a,ii(t,this.m))),r):aa(ii(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Zs(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}dl.className="Momentum",qs(dl);class pl extends ra{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=Rr.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Rr.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Js((()=>lo(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Js((()=>lo(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Js((()=>lo(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Js((()=>{const e=aa(ii(i,this.decay),ii(Ni(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=aa(ii(t,this.decay),ii(a,1-this.decay)),l=Ua(ii(a,this.learningRate),Qi(oi(e,aa(Ni(s),this.epsilon)))),u=aa(ii(o,this.momentum),l);i.assign(e),t.assign(s),o.assign(u);const c=oi(r,u);r.assign(c)}else{const e=aa(ii(i,this.decay),ii(Ni(a),1-this.decay)),t=aa(ii(o,this.momentum),Ua(ii(a,this.learningRate),Qi(aa(e,this.epsilon))));i.assign(e),o.assign(t);const n=oi(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Zs(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Zs(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Zs(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}pl.className="RMSProp",qs(pl);class fl{static sgd(e){return new hl(e)}static momentum(e,t,n=!1){return new dl(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new pl(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new ul(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new ol(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new cl(e,t,n,r,s)}static adagrad(e,t=.1){return new ll(e,t)}}const gl={sgd:fl.sgd,momentum:fl.momentum,adadelta:fl.adadelta,adagrad:fl.adagrad,rmsprop:fl.rmsprop,adamax:fl.adamax,adam:fl.adam},ml="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function bl(){return new Promise((e=>ml((()=>e()))))}function yl(e,t){const n=e[0].length;e.forEach(((e,t)=>{p(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),p(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)p(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function xl(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const vl=30;function wl(e){return e<=vl?e:L(e,Math.floor(Math.sqrt(e)))}function kl(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Il(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function Cl(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Nl(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function $l(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Sl(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function El(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===b(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let e=0;e<s.length-1;++e)i*=s[e];const o=e.shape,l=s.slice();l.pop();let u=1;for(let e=a;e<n;++e)u*=o[e],l.push(o[e]);const c=[...O(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}function Tl(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function Al(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Tl(n,t,e)}function Rl(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let e=s;e<a;++e)i*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:b(t.shape)/o,sliceSize:i,strides:[...O(n.slice(0,s)),1],outputSize:b(n)}}const Fl=1.7580993408473768,_l=1.0507009873554805,Dl=.3275911,Ll=.254829592,Ol=-.284496736,Ml=1.421413741,zl=-1.453152027,Bl=1.061405429;function Pl(...e){q().getBool("IS_TEST")||console.warn(...e)}function Wl(...e){q().getBool("IS_TEST")||console.log(...e)}function Ul(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Vl(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Gl(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function jl(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Hl(e,t){return{real:e[2*t],imag:e[2*t+1]}}function ql(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Kl(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function Xl(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function Yl(e,t,n=0){let r=[];if("number"==typeof t)p(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);p(s<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}p(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Jl(e,t){let n,r=!1;for(e<=vl?(n=e,r=!0):n=L(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=L(e,n+1);return n}function Zl(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function Ql(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function eu(e,t,n){if("complex64"===t){if("complex64"===e.dtype)return e.clone();const t=Ai(e.shape),r=vs(e,"float32"),s=n.complex(r,t);return t.dispose(),r.dispose(),s}if(!E(e.dtype,t))return Rr.makeTensorFromDataId(e.dataId,e.shape,t);if("complex64"===e.dtype){const r=n.real(e),s=vs(r,t);return r.dispose(),s}if("int32"===t)return n.int(e);if("bool"===t){const t=na(0,e.dtype),r=n.notEqual(e,t);return t.dispose(),r}throw new Error(`Error in Cast: failed to cast ${e.dtype} to ${t}`)}function tu(e,t){return Rr.makeTensorFromDataId(e.dataId,t,e.dtype)}function nu(e){try{return e.map((e=>ur(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function ru(e){return e.map((e=>lr(e)))}function su(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=xs(e,"int32"),s=xs([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),i=t*e.length;s.values.set(a,i)}return s.toTensor()}const au={kernelName:Z,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ii(e,vo(vs(n,"float32"),-1))}}},iu={kernelName:Q,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ni(vs(n,"float32")),r=Qi(oi(na(1),t));return Si(Ua(e,r))}}}},ou={kernelName:ee,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Qi(oi(Ni(vs(n,"float32")),1));return Ua(e,t)}}}},lu={kernelName:te,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ha(n.shape,r.shape);return{a:()=>{let t=e;const r=ja(n.shape,s);return r.length>0&&(t=li(t,r)),ka(t,n.shape)},b:()=>{let t=e;const n=ja(r.shape,s);return n.length>0&&(t=li(t,n)),ka(t,r.shape)}}}},uu={kernelName:ne,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},cu={kernelName:ae,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lo(n)}}},hu={kernelName:ie,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lo(n)}}},du={kernelName:oe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,Qi(oi(na(1),Ni(vs(n,"float32")))))}}},pu={kernelName:le,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Qi(aa(na(1),Ni(vs(n,"float32"))));return Ua(e,t)}}}},fu={kernelName:he,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ha(n.shape,r.shape);return{a:()=>{const t=aa(Ni(n),Ni(r));let a=ii(e,Ua(r,t));const i=ja(n.shape,s);return i.length>0&&(a=li(a,i)),ka(a,n.shape)},b:()=>{const t=aa(Ni(n),Ni(r));let a=Si(ii(e,Ua(n,t)));const i=ja(r.shape,s);return i.length>0&&(a=li(a,i)),ka(a,r.shape)}}}},gu={kernelName:ue,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,aa(Ni(vs(n,"float32")),1))}}},mu={kernelName:ce,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,oi(na(1),Ni(vs(n,"float32"))))}}},bu=Pr({avgPool3dGrad_:function(e,t,n,r,s=[1,1,1],a,i){const o=zr(e,"dy","avgPool3dGrad"),l=zr(t,"input","avgPool3dGrad");let u=o,c=l,h=!1;4===l.rank&&(h=!0,u=ka(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=ka(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),p(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),p(5===c.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`)),p(va(r,s),(()=>`Error in avgPool3dGrad: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`)),null!=i&&p(x(a),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const d={dy:u,input:c},f={filterSize:n,strides:r,dilations:s,pad:a,dimRoundingMode:i},g=Rr.runKernel(ge,d,f);return h?ka(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),yu={kernelName:fe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,dilations:i,pad:o,dimRoundingMode:l}=n,u=null==i?[1,1,1]:i;return{x:()=>bu(e,r,s,a,u,o,l)}}},xu=Pr({avgPoolGrad_:function(e,t,n,r,s){const a=zr(e,"dy","avgPoolGrad"),i=zr(t,"input","avgPoolGrad");p(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=ka(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=ka(a,[1,a.shape[0],a.shape[1],a.shape[2]])),p(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),p(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:r,pad:s},d=Rr.runKernel(pe,c,h);return u?ka(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),vu={kernelName:de,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>xu(e,r,s,a,i)}}},wu={kernelName:me,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>Eo(e,s,!1,!1),b:()=>Eo(e,r,!0,!1)}:a&&!i?{a:()=>Eo(s,e,!1,!0),b:()=>Eo(r,e,!1,!1)}:{a:()=>Eo(s,e,!0,!0),b:()=>Eo(e,r,!0,!0)}:{a:()=>Eo(e,s,!1,!0),b:()=>Eo(r,e,!0,!1)}}},ku=Pr({spaceToBatchND_:function(e,t,n){const r=zr(e,"x","spaceToBatchND");p(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),p(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),p(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},a={blockShape:t,paddings:n};return Rr.runKernel(kn,s,a)}}),Iu={kernelName:be,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>ku(e,r,s)}}},Cu={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let e=s.length-1;e>=0;e--)if(s[e]===a[e])i[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>li(e,o,!0)}}},Nu={kernelName:xe,gradFunc:e=>({x:()=>e.clone()})},$u={kernelName:ve,gradFunc:e=>({x:()=>lo(e)})},Su={kernelName:we,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>oo(ci(ti(r,s),Ho(r,a)),e,lo(e))}}},Eu={kernelName:Ie,inputsToSave:["x"],gradFunc:au.gradFunc},Tu={kernelName:Ce,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=C(s,t[0].shape)[0],i=r.map((e=>e[a]));return Zi(e,i,a).map((e=>()=>e))}},Au={kernelName:Ne,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return p(xa(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>Ma(r.shape,e,s,i,o,l),filter:()=>yo(r,e,s.shape,i,o,l)}}},Ru={kernelName:Se,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>La(e,s,a,i,o,1,l),filter:()=>yo(e,r,s.shape,a,i,o,l)}}},Fu=Pr({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=ka(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=ka(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),p(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),p(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),p(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),p(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),p(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:r,pad:s,filterShape:n};return Rr.runKernel(Te,o,l)}}),_u=Pr({conv3DBackpropInput_:function(e,t,n,r,s){p(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=ka(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=i.shape[4];p(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),p(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),p(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),p(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),p(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:s,strides:r,inputShape:a},d=Rr.runKernel(Ae,c,h);return o?ka(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Du={kernelName:Ee,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;p(xa(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>_u(i.shape,e,o,s,a),filter:()=>Fu(i,e,o.shape,s,a)}}},Lu=Pr({sin_:function(e){const t={x:zr(e,"x","sin")};return Rr.runKernel(gn,t)}}),Ou={kernelName:Re,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ii(Si(Lu(vs(n,"float32"))),e)}}},Mu=Pr({sinh_:function(e){const t={x:zr(e,"x","sinh")};return Rr.runKernel(mn,t)}}),zu={kernelName:Fe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ii(Mu(vs(n,"float32")),e)}}},Bu=Pr({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:zr(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return Rr.runKernel(_e,s,a)}}),Pu={kernelName:_e,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=ki([s],r.rank);let n=Bu(e,s,a,!i);return null!=t&&(n=uo(n,t)),n}}}},Wu={kernelName:Me,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;p(xa(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return p(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),p(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),p(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),p(va(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),null!=i&&p(x(a),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`)),{x:()=>So(l.shape,e,u,s,a,r,i),filter:()=>$o(l,e,u.shape,s,a,r,i)}}},Uu={kernelName:We,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>Rr.runKernel(Ue,a,n),filter:()=>Rr.runKernel(Ve,i,n)}}},Vu={kernelName:je,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Rr.runKernel(He,r)}}},Gu={kernelName:qe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=ii(si(Si(Ni(n))),2/Math.sqrt(Math.PI));return{x:()=>ii(e,r)}}},ju={kernelName:Xe,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ii(e,n)}}},Hu={kernelName:Ye,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>ka(e,n.shape)}}},qu={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ii(e,si(n))}}},Ku={kernelName:tt,gradFunc:e=>({x:()=>lo(e)})},Xu={kernelName:nt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ha(n.shape,r.shape);return{a:()=>{const t=Ua(e,vs(r,"float32")),a=ja(n.shape,s);return a.length>0?ka(li(t,a),n.shape):t},b:()=>{let t=ii(e,vs(n,"float32"));const a=ja(r.shape,s);a.length>0&&(t=ka(li(t,a),r.shape));const i=Ni(r);return Si(Ua(t,vs(i,"float32")))}}}},Yu=Pr({rsqrt_:function(e){const t={x:zr(e,"x","rsqrt")};return Rr.runKernel(cn,t)}}),Ju={kernelName:rt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,l=null==o?na(1):o,u=ja(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=oi(s,a),d=ii(e,l),p=Yu(aa(i,na(r))),f=ii(ii(ii(p,p),p),na(-.5));return{x:()=>1===a.rank?ka(ii(ii(e,Xa(ka(p,[1,1,1,a.shape[0]]),c)),l),s.shape):ka(ii(ii(e,p),l),s.shape),mean:()=>{let e=ii(ii(p,na(-1)),d);return 1===a.rank&&(e=li(e,u)),ka(e,a.shape)},variance:()=>{let e=ii(ii(f,h),d);return 1===a.rank&&(e=li(e,u)),ka(e,a.shape)},scale:()=>{const t=ii(h,p);let n=ii(e,t);return 1===a.rank&&(n=li(n,u)),ka(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=li(t,u)),ka(t,a.shape)}}}},Zu=Pr({unsortedSegmentSum_:function(e,t,n){const r=zr(e,"x","unsortedSegmentSum"),s=zr(t,"segmentIds","unsortedSegmentSum","int32");p(x(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},i={numSegments:n};return Rr.runKernel(Mn,a,i)}}),Qu={kernelName:st,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a}=n,i=C(a,r.shape)[0];return{x:()=>{const t=r.shape,n=s.size,o=t.slice(0,i),l=o.length,u=t.slice(a,t.length).slice(1),c=u.length,h=ec(0,l),d=ec(l+1,l+1+c),p=tc([o,[n],u]),f=ka(e,p),g=ka(s,[n]),m=tc([[l],h,d]),b=uo(f,m);let y=Zu(b,g,r.shape[i]);const x=Ii(m);return y=uo(y,x),y},indices:()=>s}}};function ec(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function tc(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const nc={kernelName:ot,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>lo(n),b:()=>lo(r)}}},rc={kernelName:lt,gradFunc:e=>({x:()=>vs(e,"float32")})},sc={kernelName:ht,gradFunc:e=>({x:()=>lo(e)})},ac={kernelName:dt,gradFunc:e=>({x:()=>lo(e)})},ic={kernelName:pt,gradFunc:e=>({x:()=>lo(e)})},oc={kernelName:ft,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=ei(r,0);return{x:()=>oo(a,e,ii(e,s))}}},lc={kernelName:xt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,aa(n,1))}}},uc={kernelName:yt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,vs(n,"float32"))}}},cc={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=si(r);return oi(e,ii(li(e,s,!0),t))}}}},hc=Pr({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:r,bias:s,alpha:a,beta:i};return Rr.runKernel(Ct,o,l)}}),dc={kernelName:It,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>hc(r,s,e,a,i,o,l)}}};function pc(e,t,n,r){return t.rank<n.rank&&(t=ka(t,vi(t.shape,r))),e.rank<n.rank&&(e=ka(e,vi(e.shape,r))),{x:()=>ii(e,vs(qa(n,t),e.dtype))}}const fc={kernelName:Nt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=pc(e,t[1],a,C(s,a.shape));return{x:()=>i.x()}}},gc=Pr({less_:function(e,t){let n=zr(e,"a","less"),r=zr(t,"b","less");[n,r]=Cr(n,r),Ha(n.shape,r.shape);const s={a:n,b:r};return Rr.runKernel(gt,s)}}),mc={kernelName:$t,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>ii(e,vs(ti(n,r),"float32")),b:()=>ii(e,vs(gc(n,r),"float32"))}}},bc=Pr({maxPool3dGrad_:function(e,t,n,r,s,a=[1,1,1],i,o){const l=zr(e,"dy","maxPool3dGrad"),u=zr(t,"input","maxPool3dGrad"),c=zr(n,"output","maxPool3dGrad");let h=l,d=u,f=c,g=!1;4===u.rank&&(g=!0,h=ka(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=ka(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),f=ka(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),p(5===h.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`)),p(5===d.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`)),p(5===f.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${f.rank}.`)),p(va(s,a),(()=>`Error in maxPool3dGrad: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`)),null!=o&&p(x(i),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`));const m={dy:h,input:d,output:f},b={filterSize:r,strides:s,dilations:a,pad:i,dimRoundingMode:o},y=Rr.runKernel(At,m,b);return g?ka(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),yc={kernelName:Tt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,dilations:o,pad:l,dimRoundingMode:u}=n,c=null==o?[1,1,1]:o;return{x:()=>bc(e,r,s,a,i,c,l,u)}}},xc=Pr({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=zr(e,"dy","maxPoolGrad"),l=zr(t,"input","maxPoolGrad"),u=zr(n,"output","maxPoolGrad");p(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),p(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),p(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),null!=i&&p(x(a),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const c={dy:o,input:l,output:u},h={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return Rr.runKernel(Et,c,h)}}),vc={kernelName:St,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>xc(e,r,s,a,i,o)}}},wc={kernelName:Ft,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=C(s,r.shape),i=b(xi(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=ka(e,t);return Ua(ii(n,Ri(r.shape,"float32")),i)}}}},kc={kernelName:_t,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=pc(e,i,a,C(s,a.shape));return{x:()=>o.x()}}},Ic={kernelName:Dt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>ii(e,vs(Ho(n,r),"float32")),b:()=>ii(e,vs(ei(n,r),"float32"))}}},Cc={kernelName:Lt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>ji(e,a,r.shape)}}},Nc={kernelName:Ot,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ha(n.shape,r.shape);return{a:()=>{const t=ja(n.shape,s);return t.length>0?ka(li(e,t),n.shape):e},b:()=>{const t=ii(e,Si(Za(Ua(n,r)))),a=ja(r.shape,s);return a.length>0?ka(li(t,a),r.shape):t}}}},$c={kernelName:zt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ha(n.shape,r.shape);return{a:()=>{const t=ii(e,vs(r,"float32")),a=ja(n.shape,s);return a.length>0?ka(li(t,a),n.shape):t},b:()=>{const t=ii(e,vs(n,"float32")),a=ja(r.shape,s);return a.length>0?ka(li(t,a),r.shape):t}}}},Sc={kernelName:Bt,gradFunc:e=>({x:()=>Si(e)})},Ec={kernelName:jt,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Ai(n.shape,"float32")}}},Tc={kernelName:Gt,gradFunc:e=>({x:()=>lo(e)})},Ac={kernelName:Ht,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return ao(e,r).map((e=>()=>e))}},Rc={kernelName:qt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>ji(e,a,r.shape)}}},Fc={kernelName:Kt,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=Ha(a.shape,i.shape);return{a:()=>{const t=vs(i,"float32");let n=ii(e,ii(t,Xo(a,oi(t,na(1)))));const r=ja(a.shape,o);return r.length>0&&(n=li(n,r)),ka(n,a.shape)},b:()=>{const t=ei(a,0),n=oo(t,ri(a),lo(a));let r=ii(e,ii(s,n));const l=ja(i.shape,o);return l.length>0&&(r=li(r,l)),ka(r,i.shape)}}}},_c={kernelName:Xt,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=ei(n,0);return{x:()=>oo(s,e,ii(e,r)),alpha:()=>{let t=oo(s,lo(e),ii(e,n));const a=ja(r.shape,e.shape);return a.length>0&&(t=li(t,a)),ka(t,r.shape)}}}},Dc={kernelName:Ge,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ha(n.shape,r.shape);return{a:()=>{const t=Ua(e,vs(r,"float32")),a=ja(n.shape,s);return a.length>0?ka(li(t,a),n.shape):t},b:()=>{let t=ii(e,vs(n,"float32"));const a=ja(r.shape,s);a.length>0&&(t=ka(li(t,a),r.shape));const i=Ni(r);return Si(Ua(t,vs(i,"float32")))}}}},Lc={kernelName:Qt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,Si(Ni(n)))}}},Oc={kernelName:on,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=ii(Ho(n,6),vo(n));return{x:()=>ii(e,vs(r,"float32"))}}},Mc={kernelName:en,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ii(e,vs(vo(n),"float32"))}}},zc={kernelName:tn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ka(e,n.shape)}}},Bc={kernelName:sn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Rr.runKernel(an,s,n)}}},Pc={kernelName:nn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Rr.runKernel(rn,s,n)}}},Wc={kernelName:ln,gradFunc:(e,t,n)=>{const{dims:r}=n,s=C(r,e.shape);return{x:()=>Wi(e,s)}}},Uc={kernelName:un,gradFunc:e=>({x:()=>lo(e)})},Vc={kernelName:cn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Si(Ua(e,ii(Xo(n,1.5),2)))}}},Gc=Pr({logicalNot_:function(e){const t={x:zr(e,"x","logicalNot","bool")};return Rr.runKernel(wt,t)}}),jc={kernelName:dn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>vs(lo(n),"float32"),t:()=>ii(e,vs(n,e.dtype)),e:()=>ii(e,vs(Gc(n),e.dtype))}}},Hc={kernelName:pn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ei(n,na(0)),r=na(Fl),s=na(_l),a=ii(e,s),i=ii(ii(e,r),si(vs(n,"float32")));return oo(t,a,i)}}}},qc={kernelName:yn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ii(e,ii(n,oi(na(1),n)))}}},Kc={kernelName:bn,gradFunc:e=>({x:()=>lo(e)})},Xc=Pr({cos_:function(e){const t={x:zr(e,"x","cos")};return Rr.runKernel(Re,t)}}),Yc={kernelName:gn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ii(Xc(vs(n,"float32")),e)}}},Jc=Pr({cosh_:function(e){const t={x:zr(e,"x","cosh")};return Rr.runKernel(Fe,t)}}),Zc={kernelName:mn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ii(Jc(vs(n,"float32")),e)}}},Qc={kernelName:fn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,l]=Vs(r,s,a),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>_i(e,u)}}},eh={kernelName:Cn,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=ii(e,r);return{logits:()=>oi(a,ii(li(a,[s],!0),r))}}},th={kernelName:xn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ii(e,Gi(n))}}},nh=Pr({batchToSpaceND_:function(e,t,n){const r=zr(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));p(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),p(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),p(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const a={x:r},i={blockShape:t,crops:n};return Rr.runKernel(be,a,i)}}),rh={kernelName:kn,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>nh(e,r,s)}}},sh={kernelName:In,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Aa(e,r)}}},ah=[au,iu,ou,lu,uu,cu,hu,du,pu,fu,gu,mu,yu,vu,wu,Iu,Cu,Nu,$u,Su,Eu,Tu,Ru,Au,Du,Ou,zu,Pu,Wu,Uu,Dc,Vu,Gu,ju,Hu,qu,Xu,Ku,Ju,Qu,nc,rc,sc,ac,ic,oc,lc,uc,cc,dc,fc,fc,mc,yc,vc,wc,kc,Ic,Cc,Nc,$c,Sc,Ec,Tc,Ac,Rc,Rc,Fc,_c,Lc,Oc,Mc,zc,Bc,Pc,Wc,Uc,Vc,jc,Hc,qc,Kc,Yc,Zc,Qc,eh,th,rh,rh,sh,sh,{kernelName:vn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,ii(Qi(vs(n,"float32")),2))}}},{kernelName:Nn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=na(2);return{a:()=>ii(e,ii(s,oi(n,r))),b:()=>ii(e,ii(s,oi(r,n)))}}},{kernelName:$n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ii(e,ii(vs(n,"float32"),2))}}},{kernelName:Bn,gradFunc:e=>({x:()=>lo(e)})},{kernelName:Sn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ha(n.shape,r.shape);return{a:()=>{let t=e;const r=ja(n.shape,s);return r.length>0&&(t=li(t,r)),ka(t,n.shape)},b:()=>{let t=e;const n=ja(r.shape,s);return n.length>0&&(t=li(t,n)),ka(Si(t),r.shape)}}}},{kernelName:wn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;C(a,r.shape).forEach((e=>{s[e]=1}));const i=ka(e,s),o=ii(i,Ri(r.shape,"float32"));return{x:()=>o}}},{kernelName:An,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,Ni(Xc(n)))}}},{kernelName:Rn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ii(oi(na(1),Ni(n)),e)}}},{kernelName:Fn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=lo(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=aa(t,ji(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=aa(t,ji(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=aa(t,ji(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=aa(t,ji(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Dn,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=Ii(s);return{x:()=>uo(e,a)}}},{kernelName:On,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>to(e,s)}}},{kernelName:Mn,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=pi(t,lo(t)),r=Qa(e,n);let s=ti(t,na(0,"int32"));const a=r.rank-s.rank;for(let e=0;e<a;++e)s=Ka(s,e+1);s=ci(s,Ri(r.shape,"bool"));const i=lo(r);return oo(s,r,i)}(e,n)}}},{kernelName:zn,gradFunc:e=>({x:()=>lo(e)})}];for(const e of ah)Xn(e);fr.prototype.abs=function(){return this.throwIfDisposed(),sa(this)};const ih=Pr({acos_:function(e){const t={x:zr(e,"x","acos")};return Rr.runKernel(Q,t)}});fr.prototype.acos=function(){return this.throwIfDisposed(),ih(this)};const oh=Pr({acosh_:function(e){const t={x:zr(e,"x","acosh")};return Rr.runKernel(ee,t)}});fr.prototype.acosh=function(){return this.throwIfDisposed(),oh(this)};const lh=Pr({mod_:function(e,t){let n=zr(e,"a","mod"),r=zr(t,"b","mod");[n,r]=Cr(n,r);const s={a:n,b:r};return Rr.runKernel(Ot,s)}}),uh=Pr({addStrict_:function(e,t){Ks("strict variants of ops have been deprecated and will be removed in future");const n=zr(e,"a","addStrict"),r=zr(t,"b","addStrict");return f(n.shape,r.shape,"Error in addStrict: "),aa(n,r)}}),ch=Pr({divStrict_:function(e,t){Ks("strict variants of ops have been deprecated and will be removed in future");const n=zr(e,"a","div"),r=zr(t,"b","div");return f(n.shape,r.shape,"Error in divideStrict: "),Ua(n,r)}}),hh=Pr({maximumStrict_:function(e,t){Ks("strict variants of ops have been deprecated and will be removed in future");const n=zr(e,"a","maximumStrict"),r=zr(t,"b","maximumStrict");return f(n.shape,r.shape,"Error in maximumStrict: "),pi(n,r)}}),dh=Pr({minimumStrict_:function(e,t){Ks("strict variants of ops have been deprecated and will be removed in future");const n=zr(e,"a","minimumStrict"),r=zr(t,"b","minimumStrict");return f(n.shape,r.shape,"Error in minimumStrict: "),mi(n,r)}}),ph=Pr({modStrict_:function(e,t){Ks("strict variants of ops have been deprecated and will be removed in future");const n=zr(e,"a","modStrict"),r=zr(t,"b","modStrict");return f(n.shape,r.shape,"Error in modStrict: "),lh(n,r)}}),fh=Pr({mulStrict_:function(e,t){Ks("strict variants of ops have been deprecated and will be removed in future");const n=zr(e,"a","mul"),r=zr(t,"b","mul");return f(n.shape,r.shape,"Error in multiplyStrict: "),ii(n,r)}}),gh=Pr({powStrict_:function(e,t){return Ks("strict variants of ops have been deprecated and will be removed in future"),f(e.shape,t.shape,"Error in powStrict: "),Xo(e,t)}}),mh=Pr({squaredDifferenceStrict_:function(e,t){Ks("strict variants of ops have been deprecated and will be removed in future");const n=zr(e,"a","squaredDifferenceStrict"),r=zr(t,"b","squaredDifferenceStrict");return f(n.shape,r.shape,"Error in squaredDifferenceStrict: "),rl(n,r)}}),bh=Pr({subStrict_:function(e,t){Ks("strict variants of ops have been deprecated and will be removed in future");const n=zr(e,"a","subStrict"),r=zr(t,"b","subStrict");return f(n.shape,r.shape,"Error in subStrict: "),oi(n,r)}});fr.prototype.addStrict=function(e){return this.throwIfDisposed(),uh(this,e)},fr.prototype.add=function(e){return this.throwIfDisposed(),aa(this,e)},fr.prototype.all=function(e,t){return this.throwIfDisposed(),ia(this,e,t)},fr.prototype.any=function(e,t){return this.throwIfDisposed(),oa(this,e,t)},fr.prototype.argMax=function(e){return this.throwIfDisposed(),la(this,e)};const yh=Pr({argMin_:function(e,t=0){const n={x:zr(e,"x","argMin")},r={axis:t};return Rr.runKernel(ie,n,r)}});fr.prototype.argMin=function(e){return this.throwIfDisposed(),yh(this,e)},fr.prototype.asScalar=function(){return this.throwIfDisposed(),p(1===this.size,(()=>"The array must have only 1 element.")),ka(this,[])},fr.prototype.asType=function(e){return this.throwIfDisposed(),vs(this,e)},fr.prototype.as1D=function(){return this.throwIfDisposed(),ka(this,[this.size])},fr.prototype.as2D=function(e,t){return this.throwIfDisposed(),ka(this,[e,t])},fr.prototype.as3D=function(e,t,n){return this.throwIfDisposed(),ka(this,[e,t,n])},fr.prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),ka(this,[e,t,n,r])},fr.prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),ka(this,[e,t,n,r,s])};const xh=Pr({asin_:function(e){const t={x:zr(e,"x","asin")};return Rr.runKernel(oe,t)}});fr.prototype.asin=function(){return this.throwIfDisposed(),xh(this)};const vh=Pr({asinh_:function(e){const t={x:zr(e,"x","asinh")};return Rr.runKernel(le,t)}});fr.prototype.asinh=function(){return this.throwIfDisposed(),vh(this)};const wh=Pr({atan_:function(e){const t={x:zr(e,"x","atan")};return Rr.runKernel(ue,t)}});fr.prototype.atan=function(){return this.throwIfDisposed(),wh(this)};const kh=Pr({atan2_:function(e,t){let n=zr(e,"a","atan2"),r=zr(t,"b","atan2");[n,r]=Cr(n,r);const s={a:n,b:r};return Rr.runKernel(he,s)}});fr.prototype.atan2=function(e){return this.throwIfDisposed(),kh(this,e)};const Ih=Pr({atanh_:function(e){const t={x:zr(e,"x","atanh")};return Rr.runKernel(ce,t)}});fr.prototype.atanh=function(){return this.throwIfDisposed(),Ih(this)},fr.prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Ia(this,e,t,n,r)},fr.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),nh(this,e,t)},fr.prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),Na(this,e,t,n,r,s)},fr.prototype.broadcastTo=function(e){return this.throwIfDisposed(),io(this,e)},fr.prototype.cast=function(e){return this.throwIfDisposed(),vs(this,e)};const Ch=Pr({ceil_:function(e){const t={x:zr(e,"x","ceil")};return Rr.runKernel(ve,t)}});fr.prototype.ceil=function(){return this.throwIfDisposed(),Ch(this)},fr.prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Ta(this,e,t)},fr.prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof fr&&(e=[e]),Aa([this,...e],t)},fr.prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Oa(this,e,t,n,r,s,a)},fr.prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),za(this,e,t,n,r,s)},fr.prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),La(this,e,t,n,r,s,a)},fr.prototype.cos=function(){return this.throwIfDisposed(),Xc(this)},fr.prototype.cosh=function(){return this.throwIfDisposed(),Jc(this)},fr.prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Bu(this,e,t,n)};const Nh=Pr({depthToSpace_:function(e,t,n="NHWC"){const r=zr(e,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];p(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),p(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),p(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:t,dataFormat:n};return Rr.runKernel(Oe,o,l)}});fr.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Nh(this,e,t)},fr.prototype.depthwiseConv2D=function(e,t,n,r,s,a){return Ks("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),Pa(this,e,t,n,r,s,a)},fr.prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Pa(this,e,t,n,r,s,a)};const $h=Pr({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const i=zr(e,"x","dilation2d"),o=zr(t,"filter","dilation2d");p(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),p(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),p("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=ka(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:r,dilations:s},d=Rr.runKernel(We,c,h);return u?ka(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});fr.prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),$h(this,e,t,n,r,s)};const Sh=Pr({divNoNan_:function(e,t){let n=zr(e,"a","div"),r=zr(t,"b","div");[n,r]=Cr(n,r);const s=Ua(n,r),a=lo(s),i=qa(r,a);return oo(i,a,s)}});fr.prototype.divNoNan=function(e){return this.throwIfDisposed(),Sh(this,e)},fr.prototype.divStrict=function(e){return this.throwIfDisposed(),ch(this,e)},fr.prototype.div=function(e){return this.throwIfDisposed(),Ua(this,e)};const Eh=Pr({dot_:function(e,t){const n=zr(e,"t1","dot"),r=zr(t,"t2","dot");p(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(p(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=ka(n,[1,-1]),t=ka(r,[-1,1]),s=Eo(e,t);return ka(s,[])}if(1===n.rank&&2===r.rank){const e=ka(n,[1,-1]),t=ka(r,[r.shape[0],r.shape[1]]),s=Eo(e,t);return ka(s,[s.size])}if(2===n.rank&&1===r.rank){const e=ka(r,[-1,1]),t=Eo(n,e);return ka(t,[t.size])}{const e=ka(r,[r.shape[0],r.shape[1]]);return Eo(n,e)}}});fr.prototype.dot=function(e){return this.throwIfDisposed(),Eh(this,e)},fr.prototype.elu=function(){return this.throwIfDisposed(),Va(this)};const Th=Pr({equalStrict_:function(e,t){Ks("strict variants of ops have been deprecated and will be removed in future");const n=zr(e,"a","equalStrict"),r=zr(t,"b","equalStrict");return f(n.shape,r.shape,"Error in equalStrict: "),qa(n,r)}}),Ah=Pr({greaterEqualStrict_:function(e,t){Ks("strict variants of ops have been deprecated and will be removed in future");const n=zr(e,"a","greaterEqualStrict"),r=zr(t,"b","greaterEqualStrict");return f(n.shape,r.shape,"Error in greaterEqualStrict: "),ti(n,r)}}),Rh=Pr({greaterStrict_:function(e,t){Ks("strict variants of ops have been deprecated and will be removed in future");const n=zr(e,"a","greaterStrict"),r=zr(t,"b","greaterStrict");return f(n.shape,r.shape,"Error in greaterStrict: "),ei(n,r)}}),Fh=Pr({lessEqualStrict_:function(e,t){Ks("strict variants of ops have been deprecated and will be removed in future");const n=zr(e,"a","lessEqualStrict"),r=zr(t,"b","lessEqualStrict");return f(n.shape,r.shape,"Error in lessEqualStrict: "),Ho(n,r)}}),_h=Pr({lessStrict_:function(e,t){Ks("strict variants of ops have been deprecated and will be removed in future");const n=zr(e,"a","lessStrict"),r=zr(t,"b","lessStrict");return f(n.shape,r.shape,"Error in lessStrict: "),gc(n,r)}}),Dh=Pr({notEqualStrict_:function(e,t){Ks("strict variants of ops have been deprecated and will be removed in future");const n=zr(e,"a","notEqualStrict"),r=zr(t,"b","notEqualStrict");return f(n.shape,r.shape,"Error in notEqualStrict: "),Ei(n,r)}});fr.prototype.equalStrict=function(e){return this.throwIfDisposed(),Th(this,e)},fr.prototype.equal=function(e){return this.throwIfDisposed(),qa(this,e)};const Lh=Pr({erf_:function(e){let t=zr(e,"x","erf");p("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=vs(t,"float32"));const n={x:t};return Rr.runKernel(qe,n)}});fr.prototype.erf=function(){return this.throwIfDisposed(),Lh(this)},fr.prototype.exp=function(){return this.throwIfDisposed(),si(this)},fr.prototype.expandDims=function(e){return this.throwIfDisposed(),Ka(this,e)};const Oh=Pr({expm1_:function(e){const t={x:zr(e,"x","expm1")};return Rr.runKernel(Je,t)}});fr.prototype.expm1=function(){return this.throwIfDisposed(),Oh(this)},fr.prototype.fft=function(){return this.throwIfDisposed(),fo(this)},fr.prototype.flatten=function(){return this.throwIfDisposed(),ka(this,[this.size])},fr.prototype.floor=function(){return this.throwIfDisposed(),Za(this)},fr.prototype.floorDiv=function(e){return this.throwIfDisposed(),Wa(this,e)},fr.prototype.gather=function(e,t){return this.throwIfDisposed(),Qa(this,e,t)},fr.prototype.greaterEqualStrict=function(e){return this.throwIfDisposed(),Ah(this,e)},fr.prototype.greaterEqual=function(e){return this.throwIfDisposed(),ti(this,e)},fr.prototype.greaterStrict=function(e){return this.throwIfDisposed(),Rh(this,e)},fr.prototype.greater=function(e){return this.throwIfDisposed(),ei(this,e)},fr.prototype.ifft=function(){return this.throwIfDisposed(),mo(this)},fr.prototype.irfft=function(){return this.throwIfDisposed(),bo(this)};const Mh=Pr({isFinite_:function(e){const t={x:zr(e,"x","isFinite")};return Rr.runKernel(ht,t)}});fr.prototype.isFinite=function(){return this.throwIfDisposed(),Mh(this)};const zh=Pr({isInf_:function(e){const t={x:zr(e,"x","isInf")};return Rr.runKernel(dt,t)}});fr.prototype.isInf=function(){return this.throwIfDisposed(),zh(this)};const Bh=Pr({isNaN_:function(e){const t={x:zr(e,"x","isNaN")};return Rr.runKernel(pt,t)}});fr.prototype.isNaN=function(){return this.throwIfDisposed(),Bh(this)},fr.prototype.leakyRelu=function(e){return this.throwIfDisposed(),ni(this,e)},fr.prototype.lessEqualStrict=function(e){return this.throwIfDisposed(),Fh(this,e)},fr.prototype.lessEqual=function(e){return this.throwIfDisposed(),Ho(this,e)},fr.prototype.lessStrict=function(e){return this.throwIfDisposed(),_h(this,e)},fr.prototype.less=function(e){return this.throwIfDisposed(),gc(this,e)};const Ph=Pr({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=zr(e,"x","localResponseNormalization");p(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),p(x(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=ka(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:s},c=Rr.runKernel(It,l,u);return o?ka(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});fr.prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Ph(this,e,t,n,r)};const Wh=Pr({logSigmoid_:function(e){const t=zr(e,"x","logSigmoid"),n=ta((e=>({value:Si(Ji(Si(e))),gradFunc:t=>ii(t,Gi(Si(e)))})));return n(t)}});fr.prototype.logSigmoid=function(){return this.throwIfDisposed(),Wh(this)},fr.prototype.logSoftmax=function(e){return this.throwIfDisposed(),ui(this,e)},fr.prototype.logSumExp=function(e,t){return this.throwIfDisposed(),al(this,e,t)},fr.prototype.log=function(){return this.throwIfDisposed(),ri(this)},fr.prototype.log1p=function(){return this.throwIfDisposed(),sl(this)},fr.prototype.logicalAnd=function(e){return this.throwIfDisposed(),ci(this,e)},fr.prototype.logicalNot=function(){return this.throwIfDisposed(),Gc(this)};const Uh=Pr({logicalOr_:function(e,t){const n=zr(e,"a","logicalOr","bool"),r=zr(t,"b","logicalOr","bool");Ha(n.shape,r.shape);const s={a:n,b:r};return Rr.runKernel(kt,s)}});fr.prototype.logicalOr=function(e){return this.throwIfDisposed(),Uh(this,e)};const Vh=Pr({logicalXor_:function(e,t){const n=zr(e,"a","logicalXor","bool"),r=zr(t,"b","logicalXor","bool");return Ha(n.shape,r.shape),ci(Uh(e,t),Gc(ci(e,t)))}});fr.prototype.logicalXor=function(e){return this.throwIfDisposed(),Vh(this,e)},fr.prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Eo(this,e,t,n)},fr.prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),hi(this,e,t,n,r)},fr.prototype.max=function(e,t){return this.throwIfDisposed(),ai(this,e,t)},fr.prototype.maximumStrict=function(e){return this.throwIfDisposed(),hh(this,e)},fr.prototype.maximum=function(e){return this.throwIfDisposed(),pi(this,e)},fr.prototype.mean=function(e,t){return this.throwIfDisposed(),fi(this,e,t)},fr.prototype.min=function(e,t){return this.throwIfDisposed(),gi(this,e,t)},fr.prototype.minimumStrict=function(e){return this.throwIfDisposed(),dh(this,e)},fr.prototype.minimum=function(e){return this.throwIfDisposed(),mi(this,e)};const Gh=Pr({mirrorPad_:function(e,t,n){p("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=zr(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");p(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)p(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),p(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:t,mode:n},i={x:r};return Rr.runKernel(Lt,i,a)}});fr.prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Gh(this,e,t)},fr.prototype.modStrict=function(e){return this.throwIfDisposed(),ph(this,e)},fr.prototype.mod=function(e){return this.throwIfDisposed(),lh(this,e)},fr.prototype.mulStrict=function(e){return this.throwIfDisposed(),fh(this,e)},fr.prototype.mul=function(e){return this.throwIfDisposed(),ii(this,e)},fr.prototype.neg=function(){return this.throwIfDisposed(),Si(this)},fr.prototype.norm=function(e,t,n){return this.throwIfDisposed(),Jo(this,e,t,n)},fr.prototype.notEqualStrict=function(e){return this.throwIfDisposed(),Dh(this,e)},fr.prototype.notEqual=function(e){return this.throwIfDisposed(),Ei(this,e)},fr.prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Ti(this,e,t,n)},fr.prototype.onesLike=function(){return this.throwIfDisposed(),Fi(this)},fr.prototype.pad=function(e,t){return this.throwIfDisposed(),_i(this,e,t)};const jh=Pr({pool_:function(e,t,n,r,s,a){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const i=zr(e,"x","maxPool");let o=i,l=!1;3===i.rank&&(l=!0,o=ka(i,[1,i.shape[0],i.shape[1],i.shape[2]])),p(va(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const u=ca(o.shape,t,a,s,r),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],s[t]]))}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[f,g]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=s.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([u.inHeight,u.inWidth],c,h),m=d?r:"valid",b=d?o:ku(o,c,f),y=("avg"===n?()=>Ia(b,t,a,m):()=>hi(b,t,a,m))(),x=d?y:nh(y,c,g);return l?ka(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});fr.prototype.pool=function(e,t,n,r,s){return this.throwIfDisposed(),jh(this,e,t,n,r,s)},fr.prototype.powStrict=function(e){return this.throwIfDisposed(),gh(this,e)},fr.prototype.pow=function(e){return this.throwIfDisposed(),Xo(this,e)},fr.prototype.prelu=function(e){return this.throwIfDisposed(),Di(this,e)};const Hh=Pr({prod_:function(e,t=null,n=!1){let r=zr(e,"x","prod");"bool"===r.dtype&&(r=vs(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Rr.runKernel(Yt,s,a)}});fr.prototype.prod=function(e,t){return this.throwIfDisposed(),Hh(this,e,t)};const qh=Pr({reciprocal_:function(e){const t={x:zr(e,"x","reciprocal")};return Rr.runKernel(Qt,t)}});fr.prototype.reciprocal=function(){return this.throwIfDisposed(),qh(this)},fr.prototype.relu=function(){return this.throwIfDisposed(),Pi(this)},fr.prototype.relu6=function(){return this.throwIfDisposed(),xo(this)},fr.prototype.reshapeAs=function(e){return this.throwIfDisposed(),ka(this,e.shape)},fr.prototype.reshape=function(e){return this.throwIfDisposed(),ka(this,e)},fr.prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Go(this,e,t,n)},fr.prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),jo(this,e,t,n)},fr.prototype.reverse=function(e){return this.throwIfDisposed(),Wi(this,e)},fr.prototype.rfft=function(){return this.throwIfDisposed(),go(this)};const Kh=Pr({round_:function(e){const t={x:zr(e,"x","round")};return Rr.runKernel(un,t)}});fr.prototype.round=function(){return this.throwIfDisposed(),Kh(this)},fr.prototype.rsqrt=function(){return this.throwIfDisposed(),Yu(this)},fr.prototype.selu=function(){return this.throwIfDisposed(),Ui(this)},fr.prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Vi(this,e,t,n,r,s,a)},fr.prototype.sigmoid=function(){return this.throwIfDisposed(),Gi(this)};const Xh=Pr({sign_:function(e){const t={x:zr(e,"x","sign")};return Rr.runKernel(bn,t)}});fr.prototype.sign=function(){return this.throwIfDisposed(),Xh(this)},fr.prototype.sin=function(){return this.throwIfDisposed(),Lu(this)},fr.prototype.sinh=function(){return this.throwIfDisposed(),Mu(this)},fr.prototype.slice=function(e,t){return this.throwIfDisposed(),ji(this,e,t)},fr.prototype.softmax=function(e){return this.throwIfDisposed(),Yi(this,e)},fr.prototype.softplus=function(){return this.throwIfDisposed(),Ji(this)},fr.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),ku(this,e,t)},fr.prototype.split=function(e,t){return this.throwIfDisposed(),Zi(this,e,t)},fr.prototype.sqrt=function(){return this.throwIfDisposed(),Qi(this)},fr.prototype.square=function(){return this.throwIfDisposed(),Ni(this)},fr.prototype.squaredDifference=function(e){return this.throwIfDisposed(),rl(this,e)},fr.prototype.squaredDifferenceStrict=function(e){return this.throwIfDisposed(),mh(this,e)},fr.prototype.squeeze=function(e){return this.throwIfDisposed(),eo(this,e)},fr.prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof fr?[this,e]:[this,...e];return to(n,t)},fr.prototype.step=function(e){return this.throwIfDisposed(),vo(this,e)};const Yh=Pr({stridedSlice_:function(e,t,n,r,s=0,a=0,i=0,o=0,l=0){const u={x:zr(e,"x","stridedSlice")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Rr.runKernel(Tn,u,c)}});fr.prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),Yh(this,e,t,n,r,s,a,i,o)},fr.prototype.subStrict=function(e){return this.throwIfDisposed(),bh(this,e)},fr.prototype.sub=function(e){return this.throwIfDisposed(),oi(this,e)},fr.prototype.sum=function(e,t){return this.throwIfDisposed(),li(this,e,t)};const Jh=Pr({tan_:function(e){const t={x:zr(e,"x","tan")};return Rr.runKernel(An,t)}});fr.prototype.tan=function(){return this.throwIfDisposed(),Jh(this)},fr.prototype.tanh=function(){return this.throwIfDisposed(),no(this)},fr.prototype.tile=function(e){return this.throwIfDisposed(),Xa(this,e)},fr.prototype.toBool=function(){return this.throwIfDisposed(),vs(this,"bool")},fr.prototype.toFloat=function(){return this.throwIfDisposed(),vs(this,"float32")},fr.prototype.toInt=function(){return this.throwIfDisposed(),vs(this,"int32")};const Zh=Pr({topk_:function(e,t=1,n=!0){const r=zr(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},i={k:t,sorted:n},[o,l]=Rr.runKernel(_n,a,i);return{values:o,indices:l}}});fr.prototype.topk=function(e,t){return this.throwIfDisposed(),Zh(this,e,t)},fr.prototype.transpose=function(e){return this.throwIfDisposed(),uo(this,e)};const Qh=Pr({unique_:function(e,t=0){const n=zr(e,"x","unique","string_or_numeric");p(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[a,i]=Rr.runKernel(Ln,r,s);return{values:a,indices:i}}});let ed;function td(){return null==ed&&(ed=Rr.backend.epsilon()),ed}fr.prototype.unique=function(e){return this.throwIfDisposed(),Qh(this,e)},fr.prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Zu(this,e,t)},fr.prototype.unstack=function(e){return this.throwIfDisposed(),ao(this,e)},fr.prototype.where=function(e,t){return this.throwIfDisposed(),oo(e,this,t)},fr.prototype.zerosLike=function(){return this.throwIfDisposed(),lo(this)};class nd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,nd.prototype)}}class rd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,rd.prototype)}}class sd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,sd.prototype)}}class ad extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ad.prototype)}}class id extends Error{constructor(e){super(e),Object.setPrototypeOf(this,id.prototype)}}class od extends Error{constructor(e){super(e),Object.setPrototypeOf(this,od.prototype)}}function ld(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function ud(e,t){if(!e)throw new id(t)}function cd(e,t){let n=0;for(const r of e)r===t&&n++;return n}function hd(e){return 1===e.length?e[0]:e}function dd(e){return Array.isArray(e)?e:[e]}function pd(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function fd(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let gd={};function md(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function bd(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>bd(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?bd(t):e[n]=t.value)}}}function yd(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in gd)a=gd[s];else if(a=t[s],null==a)throw new sd(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new sd(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in gd?[o,l]=gd.className:i in t&&([o,l]=t[i]),null==o)throw new sd(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(gd))e[t]=gd[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},gd);for(const e of Object.keys(n))gd[e]=n[e];bd(a.config);const r=l(o,a.config,n,s);return gd=Object.assign({},t),r}{const e=Object.assign({},gd);for(const e of Object.keys(n))gd[e]=n[e];const t=new o(a.config);return gd=Object.assign({},e),t}}}function xd(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function vd(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function wd(e){if(null==e)throw new sd(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function kd(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new sd(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Id(e,t,n=0,r=1/0){return ud(n>=0),ud(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function Cd(e,t){Array.isArray(e)?(p(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Cd(e,`element ${n+1} of ${t}`)))):p(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Nd(e)}.`))}function Nd(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Nd(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function $d(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function Sd(e,t){return Js((()=>Qi(li(ii(e,e),t,!0))))}class Ed extends js{getConfig(){return{}}}class Td extends Ed{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Js((()=>{const t=Sd(e,this.axis),n=Ta(t,0,this.maxValue);return ii(e,Ua(n,aa(td(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Td.className="MaxNorm",qs(Td);class Ad extends Ed{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Js((()=>Ua(e,aa(td(),Sd(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Ad.className="UnitNorm",qs(Ad);class Rd extends Ed{apply(e){return Pi(e)}}Rd.className="NonNeg",qs(Rd);class Fd extends Ed{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Js((()=>{const t=Sd(e,this.axis),n=aa(ii(this.rate,Ta(t,this.minValue,this.maxValue)),ii(1-this.rate,t));return ii(e,Ua(n,aa(td(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Fd.className="MinMaxNorm",qs(Fd);const _d={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Dd(e){return md(e)}function Ld(e,t={}){return yd(e,Hs.getMap().classNameMap,t,"constraint")}function Od(e){return null==e?null:"string"==typeof e?Ld({className:e in _d?_d[e]:e,config:{}}):e instanceof Ed?e:Ld(e)}const Md=["channelsFirst","channelsLast"],zd=["nearest","bilinear"],Bd=["valid","same","causal"],Pd=["max","avg"],Wd=["sum","mul","concat","ave"],Ud=new Map;function Vd(e){kd(Md,"DataFormat",e)}function Gd(e){kd(Bd,"PaddingMode",e)}function jd(e){kd(Pd,"PoolMode",e)}const Hd=[];function qd(e,t){Hd.push(e);try{const e=t();return Hd.pop(),e}catch(e){throw Hd.pop(),e}}function Kd(e){if(!Jd(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Hd.length?"":Hd.join("/")+"/")+e}function Xd(e){if(!Jd(e))throw new Error("Not a valid tensor name: '"+e+"'");Ud.has(e)||Ud.set(e,0);const t=Ud.get(e);if(Ud.set(e,Ud.get(e)+1),t>0){const n=`${e}_${t}`;return Ud.set(n,1),n}return e}const Yd=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Jd(e){return!!e.match(Yd)}function Zd(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function Qd(e){return ro(e=Array.isArray(e)?new Float32Array(e):e)}function ep(e){return gi(Qd(e)).dataSync()[0]}function tp(e){return ai(Qd(e)).dataSync()[0]}function np(e,t){if(t<e)throw new sd(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function rp(e,t){return e.asType(t)}function sp(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function ap(e,t,n){return Js((()=>{switch(e.rank){case 1:return Hi(e,t,n);case 2:return qi(e,[t,0],[n,e.shape[1]]);case 3:return Ki(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Xi(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return ji(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return ji(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new sd(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ip(e,t,n){return Js((()=>{switch(e.rank){case 1:return Hi(e,t,n);case 2:return qi(e,[0,t],[e.shape[0],n]);case 3:return Ki(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Xi(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new sd(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function op(e,t,n,r){return Js((()=>{switch(e.rank){case 1:return Hi(e,t,n);case 2:switch(r){case 1:return ap(e,t,n);case 2:return ip(e,t,n);default:throw new sd(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return ap(e,t,n);case 2:return Ki(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return ip(e,t,n);default:throw new sd(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return ap(e,t,n);case 2:return Xi(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Xi(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return ip(e,t,n);default:throw new sd(`The axis is not within the rank of the tensor ${r}`)}default:throw new sd(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function lp(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Aa(e,t)}function up(e,t){switch(e.rank){case 1:return Ra([e,t]);case 2:return Fa([e,t],0);case 3:return _a([e,t],0);case 4:return Da([e,t],0);default:throw new sd(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function cp(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new sd(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Xa(e,t)}function hp(e,t=0,n=1,r,s){return zi(e,t,n,r,s)}function dp(e,t,n,r){if(e.rank<2||t.rank<2)throw new ad(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new ad(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return To({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?gp(e.rank,r,"channelsLast"):null,activation:n});{const s=e.shape.slice(),a=s.pop();e=e.reshape([-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=t.transpose(c).reshape([l,-1]);const h=[...s,...u];return To({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?gp(e.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function pp(e,t,n){return Js((()=>(t=Array.isArray(t)?ro(t,"int32"):t.toInt(),Qa(e,t,n))))}function fp(e){return ii(e,e)}function gp(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new sd(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1,1]):t.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,1,r[0]]):t.reshape([1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1]):t.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,r[0]]):t.reshape([1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1]):t.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,r[0]]):t.reshape([1].concat(r))}else if(e<3)return t;throw new sd(`Unsupported input rank by biasAdd: ${t.rank}`)}function mp(e,t,n){return Js((()=>(null==n&&(n="channelsLast"),Vd(n),e.add(gp(e.rank,t,n)))))}function bp(e,t,n,r){return Js((()=>co(e,t,n,r)))}function yp(e,t,n=!1){return n?e():t()}const xp=["fanIn","fanOut","fanAvg"],vp=["normal","uniform","truncatedNormal"];class wp extends js{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class kp extends wp{apply(e,t){return Ai(e,t)}}kp.className="Zeros",qs(kp);class Ip extends wp{apply(e,t){return Ri(e,t)}}Ip.className="Ones",qs(Ip);class Cp extends wp{constructor(e){if(super(),"object"!=typeof e)throw new sd(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new sd(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Js((()=>ii(na(this.value),Ri(e,t))))}getConfig(){return{value:this.value}}}Cp.className="Constant",qs(Cp);class Np extends wp{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Bi(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Np.className="RandomUniform",qs(Np);class $p extends wp{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ad(`randomNormal does not support dType ${t}.`);return hp(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}$p.className="RandomNormal",qs($p);class Sp extends wp{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ad(`truncatedNormal does not support dType ${t}.`);return so(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Sp.className="TruncatedNormal",qs(Sp);class Ep extends wp{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Js((()=>{if(2!==e.length||e[0]!==e[1])throw new sd("Identity matrix initializer can only be used for 2D square matrices.");return ii(this.gain,Ya(e[0]))}))}getConfig(){return{gain:this.gain}}}Ep.className="Identity",qs(Ep);class Tp extends wp{constructor(e){if(super(),e.scale<0)throw new sd(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,kd(xp,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){kd(vp,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Vd(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Zd(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Zd(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Zd(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ad(`${this.getClassName()} does not support dType ${t}.`);return so(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return Bi(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Tp.className="VarianceScaling",qs(Tp);class Ap extends Tp{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Tp.className}}Ap.className="GlorotUniform",qs(Ap);class Rp extends Tp{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Tp.className}}Rp.className="GlorotNormal",qs(Rp);class Fp extends Tp{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Tp.className}}Fp.className="HeNormal",qs(Fp);class _p extends Tp{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Tp.className}}_p.className="HeUniform",qs(_p);class Dp extends Tp{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Tp.className}}Dp.className="LeCunNormal",qs(Dp);class Lp extends Tp{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Tp.className}}Lp.className="LeCunNormal",qs(Lp);class Op extends wp{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new ad("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Js((()=>{if(e.length<2)throw new ad("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=hp(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=il.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),ii(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Op.className="Orthogonal",qs(Op);const Mp={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function zp(e,t={}){return yd(e,Hs.getMap().classNameMap,t,"initializer")}function Bp(e){return md(e)}function Pp(e){if("string"==typeof e){const t=e in Mp?Mp[e]:e;if("GlorotNormal"===t)return new Rp;if("GlorotUniform"===t)return new Ap;if("HeNormal"===t)return new Fp;if("HeUniform"===t)return new _p;if("LeCunNormal"===t)return new Dp;if("LeCunUniform"===t)return new Lp;{const e={};return e.className=t,e.config={},zp(e)}}return e instanceof wp?e:zp(e)}let Wp=0;function Up(){return Wp++}const Vp={};function Gp(e=""){return e in Vp||(Vp[e]=0),Vp[e]+=1,e+Vp[e].toString()}function jp(e){return Array.isArray(e)&&Array.isArray(e[0])}function Hp(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function qp(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new sd(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Kp(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new sd(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Xp(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class Yp{constructor(e,t="float32",n="Variable",r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Up(),n=null==n?"Variable":n,this.originalName=Kd(n),this.name=Xd(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(e,t=!0,n,r){return Rr.makeVariable(e,t,n,r)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Jp(e){return e.map((e=>e.read()))}function Zp(e){e.forEach((e=>{e[0].write(e[1])}))}class Qp{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class ef{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=Up(),null!=a&&(this.originalName=Kd(a),this.name=Xd(this.originalName)),this.rank=t.length}}let tf=0;class nf{constructor(e,t){this.callArgs=t,this.id=tf++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let rf=0;class sf extends js{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=rf++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=pd(e)+"_"+Gp(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new rd(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new sd(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return hd(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return hd(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new nd(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new nd(`Layer ${this.name} is not connected, no input to return.`);return hd(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new nd(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new nd(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return hd(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=dd(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=dd(this.inputSpec);if(e.length!==t.length)throw new sd(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new sd(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new sd(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new sd(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new sd(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),a=s.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new sd(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],a=r.shape[e];if(null!=t&&null!=a&&t!==a)throw new sd(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=dd(e);let r=!0;for(const e of n)if(!(e instanceof ef)){r=!1;break}let s=!0;for(const e of n)if(e instanceof ef){s=!1;break}if(r===s)throw new sd("Arguments to apply() must be all SymbolicTensors or all Tensors");return qd(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of dd(e))t.push(n.shape);this.build(hd(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=dd(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=hd(a),null!=this.activityRegularizer)throw new ad("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=dd(e);const t=[];for(const n of e)t.push(n.shape);return hd(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new ef(a,n,this,dd(e),t,this.name,r))):new ef(a,r,this,dd(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new ad("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new nd(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new nd(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new rd(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Xp(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Jp(e?this.trainableWeights:this.weights)}setWeights(e){Js((()=>{const t=this.weights;if(t.length!==e.length)throw new sd(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Jp(t);for(let s=0;s<r.length;++s){const a=r[s],i=t[s],o=e[s];if(!y(a.shape,o.shape))throw new sd(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Zp(n)}))}addWeight(e,t,n,r,s,a,i){if(-1!==this._addedWeightNames.indexOf(e))throw new sd(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Pp("zeros"));const o=r.apply(t,n),l=new Yp(o,n,e,a,i);return o.dispose(),null!=s&&this.addLoss((()=>s.apply(l.read()))),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=dd(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,s,a,i=null){const o=dd(e);t=dd(t),n=dd(n),r=dd(r),s=Hp(s),a=Hp(a);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new nf({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function af(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=af(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class of extends sf{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Gp("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new sd("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new sd("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new sd("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new ef(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new nf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new sd(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function lf(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];Zs(r)}}function uf(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var cf;of.className="InputLayer",qs(of),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(cf||(cf={}));class hf{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class df{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class pf extends hf{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=Js((()=>aa(this.totals[e],ii(r,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Js((()=>{const n=ii(Ua(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Qs(t[e])})))}}class ff extends hf{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];e.push(i.data()),t.push(r),n.push(a)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class gf extends hf{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");F(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=or();return(...s)=>{const a=or();return a-r<t||(r=a,n=e(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await lf(n),r.push(this.yield(e,t,n))),r.push(bl()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await lf(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await lf(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(bl()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await lf(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await lf(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(bl()):F(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await lf(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await lf(e),await this.trainEnd(e))}}function mf(e,t){return null==e&&(e={}),e instanceof hf?[e]:Array.isArray(e)&&e[0]instanceof hf?e:dd(e).map((e=>new gf(e,t)))}class bf{constructor(){}static registerCallbackConstructor(e,t){p(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),bf.checkForDuplicate(t),null==bf.constructors[e]&&(bf.constructors[e]=[]),bf.constructors[e].push(t)}static checkForDuplicate(e){for(const t in bf.constructors)bf.constructors[+t].forEach((t=>{if(t===e)throw new sd("Duplicate callback constructor.")}))}static clear(){bf.constructors={}}static createCallbacks(e){const t=[];for(const n in bf.constructors){const r=+n;e>=r&&t.push(...bf.constructors[r])}return t.map((e=>new e))}}function yf(e,t,n,r,s,a,i,o,l){const u=new ff,c=[new pf,...bf.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new df(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function xf(e,t={},n=!1){return yd(e,Hs.getMap().classNameMap,t,"layer",n)}function vf(e,t){return Js((()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=li(fp(e),t,!0),r=Ja(n.shape,td()),s=Qi(pi(n,r));return Ua(e,s)}))}function wf(e,t){return Js((()=>fi(fp(oi(t,e)),-1)))}function kf(e,t){return Js((()=>fi(sa(oi(t,e)),-1)))}function If(e,t){return Js((()=>{const n=oi(e,t),r=Ta(sa(e),td(),Number.MAX_VALUE),s=sa(Ua(n,r));return ii(100,fi(s,-1))}))}function Cf(e,t,n=!1){return Js((()=>{if(n)t=Yi(t);else{const e=li(t,t.shape.length-1,!0);t=Ua(t,e)}return t=Ta(t,td(),1-td()),Si(li(ii(e.toFloat(),ri(t)),t.shape.length-1))}))}function Nf(e,t,n=!1){return Js((()=>{const r=Za(function(e){const t=[Zd(e.shape)];return e.reshape(t)}(e)).toInt(),s=(t=Ta(t,td(),1-td())).shape;return Cf(Ti(r,s[s.length-1]).reshape(s),t,n)}))}function $f(e,t){return Js((()=>{let n;return n=Ta(t,td(),1-td()),n=ri(Ua(n,oi(1,n))),fi(function(e,t){if(!y(e.shape,t.shape))throw new sd(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Js((()=>{const n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())}))}(e,n),-1)}))}function Sf(e,t){return Js((()=>{const n=vf(e,-1),r=vf(t,-1),s=ii(n,r);return Si(li(s,-1))}))}bf.constructors={};const Ef={meanSquaredError:wf,meanAbsoluteError:kf,meanAbsolutePercentageError:If,meanSquaredLogarithmicError:function(e,t){return Js((()=>{const n=Ta(t,td(),Number.MAX_VALUE),r=ri(aa(1,n)),s=Ta(e,td(),Number.MAX_VALUE),a=ri(aa(1,s));return fi(fp(oi(r,a)),-1)}))},squaredHinge:function(e,t){return Js((()=>{const n=pi(0,oi(1,ii(e,t)));return fi(fp(n),-1)}))},hinge:function(e,t){return Js((()=>{const n=pi(0,oi(1,ii(e,t)));return fi(n,-1)}))},categoricalHinge:function(e,t){return Js((()=>{const n=li(ii(e,t),-1),r=ai(ii(oi(1,e),t),-1);return pi(0,aa(1,oi(r,n)))}))},logcosh:function(e,t){return Js((()=>{const n=Math.log(2),r=oi(t,e),s=oi(aa(r,Ji(ii(-2,r))),n);return fi(s,-1)}))},categoricalCrossentropy:Cf,sparseCategoricalCrossentropy:Nf,binaryCrossentropy:$f,kullbackLeiblerDivergence:function(e,t){return Js((()=>{const n=Ta(e,td(),1),r=Ta(t,td(),1);return li(ii(e,ri(Ua(n,r))),-1)}))},poisson:function(e,t){return Js((()=>{const n=ri(aa(td(),t));return fi(oi(t,ii(e,n)),-1)}))},cosineProximity:Sf};function Tf(e){if("string"==typeof e){if(e in Ef)return Ef[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new sd(t)}return e}function Af(e,t){return Js((()=>{const n=ii(.5,Fi(t)),r=rp(ei(t,n),e.dtype);return fi(qa(e,r),-1)}))}function Rf(e,t){return Js((()=>rp(qa(la(e,-1),la(t,-1)),"float32")))}function Ff(e,t){return $f(e,t)}function _f(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),qa(e,t).asType("float32")}const Df=Cf,Lf=Nf,Of={binaryAccuracy:Af,categoricalAccuracy:Rf,precision:function(e,t){return Js((()=>{const n=function(e,t){return Js((()=>ci(e.equal(1),t.equal(1)).sum().cast("float32")))}(e,t),r=function(e,t){return Js((()=>ci(e.equal(0),t.equal(1)).sum().cast("float32")))}(e,t),s=n.add(r);return oo(ei(s,0),n.div(s),0).cast("float32")}))},categoricalCrossentropy:Df,sparseCategoricalCrossentropy:Lf,mse:wf,MSE:wf,mae:kf,MAE:kf,mape:If,MAPE:If,cosine:Sf};function Mf(e){if("string"==typeof e&&e in Of)return Of[e];if("string"!=typeof e&&null!=e)return e;throw new sd(`Unknown metric ${e}`)}function zf(e){if(ud(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(Ef))if(Ef[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Of))if(Of[n]===e){t=n;break}return void 0!==t?t:e.name}}function Bf(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Pf(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Pf(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Pf(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Pf(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Wf(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function Uf(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Wf([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function Vf(e,t,n,r){let s;try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const a=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];a.push(`${n}[${r}][${s}]`)}const i=e.name,o=e.getClassName(),l=0===a.length?"":a[0];Wf([`${i} (${o})`,s,e.countParams().toString(),l],t,r);for(let e=1;e<a.length;++e)Wf(["","","",a[e]],t,r)}function Gf(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function jf(e,t){if(null===e)return null;if("string"==typeof e)return fd(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Gf(t,s,r)?n.push(r):n.push(jf(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=fd(n);t[e]=jf(r,e)}}return t}}function Hf(e,t){if(null==e)return null;if("string"==typeof e)return pd(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Gf(t,s,r)?n.push(r):n.push(Hf(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[pd(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Hf(r,n):r}return t}}class qf{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof qf)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new sd(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return vs(t,e.dtype)}catch(n){throw new sd(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof ef){if(null==this.id2Value[e.id])throw new sd(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new sd(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof ef){if(null==this.id2Value[e.id])throw new sd(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new sd(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Zs(this.id2Mask)}}const Kf={},Xf={};function Yf(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let h,d;if(null==Kf[c]){const e=function(e,t){p(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=Zf(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:i}=Zf(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:Jf(r)}}(i,t);h=e.sorted,d=e.recipientCounts,Kf[c]=h,Xf[c]=d}h=Kf[c],d={},s||Object.assign(d,Xf[c]);const f=new qf(t);for(let e=0;e<h.length;++e){if(null!=r){const e=Ys().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const a=h[e],i=a.sourceLayer;if(i instanceof of)continue;const u=[],c=[],p=[];let g=!1;for(const e of a.inputs){const n=f.getValue(e),r=f.getMask(e);u.push(n),c.push(r),null!=r&&(g=!0),s||(d[e.name]--,0!==d[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||p.push(n))}g&&((n=n||{}).mask=c[0]);const m=dd(i.apply(u,n));let b=null;i.supportsMasking&&(b=i.computeMask(u,c));const y=Qf(a),x=Array.isArray(y)?y:[y];for(let e=0;e<x.length;++e){f.hasKey(x[e])||f.add(x[e],m[e],Array.isArray(b)?b[0]:b);const t=o.indexOf(x[e].name);-1!==t&&(l[t]=m[e])}s||Zs(p)}return f.disposeMasks(),a?l:l[0]}function Jf(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Zf(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function Qf(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class eg extends sf{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Gp(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],vd(this.inputs).length!==this.inputs.length)throw new sd(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);vd(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;ud(0===n,"input layer has >1 nodes"),ud(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof of))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new rd(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(eg.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const r=u.inputTensors[e],s=u.inboundLayers[e],a=u.nodeIndices[e],i=u.tensorIndices[e];o(r,t,n,s,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];a=Math.max(a,i),r[e.outboundLayer.id]=a,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],i=e.nodeIndices[r],o=s.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,l),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const d={};for(const e in r){const t=r[e];t in d||(d[t]=[]),d[t].push(s[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(xd);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof eg&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(xd);const f=this.inputs.slice(),g=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new rd(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${g}`);for(const e of t.outputTensors)f.push(e);g.push(e.name)}}this.nodesByDepth=h;const m=this.layers.map((e=>e.name));for(const e of m){const t=m.filter((t=>t===e)).length;if(1!==t)throw new rd(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new nf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new sd("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new sd(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const s=[];for(const r in e){let a=r;if(null==n[r]){const e=r.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[r]]);else if(t)throw new sd(`Provided weight data has no target variable: ${r}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new sd(`${e.length} of ${r} weights are not set: ${e}`)}Zp(s)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 2.8.6",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Hf(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Js((()=>{e=dd(e);const n=new qf;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Yf(this.outputs,n,t)}))}computeMask(e,t){return Js((()=>{let n;return e=dd(e),n=null==t?ld(null,e.length):dd(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Hp(e);if(t.length!==this.inputLayers.length)throw new sd(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(xd);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=Hp(t.computeOutputShape(hd(r))),a=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${a}_${e}`]=s[e]}}const s=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;a.push(s)}for(let e=0;e<a.length;e++){const t=a[e];ud(t in n),s.push(n[t])}return hd(s)}runInternalGraph(e,t){null==t&&(t=ld(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=e[r],i=t[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(xd);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,a=new Array;for(const e of r)e.id in n&&a.push(n[e.id]);if(a.length===r.length){let r,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===a.length){const[e,n]=a[0];null==u.mask&&(u.mask=n),o=dd(t.call(e,u)),l=dd(t.computeMask(e,n)),r=[e],i=[n]}else r=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=dd(t.call(r,u)),l=dd(t.computeMask(r,i));if(t.activityRegularizer)throw new ad("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],a=l[e];n[t.id]=[r,a]}}}}const s=[],a=[],i=[];for(const e of this.outputs){ud(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),s.push(t),a.push(r)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof eg?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=eg.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new sd(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new sd("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new sd(`No such layer: ${e}`)}calculateLosses(){return Js((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=eg.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=eg.nodeKey(e,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let l=t[eg.nodeKey(s,a)];null==l&&(l=0),e.push([s.name,l,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],a=eg.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],a=eg.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,i,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let r;for(const a of t){const o=a[0],l=a[1],u=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=l)return void i(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(hd(n),r)}function l(e){const n=e.name,a=xf(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new sd(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!wd(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];ud(t in s);const a=s[t].inboundNodes[n].outputTensors;h.push(a[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];ud(t in s);const a=s[t].inboundNodes[n].outputTensors;d.push(a[r])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new sd("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Js((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function tg(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function ng(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Js((()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){const t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());Zs(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),ro(s,"float32")}return null}function rg(e,t){return ii(e,t)}function sg(e,t){let n,r;const s=t;n=s.xs,r=s.ys,p(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=ag("input",e.inputNames,n),i=ag("output",e.outputNames,r),o=a[0].shape[0];p(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),p(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)p(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)p(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function ag(e,t,n){if(n instanceof fr)return[n];if(Array.isArray(n))return p(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new sd(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function ig(e){return"function"==typeof e.iterator}function og(e){p(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function lg(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>ap(e,t,n-t))):ap(e,t,n-t)}function ug(e,t){return Js((()=>null==e?null:Array.isArray(e)?e.map((e=>ug(e,t))):pp(e,"int32"===t.dtype?t:t.toInt())))}function cg(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function hg(e){const t=[];e instanceof fr&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(sp(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function dg(e,t){if(null==e)return;const n=[];if(t instanceof fr)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof fr)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function pg(e){return Array.isArray(e)}function fg(e){return!function(e){return e instanceof fr}(e)&&!pg(e)}function gg(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(pg(e)&&e.length>0)t=!0;else if(fg(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new sd(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(fg(e)){a=[];for(const n of t){if(null==e[n])throw new sd(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(pg(e)){if(e.length!==t.length)throw new sd(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new sd(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=hg(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new sd(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l>=0&&o!==l)throw new sd(`Error when checking ${s}: expected ${t[e]} to have shape [${n[e]}], but got array with shape [${i.shape}].`)}}return a}function mg(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new sd(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new sd(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new sd(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l!==o)throw new sd(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class bg extends eg{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new sd("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Output shape","Param #"];let i;if(s?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),Wf(a,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?Uf(o[e],n,r):Vf(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?Xp(e.collectedTrainableWeights):Xp(e.trainableWeights),t}(e),u=Xp(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>gl.adagrad(.01),Adadelta:()=>gl.adadelta(1,.95,td()),Adam:()=>gl.adam(.001,.9,.999,td()),Adamax:()=>gl.adamax(.002,.9,.999,td(),0),RMSProp:()=>gl.rmsprop(.001,.9,0,td()),SGD:()=>gl.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new sd(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof ra))throw new sd("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new sd(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Tf(e)))}else{const n=Tf(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new sd(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Tf(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],qd("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};qd("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===$f?-1!==["accuracy","acc"].indexOf(i)?r=Af:-1!==["crossentropy","ce"].indexOf(i)&&(r=Ff):this.lossFunctions[e]===Nf?-1!==["accuracy","acc"].indexOf(i)?r=_f:-1!==["crossentropy","ce"].indexOf(i)&&(r=Lf):-1!==["accuracy","acc"].indexOf(i)?r=Rf:-1!==["crossentropy","ce"].indexOf(i)&&(r=Df),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=Mf(i);a=e,n=""+zf(i)}let t;qd(n,(()=>{t=a})),s(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;og(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const a=s[0].concat(s[1]);this.makeTestFunction();const i=this.testFunction;return hd(this.testLoop(i,a,r,n.verbose,n.steps))}finally{dg(s[0],e),dg(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new ad("Verbose mode is not implemented yet.");p(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!r||l<n.batches;){const t=await i.next();if(a=Js((()=>{if(t.value){const{xs:n,ys:r}=sg(e,t.value),i=n.concat(r),u=Js((()=>s(i)));if(Zs(i),0===l)for(let e=0;e<u.length;++e)a.push(na(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=a[e];a[e]=Js((()=>aa(a[e],ii(c,t)))),l>0&&Zs(n)}Zs(u),o+=c,++l}return a})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=Ua(a[e],o),Zs(t)}return hd(a)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new sd(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new sd(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new sd("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new qf;if(e instanceof fr&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new sd(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new sd(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=Yf(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=ld(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new sd(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Js((()=>{const r=this.checkNumSamples(e);if(n)throw new ad("Verbose predictLoop() is not implemented yet.");const s=cg(r,t),a=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t)Js((()=>{const n=s[t][0],r=s[t][1],a=lg(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new qf(i);return Yf(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)));return hd(a.map((e=>Aa(e,0))))}))}predict(e,t={}){const n=hg(e);mg(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return og(r),this.predictLoop(n,r)}finally{dg(n,e)}}predictOnBatch(e){mg(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new rd("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Nf?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t,n){const r=vd(e.map((e=>e.shape[0])));r.sort();const s=vd(t.map((e=>e.shape[0])));if(s.sort(),r.length>1)throw new sd(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new sd(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&s.length>0&&!y(r,s))throw new sd(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=gg(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=gg(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[wf,$f,Cf];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===Cf&&1===a.shape[a.shape.length-1])throw new sd(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new sd(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new sd(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=tg(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await ng(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,s){return Js((()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new ad("Verbose mode is not implemented yet.");if(null!=s)throw new ad("steps mode in testLoop() is not implemented yet");{const r=cg(a,n),s=ro(np(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],l=ap(s,a,o-a),u=ug(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(na(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=aa(i[e],ii(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=Ua(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;cd(e,r)>1&&(s+=`_${cd(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new qf(e),o=Yf(this.outputs,i,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=s[e]&&(n=rg(n,s[e]));const a=fi(n);t.push(a),l=0===e?n:aa(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=fi(t(r[s],o[s]))}Qs(n),a.push(n)}return l=fi(l),this.calculateLosses().forEach((e=>{l=aa(l,e)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>Js((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new qf(a),o=Yf(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=fi(r(s[e],o[e]));n=0===e?a:aa(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=fi(n(s[r],o[r]));t.push(a)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,a,i,o,l,u,h;e.isTraining=!0;try{const d=null==r.batchSize?32:r.batchSize;og(d);const p=!1,f=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,p,d);s=f[0],a=f[1],h=f[2];let g,m=!1;if(null!=r.validationData&&r.validationData.length>0){if(m=!0,2!==r.validationData.length)throw 3===r.validationData.length?new ad("validationData including sample weights is not supported yet."):new sd(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);i=r.validationData[0],o=r.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,d);l=n[0],u=n[1],g=l.concat(u)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){m=!0;const e=Math.floor(s[0].shape[0]*(1-r.validationSplit)),t=s[0].shape[0];l=lg(s,e,t),s=lg(s,0,e),u=lg(a,e,t),a=lg(a,0,e),g=l.concat(u)}else null!=r.validationSteps&&(m=!0);const b=s.concat(a).concat(h);e.checkTrainableWeightsConsistency();const y=e.makeTrainFunction(),x=e.getDedupedMetricsNames();let v,w;m?(e.makeTestFunction(),v=e.testFunction,w=x.slice().concat(x.map((e=>"val_"+e)))):(v=null,g=[],w=x.slice());const k=mf(r.callbacks,r.yieldEvery),I=await async function(e,t,n,r,s,a,i,o,l,u,h,d,p,f,g){null==s&&(s=32),null==a&&(a=1),null==h&&(h=!0),null==p&&(p=0);let m=!1;null!=l&&null!=u&&(m=!0);const b=e.checkNumSamples(n,s,f,"steps_per_epoch");let y;null!=b&&(y=np(0,b)),null==i&&(i=1);const{callbackList:x,history:v}=yf(o,i,a,p,b,f,s,m,d);x.setModel(e),e.history=v,await x.onTrainBegin(),e.stopTraining_=!1;for(let i=p;i<a;++i){await x.onEpochBegin(i);const a={};{if("batch"===h)throw new ad("batch shuffling is not implemneted yet");h&&c(y);const i=ro(y),o=cg(b,s);for(let c=0;c<o.length;++c){const h={};if(await x.onBatchBegin(c,h),Js((()=>{const d=o[c][0],p=o[c][1],f=ap(i,d,p-d);h.batch=c,h.size=p-d;const g=ug(n,f),b=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=b[e];h[t]=n,Qs(n)}if(c===o.length-1&&m){const t=e.testLoop(l,u,s);for(let e=0;e<r.length;++e){const n=r[e],s=t[e];Qs(s),a["val_"+n]=s}}})),await x.onBatchEnd(c,h),uf(h),e.stopTraining_)break}i.dispose()}if(await x.onEpochEnd(i,a),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}(e,y,b,x,d,r.epochs,r.verbose,k,v,g,r.shuffle,w,r.initialEpoch,null);return I}finally{e.isTraining=!1,dg(s,t),dg(a,n),dg(l,i),dg(u,o),null!=h&&Zs(h)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(p(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),p(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),p(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),p(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),p(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(ig(n.validationData))p(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new ad("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=mf(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:f}=yf(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,u);d.setModel(e),e.history=f,await d.onTrainBegin(),e.stopTraining_=!1;let g=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;g<n.epochs;){const u={};await d.onEpochBegin(g);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=sg(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await d.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=tg(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await ng(s[e],null,t[e]))}const u=r.concat(s).concat(i),p=o(u);Zs(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];a[t]=n,Qs(n)}await d.onBatchEnd(h,a),uf(a),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=ig(n.validationData)?dd(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):dd(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(g,u),g++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return Zs(a),hd(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Ys().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Ys().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=pd(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>pd(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=pd(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[pd(zf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>pd(zf(e))));{const e={};for(const t in this.metrics)e[t]=pd(zf(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=xf(jf(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=fd(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>fd(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=fd(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>fd(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=fd(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,Xr.getSaveHandlers(n));if(0===t.length)throw new sd(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new sd(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new sd("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await Vr(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v2.8.6",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await Vr(await this.optimizer.getWeights(),e);r.specs.push(...n),r.data=qr([r.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Bf(this.userDefinedMetadata,this.name,e),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=r.data,s.weightSpecs=r.specs,e.save(s)}setUserDefinedMetadata(e){Bf(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}bg.className="Model",qs(bg);class yg extends bg{}yg.className="Functional",qs(yg);class xg extends bg{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Gp("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new sd(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof xg||e instanceof bg;let n;if(t){if(n=e,1!==n.outputs.length)throw new sd("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new sd("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new sd("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new sd("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new of({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new sd(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new sd("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=af(this.outputs[0])}this.inboundNodes=[],new nf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ld(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Kp(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new bg({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new rd("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new rd("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new rd("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new rd("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new sd("Legacy serialization format not supported yet.");s=t}else p(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof xg))throw new ad(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of s){const t=xf(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new sd("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new sd("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}xg.className="Sequential",qs(xg);class vg extends js{getConfig(){return{}}}class wg extends vg{apply(e,t=1){return function(e,t=1){if(1!==t)throw new ad(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Va(e)}(e,t)}}wg.className="elu",qs(wg);class kg extends vg{apply(e){return Ui(e)}}kg.className="selu",qs(kg);class Ig extends vg{apply(e){return Pi(e)}}Ig.className="relu",qs(Ig);class Cg extends vg{apply(e){return Js((()=>mi(6,Pi(e))))}}Cg.className="relu6",qs(Cg);class Ng extends vg{apply(e){return e}}Ng.className="linear",qs(Ng);class $g extends vg{apply(e){return Gi(e)}}$g.className="sigmoid",qs($g);class Sg extends vg{apply(e){return function(e){return Js((()=>{const t=aa(.5,ii(.2,e));return Ta(t,0,1)}))}(e)}}Sg.className="hardSigmoid",qs(Sg);class Eg extends vg{apply(e){return Ji(e)}}Eg.className="softplus",qs(Eg);class Tg extends vg{apply(e){return function(e){return Js((()=>Ua(e,sa(e).add(1))))}(e)}}Tg.className="softsign",qs(Tg);class Ag extends vg{apply(e){return no(e)}}Ag.className="tanh",qs(Ag);class Rg extends vg{apply(e,t=-1){return Yi(e,t)}}Rg.className="softmax",qs(Rg);class Fg extends vg{apply(e,t=-1){return ui(e,t)}}Fg.className="logSoftmax",qs(Fg);class _g extends vg{apply(e,t=1){return Js((()=>Gi(e.mul(t)).mul(e)))}}function Dg(e){return e.getClassName()}function Lg(e,t={}){return yd(e,Hs.getMap().classNameMap,t,"activation")}function Og(e){if(null==e){return Lg({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},Lg(t)}return e instanceof vg?e:Lg(e)}_g.className="swish",qs(_g);class Mg extends js{}class zg extends Mg{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Js((()=>{let t=Ai([1]);return this.hasL1&&(t=aa(t,li(ii(this.l1,sa(e))))),this.hasL2&&(t=aa(t,li(ii(this.l2,fp(e))))),t.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}zg.className="L1L2",qs(zg);const Bg={l1l2:"L1L2"};function Pg(e){return md(e)}function Wg(e,t={}){return yd(e,Hs.getMap().classNameMap,t,"regularizer")}function Ug(e){return null==e?null:"string"==typeof e?Wg({className:e in Bg?Bg[e]:e,config:{}}):e instanceof Mg?e:Wg(e)}class Vg extends sf{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=qp(e);let n=Pi(e);return null!=this.maxValue&&(n=Ta(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Vg.className="ReLU",qs(Vg);class Gg extends sf{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=qp(e);return ni(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Gg.className="LeakyReLU",qs(Gg);class jg extends sf{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Pp(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ug(e.alphaRegularizer),this.alphaConstraint=Od(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new sd(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Kp(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Qp({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=qp(e),Di(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Bp(this.alphaInitializer),alphaRegularizer:Pg(this.alphaRegularizer),alphaConstraint:Dd(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}jg.className="PReLU",qs(jg);class Hg extends sf{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new ad(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=qp(e);return Va(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Hg.className="ELU",qs(Hg);class qg extends sf{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=qp(e);return n.mul(rp(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}qg.className="ThresholdedReLU",qs(qg);class Kg extends sf{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Rg).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=qp(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Xg(e,t,n){if("number"==typeof e)return ld(e,t);if(e.length!==t)throw new sd(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new sd(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var r}function Yg(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function Jg(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+tp([n-t,0]);else{if("same"!==r)throw new sd(`Unsupport padding mode: ${r}.`);e*=t}return e}function Zg(e,t){return Js((()=>(Vd(t),"channelsFirst"===t?uo(e,[0,2,3,1]):e)))}function Qg(e,t){return Js((()=>(Vd(t),"channelsFirst"===t?uo(e,[0,2,3,4,1]):e)))}function em(e,t,n,r=[1,1],s="valid",a,i,o=null){return Js((()=>{if(null==a&&(a="channelsLast"),Vd(a),3!==e.rank&&4!==e.rank)throw new sd(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new sd(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Zg(e,a);if("causal"===s)throw new ad("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=No({x:l,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=uo(l,[0,3,1,2])),l}))}Kg.className="Softmax",qs(Kg);class tm extends sf{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",tm.verifyArgs(t),this.rank=e,Cd(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new ad(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Xg(t.kernelSize,e,"kernelSize"),this.strides=Xg(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Gd(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Vd(this.dataFormat),this.activation=Og(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Pp(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Od(t.biasConstraint),this.biasRegularizer=Ug(t.biasRegularizer),this.activityRegularizer=Ug(t.activityRegularizer),this.dilationRate=Xg(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new sd(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new sd(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new sd(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(ud("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Id(e.kernelSize,"number",1,3))throw new sd(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Dg(this.activation),useBias:this.useBias,biasInitializer:Bp(this.biasInitializer),biasRegularizer:Pg(this.biasRegularizer),activityRegularizer:Pg(this.activityRegularizer),biasConstraint:Dd(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class nm extends tm{constructor(e,t){super(e,t),this.kernel=null,nm.verifyArgs(t),this.filters=t.filters,Cd(this.filters,"filters"),this.kernelInitializer=Pp(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Od(t.kernelConstraint),this.kernelRegularizer=Ug(t.kernelRegularizer)}build(e){e=Kp(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new sd(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Js((()=>{let t;e=qp(e);const n=null==this.bias?null:this.bias.read(),r=$d(this.activation.getClassName());if(null!=r&&2===this.rank)t=em(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",a,i=1){return Js((()=>{if(null==a&&(a="channelsLast"),Vd(a),3!==e.shape.length)throw new sd(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new sd(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new sd(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=uo(e,[0,2,1])),"causal"===s)throw new ad("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Oa(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=mp(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=em(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new ad("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",a,i){return Js((()=>{if(null==a&&(a="channelsLast"),Vd(a),4!==e.rank&&5!==e.rank)throw new sd(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new sd(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Qg(e,a);if("causal"===s)throw new ad("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Ba(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=mp(o,n)),"channelsFirst"===a&&(o=uo(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Kp(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=Yg(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Bp(this.kernelInitializer),kernelRegularizer:Pg(this.kernelRegularizer),kernelConstraint:Dd(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new sd(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class rm extends nm{constructor(e){super(2,e),rm.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Id(e.kernelSize,"number",1,2))throw new sd(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}rm.className="Conv2D",qs(rm);class sm extends nm{constructor(e){super(3,e),sm.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new sd(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}sm.className="Conv3D",qs(sm);class am extends rm{constructor(e){if(super(e),this.inputSpec=[new Qp({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new sd(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Kp(e)).length)throw new sd("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new sd("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Qp({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Js((()=>{let t=qp(e);if(4!==t.shape.length)throw new sd(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,Jg(i,c,l,this.padding),Jg(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=uo(t,[0,2,3,1]));let p=za(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=uo(p,[0,3,1,2])),null!=this.bias&&(p=mp(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=Kp(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=Jg(t[r],o,a,this.padding),t[s]=Jg(t[s],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}am.className="Conv2DTranspose",qs(am);class im extends nm{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new sd("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new sd("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new sd(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Pp(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ug(t.depthwiseRegularizer),this.depthwiseConstraint=Od(t.depthwiseConstraint),this.pointwiseInitializer=Pp(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ug(t.pointwiseRegularizer),this.pointwiseConstraint=Od(t.pointwiseConstraint)}build(e){if((e=Kp(e)).length<this.rank+2)throw new sd(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new sd(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Qp({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Js((()=>{let t;if(e=qp(e),1===this.rank)throw new ad("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=uo(e,[0,2,3,1])),t=Vi(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=mp(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=uo(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Bp(this.depthwiseInitializer),e.pointwiseInitializer=Bp(this.pointwiseInitializer),e.depthwiseRegularizer=Pg(this.depthwiseRegularizer),e.pointwiseRegularizer=Pg(this.pointwiseRegularizer),e.depthwiseConstraint=Dd(this.depthwiseConstraint),e.pointwiseConstraint=Dd(this.pointwiseConstraint),e}}im.className="SeparableConv";class om extends im{constructor(e){super(2,e)}}om.className="SeparableConv2D",qs(om);class lm extends nm{constructor(e){super(1,e),lm.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Id(e.kernelSize,"number",1,1))throw new sd(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}lm.className="Conv1D",qs(lm);class um extends sf{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Js((()=>{if(e=qp(e),"channelsLast"===this.dataFormat){const t=op(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return op(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=op(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return op(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}um.className="Cropping2D",qs(um);class cm extends sf{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Vd(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,kd(zd,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Js((()=>{let t=qp(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=uo(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r]);return uo(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}cm.className="UpSampling2D",qs(cm);class hm extends tm{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Pp(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Od(e.depthwiseConstraint),this.depthwiseRegularizer=Ug(e.depthwiseRegularizer)}build(e){if((e=Kp(e)).length<4)throw new sd(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new sd(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Js((()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return Js((()=>{null==s&&(s="channelsLast"),Vd(s);let i=Zg(e,s);if(4!==e.rank)throw new sd(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new sd(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Pa(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=uo(i,[0,3,1,2])),i}))}(e=qp(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=mp(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Kp(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=Yg(t,this.kernelSize[0],this.padding,this.strides[0]),a=Yg(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Bp(this.depthwiseInitializer),e.depthwiseRegularizer=Pg(this.depthwiseRegularizer),e.depthwiseConstraint=Dd(this.depthwiseRegularizer),e}}function dm(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new sd("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function pm(e,t,n,r=!1,s,a,i=!1,o=!1){return Js((()=>{const l=t.shape.length;if(l<3)throw new sd(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(np(2,l));if(t=uo(t,u),null!=a)throw new ad("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===l-1&&(s=Ka(s,-1)),s=uo(s,u)),r&&(t=Wi(t,0),null!=s&&(s=Wi(s,0)));const c=[];let h,d=n;const p=t.shape[0],f=ao(t);let g,m;null!=s&&(g=ao(s));for(let t=0;t<p;++t){const n=f[t],r=Js((()=>e(n,d)));if(null==s)h=r[0],d=r[1];else{const e=Js((()=>{const e=g[t],n=Fi(e).sub(e);return{output:r[0].mul(e).add(d[0].mul(n)),newStates:d.map(((t,s)=>r[1][s].mul(e).add(t.mul(n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}return o&&(m=to(c,1)),[h,m,d]}))}hm.className="DepthwiseConv2D",qs(hm);class fm extends sf{constructor(e){let t;if(super(e),null==e.cell)throw new sd("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new km({cells:e.cell}):e.cell,null==t.stateSize)throw new sd("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Qp({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?np(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){jp(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return Js((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new ad("Constants support is not implemented in RNN yet.");jp(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Qp({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!y(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new sd(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new Qp({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Js((()=>{if(!this.stateful)throw new nd("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new sd("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Ai([n,e]))):this.states_=[Ai([n,this.cell.stateSize])];else if(null==e)Zs(this.states_),null!=this.keptStates&&(Zs(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Ai([n,e]))):this.states_[0]=Ai([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new sd(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Zs(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!y(r.shape,a))throw new sd(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>Qs(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=dm(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Qp({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof ef){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Js((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=qp(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new sd(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=pm(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return Js((()=>{let t=Ai(e.shape);return t=li(t,[1,2]),t=sp(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?cp(t,[1,e]):t)):this.cell.stateSize>1?[cp(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===fm.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=xf(t.cell,n);return new e(Object.assign(t,{cell:r}))}}fm.className="RNN",qs(fm);class gm extends sf{}class mm extends gm{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Cd(this.units,"units"),this.activation=Og(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Pp(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Pp(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Pp(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ug(e.kernelRegularizer),this.recurrentRegularizer=Ug(e.recurrentRegularizer),this.biasRegularizer=Ug(e.biasRegularizer),this.kernelConstraint=Od(e.kernelConstraint),this.recurrentConstraint=Od(e.recurrentConstraint),this.biasConstraint=Od(e.biasConstraint),this.dropout=ep([1,tp([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ep([1,tp([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Kp(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Js((()=>{if(2!==e.length)throw new sd(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Im({ones:()=>Fi(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Im({ones:()=>Fi(n),rate:this.recurrentDropout,training:r}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=dp(null!=a?ii(e,a):e,this.kernel.read()),null!=this.bias&&(s=mp(s,this.bias.read())),null!=i&&(n=ii(n,i));let o=aa(s,dp(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Dg(this.activation),useBias:this.useBias,kernelInitializer:Bp(this.kernelInitializer),recurrentInitializer:Bp(this.recurrentInitializer),biasInitializer:Bp(this.biasInitializer),kernelRegularizer:Pg(this.kernelRegularizer),recurrentRegularizer:Pg(this.recurrentRegularizer),biasRegularizer:Pg(this.biasRegularizer),activityRegularizer:Pg(this.activityRegularizer),kernelConstraint:Dd(this.kernelConstraint),recurrentConstraint:Dd(this.recurrentConstraint),biasConstraint:Dd(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}mm.className="SimpleRNNCell",qs(mm);class bm extends fm{constructor(e){e.cell=new mm(e),super(e)}call(e,t){return Js((()=>{null!=this.cell.dropoutMask&&(Zs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Zs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}bm.className="SimpleRNN",qs(bm);class ym extends gm{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new sd("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Cd(this.units,"units"),this.activation=Og(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Og(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Pp(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Pp(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Pp(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ug(e.kernelRegularizer),this.recurrentRegularizer=Ug(e.recurrentRegularizer),this.biasRegularizer=Ug(e.biasRegularizer),this.kernelConstraint=Od(e.kernelConstraint),this.recurrentConstraint=Od(e.recurrentConstraint),this.biasConstraint=Od(e.biasConstraint),this.dropout=ep([1,tp([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ep([1,tp([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Kp(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Js((()=>{if(2!==e.length)throw new sd(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Im({ones:()=>Fi(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Im({ones:()=>Fi(r),rate:this.recurrentDropout,training:n,count:3}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=ii(e,s[0]));let u=dp(e,this.kernel.read());this.useBias&&(u=mp(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=ii(r,a[0]));const c=this.recurrentKernel.read(),[h,d]=Zi(c,[2*this.units,this.units],c.rank-1),p=dp(r,h),[f,g,m]=Zi(u,3,u.rank-1),[b,y]=Zi(p,2,p.rank-1);i=this.recurrentActivation.apply(aa(f,b)),o=this.recurrentActivation.apply(aa(g,y));const x=dp(ii(o,r),d);l=this.activation.apply(aa(m,x));const v=aa(ii(i,r),ii(aa(1,Si(i)),l));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Dg(this.activation),recurrentActivation:Dg(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Bp(this.kernelInitializer),recurrentInitializer:Bp(this.recurrentInitializer),biasInitializer:Bp(this.biasInitializer),kernelRegularizer:Pg(this.kernelRegularizer),recurrentRegularizer:Pg(this.recurrentRegularizer),biasRegularizer:Pg(this.biasRegularizer),activityRegularizer:Pg(this.activityRegularizer),kernelConstraint:Dd(this.kernelConstraint),recurrentConstraint:Dd(this.recurrentConstraint),biasConstraint:Dd(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}ym.className="GRUCell",qs(ym);class xm extends fm{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new ym(e),super(e)}call(e,t){return Js((()=>{null!=this.cell.dropoutMask&&(Zs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Zs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}xm.className="GRU",qs(xm);class vm extends gm{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Cd(this.units,"units"),this.activation=Og(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Og(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Pp(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Pp(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Pp(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Ug(e.kernelRegularizer),this.recurrentRegularizer=Ug(e.recurrentRegularizer),this.biasRegularizer=Ug(e.biasRegularizer),this.kernelConstraint=Od(e.kernelConstraint),this.recurrentConstraint=Od(e.recurrentConstraint),this.biasConstraint=Od(e.biasConstraint),this.dropout=ep([1,tp([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ep([1,tp([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Kp(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends wp{apply(t,r){const s=e.apply([n]),a=(new Ip).apply([n]),i=e.apply([2*n]);return up(up(s,a),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Js((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new sd(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Im({ones:()=>Fi(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Im({ones:()=>Fi(r),rate:this.recurrentDropout,training:n,count:4}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=ii(e,a[0]));let h=dp(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=ii(r,i[0])),h=aa(h,dp(r,this.recurrentKernel.read())),this.useBias&&(h=mp(h,this.bias.read()));const[d,p,f,g]=Zi(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=aa(ii(l,s),ii(o,this.activation.apply(f))),c=this.recurrentActivation.apply(g);const m=ii(c,this.activation.apply(u));return[m,m,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Dg(this.activation),recurrentActivation:Dg(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Bp(this.kernelInitializer),recurrentInitializer:Bp(this.recurrentInitializer),biasInitializer:Bp(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Pg(this.kernelRegularizer),recurrentRegularizer:Pg(this.recurrentRegularizer),biasRegularizer:Pg(this.biasRegularizer),activityRegularizer:Pg(this.activityRegularizer),kernelConstraint:Dd(this.kernelConstraint),recurrentConstraint:Dd(this.recurrentConstraint),biasConstraint:Dd(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}vm.className="LSTMCell",qs(vm);class wm extends fm{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new vm(e),super(e)}call(e,t){return Js((()=>{null!=this.cell.dropoutMask&&(Zs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Zs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}wm.className="LSTM",qs(wm);class km extends gm{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Js((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;jp(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{qd(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(xf(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Jp(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}Zp(t)}}function Im(e){const{ones:t,rate:n,training:r=!1,count:s=1}=e,a=()=>bp(t(),n),i=()=>yp(a,t,r);return!s||s<=1?Qs(i().clone()):Array(s).fill(void 0).map(i).map((e=>Qs(e.clone())))}km.className="StackedRNNCells",qs(km);var Cm,Nm;class $m extends fm{constructor(e){if(e.unroll)throw new ad("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ad("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Qp({ndim:5})]}call(e,t){return Js((()=>{if(null!=this.cell.dropoutMask&&(Zs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Zs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new sd("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Js((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=Ai([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){Js((()=>{if(!this.stateful)throw new nd("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new sd("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Ai(s))):this.states_=[Ai(s)];else if(null==e)Zs(this.states_),null!=this.keptStates&&(Zs(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Ai(s))):this.states_[0]=Ai(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new sd(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Zs(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!y(n.shape,r))throw new sd(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Qs(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=Yg(l,r[0],s,a[0],i[0]),h=Yg(u,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}$m.className="ConvRNN2D";class Sm extends vm{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,Cd(this.filters,"filters"),this.kernelSize=Xg(n,2,"kernelSize"),this.kernelSize.forEach((e=>Cd(e,"kernelSize"))),this.strides=Xg(r||1,2,"strides"),this.strides.forEach((e=>Cd(e,"strides"))),this.padding=s||"valid",Gd(this.padding),this.dataFormat=a||"channelsLast",Vd(this.dataFormat),this.dilationRate=Xg(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Cd(e,"dilationRate")))}build(e){var t;e=Kp(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new sd(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends wp{apply(e,t){return lp([n.apply([r]),Ri([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Js((()=>{if(3!==e.length)throw new sd(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Im({ones:()=>Fi(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?ii(t[n],e):e;let l=o(r,i,0),u=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Im({ones:()=>Fi(s),rate:this.recurrentDropout,training:n,count:4}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),g=o(s,d,2),m=o(s,d,3);const[b,y,x,v]=Zi(this.kernel.read(),4,3),[w,k,I,C]=this.useBias?Zi(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,w,this.padding),u=this.inputConv(u,y,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,v,C,this.padding);const[N,$,S,E]=Zi(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,N),f=this.recurrentConv(f,$),g=this.recurrentConv(g,S),m=this.recurrentConv(m,E);const T=this.recurrentActivation.apply(aa(l,p)),A=this.recurrentActivation.apply(aa(u,f)),R=aa(ii(A,a),ii(T,this.activation.apply(aa(c,g)))),F=ii(this.recurrentActivation.apply(aa(h,m)),this.activation.apply(R));return[F,F,R]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const s=La(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?mp(s,n,this.dataFormat):s}recurrentConv(e,t){return La(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Sm.className="ConvLSTM2DCell",qs(Sm);class Em extends $m{constructor(e){const t=new Sm(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}Em.className="ConvLSTM2D",qs(Em);class Tm extends sf{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Js((()=>{this.invokeCallHook(e,t);const n=qp(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return yp((()=>bp(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Tm.className="Dropout",qs(Tm);class Am extends Tm{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Am.className="SpatialDropout1D",qs(Am);class Rm extends sf{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Cd(this.units,"units"),this.activation=Og(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Pp(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Pp(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Od(e.kernelConstraint),this.biasConstraint=Od(e.biasConstraint),this.kernelRegularizer=Ug(e.kernelRegularizer),this.biasRegularizer=Ug(e.biasRegularizer),this.activityRegularizer=Ug(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Kp(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Kp(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Js((()=>{this.invokeCallHook(e,t);const n=qp(e),r=$d(this.activation.getClassName());let s;return null!=r?s=dp(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=dp(n,this.kernel.read()),null!=this.bias&&(s=mp(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:Dg(this.activation),useBias:this.useBias,kernelInitializer:Bp(this.kernelInitializer),biasInitializer:Bp(this.biasInitializer),kernelRegularizer:Pg(this.kernelRegularizer),biasRegularizer:Pg(this.biasRegularizer),activityRegularizer:Pg(this.activityRegularizer),kernelConstraint:Dd(this.kernelConstraint),biasConstraint:Dd(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Rm.className="Dense",qs(Rm);class Fm extends sf{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Kp(e);for(const t of e.slice(1))if(null==t)throw new sd(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Zd(e,1)]}call(e,t){return Js((()=>{this.invokeCallHook(e,t);let n=qp(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new sd(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Zd(e.shape,1)];return e.reshape(t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Fm.className="Flatten",qs(Fm);class _m extends sf{constructor(e){super(e),this.supportsMasking=!0,this.activation=Og(e.activation)}call(e,t){return Js((()=>{this.invokeCallHook(e,t);const n=qp(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Dg(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}_m.className="Activation",qs(_m);class Dm extends sf{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Js((()=>{return e=qp(e),t=e,n=this.n,Js((()=>{if(2!==t.shape.length)throw new sd(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return cp(sp(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Dm.className="RepeatVector",qs(Dm);class Lm extends sf{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==a)throw new sd("Can only specifiy one unknown dimension.");a=e}else s*=t}const i=Zd(e);if(null!==a){if(0===s||i%s!=0)throw new sd(n);r[a]=i/s}else if(i!==s)throw new sd(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Js((()=>{this.invokeCallHook(e,t);const n=qp(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Lm.className="Reshape",qs(Lm);class Om extends sf{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=np(1,e.dims.length+1);if(!y(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Qp({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Kp(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return uo(qp(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Om.className="Permute",qs(Om);class Mm extends sf{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=qp(e);return oa(Ei(n,this.maskValue),-1)}call(e,t){return Js((()=>{this.invokeCallHook(e,t);const n=qp(e),r=oa(Ei(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}}Mm.className="Masking",qs(Mm);class zm extends sf{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(dd(e.inputLength))}this.inputDim=e.inputDim,Cd(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Cd(this.outputDim,"outputDim"),this.embeddingsInitializer=Pp(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ug(e.embeddingsRegularizer),this.activityRegularizer=Ug(e.activityRegularizer),this.embeddingsConstraint=Od(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Js((()=>this.maskZero?(e=qp(e),Ei(e,lo(e))):null))}computeOutputShape(e){if(e=Kp(e),null==this.inputLength)return[...e,this.outputDim];const t=dd(this.inputLength);if(t.length!==e.length-1)throw new sd(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new sd(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Js((()=>{this.invokeCallHook(e,t);let n=qp(e);return"int32"!==n.dtype&&(n=rp(n,"int32")),pp(this.embeddings.read(),n.as1D()).reshape(Kp(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Bp(this.embeddingsInitializer),embeddingsRegularizer:Pg(this.embeddingsRegularizer),activityRegularizer:Pg(this.activityRegularizer),embeddingsConstraint:Dd(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}zm.className="Embedding",qs(zm);class Bm extends sf{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new ad}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new sd("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Kp(e)]),e.length<2)throw new sd(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=vd(t),t.length>1)throw new sd(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===vd(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Js((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=tp(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=sp(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],a=e.slice(1).concat([s]);let i=r.reshape([s].concat(Zd(e.slice(1))));i=uo(i,[1,0]),i=i.reshape(a),t.push(i),n=!0}else if(e>1){const s=np(1,e).concat([0]);t.push(uo(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=uo(r.reshape([-1,t]),[1,0]).reshape(n)}else if(s>1){const e=[s-1].concat(np(0,s-1));r=uo(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=vd(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Js((()=>{if(null==t)return null;if(!Array.isArray(t))throw new sd("`mask` should be an Array");if(!Array.isArray(e))throw new sd("`inputs` should be an Array");if(t.length!==e.length)throw new sd(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Ka(e,0))))[0];for(let e=1;e<t.length-1;++e)n=ci(n,t[e]);return n}))}}class Pm extends Bm{constructor(e){super(e)}mergeFunction(e){return Js((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=aa(t,e[n]);return t}))}}Pm.className="Add",qs(Pm);class Wm extends Bm{constructor(e){super(e)}mergeFunction(e){return Js((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ii(t,e[n]);return t}))}}Wm.className="Multiply",qs(Wm);class Um extends Bm{constructor(e){super(e)}mergeFunction(e){return Js((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=aa(t,e[n]);return ii(1/e.length,t)}))}}Um.className="Average",qs(Um);class Vm extends Bm{constructor(e){super(e)}mergeFunction(e){return Js((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=pi(t,e[n]);return t}))}}Vm.className="Maximum",qs(Vm);class Gm extends Bm{constructor(e){super(e)}mergeFunction(e){return Js((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=mi(t,e[n]);return t}))}}Gm.className="Minimum",qs(Gm);class jm extends Bm{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new sd("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(y(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new sd("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Js((()=>lp(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new sd("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new sd("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new sd("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new sd(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Js((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(Fi(e[n]).asType("bool")):t[n].rank<e[n].rank?r.push(Ka(t[n],-1)):r.push(t[n]);const s=Aa(r,this.axis);return ia(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Hm(e,t){for(;e<0;)e+=t;return e}jm.className="Concatenate",qs(jm);class qm extends Bm{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){p(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new ad("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new sd(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new sd(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Hm(t,e[n].shape.length))):[Hm(this.axes,n.shape.length),Hm(this.axes,r.shape.length)],this.normalize&&(n=vf(n,t[0]),r=vf(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new ad("batchDot is not implemented for tensors of 4D or higher rank yet");if(p(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),p(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new ad("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return Js((()=>{let n,i;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?e.mul(t).sum(a[0]):e.transpose([1,0]).mul(t).sum(a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;i=e.matMul(t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=i.squeeze(t)}return 1===i.shape.length&&(i=i.expandDims(1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Hm(this.axes,e.length),Hm(this.axes,t.length)],n}computeOutputShape(e){p(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new ad("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}qm.className="Dot",qs(qm);class Km extends sf{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Js((()=>{this.invokeCallHook(e,t);const n=qp(e);return yp((()=>hp(n.shape,0,this.stddev).add(n)),(()=>n),t.training||!1)}))}}Km.className="GaussianNoise",qs(Km);class Xm extends sf{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Js((()=>{this.invokeCallHook(e,t);const n=qp(e);return this.rate>0&&this.rate<1?yp((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(hp(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}Xm.className="GaussianDropout",qs(Xm);class Ym extends sf{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||qp(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Js((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return yp((()=>{const t=qp(e),r=-1.7580993408473766;let s=ti(Bi(n),this.rate);s=rp(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate;return t.mul(s).add(s.add(-1).mul(r)).mul(a).add(i)}),(()=>qp(e)),t.training||!1)}return e}))}}function Jm(e,t,n,r,s,a=.001){let i;if(2===e.rank)i=$a(e,t,n,r,s,a);else if(3===e.rank)i=Sa(e,t,n,r,s,a);else{if(4!==e.rank)throw new ad(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Ea(e,t,n,r,s,a)}return i}Ym.className="AlphaDropout",qs(Ym);class Zm extends sf{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Pp(e.betaInitializer||"zeros"),this.gammaInitializer=Pp(e.gammaInitializer||"ones"),this.movingMeanInitializer=Pp(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Pp(e.movingVarianceInitializer||"ones"),this.betaConstraint=Od(e.betaConstraint),this.gammaConstraint=Od(e.gammaConstraint),this.betaRegularizer=Ug(e.betaRegularizer),this.gammaRegularizer=Ug(e.gammaRegularizer)}build(e){e=Kp(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new sd(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Qp({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Js((()=>{const n=null!=t.training&&t.training,r=qp(e),s=r.shape,a=s.length,i=np(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=ld(1,a);l[o]=s[o];const u=i.slice();u.sort();const c=!y(u,np(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=this.movingMean.read().reshape(l),t=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,s=this.scale?this.gamma.read().reshape(l):null;return Jm(r,e,t,n,s,this.epsilon)}return Jm(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,r,s=.001){return y(r.slice().sort(),np(0,e.rank-1))?function(e,t,n,r,s=.001){return Js((()=>{const a=$i(e,r),i=a.mean,o=a.variance;return[Jm(e,i,o,n,t,s),i,o]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return Js((()=>{const a=$i(e,r),i=a.mean,o=a.variance,l=[];for(const t of np(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=i.reshape(l),c=o.reshape(l),h=null==t?null:t.reshape(l),d=null==n?null:n.reshape(l);return[Jm(e,u,c,d,h,s),i,o]}))}(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{Js((()=>{const r=1-n,s=e.read(),a=s.sub(t).mul(r);e.write(s.sub(a))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Bp(this.betaInitializer),gammaInitializer:Bp(this.gammaInitializer),movingMeanInitializer:Bp(this.movingMeanInitializer),movingVarianceInitializer:Bp(this.movingVarianceInitializer),betaRegularizer:Pg(this.betaRegularizer),gammaRegularizer:Pg(this.gammaRegularizer),betaConstraint:Dd(this.betaConstraint),gammaConstraint:Dd(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Zm.className="BatchNormalization",qs(Zm);class Qm extends sf{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Pp(e.betaInitializer||"zeros"),this.gammaInitializer=Pp(e.gammaInitializer||"ones"),this.betaRegularizer=Ug(e.betaRegularizer),this.gammaRegularizer=Ug(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Kp(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==vd(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=qp(e),r=n.shape,s=r.length;return Js((()=>{let{mean:e,variance:t}=$i(n,this.axis,!0);const a=ld(1,s);for(const e of this.axis)a[e]=r[e];const i=e=>null!=e&&e.shape.length!==s&&this.axis!==[s-1]?e.reshape(a):e;let o=i(this.gamma.read()),l=i(this.beta.read());const u=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),c.push(1)):(u.push(1),c.push(r[e]));return e=e.tile(u),t=t.tile(u),o=o.tile(c),l=l.tile(c),Jm(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Bp(this.betaInitializer),gammaInitializer:Bp(this.gammaInitializer),betaRegularizer:Pg(this.betaRegularizer),gammaRegularizer:Pg(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Qm.className="LayerNormalization",qs(Qm);class eb extends sf{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new sd(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new sd(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new sd(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Qp({ndim:4})]}computeOutputShape(e){let t,n;return e=Kp(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Js((()=>{return t=qp(e),n=this.padding,r=this.dataFormat,Js((()=>{if(4!==t.rank)throw new sd(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new sd("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new sd(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],_i(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function tb(e,t,n,r,s,a){return Js((()=>{let i;Vd(s),jd(a),Gd(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Zg(e,s);const o="same"===r?"same":"valid";return i="max"===a?hi(e,t,n,o):Ia(e,t,n,o),"channelsFirst"===s&&(i=uo(i,[0,3,1,2])),i}))}function nb(e,t,n,r,s,a){return Js((()=>{let i;Vd(s),jd(a),Gd(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Qg(e,s);const o="same"===r?"same":"valid";return i="max"===a?di(e,t,n,o):Ca(e,t,n,o),"channelsFirst"===s&&(i=uo(i,[0,4,1,2,3])),i}))}eb.className="ZeroPadding2D",qs(eb);class rb extends sf{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new sd(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Cd(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new sd(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Cd(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Gd(this.padding),this.inputSpec=[new Qp({ndim:3})]}computeOutputShape(e){const t=Yg((e=Kp(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Js((()=>{this.invokeCallHook(e,t),e=sp(qp(e),2);const n=this.poolingFunction(qp(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return eo(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class sb extends rb{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Vd(s),Gd(r),tb(e,t,n,r,s,"max")}}sb.className="MaxPooling1D",qs(sb);class ab extends rb{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Vd(s),Gd(r),tb(e,t,n,r,s,"avg")}}ab.className="AveragePooling1D",qs(ab);class ib extends sf{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new sd(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Cd(this.poolSize,"poolSize"),Cd(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Vd(this.dataFormat),Gd(this.padding),this.inputSpec=[new Qp({ndim:4})]}computeOutputShape(e){e=Kp(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Yg(t,this.poolSize[0],this.padding,this.strides[0]),n=Yg(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Js((()=>(this.invokeCallHook(e,t),this.poolingFunction(qp(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class ob extends ib{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Vd(s),Gd(r),tb(e,t,n,r,s,"max")}}ob.className="MaxPooling2D",qs(ob);class lb extends ib{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Vd(s),Gd(r),tb(e,t,n,r,s,"avg")}}lb.className="AveragePooling2D",qs(lb);class ub extends sf{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new sd(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Cd(this.poolSize,"poolSize"),Cd(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Vd(this.dataFormat),Gd(this.padding),this.inputSpec=[new Qp({ndim:5})]}computeOutputShape(e){e=Kp(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Yg(t,this.poolSize[0],this.padding,this.strides[0]),n=Yg(n,this.poolSize[1],this.padding,this.strides[1]),r=Yg(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Js((()=>(this.invokeCallHook(e,t),this.poolingFunction(qp(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class cb extends ub{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Vd(s),Gd(r),nb(e,t,n,r,s,"max")}}cb.className="MaxPooling3D",qs(cb);class hb extends ub{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Vd(s),Gd(r),nb(e,t,n,r,s,"avg")}}hb.className="AveragePooling3D",qs(hb);class db extends sf{constructor(e){super(e),this.inputSpec=[new Qp({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new ad}}class pb extends db{constructor(e){super(e||{})}call(e,t){return Js((()=>{const t=qp(e);return fi(t,1)}))}}pb.className="GlobalAveragePooling1D",qs(pb);class fb extends db{constructor(e){super(e||{})}call(e,t){return Js((()=>{const t=qp(e);return ai(t,1)}))}}fb.className="GlobalMaxPooling1D",qs(fb);class gb extends sf{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Vd(this.dataFormat),this.inputSpec=[new Qp({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new ad}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class mb extends gb{call(e,t){return Js((()=>{const t=qp(e);return"channelsLast"===this.dataFormat?fi(t,[1,2]):fi(t,[2,3])}))}}mb.className="GlobalAveragePooling2D",qs(mb);class bb extends gb{call(e,t){return Js((()=>{const t=qp(e);return"channelsLast"===this.dataFormat?ai(t,[1,2]):ai(t,[2,3])}))}}bb.className="GlobalMaxPooling2D",qs(bb);class yb extends sf{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=xf(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class xb extends yb{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Kp(e)).length<3)throw new sd(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Kp(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Js((()=>pm(((e,n)=>[qp(this.layer.call(e,t)),[]]),e=qp(e),[],!1,null,null,!1,!0)[1]))}}xb.className="TimeDistributed",qs(xb);class vb extends yb{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=xf(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=xf(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,kd(Wd,"BidirectionalMergeMode",s),e.weights)throw new ad("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):hd(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=dm(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new sd("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new Qp({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new ad("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof ef;for(const e of a)if(e instanceof ef!==o)throw new sd("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Js((()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Wi(s,1)),"concat"===this.mergeMode?i=lp([r,s]):"sum"===this.mergeMode?i=aa(r,s):"ave"===this.mergeMode?i=ii(.5,aa(r,s)):"mul"===this.mergeMode?i=ii(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){qd(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),qd(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=xf(t.layer);if(delete t.layer,null!=t.numConstants)throw new ad("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}vb.className="Bidirectional",qs(vb),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(Cm||(Cm={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Nm||(Nm={}));var wb,kb,Ib=n(719);function Cb(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(Eb(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=Cb(e[a],t,n,r);s[a]=i}return r.delete(e),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function Nb(e,t=Sb){return $b(e,t)}function $b(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(Eb(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=$b(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function Sb(e){return null===e?null:Eb(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function Eb(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof fr))}function Tb(e){return Cb(e,Ab)}function Ab(e){return e instanceof fr?{value:e.clone(),recurse:!1}:Eb(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Rb{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Fb extends Rb{constructor(){super(Fb.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}Fb.INITIAL_CAPACITY=32;class _b{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Ub(this,e)}filter(e){return new Pb(this,e)}map(e){return new Wb(this,e)}mapAsync(e){return new Vb(this,e)}serialMapAsync(e){return new Vb(this,e).serial()}flatmap(e){return new jb(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new Bb(this,e,t)}columnMajorBatch(e,t=!0,n=Sb){return this.rowMajorBatch(e,t).map((e=>Nb(e,n)))}concatenate(e,t){return new Hb(new Db([this,e]),t)}take(e){return e<0||null==e?this:new zb(this,e)}skip(e){return e<0||null==e?this:new Mb(this,e)}prefetch(e){return new qb(this,e)}shuffle(e,t){return new Kb(this,e,t)}serial(){return new Ob(this)}}class Db extends _b{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:Tb(e),done:!1}}}class Lb extends _b{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class Ob extends _b{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Mb extends _b{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Zs(e.value)}return this.upstream.next()}}class zb extends _b{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Bb extends _b{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Pb extends _b{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Zs(e.value)}}}class Wb extends _b{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=$r(e.value),n=this.transform(e.value),r=$r(n);for(const e of t)Nr(e,r)||e.dispose();return{value:n,done:!1}}}class Ub extends _b{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Vb extends _b{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=$r(e.value),n=await this.transform(e.value),r=$r(n);for(const e of t)Nr(e,r)||e.dispose();return{value:n,done:!1}}}class Gb extends _b{constructor(){super(),this.outputQueue=new Fb,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class jb extends Gb{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=$r(e.value),n=this.transform(e.value),r=$r(n);this.outputQueue.pushAll(n);for(const e of t)Nr(e,r)||e.dispose();return!0}}class Hb extends _b{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(kb=wb||(wb={}))[kb.FAIL=0]="FAIL",kb[kb.SHORTEST=1]="SHORTEST",kb[kb.LONGEST=2]="LONGEST";class qb extends _b{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Rb(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Kb extends qb{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Ib.alea(n||or().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Xb{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return p(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Yb((async()=>(await n.iterator()).columnMajorBatch(e,t,Jb)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Yb((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Yb((async()=>(await t.iterator()).filter((t=>Js((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Yb((async()=>(await t.iterator()).map((t=>Js((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return Yb((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Yb((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Yb((async()=>{return n=(s=async()=>({value:await t.iterator(),done:!1}),new Lb(s)).take(e),new Hb(n,r);var n,r,s}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Yb((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Ib.alea(t||or().toString());return Yb((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Yb((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Yb(e,t=null){return new class extends Xb{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Jb(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof fr||T(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof fr?to(e):Ur(t=e,n,Lr(t,r),r);var t,n,r}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function Zb(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&p("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}Xb.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const Qb=su;class ey extends l{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new o(this,Xs())}write(e,t,n){this.firstUse&&(this.firstUse=!1,q().get("IS_NODE")&&Pl("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&R(n[0])){const s=n.map((e=>lr(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r){this.data.set(e,{values:t,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?Ul(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>ur(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return xs(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return Xs().makeTensorFromDataId(r,t,n,this)}disposeData(e){if(this.data.has(e)){const{complexTensorInfos:t}=this.data.get(e);null!=t&&(this.disposeData(t.real.dataId),this.disposeData(t.imag.dataId)),this.data.delete(e)}}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.data.has(t)){const e=this.data.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}async time(e){const t=or();return e(),{kernelMs:or()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Zb([e],"where");const t=this.readSync(e.dataId);return Qb(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function ty(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(Zb(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=b(i.shape),c=n||i.dtype,h=S(c,u);for(let e=0;e<u;++e)h[e]=t(l[e],s);return o.makeTensorInfo(i.shape,c,h)}}function ny(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(Zb(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=n||i.dtype,c=t(l,u,s);return o.makeTensorInfo(i.shape,u,c)}}ea("cpu",(()=>new ey),1);const ry=ty(je,(e=>e>=0?e:Math.exp(e)-1)),sy={kernelName:je,backendName:"cpu",kernelFunc:ry};function ay(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const iy={kernelName:lt,backendName:"cpu",kernelFunc:ay};function oy(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;Zb([s],"leakyRelu");const i=b(s.shape),o=n.data.get(s.dataId).values,l=$("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(s.shape,"float32",l)}const ly={kernelName:ft,backendName:"cpu",kernelFunc:oy};function uy(e){return(t,n,r,s,a)=>{const i=Ha(t,n),o=i.length,l=O(i),u=$(a,b(i)),c=t.length,h=n.length,d=O(t),p=O(n),f=Ga(t,i),g=Ga(n,i);if(f.length+g.length===0)for(let t=0;t<u.length;++t)u[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<u.length;++t){const n=G(t,o,l),a=n.slice(-c);f.forEach((e=>a[e]=0));const i=V(a,c,d),m=n.slice(-h);g.forEach((e=>m[e]=0));const b=V(m,h,p);u[t]=e(r[i],s[b])}return[u,i]}}const cy=uy(((e,t)=>e<0?t*e:e));function hy(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;Zb([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,l]=cy(r.shape,s.shape,a,i,r.dtype);return n.makeTensorInfo(l,r.dtype,o)}const dy={kernelName:Xt,backendName:"cpu",kernelFunc:hy},py=ty(en,(e=>Math.max(0,e))),fy={kernelName:en,backendName:"cpu",kernelFunc:py},gy=ty(on,(e=>Math.min(Math.max(0,e),6))),my={kernelName:on,backendName:"cpu",kernelFunc:gy};function by(e,t,n,r,s){if("linear"===n)return ay({inputs:{x:t},backend:e});if("relu"===n)return py({inputs:{x:t},backend:e});if("elu"===n)return ry({inputs:{x:t},backend:e});if("relu6"===n)return gy({inputs:{x:t},backend:e});if("prelu"===n)return hy({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return oy({inputs:{x:t},backend:e,attrs:{alpha:s}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function yy(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const xy={kernelName:ke,backendName:"cpu",kernelFunc:yy};function vy(e,t,n="float32"){if("complex64"===n)return yy({inputs:{real:vy(e,t,"float32"),imag:vy(e,t,"float32")},backend:e});const r=P(b(t),n);return e.makeTensorInfo(t,n,r)}function wy(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const ky={kernelName:Zt,backendName:"cpu",kernelFunc:wy};function Iy(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return ay({inputs:{x:s},backend:n});const e=vy(n,s.shape,s.dtype),t=Iy({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=yy({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=wy({inputs:{input:s},backend:n}),t=Iy({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!E(s.dtype,a)){const e=ay({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}if("int32"===a){const e=n.data.get(s.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(s.shape,"int32",t)}if("bool"===a){const e=n.data.get(s.dataId).values,t=ir([0],s.dtype),[r,a]=uy(((e,t)=>e!==t?1:0))(s.shape,[],e,t,"bool");return n.makeTensorInfo(a,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}const Cy={kernelName:xe,backendName:"cpu",kernelFunc:Iy};function Ny(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a,b:i}=n,o=s;Zb([a,i],e);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c=r||a.dtype,[h,d]=t(a.shape,i.shape,l,u,c);return o.makeTensorInfo(d,c,h)}:({inputs:e,backend:s})=>{const{a,b:i}=e,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const e=Iy({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(s.dataId).values,c=Iy({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,g=o.data.get(p.dataId).values,[m,b,y]=n(a.shape,i.shape,l,u,f,g),x=o.makeTensorInfo(y,"float32",m),v=o.makeTensorInfo(y,"float32",b),w=yy({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[l,u]=t(a.shape,i.shape,e,n,s);return o.makeTensorInfo(u,s,l)}}}function $y(e){return(t,n,r,s,a,i)=>{const o=Ha(t,n),l=b(o),u=o.length,c=O(o),h=$("float32",l),d=$("float32",l),p=Ga(t,o),f=Ga(n,o),g=Ul(r,s),m=Ul(a,i),y=t.length,x=O(t),v=n.length,w=O(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%g.length,r=t%m.length,s=e(g[2*n],g[2*n+1],m[2*r],m[2*r+1]);h[t]=s.real,d[t]=s.imag}else for(let t=0;t<h.length;t++){const n=G(t,u,c),r=n.slice(-y);p.forEach((e=>r[e]=0));const s=V(r,y,x),a=n.slice(-v);f.forEach((e=>a[e]=0));const i=V(a,v,w),o=e(g[2*s],g[2*s+1],m[2*i],m[2*i+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}const Sy=uy(((e,t)=>e+t)),Ey=$y(((e,t,n,r)=>({real:e+n,imag:t+r}))),Ty=Ny(te,Sy,Ey),Ay={kernelName:te,backendName:"cpu",kernelFunc:Ty};function Ry(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=b(s.shape),o=I(a,i),l=b(o);p(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const Fy={kernelName:tn,backendName:"cpu",kernelFunc:Ry};function _y(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;Zb([s,a],"matMul");const l=s.shape.length,u=a.shape.length,c=i?s.shape[l-2]:s.shape[l-1],h=o?a.shape[u-1]:a.shape[u-2],d=i?s.shape[l-1]:s.shape[l-2],f=o?a.shape[u-2]:a.shape[u-1],g=s.shape.slice(0,-2),m=a.shape.slice(0,-2),y=b(g),x=b(m);p(l>=2&&u>=2&&(y===x||1===y||1===x),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${m}).`));const v=(y>x?s.shape.slice(0,-2):a.shape.slice(0,-2)).concat([d,f]);p(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const w=o?[x,f,h]:[x,h,f],k=Ry({inputs:{x:s},backend:n,attrs:{shape:i?[y,c,d]:[y,d,c]}}),I=Ry({inputs:{x:a},backend:n,attrs:{shape:w}}),C=i?k.shape[1]:k.shape[2],N=i?k.shape[2]:k.shape[1],$=o?I.shape[1]:I.shape[2],S=Math.max(y,x),E=n.data.get(k.dataId).values,T=n.data.get(I.dataId).values,A=O(k.shape),R=O(I.shape),[F,_,D]=i?[A[0],1,A[1]]:[A[0],A[1],1],[L,M,z]=o?[1,R[1],R[0]]:[R[1],1,R[0]],B=N*$,P=xs([S,N,$],k.dtype),W=P.values,U=n.blockSize;for(let e=0;e<S;e++)for(let t=0;t<N;t+=U)for(let n=0;n<$;n+=U)for(let r=0;r<C;r+=U){const s=Math.min(t+U,N),a=Math.min(n+U,$),i=Math.min(r+U,C);for(let o=t;o<s;o++)for(let t=n;t<a;t++){let n=0;for(let s=r;s<i;s++){const r=Math.min(e,y-1)*F,a=Math.min(e,x-1)*z;n+=E[r+o*_+s*D]*T[s*L+t*M+a]}W[e*B+(o*$+t)]+=n}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(v,P.dtype,P.values)}const Dy={kernelName:me,backendName:"cpu",kernelFunc:_y},Ly={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let d,p,f;const g=[];d=_y({inputs:{a:s,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=Ty({inputs:{a:d,b:i},backend:n}),g.push(d),d=p),c&&(f=by(n,d,c,o,h),g.push(d),d=f);for(const e of g)n.disposeIntermediateTensorInfo(e);return d}};function Oy(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const My={kernelName:Z,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Zb(t,"abs");let r=new Float32Array(b(t.shape));return r=Oy(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,"float32")}},zy=ty(Q,(e=>Math.acos(e))),By={kernelName:Q,backendName:"cpu",kernelFunc:zy},Py=ty(ee,(e=>Math.acosh(e))),Wy={kernelName:ee,backendName:"cpu",kernelFunc:Py},Uy={kernelName:ne,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;Zb(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),a=xs(r[0].shape,r[0].dtype),i=a.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function Vy(e,t,n,r,s){const a=t.length,i=b(t),o=O(t),l=O(s),u=$(n,b(s));for(let t=0;t<i;++t){const n=G(t,a,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];u[V(s,a,l)]=e[t]}return u}function Gy(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;Zb(s,"transpose");const i=s.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=s.shape[a[e]];const l=Vy(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(l,o,s.dtype),shape:o,dtype:s.dtype}}const jy={kernelName:Dn,backendName:"cpu",kernelFunc:Gy},Hy={kernelName:re,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;Zb(s,"all");const o=C(a,s.shape);let l=o;const u=ki(l,s.shape.length);let c=s;null!=u&&(c=Gy({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Ci(l.length,s.shape.length)),wi("all",l,c.shape.length);const[h,d]=xi(c.shape,l),p=b(d),f=P(b(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const r=g[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(i){const e=Ry({inputs:{x:m},backend:n,attrs:{shape:vi(h,o)}});return n.disposeIntermediateTensorInfo(m),e}return m}},qy={kernelName:se,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;Zb(s,"any");const o=C(a,s.shape);let l=o;const u=ki(l,s.shape.length);let c=s;null!=u&&(c=Gy({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Ci(l.length,s.shape.length)),wi("any",l,c.shape.length);const[h,d]=xi(c.shape,l),p=b(d),f=P(b(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const r=g[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(i){const e=Ry({inputs:{x:m},backend:n,attrs:{shape:vi(h,o)}});return n.disposeIntermediateTensorInfo(m),e}return m}},Ky={kernelName:ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;Zb(s,"argMax");let i=C(a,s.shape);const o=ki(i,s.shape.length);let l=s;const u=[];null!=o&&(l=Gy({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Ci(i.length,l.shape.length)),i=[i[0]],wi("argMax",i,l.shape.length);const[c,h]=xi(l.shape,i),d=P(b(c),"int32"),p=b(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s>n&&(n=s,r=e)}d[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},Xy={kernelName:ie,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;Zb(s,"argMin");let i=C(a,s.shape);const o=ki(i,s.shape.length);let l=s;const u=[];null!=o&&(l=Gy({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Ci(i.length,l.shape.length)),i=[i[0]],wi("argMin",i,l.shape.length);const[c,h]=xi(l.shape,i),d=P(b(c),"int32"),p=b(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s<n&&(n=s,r=e)}d[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},Yy=ty(oe,(e=>Math.asin(e))),Jy={kernelName:oe,backendName:"cpu",kernelFunc:Yy},Zy=ty(le,(e=>Math.asinh(e))),Qy={kernelName:le,backendName:"cpu",kernelFunc:Zy},ex=ty(ue,(e=>Math.atan(e))),tx={kernelName:ue,backendName:"cpu",kernelFunc:ex},nx=uy(((e,t)=>Math.atan2(e,t))),rx=Ny(he,nx),sx={kernelName:he,backendName:"cpu",kernelFunc:rx},ax=ty(ce,(e=>Math.atanh(e))),ix={kernelName:ce,backendName:"cpu",kernelFunc:ax};function ox(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=xs(s.outShape,n),m=g.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],y=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*b,g=t*r[0];for(let t=0;t<s.inChannels;++t)for(let b=0;b<s.outHeight;++b){const v=b*i-d,w=Math.max(0,v),k=Math.min(s.inHeight,c+v),I=n+b*y;for(let n=0;n<s.outWidth;++n){const i=n*o-p,c=Math.max(0,i),d=Math.min(s.inWidth,h+i);let b=f,y=0,v=0;for(let n=w;n<k;n+=l){const s=g+n*r[1];for(let n=c;n<d;n+=u){const i=e[s+n*r[2]+t];"max"===a&&i>b?b=i:"avg"===a&&(y+=i,v++)}if(isNaN(b))break}m[I+n*x+t]="avg"===a?y/v:b}}}return g}function lx(e,t,n,r,s=!1,a=!1){const i=xs(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,g=xs(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const m=n*o-p;let b=m;for(;b<0;)b+=u;const y=Math.min(r.inHeight,h+m);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const x=Math.min(r.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=b;n<y;n+=u){const i=n-m;for(let o=p;o<x;o+=c){const l=o-h,u=g.get(e,n,o,t);u>v&&(v=u,w=s?a?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*d+l)}}i.set(w,e,n,o,t)}}return i}function ux(e,t,n,r,s,a){const i=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,g=s.padInfo.front,m=s.padInfo.top,b=s.padInfo.left,y="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=xs(s.outShape,n),v=x.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],C=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*w,x=t*r[0];for(let t=0;t<s.inChannels;++t)for(let w=0;w<s.outDepth;++w){const N=w*i-g;let $=N;for(;$<0;)$+=u;const S=Math.min(s.inDepth,d+N),E=n+w*k;for(let n=0;n<s.outHeight;++n){const i=n*o-m;let d=i;for(;d<0;)d+=c;const g=Math.min(s.inHeight,p+i),w=E+n*I;for(let n=0;n<s.outWidth;++n){const i=n*l-b;let o=i;for(;o<0;)o+=h;const p=Math.min(s.inWidth,f+i),m=w+n*C;let k=y,I=0,N=0;for(let n=$;n<S;n+=u){const s=x+n*r[1];for(let n=d;n<g;n+=c){const i=s+n*r[2];for(let n=o;n<p;n+=h){const s=e[i+n*r[3]+t];if("max"===a&&s>k?k=s:"avg"===a&&(I+=s,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[m+t]="avg"===a?I/N:k}}}}return x}const cx={kernelName:de,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Zb(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;p(va(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=ca(s.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&y(u.inShape,u.outShape))c=ay({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=O(s.shape),r=ox(e,s.shape,s.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},hx={kernelName:fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u,dilations:c}=r;Zb(s,"avgPool3d");let h=c;null==h&&(h=[1,1,1]);const d=ha(s.shape,a,i,h,o,l,u),p=ux(n.data.get(s.dataId).values,s.shape,s.dtype,O(s.shape),d,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}},dx={kernelName:ge,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dilations:u,dimRoundingMode:c}=r;Zb([s,a],"avgPool3DGrad");const h=ha(a.shape,i,o,u,l,c),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,m=h.filterHeight,b=h.filterWidth,y=h.dilationDepth,x=h.dilationHeight,v=h.dilationWidth,w=h.effectiveFilterDepth,k=h.effectiveFilterHeight,I=h.effectiveFilterWidth,C=w-1-h.padInfo.front,N=I-1-h.padInfo.left,$=k-1-h.padInfo.top,S=xs(a.shape,"float32"),E=1/(g*m*b),T=n.bufferSync(s);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let s=0;s<h.inWidth;++s){const a=n-C,i=r-$,o=s-N;let l=0;for(let n=0;n<w;n+=y){const r=(a+n)/d;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let n=0;n<k;n+=x){const s=(i+n)/p;if(!(s<0||s>=h.outHeight||Math.floor(s)!==s))for(let n=0;n<I;n+=v){const a=(o+n)/f;a<0||a>=h.outWidth||Math.floor(a)!==a||(l+=T.get(e,r,s,a,t))}}}S.set(l*E,e,n,r,s,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},px={kernelName:pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;Zb([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=ca(i.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,g=c.dilationHeight,m=c.dilationWidth,b=c.effectiveFilterHeight,y=c.effectiveFilterWidth,x=y-1-c.padInfo.left,v=b-1-c.padInfo.top,w=xs(i.shape,"float32"),k=1/(p*f),I=n.data.get(s.dataId).values,C=xs(s.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-v,a=r-x;let i=0;for(let n=0;n<b;n+=g){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<y;n+=m){const s=(a+n)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(i+=C.get(e,r,s,t))}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},fx={kernelName:rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:i,mean:o,variance:l}=t;p(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),p(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),p(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Zb([s,o,l,a,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,f=a?n.data.get(a.dataId).values:new Float32Array([1]),g=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),b=g.length,y=f.length,x=d.length,v=h.length;let w=0,k=0,I=0,C=0;for(let e=0;e<c.length;++e)m[e]=g[w++]+(c[e]-h[k++])*f[I++]/Math.sqrt(d[C++]+u),w>=b&&(w=0),k>=v&&(k=0),I>=y&&(I=0),C>=x&&(C=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};function gx(e,t,n,r,s){const a=Ws(r,t,n),i=b(n),o=O(r);if(a){const n=Us(t,o);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const l=xs(r,s,"string"===s?nu(e):e),u=xs(n,s);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===s?ru(u.values):u.values}function mx(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r;Zb(s,"slice");const[o,l]=Vs(s,a,i);Ts(s,o,l);const u=gx(n.data.get(s.dataId).values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const bx={kernelName:fn,backendName:"cpu",kernelFunc:mx},yx={kernelName:be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;Zb([s],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),l=Il(s.shape,a,o),u=Cl(l.length,a.length),c=Nl(s.shape,a,o),h=$l(i,a.length),d=Sl(c,i,a.length),p=Ry({inputs:{x:s},backend:n,attrs:{shape:l}}),f=Gy({inputs:{x:p},backend:n,attrs:{perm:u}}),g=Ry({inputs:{x:f},backend:n,attrs:{shape:c}}),m=mx({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}};function xx(e,t,n,r,s){const a=b(r),i=P(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(i[r]+=a>0?t[n]:1)}return i}function vx(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],i=xs([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=e.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,s),o,a):i.set(i.get(o,a)+1,o,a))}return i}const wx={kernelName:ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=xx(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}};function kx(e){return(t,n,r)=>{const s=$(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}const Ix=kx((e=>Math.ceil(e))),Cx=ny(ve,Ix),Nx={kernelName:ve,backendName:"cpu",kernelFunc:Cx},$x=ty(we,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Sx={kernelName:we,backendName:"cpu",kernelFunc:$x},Ex={kernelName:Ie,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(b(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function Tx(e,t,n,r){const s=S(n,b(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=b(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?nu(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=a[i++]}r+=e.shape[1]}))}return s}function Ax(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const Rx={kernelName:ct,backendName:"cpu",kernelFunc:Ax};function Fx(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=C(s,t[0].shape)[0];let i=xl(t.map((e=>e.shape)),a);if(0===b(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>b(e.shape)>0));if(1===o.length)return ay({inputs:{x:o[0]},backend:n});if(yl(o.map((e=>e.shape)),a),"complex64"===o[0].dtype){const e=o.map((e=>wy({inputs:{input:e},backend:n}))),t=o.map((e=>Ax({inputs:{input:e},backend:n}))),r=Fx({inputs:e,backend:n,attrs:{axis:a}}),s=Fx({inputs:t,backend:n,attrs:{axis:a}}),i=yy({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const l=o.map((e=>{const t=b(e.shape.slice(a));return Ry({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=xl(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=Tx(u,i,t[0].dtype,c),d=xl(o.map((e=>e.shape)),a),p=n.makeTensorInfo(d,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const _x={kernelName:Ce,backendName:"cpu",kernelFunc:Fx};function Dx(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;Zb([s,a],"conv2d");const h=wa(l),d=da(s.shape,a.shape,i,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,b=d.padInfo.left,y=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new cr(d.outShape,s.dtype),w=O(s.shape),k=O(a.shape),I=w[0],C=x?w[1]:w[2],N=x?w[2]:1,$=x?1:w[1],S=v.strides[0],E=x?v.strides[1]:v.strides[2],T=x?v.strides[2]:1,A=x?1:v.strides[1],R=n.data.get(s.dataId).values,F=n.data.get(a.dataId).values,_=v.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*S;for(let e=0;e<d.outHeight;++e){const r=n+e*E,s=e*d.strideHeight-y;for(let e=0;e<p;++e){const n=s+e*g;if(n<0||n>=d.inHeight)continue;const a=e*k[0],i=t+n*C;for(let e=0;e<d.outWidth;++e){const t=r+e*T,n=e*d.strideWidth-b;for(let e=0;e<f;++e){const r=n+e*m;if(r<0||r>=d.inWidth)continue;const s=i+r*N;let o=a+e*k[1];for(let e=0;e<d.inChannels;++e){const n=R[s+e*$];for(let e=0;e<d.outChannels;++e)_[t+e*A]+=n*F[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,_)}const Lx={kernelName:Ne,backendName:"cpu",kernelFunc:Dx},Ox={kernelName:$e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;Zb([s,a],"conv2dBackpropFilter");const h=wa(l),d=da(s.shape,c,i,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:g,filterWidth:m}=d,b="channelsLast"===d.dataFormat,y=new cr(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=new cr(s.shape,s.dtype,w),C=new cr(a.shape,a.dtype,k);for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((v-e)/p)),n=Math.min(d.outHeight,(d.inHeight+v-e)/p);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((x-r)/f)),a=Math.min(d.outWidth,(d.inWidth+x-r)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-v;for(let e=s;e<a;++e){const n=r+e*f-x;l+=b?I.get(u,t,n,i)*C.get(u,c,e,o):I.get(u,i,t,n)*C.get(u,o,c,e)}}y.set(l,e,r,i,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},Mx={kernelName:Se,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;Zb([s,a],"conv2dBackpropInput");const h=O(a.shape),d=O(s.shape);let p=wa(u);const f=da(i,a.shape,o,1,l,c,!1,p),g=new cr(f.inShape,"float32"),m=g.values,b=n.data.get(s.dataId).values,y=n.data.get(a.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:C,inChannels:N,inHeight:$,inWidth:S,outChannels:E,outHeight:T,outWidth:A,strideHeight:R,strideWidth:F}=f;p=f.dataFormat;const _=I-1-f.padInfo.top,D=C-1-f.padInfo.left,L="channelsLast"===p,M=g.strides[0],z=L?g.strides[1]:g.strides[2],B=L?g.strides[2]:1,P=L?1:g.strides[1],W=d[0],U=L?d[1]:d[2],V=L?d[2]:1,G=L?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<$;++n){const r=n-_,s=Math.max(0,Math.ceil(r/R)),a=Math.min(T,(I+r)/R);for(let i=0;i<S;++i){const o=i-D,l=Math.max(0,Math.ceil(o/F)),u=Math.min(A,(C+o)/F);let c=0;for(let n=s;n<a;++n){const s=n*R-r;for(let r=l;r<u;++r){const a=W*e+U*n+V*r,i=x*(I-1-s)+v*(C-1-(r*F-o))+w*t;for(let e=0;e<E;++e)c+=b[a+G*e]*y[i+e]}}m[M*e+z*n+B*i+P*t]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},zx={kernelName:Ee,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r;Zb([s,a],"conv3d");const u=pa(s.shape,a.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:g,padInfo:m}=u,b=m.front,y=m.left,x=m.top,v=new cr(u.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=v.values,C=O(s.shape),N=O(a.shape);for(let e=0;e<u.batchSize;++e){const t=e*C[0],n=e*v.strides[0];for(let e=0;e<u.outDepth;++e){const r=n+e*v.strides[1],s=e*u.strideDepth-b;for(let e=0;e<c;++e){const n=s+e*p;if(n<0||n>=u.inDepth)continue;const a=e*N[0],i=t+n*C[1];for(let e=0;e<u.outHeight;++e){const t=r+e*v.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=u.inHeight)continue;const s=a+e*N[1],o=i+r*C[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,r=e*u.strideWidth-y;for(let e=0;e<d;++e){const t=r+e*g;if(t<0||t>=u.inWidth)continue;const a=s+e*N[2],i=o+t*u.inChannels;let l=a;for(let e=0;e<u.inChannels;++e){const t=w[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},Bx={kernelName:Te,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r;Zb([s,a],"conv3dBackpropFilterV2");const u=O(s.shape),c=O(a.shape),h=pa(s.shape,l,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,m=h.filterHeight,b=h.filterWidth,y=new cr(h.filterShape,"float32"),x=y.values,[v,w,k,I]=y.strides,C=n.data.get(a.dataId).values,[N,$,S,E]=c,T=n.data.get(s.dataId).values,[A,R,F,_]=u,D=h.padInfo.front,L=h.padInfo.left,M=h.padInfo.top;for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((D-e)/d)),n=Math.min(h.outDepth,(h.inDepth+D-e)/d),r=e*v;for(let s=0;s<m;++s){const a=Math.max(0,Math.ceil((M-s)/p)),i=Math.min(h.outHeight,(h.inHeight+M-s)/p),o=s*w+r;for(let r=0;r<b;++r){const l=Math.max(0,Math.ceil((L-r)/f)),u=Math.min(h.outWidth,(h.inWidth+L-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const g=o*I+c;for(let c=0;c<h.outChannels;++c){let m=0;for(let g=0;g<h.batchSize;++g){const h=g*A,b=g*N;for(let g=t;g<n;++g){const t=(e+g*d-D)*R+h,n=g*$+b;for(let e=a;e<i;++e){const a=(s+e*p-M)*F+t,i=e*S+n;for(let e=l;e<u;++e){const t=e*E+i;m+=T[(r+e*f-L)*_+a+o]*C[t+c]}}}}x[g+c]=m}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},Px={kernelName:Ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r;Zb([s],"conv3dBackpropInputV2");const u=O(s.shape),c=O(a.shape),h=pa(l,a.shape,o,1,i),d=new cr(h.inShape,"float32"),p=d.values,[f,g,m,b]=d.strides,y=n.data.get(s.dataId).values,[x,v,w,k]=u,I=n.data.get(a.dataId).values,[C,N,$,S]=c,{batchSize:E,filterDepth:T,filterHeight:A,filterWidth:R,inChannels:F,inDepth:_,inHeight:D,inWidth:L,outChannels:M,outDepth:z,outHeight:B,outWidth:P,strideDepth:W,strideHeight:U,strideWidth:V}=h,G=T-1-h.padInfo.front,j=A-1-h.padInfo.top,H=R-1-h.padInfo.left;for(let e=0;e<E;++e)for(let t=0;t<F;++t)for(let n=0;n<_;++n){const r=n-G,s=Math.max(0,Math.ceil(r/W)),a=Math.min(z,(T+r)/W);for(let i=0;i<D;++i){const o=i-j,l=Math.max(0,Math.ceil(o/U)),u=Math.min(B,(A+o)/U);for(let c=0;c<L;++c){const h=c-H,d=Math.max(0,Math.ceil(h/V)),E=Math.min(P,(R+h)/V);let F=0;for(let n=s;n<a;++n){const s=n*W-r;for(let r=l;r<u;++r){const a=r*U-o;for(let i=d;i<E;++i){const o=x*e+v*n+w*r+k*i,l=C*(T-1-s)+N*(A-1-a)+$*(R-1-(i*V-h))+S*t;for(let e=0;e<M;++e)F+=y[o+e]*I[l+e]}}}p[f*e+g*n+m*i+b*c+t]=F}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},Wx=ty(Re,(e=>Math.cos(e))),Ux={kernelName:Re,backendName:"cpu",kernelFunc:Wx},Vx=ty(Fe,(e=>Math.cosh(e))),Gx={kernelName:Fe,backendName:"cpu",kernelFunc:Vx},jx={kernelName:De,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[c,h,d,p]=s.shape,f=a.shape[0],[g,m]=o,b=xs([f,g,m,p],"float32"),y=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(s.dataId).values,w=O(s.shape),k=O(b.shape);for(let e=0;e<f;e++){const t=4*e,n=y[t],r=y[t+1],s=y[t+2],a=y[t+3],i=x[e];if(i>=c)continue;const o=g>1?(s-n)*(h-1)/(g-1):0,f=m>1?(a-r)*(d-1)/(m-1):0;for(let t=0;t<g;t++){const c=g>1?n*(h-1)+t*o:.5*(n+s)*(h-1);if(c<0||c>h-1)for(let n=0;n<m;n++)for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];b.values[s]=u}else if("bilinear"===l){const n=Math.floor(c),s=Math.ceil(c),o=c-n;for(let l=0;l<m;l++){const c=m>1?r*(d-1)+l*f:.5*(r+a)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+l*k[2]+t*k[1]+e*k[0];b.values[r]=u}continue}const h=Math.floor(c),g=Math.ceil(c),y=c-h;for(let r=0;r<p;r++){let a=r+h*w[2]+n*w[1]+i*w[0];const u=v[a];a=r+g*w[2]+n*w[1]+i*w[0];const c=v[a];a=r+h*w[2]+s*w[1]+i*w[0];const d=v[a];a=r+g*w[2]+s*w[1]+i*w[0];const p=u+(c-u)*y,f=d+(v[a]-d)*y;a=r+l*k[2]+t*k[1]+e*k[0],b.values[a]=p+(f-p)*o}}}else for(let n=0;n<m;++n){const s=m>1?r*(d-1)+n*f:.5*(r+a)*(d-1);if(s<0||s>d-1){for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];b.values[s]=u}continue}const o=Math.round(s),l=Math.round(c);for(let r=0;r<p;r++){const s=r+o*w[2]+l*w[1]+i*w[0],a=r+n*k[2]+t*k[1]+e*k[0];b.values[a]=v[s]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Hx={kernelName:_e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;Zb(s,"cumsum");const l=ki([a],s.shape.length);let u=s;null!=l&&(u=Gy({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=Ci(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=kr(u.dtype,"int32"),d=P(b(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=g(e,t);if(0===t)d[n]=i?0:p[n];else{const r=g(e,t-1);d[n]=i?p[r]+d[r]:p[n]+d[r]}}const m=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=Gy({inputs:{x:m},backend:n,attrs:{perm:Ii(l)}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(u),e}return m}},qx={kernelName:Le,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=xx(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=vx(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},Kx={kernelName:Oe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;p("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`)),p(a>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`));const o=s.shape[0],l=s.shape[1],u=s.shape[2],c=s.shape[3],h=l*a,d=u*a,f=c/(a*a),g=n.data.get(s.dataId).values,m=new Float32Array(o*h*d*f);let b=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/a),r=t%a;for(let t=0;t<d;++t){const s=Math.floor(t/a),i=(r*a+t%a)*f;for(let t=0;t<f;++t){const r=t+i+c*(s+u*(n+l*e));m[b++]=g[r]}}}return n.makeTensorInfo([o,h,d,f],s.dtype,m)}};function Xx(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;Zb([s,a],"depthwiseConv2DNative");const c=O(s.shape),h=O(a.shape);let d=l;null==d&&(d=[1,1]),p(va(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const f=da(s.shape,a.shape,i,d,o,u,!0),{filterHeight:g,filterWidth:m,dilationHeight:b,dilationWidth:y,padInfo:x}=f,v=x.left,w=x.top,k=f.outChannels/f.inChannels,I=new cr(f.outShape,s.dtype),C=n.data.get(s.dataId).values,N=n.data.get(a.dataId).values,$=I.values;for(let e=0;e<f.batchSize;++e){const t=e*c[0],n=e*I.strides[0];for(let e=0;e<f.outHeight;++e){const r=n+e*I.strides[1],s=e*f.strideHeight-v;for(let e=0;e<g;++e){const n=s+e*b;if(n<0||n>=f.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<f.outWidth;++e){const t=r+e*I.strides[2],n=e*f.strideWidth-w;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=f.inWidth)continue;const s=a+e*h[1],o=i+r*f.inChannels;let l=t,u=s;for(let e=0;e<f.inChannels;++e){const t=C[o+e];for(let e=0;e<k;++e)$[l+e]+=t*N[u+e];l+=k,u+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const Yx={kernelName:Me,backendName:"cpu",kernelFunc:Xx},Jx={kernelName:ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;Zb([s,a],"depthwiseConv2dNativeBackpropFilter");const h=da(s.shape,c,i,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:g}=h,m=new cr(h.filterShape,"float32"),b=h.padInfo.left,y=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(s.dataId).values,w=new cr(s.shape,s.dtype,v),k=n.data.get(a.dataId).values,I=new cr(a.shape,a.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((y-e)/d)),n=Math.min(h.outHeight,(h.inHeight+y-e)/d);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((b-r)/p)),a=Math.min(h.outWidth,(h.inWidth+b-r)/p);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),l=i%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-y;for(let e=s;e<a;++e){const n=r+e*p-b;u+=w.get(l,t,n,o)*I.get(l,c,e,i)}}m.set(u,e,r,o,l)}}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},Zx={kernelName:Be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;Zb([s,a],"depthwiseConv2DNativeBackpropInput");const h=O(s.shape),d=O(a.shape),p=da(c,a.shape,i,o,l,u,!0),f=new cr(p.inShape,"float32"),g=f.values,[m,b,y]=f.strides,x=n.data.get(s.dataId).values,[v,w,k]=h,I=n.data.get(a.dataId).values,[C,N,$]=d,{batchSize:S,filterHeight:E,filterWidth:T,inChannels:A,inHeight:R,inWidth:F,outChannels:_,outHeight:D,outWidth:L,strideHeight:M,strideWidth:z}=p,B=E-1-p.padInfo.top,P=T-1-p.padInfo.left,W=_/A;for(let e=0;e<S;++e)for(let t=0;t<A;++t)for(let n=0;n<R;++n){const r=n-B,s=Math.max(0,Math.ceil(r/M)),a=Math.min(D,(E+r)/M);for(let i=0;i<F;++i){const o=i-P,l=Math.max(0,Math.ceil(o/z)),u=Math.min(L,(T+o)/z);let c=0;for(let n=s;n<a;++n){const s=n*M-r;for(let r=l;r<u;++r){const a=v*e+w*n+k*r,i=C*(E-1-s)+N*(T-1-(r*z-o))+$*t;for(let e=0;e<W;++e)c+=x[a+(t*W+e)]*I[i+e]}}g[m*e+b*n+y*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Qx={kernelName:Pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=b(r.shape),a=n.data.get(r.dataId).values,i=xs([s,s],r.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*s+e]=a[e];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},ev={kernelName:We,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:y,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:I,filterWidth:C,dilationHeight:N,dilationWidth:$,outShape:E}=ua(r.shape,s.shape,a,i,"NHWC",o),T=b(E),A=E.length,R=S(r.dtype,T);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*w-v.top;for(let a=0;a<x;++a){const i=a*k-v.left;for(let o=0;o<m;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){const a=n+t*N;if(a>=0&&a<f)for(let n=0;n<C;++n){const p=i+n*$;if(p>=0&&p<g){const i=V([e,a,p,o],c,O(r.shape)),f=V([t,n,o],d,O(s.shape)),g=u[i]+h[f];g>l&&(l=g)}}}R[V([e,t,a,o],A,O(E))]=l}}}return{dataId:l.write(ir(R,r.dtype),E,r.dtype),shape:E,dtype:r.dtype}}},tv={kernelName:Ve,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=z(r.shape,u.data.get(r.dataId).values),h=z(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:f,inWidth:g,inChannels:m,outHeight:b,outWidth:y,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:C,dilationWidth:N,outShape:$}=ua(r.shape,s.shape,i,o,"NHWC",l);p(a.rank===$.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${$.length}, but got ${a.rank}`));const S=z($,u.data.get(a.dataId).values),E=W(s.shape,s.dtype);for(let e=0;e<d;++e)for(let t=0;t<b;++t){const n=t*v-x.top;for(let r=0;r<y;++r){const s=r*w-x.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<k;++t){const r=n+t*C;if(r>=0&&r<f)for(let n=0;n<I;++n){const u=s+n*N;if(u>=0&&u<g){const s=c[e][r][u][a]+h[t][n][a];s>i&&(i=s,o=t,l=n)}}}E[o][l][a]+=S[e][t][r][a]}}}return{dataId:u.write(ir(E,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},nv={kernelName:Ue,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=z(r.shape,u.data.get(r.dataId).values),h=z(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:f,inWidth:g,inChannels:m,outHeight:b,outWidth:y,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:C,dilationWidth:N,outShape:$}=ua(r.shape,s.shape,i,o,"NHWC",l);p(a.rank===$.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${$.length}, but got ${a.rank}`));const S=z($,u.data.get(a.dataId).values),E=W(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<b;++t){const n=t*v-x.top;for(let r=0;r<y;++r){const s=r*w-x.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=s<0?0:s;for(let t=0;t<k;++t){const r=n+t*C;if(r>=0&&r<f)for(let n=0;n<I;++n){const u=s+n*N;if(u>=0&&u<g){const s=c[e][r][u][a]+h[t][n][a];s>i&&(i=s,o=r,l=u)}}}E[e][o][l][a]+=S[e][t][r][a]}}}return{dataId:u.write(ir(E,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},rv={kernelName:He,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;Zb([r,s],"eluGrad");const a=new Float32Array(b(s.shape)),i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",a)}},sv=uy(((e,t)=>e===t?1:0)),av=Ny(Ke,sv,null,"bool"),iv={kernelName:Ke,backendName:"cpu",kernelFunc:av},ov=Dl,lv=Ll,uv=Ol,cv=Ml,hv=zl,dv=Bl,pv=ty(qe,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+ov*n);return t*(1-((((dv*r+hv)*r+cv)*r+uv)*r+lv)*r*Math.exp(-n*n))})),fv={kernelName:qe,backendName:"cpu",kernelFunc:pv},gv=kx((e=>Math.exp(e))),mv=ny(Xe,gv),bv={kernelName:Xe,backendName:"cpu",kernelFunc:mv};function yv(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,i=s.shape.length,o=s.shape.slice();let l=a;return a<0&&(p(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),Ry({inputs:{x:s},backend:n,attrs:{shape:o}})}const xv={kernelName:Ye,backendName:"cpu",kernelFunc:yv},vv=kx((e=>Math.expm1(e))),wv=ny(Je,vv),kv={kernelName:Je,backendName:"cpu",kernelFunc:wv},Iv=uy(((e,t)=>e*t)),Cv=$y(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),Nv=Ny(zt,Iv,Cv),$v={kernelName:zt,backendName:"cpu",kernelFunc:Nv},Sv=uy(((e,t)=>e/t)),Ev=Ny(Ge,Sv),Tv={kernelName:Ge,backendName:"cpu",kernelFunc:Ev},Av=uy(((e,t)=>e-t)),Rv=$y(((e,t,n,r)=>({real:e-n,imag:t-r}))),Fv=Ny(Sn,Av,Rv),_v={kernelName:Sn,backendName:"cpu",kernelFunc:Fv};function Dv(e,t,n){const r=e.shape,s=r[0],a=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[s,a],c=b(u),h=$("float32",c),d=$("float32",c);for(let e=0;e<s;e++){const r=mx({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),s=mx({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=yy({inputs:{real:r,imag:s},backend:n}),{real:u,imag:c}=Lv(i,t,n),p=Ul(u,c);for(let t=0;t<a;t++){const n=Hl(p,t);h[e*a+t]=n.real,d[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),g=yy({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}function Lv(e,t,n){const r=b(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const s=Ov(a,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),a=n.makeTensorInfo([],"float32",ar(r,"float32")),i=ay({inputs:{x:a},backend:n}),l=Tv.kernelFunc({inputs:{a:e,b:a},backend:n}),u=Tv.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return s}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=Xl(s*r,t,n),l=Hl(e,r);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),ql(r,a,i,s)}return r}(Ul(a,i),r,t);return Vl(e)}var o}function Ov(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=Ul(e,t),i=n/2,o=Gl(a),l=o.real,u=o.imag,c=[l.length],h=s.makeTensorInfo(c,"float32",l),d=s.makeTensorInfo(c,"float32",u),p=yy({inputs:{real:h,imag:d},backend:s}),f=jl(a),g=f.real,m=f.imag,b=[g.length],y=s.makeTensorInfo(b,"float32",g),x=s.makeTensorInfo(b,"float32",m),v=yy({inputs:{real:y,imag:x},backend:s}),w=Ov(l,u,i,r,s),k=w.real,I=w.imag,C=[k.length],N=s.makeTensorInfo(C,"float32",k),$=s.makeTensorInfo(C,"float32",I),S=yy({inputs:{real:N,imag:$},backend:s}),E=Ov(g,m,i,r,s),T=E.real,A=E.imag,R=[T.length],F=s.makeTensorInfo(R,"float32",T),_=s.makeTensorInfo(R,"float32",A),D=yy({inputs:{real:F,imag:_},backend:s}),L=Kl(n,r),O=[L.real.length],M=s.makeTensorInfo(O,"float32",L.real),z=s.makeTensorInfo(O,"float32",L.imag),B=yy({inputs:{real:M,imag:z},backend:s}),P=Nv({inputs:{a:B,b:D},backend:s}),W=Ty({inputs:{a:S,b:P},backend:s}),U=Fv({inputs:{a:S,b:P},backend:s}),V=wy({inputs:{input:W},backend:s}),G=wy({inputs:{input:U},backend:s}),j=Ax({inputs:{input:W},backend:s}),H=Ax({inputs:{input:U},backend:s}),q=Fx({inputs:[V,G],backend:s,attrs:{axis:0}}),K=Fx({inputs:[j,H],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const Mv={kernelName:Ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=b(r.shape),a=r.shape[r.shape.length-1],i=Ry({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=Dv(i,!1,n),l=Ry({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function zv(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,i=a||_(s),o=S(i,b(r));return function(e,t,n){e.fill(t)}(o,s),t.makeTensorInfo(r,i,o)}const Bv={kernelName:Qe,backendName:"cpu",kernelFunc:zv},Pv={kernelName:et,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=$(r.dtype,b(r.shape)),[i,o,l,u]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let r=0;r<l;r++){const s=r*u;for(let o=0;o<u;o++){const h=[i,e,r,o][2],d=Math.round(l-h),p=t+n+s+o;let f=c[p];d>=0&&d<l&&(f=c[t+n+d*u+o]),a[p]=f}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Wv=kx((e=>Math.floor(e))),Uv=ny(tt,Wv),Vv={kernelName:tt,backendName:"cpu",kernelFunc:Uv},Gv=uy(((e,t)=>Math.floor(e/t))),jv=Ny(nt,Gv,null,"int32"),Hv={kernelName:nt,backendName:"cpu",kernelFunc:jv},qv={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let g=Dx({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=g;g=Ty({inputs:{a:g,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=g;g=by(n,g,p,o,f),n.disposeIntermediateTensorInfo(e)}return g}},Kv={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let g=Xx({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=g;g=Ty({inputs:{a:g,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=g;g=by(n,g,p,o,f),n.disposeIntermediateTensorInfo(e)}return g}},Xv={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=b(r.shape),i=s.shape,o=i[i.length-1],[l,u,c,h]=El(r,s);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const d=xs([u,c],r.dtype),p=n.data.get(s.dataId).values,f=n.data.get(r.dataId).values;for(let e=0;e<u;e++){const t=[];let n=0;for(let r=0;r<o;r++){const s=p[e*o+r];n+=s*h[r],t.push(s)}if(n<0||n>=a/c)throw new Error(`Invalid indices: ${t} does not index into ${r.shape}`);for(let t=0;t<c;t++)d.values[e*c+t]=f[n*c+t]}return n.makeTensorInfo(l,d.dtype,d.values)}};function Yv(e,t,n){const r=xs(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],i=s[2],o=t.locToIndex([a,i]);s[2]=t.values[o];const l=e.locToIndex(s);r.values[n]=e.values[l]}return r}const Jv={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r;Zb([s,a],"gatherV2");let l=o;null==o&&(l=0);const u=b(a.shape),c=Ql(s,a,C(i,s.shape)[0],l),h=Ry({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),d=Ry({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}}),p=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize],f=n.bufferSync(d),g=Yv(n.bufferSync(h),f,p);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.makeTensorInfo(c.outputShape,g.dtype,g.values)}},Zv=uy(((e,t)=>e>t?1:0)),Qv=Ny(it,Zv,null,"bool"),ew={kernelName:it,backendName:"cpu",kernelFunc:Qv},tw=uy(((e,t)=>e>=t?1:0)),nw=Ny(ot,tw,null,"bool"),rw={kernelName:ot,backendName:"cpu",kernelFunc:nw},sw={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=b(r.shape),a=r.shape[r.shape.length-1],i=Ry({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=Dv(i,!0,n),l=Ry({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},aw=ty(ht,(e=>Number.isFinite(e)?1:0),"bool"),iw={kernelName:ht,backendName:"cpu",kernelFunc:aw},ow=ty(dt,(e=>Math.abs(e)===1/0?1:0),"bool"),lw={kernelName:dt,backendName:"cpu",kernelFunc:ow},uw=ty(pt,(e=>Number.isNaN(e)?1:0),"bool"),cw={kernelName:pt,backendName:"cpu",kernelFunc:uw},hw=uy(((e,t)=>e<t?1:0)),dw=Ny(gt,hw,null,"bool"),pw={kernelName:gt,backendName:"cpu",kernelFunc:dw},fw=uy(((e,t)=>e<=t?1:0)),gw=Ny(mt,fw,null,"bool"),mw={kernelName:mt,backendName:"cpu",kernelFunc:gw};function bw(e,t,n){const r=(t-e)/(n-1),s=P(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const yw={kernelName:bt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=bw(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},xw=kx((e=>Math.log(e))),vw=ny(yt,xw),ww={kernelName:yt,backendName:"cpu",kernelFunc:vw},kw=ty(xt,(e=>Math.log1p(e))),Iw={kernelName:xt,backendName:"cpu",kernelFunc:kw},Cw=uy(((e,t)=>e&&t)),Nw=Ny(vt,Cw,null,"bool"),$w={kernelName:vt,backendName:"cpu",kernelFunc:Nw},Sw=ty(wt,(e=>e?0:1),"bool"),Ew={kernelName:wt,backendName:"cpu",kernelFunc:Sw},Tw=uy(((e,t)=>e||t)),Aw=Ny(kt,Tw,null,"bool"),Rw={kernelName:kt,backendName:"cpu",kernelFunc:Aw},Fw={kernelName:It,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r;Zb(s,"LRN");const u=s.shape[3],c=u-1,h=n.data.get(s.dataId).values,d=b(s.shape),p=new Float32Array(d);function f(e){const t=e%u;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-l);p[e]=n}return n.makeTensorInfo(s.shape,s.dtype,p)}},_w={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r;Zb(i,"LRNGrad");const h=b(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(s.dataId).values,g=n.data.get(a.dataId).values,m=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(f[e],2);s=u*s+l;for(let t=n;t<r;t++){let n=-2*u*c*f[t]*g[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=p[e],m[t]+=n}}return n.makeTensorInfo(i.shape,s.dtype,m)}};function Dw(e,t,n,r){const s=$(r,b(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];t>a&&(a=t)}s[n]=a}return s}function Lw(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=n;let l=s.shape;const u=l.length,c=C(a,l);let h=c;const d=ki(h,u);let p=o.data.get(s.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=Vy(p,l,s.dtype,d,e),h=Ci(h.length,u),l=e}Zb(s,"max"),wi("max",h,u);const[f,g]=xi(l,h),m=Dw(p,b(g),f,s.dtype),y=o.write(m,f,s.dtype);let x=f;return i&&(x=vi(f,c)),{dataId:y,shape:x,dtype:s.dtype}}const Ow={kernelName:Nt,backendName:"cpu",kernelFunc:Lw},Mw=uy(((e,t)=>Math.max(e,t))),zw=Ny($t,Mw),Bw={kernelName:$t,backendName:"cpu",kernelFunc:zw},Pw={kernelName:St,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Zb(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;p(va(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=ca(s.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&y(u.inShape,u.outShape))c=ay({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=O(s.shape),r=ox(e,s.shape,s.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},Ww={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u,dilations:c}=r;Zb(s,"maxPool3d");let h=c;null==h&&(h=[1,1,1]);const d=ha(s.shape,a,i,h,o,l,u),p=ux(n.data.get(s.dataId).values,s.shape,s.dtype,O(s.shape),d,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}},Uw={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dilations:u,dimRoundingMode:c}=r;Zb([s,a],"maxPool3DGrad");const h=ha(a.shape,i,o,u,l,c),d=function(e,t){const n=xs(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let m=0;m<t.inChannels;++m)for(let b=0;b<t.outDepth;++b){const y=b*r-d;let x=y;for(;x<0;)x+=i;const v=Math.min(t.inDepth,u+y);for(let r=0;r<t.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+u);for(let s=0;s<t.outWidth;++s){const p=s*a-f;let k=p;for(;k<0;)k+=l;const I=Math.min(t.inWidth,h+p);let C=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<v;t+=i){const n=t-y;for(let r=d;r<w;r+=o){const s=r-u;for(let a=k;a<I;a+=l){const i=a-p,o=e.get(g,t,r,a,m);o>=C&&(C=o,N=n*c*h+s*c+i)}}}n.set(N,g,b,r,s,m)}}}return n}(n.bufferSync(a),h),p=h.strideDepth,f=h.strideHeight,g=h.strideWidth,m=h.dilationDepth,b=h.dilationHeight,y=h.dilationWidth,x=h.effectiveFilterDepth,v=h.effectiveFilterHeight,w=h.effectiveFilterWidth,k=x-1-h.padInfo.front,I=w-1-h.padInfo.left,C=v-1-h.padInfo.top,N=xs(a.shape,"float32"),$=n.bufferSync(s);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let s=0;s<h.inWidth;++s){const a=n-k,i=r-C,o=s-I;let l=0;for(let n=0;n<x;n+=m){const r=(a+n)/p;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let s=0;s<v;s+=b){const a=(i+s)/f;if(!(a<0||a>=h.outHeight||Math.floor(a)!==a))for(let i=0;i<w;i+=y){const u=(o+i)/g;if(u<0||u>=h.outWidth||Math.floor(u)!==u)continue;const c=x*v*w-1-d.get(e,r,a,u,t)===n*v*w+s*w+i?1:0;0!==c&&(l+=$.get(e,r,a,u,t)*c)}}}N.set(l,e,n,r,s,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},Vw={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;Zb([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=ca(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=xs(d.outShape,o.dtype,lx(p,o.shape,o.dtype,d).values),g=d.strideHeight,m=d.strideWidth,b=d.dilationHeight,y=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,I=xs(o.shape,"float32"),C=n.data.get(s.dataId).values,N=xs(s.shape,"float32",C);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const s=n-k,a=r-w;let i=0;for(let n=0;n<x;n+=b){const r=(s+n)/g;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let s=0;s<v;s+=y){const o=(a+s)/m;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=x*v-1-f.get(e,r,o,t)===n*v+s?1:0;0!==l&&(i+=N.get(e,r,o,t)*l)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},Gw={kernelName:Rt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;Zb(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=ca(r.shape,s,a,[1,1],i),[h,d]=function(e,t,n,r,s){const a=ox(e,0,n,O(t),s,"max"),i=lx(e,t,n,s,!0,r);return[a.values,i.values]}(u,r.shape,r.dtype,o,c),p=l.write(h,c.outShape,r.dtype),f=l.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};function jw(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;let o;Zb(s,"sum"),o="bool"===s.dtype?Iy({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):ay({inputs:{x:s},backend:n});const l=o.shape.length,u=C(a,o.shape),c=ki(u,l);let h=u,d=o;null!=c&&(d=Gy({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Ci(h.length,l)),wi("sum",h,d.shape.length);const[p,f]=xi(d.shape,h);let g=vy(n,p,kr(d.dtype,"int32"));const m=b(f),y=n.data.get(g.dataId).values,x=n.data.get(d.dataId).values;for(let e=0;e<y.length;++e){const t=e*m;let n=0;for(let e=0;e<m;++e)n+=x[t+e];y[e]=n}if(i){const e=g;g=Ry({inputs:{x:g},backend:n,attrs:{shape:vi(g.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),g}const Hw={kernelName:wn,backendName:"cpu",kernelFunc:jw},qw={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=C(a,s.shape),l=b(xi(s.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=Iy({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=Ev({inputs:{a:h,b:c},backend:n});u.push(d);const p=jw({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},Kw={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;Zb(s,"min");const o=C(a,s.shape);let l=o;const u=ki(l,s.shape.length);let c=s;null!=u&&(c=Gy({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Ci(l.length,s.shape.length)),wi("min",l,c.shape.length);const[h,d]=xi(c.shape,l),p=b(d),f=P(b(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const r=g[t+e];r<n&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(i){const e=Ry({inputs:{x:m},backend:n,attrs:{shape:vi(h,o)}});return n.disposeIntermediateTensorInfo(m),e}return m}},Xw=uy(((e,t)=>Math.min(e,t))),Yw=Ny(Dt,Xw),Jw={kernelName:Dt,backendName:"cpu",kernelFunc:Yw},Zw={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:i}=r;Zb(s,"mirrorPad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=a.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=O(s.shape),f=b(o),g=o.length,m=O(o),y=$(s.dtype,f);for(let e=0;e<f;e++){let t=G(e,g,m);for(let e=0;e<g;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=V(t,d,p);y[e]=h[n]}return{dataId:n.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},Qw=uy(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),ek=Ny(Ot,Qw),tk={kernelName:Ot,backendName:"cpu",kernelFunc:ek};var nk=n(5202);function rk(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=s.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=C([o],s.shape),u=Lw({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=vi(u.shape,l),h=Ry({inputs:{x:u},backend:n,attrs:{shape:c}}),d=Fv({inputs:{a:s,b:h},backend:n}),p=mv({inputs:{x:d},backend:n}),f=jw({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),g=Ry({inputs:{x:f},backend:n,attrs:{shape:c}}),m=Ev({inputs:{a:p,b:g},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}const sk={kernelName:Cn,backendName:"cpu",kernelFunc:rk},ak={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r;Zb(s,"multinomial");const l=o?s:rk({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,a],p=P(b(d),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=nk.alea(i.toString()),s=e*a;for(let e=0;e<a;++e){const t=r();p[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[s+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function ik(e,t,n){const r=ar(-1,n);return Iv([],t,r,e,n)}const ok={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;Zb(r,"neg");const s=n.data.get(r.dataId).values,[a,i]=ik(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}},lk=Mo,uk={kernelName:Wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;Zb(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=lk(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},ck=zo,hk={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;Zb(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=ck(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},dk=Bo,pk={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;Zb(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,f=l,g=u,{selectedIndices:m,selectedScores:b}=dk(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},fk=uy(((e,t)=>e!==t?1:0)),gk=Ny(Pt,fk,null,"bool"),mk={kernelName:Pt,backendName:"cpu",kernelFunc:gk},bk={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:i,offValue:o}=r;Zb(s,"oneHot");const l=b(s.shape),u=new Float32Array(l*a);u.fill(o);const c=n.data.get(s.dataId).values;for(let e=0;e<l;++e)c[e]>=0&&c[e]<a&&(u[e*a+c[e]]=i);return n.makeTensorInfo([...s.shape,a],"int32",u)}};function yk(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=wy({inputs:{input:r},backend:n}),t=yk({inputs:{x:e},backend:n}),s=Ax({inputs:{input:r},backend:n}),a=yk({inputs:{x:s},backend:n}),i=yy({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return zv({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const xk={kernelName:zn,backendName:"cpu",kernelFunc:yk},vk={kernelName:Gt,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=wy({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=Ax({inputs:{input:s},backend:r}),i=yk({inputs:{x:a},backend:r}),o=yy({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return zv({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function wk(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return yv({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{f(a,e.shape,"All tensors passed to stack must have matching shapes"),p(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=Fx({inputs:t.map((e=>{const t=yv({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const kk={kernelName:Ht,backendName:"cpu",kernelFunc:wk},Ik={kernelName:qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;Zb(s,"pad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=n.data.get(s.dataId).values,c=b(s.shape),h=s.shape.length,d=O(s.shape),p=b(o),f=o.length,g=O(o),m=$(s.dtype,p);0!==i&&m.fill(i);for(let e=0;e<c;e++)m[V(G(e,h,d).map(((e,t)=>e+l[t])),f,g)]=u[e];return{dataId:n.write(m,o,s.dtype),shape:o,dtype:s.dtype}}},Ck=uy(((e,t)=>Math.pow(e,t))),Nk=Ny(Kt,Ck),$k={kernelName:Kt,backendName:"cpu",kernelFunc:Nk};function Sk(e,t,n,r){const[s,a]=xi(e,r),i=kr(t,"int32"),o=P(b(s),i),l=b(a);for(let e=0;e<o.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:s,outDtype:i}}const Ek={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;Zb(s,"prod");const o=s.shape.length,l=C(a,s.shape),u=ki(l,o);let c=l,h=s;const d=[];null!=u&&(h=Gy({inputs:{x:s},backend:n,attrs:{perm:u}}),d.push(h),c=Ci(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:g,outDtype:m}=Sk(h.shape,h.dtype,p,c);let b=g;return i&&(b=vi(g,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,m,f)}};function Tk(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return P(0,r);const s=P(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const Ak={kernelName:Jt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=Tk(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},Rk=ty(Qt,(e=>1/e)),Fk={kernelName:Qt,backendName:"cpu",kernelFunc:Rk},_k={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;Zb(s,"resizeBilinear");const l=O(s.shape),[u,c]=o,[h,d,p,f]=s.shape,g=n.data.get(s.dataId).values,m=new Float32Array(b([h,u,c,f])),y=[a&&u>1?d-1:d,a&&c>1?p-1:p],x=[a&&u>1?u-1:u,a&&c>1?c-1:c];let v=0;const w=y[0]/x[0],k=y[1]/x[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=i?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),s=n-r,a=Math.min(d-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+a*l[1];for(let e=0;e<c;e++){let t;t=i?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(p-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],d=o+a*l[2],b=u+a*l[2];for(let e=0;e<f;e++){const t=g[c+e],n=g[h+e],a=t+(g[d+e]-t)*r,i=a+(n+(g[b+e]-n)*r-a)*s;m[v++]=i}}}return n.makeTensorInfo([h,u,c,f],"float32",m)}},Dk={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;Zb([a,s],"resizeBilinearGrad");const o=O(s.shape),[l,u,c,h]=s.shape,[,d,p]=a.shape,f=new Float32Array(l*u*c*h),g=[i&&d>1?u-1:u,i&&p>1?c-1:c],m=[i&&d>1?d-1:d,i&&p>1?p-1:p],b=g[0]/m[0],y=g[1]/m[1],x=n.data.get(a.dataId).values;let v=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*b,r=Math.floor(n),s=Math.min(Math.ceil(n),u-1),a=t+r*o[1],i=t+s*o[1],l=n-r,d=1-l;for(let e=0;e<p;e++){const t=e*y,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,u=1-s,p=a+n*o[2],g=a+r*o[2],m=i+n*o[2],b=i+r*o[2],w=d*u,k=d*s,I=l*u,C=l*s;for(let e=0;e<h;e++){const t=x[v++];f[p+e]+=t*w,f[g+e]+=t*k,f[m+e]+=t*I,f[b+e]+=t*C}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},Lk={kernelName:nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;Zb(s,"resizeNearestNeighbor");const l=O(s.shape),[u,c]=o,[h,d,p,f]=s.shape,g=n.data.get(s.dataId).values,m=new Float32Array(h*u*c*f),b=[a&&u>1?d-1:d,a&&c>1?p-1:p],y=[a&&u>1?u-1:u,a&&c>1?c-1:c],x=b[0]/y[0],v=b[1]/y[1];let w=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=i?x*(e+.5):x*e;let r=Math.min(d-1,a?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const s=t+r*l[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(p-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=s+n*l[2];for(let e=0;e<f;e++){const t=g[r+e];m[w++]=t}}}}return n.makeTensorInfo([h,u,c,f],s.dtype,m)}},Ok={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;Zb([a,s],"resizeNearestNeighborGrad");const o=O(s.shape),l=O(a.shape),[u,c,h,d]=s.shape,[,p,f]=a.shape,g=new Float32Array(u*c*h*d),m=n.data.get(a.dataId).values,b=[i&&p>1?c-1:c,i&&f>1?h-1:h],y=[i&&p>1?p-1:p,i&&f>1?f-1:f],x=b[0]/y[0],v=b[1]/y[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,C=2*Math.ceil(k)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),s=Math.floor(r-I/2);for(let r=0;r<h;r++){const a=n+r*o[2],u=Math.floor(r*k),b=Math.floor(u-C/2);for(let n=0;n<d;n++){let o=0;for(let a=0;a<I;a++){const u=a+s;if(u<0||u>=p)continue;const d=t+u*l[1],g=u*x;if(e===Math.min(c-1,i?Math.round(g):Math.floor(g)))for(let e=0;e<C;e++){const t=e+b;if(t<0||t>=f)continue;const s=d+t*l[2],a=t*v;r===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=m[s+n])}}g[a+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,g)}},Mk={kernelName:ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;Zb(s,"reverse");const i=s.shape.length,o=C(a,s.shape);if(0===i)return ay({inputs:{x:s},backend:n});const l=new cr(s.shape,s.dtype),u=n.bufferSync(s);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=s.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},zk={kernelName:Pn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,l=$(r.dtype,b(r.shape)),[u,c,h,d]=r.shape,[p,f]=kl(i,c,h),g=Math.sin(s),m=Math.cos(s),y=o.data.get(r.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let i=0;i<d;i++){const o=[u,e,r,i],b=o[2],x=o[1];let v=(b-p)*m-(x-f)*g,w=(b-p)*g+(x-f)*m;v=Math.round(v+p),w=Math.round(w+f);let k=a;"number"!=typeof a&&(k=3===i?255:a[i]),v>=0&&v<h&&w>=0&&w<c&&(k=y[t+w*(h*d)+v*d+i]),l[t+n+s+i]=k}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Bk=ty(un,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),Pk={kernelName:un,backendName:"cpu",kernelFunc:Bk},Wk=kx((e=>1/Math.sqrt(e))),Uk=ny(cn,Wk),Vk={kernelName:cn,backendName:"cpu",kernelFunc:Uk};function Gk(e,t,n,r,s,a,i,o,l,u){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return xs(n,t.dtype);const p=xs(c,t.dtype);p.values.fill(l);for(let e=0;e<a;e++){const a=[];let l=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),l+=n*o[t]}if(l<0||l>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[l*s+n]+=d[e*s+n]:p.values[l*s+n]=0===t.rank?d[0]:d[e*s+n]}return p}const jk={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Rl(0,s,i),d=Gk(n.bufferSync(s),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}},Hk={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;Zb([r,s,a],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=kr(s.dtype,a.dtype),h=P(b(s.shape),c);let d=0;const p=0===i||i>1||1===s.shape.length?1:b(s.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=l[e]:h[d++]=u[e];return n.makeTensorInfo(s.shape,c,h)}},qk=Fl,Kk=_l,Xk=ty(pn,(e=>e>=0?Kk*e:qk*(Math.exp(e)-1))),Yk={kernelName:pn,backendName:"cpu",kernelFunc:Xk},Jk=ty(yn,(e=>1/(1+Math.exp(-e)))),Zk={kernelName:yn,backendName:"cpu",kernelFunc:Jk},Qk=ty(bn,(e=>e<0?-1:e>0?1:0)),eI={kernelName:bn,backendName:"cpu",kernelFunc:Qk},tI=ty(gn,(e=>Math.sin(e))),nI={kernelName:gn,backendName:"cpu",kernelFunc:tI},rI=ty(mn,(e=>Math.sinh(e))),sI={kernelName:mn,backendName:"cpu",kernelFunc:rI},aI=Math.log(1.1920928955078125e-7)+2,iI=ty(xn,(e=>{const t=e>-aI,n=e<aI,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),oI={kernelName:xn,backendName:"cpu",kernelFunc:iI},lI={kernelName:kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;Zb([s],"spaceToBatchND");const o=b(a),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<s.shape.length;++e)l.push([0,0]);const u=Ik.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=Il(u.shape,a,o,!1),h=Cl(c.length,a.length,!1),d=Nl(u.shape,a,o,!1),p=Ry({inputs:{x:u},backend:n,attrs:{shape:c}}),f=Gy({inputs:{x:p},backend:n,attrs:{perm:h}}),g=Ry({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}},uI={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Rl(0,s,o),p=Gk(n.bufferSync(s),n.bufferSync(a),o,d,c,u,l,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}},cI={kernelName:In,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=C(i,s.shape)[0],l=Yl(s,a,o),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const r=mx({inputs:{x:s},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},hI=ty(vn,(e=>Math.sqrt(e))),dI={kernelName:vn,backendName:"cpu",kernelFunc:hI},pI={kernelName:$n,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;Zb(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];a[e]=t*t}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},fI=uy(((e,t)=>{const n=e-t;return n*n})),gI=Ny(Nn,fI),mI={kernelName:Nn,backendName:"cpu",kernelFunc:gI},bI=ty(Bn,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),yI={kernelName:Bn,backendName:"cpu",kernelFunc:bI};function xI(e,t,n,r){const s=xs(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+r[e];s.set(t.get(...i),...a)}return s}const vI={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;Zb(s,"stridedSlice");const{nonStrided:p,$begin:f,$strides:g,size:m,newShape:b,outShape:y}=Gs(s.shape,a,i,o,l,u,c,h,d),x=Ry({inputs:{x:s},backend:n,attrs:{shape:b}});let v;if(p){const e=mx({inputs:{x},backend:n,attrs:{begin:f,size:m}});v=Ry({inputs:{x:e},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(e)}else if(y.some((e=>0===e)))v=n.makeTensorInfo(y,s.dtype,[]);else{const e=xI(y,n.bufferSync(x),g,f);v=n.makeTensorInfo(e.shape,e.dtype,e.values)}const w=Ry({inputs:{x:v},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}},wI=ty(An,(e=>Math.tan(e))),kI={kernelName:An,backendName:"cpu",kernelFunc:wI},II=ty(Rn,(e=>Math.tanh(e)));function CI(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=xs(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r}function NI(e,t,n,r,s){const a=t[t.length-1],[i,o]=[e.length/a,a],l=$(n,i*r),u=$("int32",i*r);for(let t=0;t<i;t++){const n=t*o,s=e.subarray(n,n+o),a=[];for(let e=0;e<s.length;e++)a.push({value:s[e],index:e});a.sort(((e,t)=>t.value-e.value));const i=t*r,c=l.subarray(i,i+r),h=u.subarray(i,i+r);for(let e=0;e<r;e++)c[e]=a[e].value,h[e]=a[e].index}const c=t.slice();return c[c.length-1]=r,[xs(c,n,l),xs(c,"int32",u)]}function $I(e,t,n,r){const s=C(t,n)[0],a=[1,n[0],1];for(let e=0;e<s;e++)a[0]*=n[e];a[1]=n[s];for(let e=s+1;e<n.length;e++)a[2]*=n[e];const i={},o=new Int32Array(n[s]),l=new cr(a,r,e),u=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}const h=a.slice();h[1]=Object.keys(i).length;const d=new cr(h,r);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)d.set(l.get(n,e,r),n,t,r)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const SI={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r;Zb(s,"unsortedSegmentSum");const o=[],l=[],u=s.shape.length-a.shape.length;let c=a;for(let e=0;e<u;++e){const t=yv({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<i;++e){const t=ar(e,"int32"),r=n.makeTensorInfo([],"int32",t),a=av({inputs:{a:r,b:c},backend:n}),i=Iy({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),u=Nv({inputs:{a:i,b:s},backend:n}),h=jw({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(r),l.push(a),l.push(i),l.push(u),l.push(h)}const h=wk({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},EI=[Ly,My,By,Wy,Ay,Uy,Hy,qy,Ky,Xy,Jy,Qy,tx,sx,ix,cx,hx,dx,px,Dy,fx,yx,wx,Cy,Nx,Sx,xy,Ex,_x,Ox,Mx,Lx,Bx,Px,zx,Ux,Gx,jx,Hx,qx,Kx,Yx,Jx,Zx,Qx,ev,nv,tv,Tv,sy,rv,iv,fv,bv,xv,kv,Mv,Bv,Pv,Vv,Hv,qv,Kv,Xv,Jv,ew,rw,iy,sw,Rx,iw,lw,cw,ly,pw,mw,yw,ww,Iw,$w,Ew,Rw,Fw,_w,Bw,Pw,Ww,Uw,Vw,Gw,Ow,qw,Kw,Jw,Zw,tk,ak,$v,ok,uk,hk,pk,mk,bk,vk,kk,Ik,$k,dy,Ek,Ak,ky,Fk,fy,my,Fy,_k,Dk,Lk,Ok,Mk,zk,Pk,Vk,jk,Hk,Yk,Zk,eI,nI,sI,bx,sk,oI,lI,uI,cI,dI,pI,mI,yI,vI,_v,Hw,kI,{kernelName:Rn,backendName:"cpu",kernelFunc:II},{kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;Zb(s,"tile");const i=CI(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r;Zb(s,"topk");const o=n.data.get(s.dataId).values,[l,u]=NI(o,s.shape,s.dtype,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},jy,{kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;Zb(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=$I(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},{kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],l=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==a&&(l[u++]=s.shape[e]);const c=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[a]=e;const t=mx({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[e]=Ry({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}},SI,xk];for(const e of EI)Kn(e);const TI={},AI={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function RI(e){if(!(e in TI)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete TI[e]}),!1),1===e?t.getContext("webgl",AI)||t.getContext("experimental-webgl",AI):t.getContext("webgl2",AI)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;TI[e]=t}const t=TI[e];return t.isContextLost()?(delete TI[e],RI(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),TI[e])}var FI,_I,DI;function LI(e,t){return[t,e]}function OI(e){const t=b(e);return v(Math.ceil(t/4))}function MI(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function zI(e,t){const n=e;let r,s,a,i,o,l,u,c,h,d;return 2===q().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT),l=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function BI(e,t){const n=t();return q().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function PI(e){return!!(q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function WI(e,t){return XI(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(FI||(FI={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(_I||(_I={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(DI||(DI={}));const UI=/ERROR: [0-9]+:([0-9]+):/g;function VI(e,t){if(BI(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function GI(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(BI(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),BI(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i))),BI(e,(()=>e.enableVertexAttribArray(o))),!0)}function jI(e,t,n,r){BI(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),BI(e,(()=>e.activeTexture(e.TEXTURE0+n))),BI(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),BI(e,(()=>e.uniform1i(n,r)))}function HI(e,t,n){BI(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),BI(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function qI(e,t){BI(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),BI(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function KI(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function XI(e,t,n){const r=BI(e,(()=>t()));if(null==r)throw new Error(n);return r}function YI(e,t=2){return b(e.slice(0,e.length-t))}function JI(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function ZI(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[YI(e),...JI(e)]),t}function QI(e){return e%2==0}function eC(e,t){if(y(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(QI(n)&&QI(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&QI(e[0])&&QI(t[0])}let tC,nC;function rC(e,t){return null!=e.getExtension(t)}function sC(e){try{if(null!=RI(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function aC(e){const t=zI(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function iC(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&p("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const oC=q();function lC(){let e,t,n,r,s,a,i,o,l,u;return 2===q().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function uC(e,t,n="index"){const r=O(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function cC(e){const t=O(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}oC.registerFlag("HAS_WEBGL",(()=>oC.getNumber("WEBGL_VERSION")>0)),oC.registerFlag("WEBGL_VERSION",(()=>sC(2)?2:sC(1)?1:0)),oC.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),oC.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===oC.get("WEBGL_VERSION"))),oC.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),oC.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),oC.registerFlag("WEBGL_PACK",(()=>oC.getBool("HAS_WEBGL"))),oC.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>oC.getBool("WEBGL_PACK"))),oC.registerFlag("WEBGL_PACK_CLIP",(()=>oC.getBool("WEBGL_PACK"))),oC.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),oC.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>oC.getBool("WEBGL_PACK"))),oC.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>oC.getBool("WEBGL_PACK"))),oC.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>oC.getBool("WEBGL_PACK"))),oC.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>oC.getBool("WEBGL_PACK"))),oC.registerFlag("WEBGL_PACK_REDUCE",(()=>oC.getBool("WEBGL_PACK"))),oC.registerFlag("WEBGL_LAZILY_UNPACK",(()=>oC.getBool("WEBGL_PACK"))),oC.registerFlag("WEBGL_CONV_IM2COL",(()=>oC.getBool("WEBGL_PACK"))),oC.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==tC){const t=RI(e);tC=t.getParameter(t.MAX_TEXTURE_SIZE)}return tC}(oC.getNumber("WEBGL_VERSION")))),oC.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==nC){const t=RI(e);nC=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,nC)}(oC.getNumber("WEBGL_VERSION")))),oC.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=oC.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=RI(e);return t=rC(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:rC(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),oC.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>oC.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!function(){if("undefined"!=typeof navigator&&null!=navigator){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}())),oC.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=RI(e);if(1===e){if(!rC(t,"OES_texture_float"))return!1}else if(!rC(t,"EXT_color_buffer_float"))return!1;return aC(t)}(oC.getNumber("WEBGL_VERSION")))),oC.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!oC.getBool("WEBGL_FORCE_F16_TEXTURES")&&oC.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),oC.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=RI(e);if(1!==e){if(rC(t,"EXT_color_buffer_float"))return aC(t);const e="EXT_color_buffer_half_float";if(rC(t,e)){const n=t.getExtension(e);return function(e,t){const n=zI(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}return!!rC(t,"OES_texture_float")&&!!rC(t,"WEBGL_color_buffer_float")&&aC(t)}(oC.getNumber("WEBGL_VERSION")))),oC.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=oC.getNumber("WEBGL_VERSION"))&&null!=RI(e).fenceSync;var e})),oC.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>oC.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),oC.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}));const hC="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class dC{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=FI.DENSE;const t=OI(e),n=lC();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${uC(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class pC{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=FI.DENSE;const t=OI(e),n=lC();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${uC(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class fC{constructor(e){this.variableNames=["A"],this.outTexUsage=_I.DOWNLOAD;const t=lC();this.outputShape=e,this.userCode=`\n      ${hC}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class gC{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=_I.DOWNLOAD;const t=lC();this.outputShape=e,this.userCode=`\n      ${hC}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class mC{constructor(e,t,n=!1){this.variableNames=["A"];const r=lC(),[s,a]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${cC(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class bC{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=lC(),[s,a]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const o=2*t+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${cC(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}function yC(e,t,n,r,s,a){!function(e,t){const n=q().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return XI(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return BI(e,(()=>e.bindTexture(o,i))),BI(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),BI(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),BI(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),BI(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),BI(e,(()=>e.texImage2D(o,0,r,t,n,0,s,a,null))),BI(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function xC(e){return e.internalFormatFloat}function vC(e){return e.internalFormatHalfFloat}function wC(e){return e.downloadTextureFormat}function kC(e){return e.internalFormatPackedFloat}function IC(e){return e.internalFormatPackedHalfFloat}class CC{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=q().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){TI[e]=t}(t,e)):this.gl=RI(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===q().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=WI(this.gl,e),rC(this.gl,t))this.textureHalfFloatExtension=WI(this.gl,t);else if(q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),rC(this.gl,r))this.colorBufferHalfFloatExtension=WI(this.gl,r);else if(q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",rC(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!rC(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=XI(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return BI(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),BI(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=XI(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return BI(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),BI(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return XI(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=zI(this.gl,this.textureHalfFloatExtension)}get debug(){return q().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;BI(e,(()=>e.finish())),BI(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),BI(e,(()=>e.deleteFramebuffer(this.framebuffer))),BI(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),BI(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),BI(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=LI(t,n);return yC(e,s,a,xC(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=LI(t,n);return yC(e,s,a,vC(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=LI(t,n);return yC(e,s,a,wC(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){BI(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?BI(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):BI(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),BI(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let i,o,l;BI(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(s),BI(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),BI(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=MI(t,n);return yC(e,s,a,IC(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=MI(t,n);return yC(e,s,a,kC(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(qI(this.gl,this.framebuffer),this.outputTexture=null),BI(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,a]=LI(t,n),i=new Uint8Array(t*n*4);return BI(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return function(e,t,n,r,s,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,r]=MI(e,t);return n*r*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const s=e.createBuffer();BI(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const a=16*t*n;return BI(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),BI(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),BI(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(q().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return BI(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=XI(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(BI(e,(()=>e.shaderSource(n,t))),BI(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=UI.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,i=s.map(((e,t)=>w((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const l=i.slice(0,r-1),u=i.slice(r-1,r),c=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${w(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e),r=function(e){const t=lC();return function(e,t){const n=XI(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(BI(e,(()=>e.shaderSource(n,t))),BI(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t),s=function(e){return XI(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return BI(t,(()=>t.attachShader(s,r))),BI(t,(()=>t.attachShader(s,n))),function(e,t){if(BI(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,s),this.debug&&VI(t,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=function(e,t,n){return BI(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),GI(e,t,"clipSpacePos",n,3,20,0)&&GI(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),s}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&BI(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&VI(this.gl,this.program),BI(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return XI(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),BI(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),jI(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=MI(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&VI(this.gl,this.program),KI(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),BI(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),BI(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=WI(this.gl,2===q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await k((()=>this.disposed||this.isQueryAvailable(e,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||k((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),HI(this.gl,e,this.framebuffer),this.debug&&KI(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(HI(this.gl,this.outputTexture,this.framebuffer),this.debug&&KI(this.gl)):qI(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;HI(r,e,this.framebuffer),this.debug&&KI(r),this.outputTexture=e,BI(r,(()=>r.viewport(0,0,t,n))),BI(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),BI(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:NC}=a;function $C(e,t,n,r){const s=[];e.forEach((e=>{const t=b(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`))}));const a=s.join("\n"),i=e.map((e=>function(e,t,n=!1){let r="";r+=n?EC(e):SC(e);const s=e.shapeInfo.logicalShape,a=t.logicalShape;return s.length<=a.length&&(r+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=NC(e.shapeInfo.logicalShape,t.logicalShape),l=LC(i),u=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let d="";d=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let p="return outputValue;";const f=1===b(e.shapeInfo.logicalShape),g=1===b(t.logicalShape);if(1!==a||f||g){if(f&&!g)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&y(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=LC(l),c=NC(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t)),r}(e,t,r))).join("\n"),o=t.texShape,l=lC(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,h,d=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${TC}\n    ${AC}\n    ${RC}\n  `}(l);return t.isPacked?(c=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(y(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let a=s,i="",o="b, r, c";for(let t=2;t<e.length-1;t++)a*=e[e.length-t-1],i=`\n      int b${t} = index / ${a};\n      index -= b${t} * ${a};\n    `+i,o=`b${t}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,o),h=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(l)):(c=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=t)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(e,t){return y(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=uC(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=uC(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=uC(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=uC(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}var n}(t.logicalShape,o),h=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),r&&(d+=FC),[d,u,h,a,c,i,n].join("\n")}function SC(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[a,i]=e.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${i}, ${_C(t)});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${DC(e)}\n      }\n    `;const r=e.shapeInfo.texShape,s=r[0],a=r[1];if(1===a&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const i=_C(t);return 1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape;if(null!=s&&y(t,s)){const e=s[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:a,keptDims:i}=N(t),o=a;if(o.length<t.length){const t=["row","col"];return`\n      ${SC(OC(e,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${MC(t,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${DC(e)}\n      }\n    `;const l=s[0],u=s[1],c=_C(n);return 1===u?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[1]*t[2],a=t[2],{newShape:i,keptDims:o}=N(t),l=i;if(l.length<t.length){const t=["row","col","depth"];return`\n        ${SC(OC(e,l))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${MC(t,o)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${a}, 1)));\n        ${DC(e)}\n      }\n    `;const u=e.shapeInfo.texShape,c=u[0],h=u[1],d=e.shapeInfo.flatOffset;if(h===s&&null==d)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===a&&null==d)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${a} + depth + ${_C(n)};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[3],a=t[2]*s,i=t[1]*a,{newShape:o,keptDims:l}=N(t);if(o.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${SC(OC(e,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${MC(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${a}, ${s}, 1)));\n        ${DC(e)}\n      }\n    `;const u=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,h=c[0],d=c[1];if(d===i&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${a} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${d}, index + ${_C(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=N(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${SC(OC(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${MC(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${DC(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${_C(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=N(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${SC(OC(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${MC(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${DC(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${_C(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function EC(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${lC().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=lC();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${a.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=s[0],i=s[1],o=lC();if(null!=s&&y(t,s))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(t[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===t[0]){const n=[1,2],s=["b","row","col"];return`\n        ${EC(OC(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${MC(s,n)});\n        }\n      `}const i=a[0],o=a[1],l=Math.ceil(t[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${l*Math.ceil(t[1]/2)}, ${l}, b, row, col);\n      return ${lC().texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],l=i[1],u=Math.ceil(t[n-1]/2);let c=u*Math.ceil(t[n-2]/2),h="int b, int row, int col",d=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let e=2;e<n-1;e++)h=`int b${e}, `+h,c*=t[n-e-1],d=`b${e} * ${c} + `+d;return`\n    vec4 ${s}(${h}) {\n      int index = ${d};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${lC().texture2D}(${r}, uv);\n    }\n  `}(e)}}const TC="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",AC="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",RC="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",FC="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function _C(e){return`offset${e}`}function DC(e){const t=e.name,n=b(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function LC(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function OC(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function MC(e,t){return t.map((t=>e[t])).join(", ")}function zC(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!y(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!y(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}const{addImpl:BC,bincountImpl:PC,bincountReduceImpl:WC,ceilImpl:UC,concatImpl:VC,expImpl:GC,expm1Impl:jC,floorImpl:HC,gatherV2Impl:qC,greaterImpl:KC,lessImpl:XC,linSpaceImpl:YC,logImpl:JC,maxImpl:ZC,maximumImpl:QC,minimumImpl:eN,multiplyImpl:tN,negImpl:nN,prodImpl:rN,rangeImpl:sN,rsqrtImpl:aN,simpleAbsImpl:iN,sliceImpl:oN,stridedSliceImpl:lN,subImpl:uN,tileImpl:cN,topKImpl:hN,transposeImpl:dN,uniqueImpl:pN}=i;function fN(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function gN(e,t){return 1===t?[e]:fN(e,t)}class mN{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=gN("rc",t),r=LC(t),s=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let s=e-2;s<e;s++)r+=`${n[s]} >= ${t[s]}`,s<e-1&&(r+="||");return r}(t,e,n),a=function(e,t,n,r){if(1===e)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let a=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<e;n++)a=`${t[t.length-1-n]},`+a;n.push(a)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class bN{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${uC(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${cC(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class yN{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=vN(t,n),s=wN(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=xN(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let i;return r===DI.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===DI.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===DI.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===DI.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===DI.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=vN(n,r),a=wN(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=xN(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=q().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function xN(e,t,n,r,s){const a=function(e,t){switch(e){case DI.PACKED_2X2_FLOAT32:return kC(t);case DI.PACKED_2X2_FLOAT16:return IC(t);case DI.UNPACKED_FLOAT32:return xC(t);case DI.UNPACKED_FLOAT16:return vC(t);case DI.PACKED_4X1_UNSIGNED_BYTE:return wC(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(s){const[t,n]=MI(e[0],e[1]);i=t*n}else{const[t,n]=LI(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function vN(e,t){if(e===_I.UPLOAD)return DI.PACKED_2X2_FLOAT32;if(e===_I.RENDER||null==e)return function(e){return q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?DI.PACKED_2X2_FLOAT32:DI.UNPACKED_FLOAT32:e?DI.PACKED_2X2_FLOAT16:DI.UNPACKED_FLOAT16}(t);if(e===_I.DOWNLOAD||e===_I.PIXELS)return DI.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function wN(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class kN{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const IN="return abs(x);",CN="return x;";class NN{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class $N{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=gN("rc",t),r=LC(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const SN=su,EN={};class TN extends l{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!q().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=RI(q().getNumber("WEBGL_VERSION"));this.binaryCache=((t=q().getNumber("WEBGL_VERSION"))in EN||(EN[t]={}),EN[t]),this.gpgpu=new CC(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new yN(this.gpgpu),this.numMBBeforeWarning=null==q().global.screen?1024:q().global.screen.height*q().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new o(this,Xs())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((q().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||q().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:_I.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}decComplexRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.complexParentRefCount>0&&t.refCount--}}move(e,t,n,r){if(q().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:_I.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new NN(i,CN):new kN(i,CN);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=or()),c="complex64"===r?Ul(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=or()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=s){let t;t=o?new NN(r,CN):new kN(r,CN);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(!q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===q().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&q().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture,...OI(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=Ul(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=b(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}null!=l&&this.disposeIntermediateTensorInfo(l);const h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e),this.pendingDeletes--),h}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>ur(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return xs(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!PI(n)){if(q().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=b(t);if(q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...OI(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=q().getBool("WEBGL_PACK")&&!0===r,i=a?ZI(t):t,o=a?new gC(i):new fC(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=m(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=m(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:or(),endMs:null}}endTimer(e){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=or(),e)}async getQueryTime(e){if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){if(this.pendingDisposal.has(e))return;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),void this.pendingDeletes++;if(!this.texData.has(e))return;if(this.texData.get(e).complexParentRefCount>0)return void this.texData.get(e).refCount--;this.releaseGPUData(e);const{complexTensorInfos:t}=this.texData.get(e);null!=t&&(this.texData.get(t.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.real),this.texData.get(t.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.imag)),this.texData.delete(e)}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return q().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Xs().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=128){const n=this.getCPUBackend();return q().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&e.every((e=>null==this.texData.get(e.dataId).texture&&b(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Pl("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return SN(e.shape,t)}packedUnaryOp(e,t,n){const r=new NN(e.shape,t);return this.compileAndRun(r,[e],n)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=iN(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(q().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,IN,e.dtype);const t=new kN(e.shape,IN);return this.compileAndRun(t,[e])}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&R(n[0])){const s=n.map((e=>lr(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Xs().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new $N(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new mN(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[YI(e.shape),...JI(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[YI(t),...JI(t)],a=new bN(s,n),i=this.runWebGLProgram(a,[r],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:s}=t,a=ZI(r);let i;return i=n?new pC(a):new dC(a),{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:e}],s,null,!0).dataId}}runWebGLProgram(e,t,n,r,s=!1){const a=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(a.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===FI.DENSE){const t=OI(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===b(a.shape))return i.values=$(a.dtype,0),a;const o=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&b(t.shape)<=q().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!eC(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),o.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const u={shape:a.shape,texData:i,isUniform:!1},c=function(e,t,n){let r="";t.concat(n).forEach((e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${n}_${t}`}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s,a}(e,l,u),h=this.getAndSaveBinary(c,(()=>function(e,t,n,r){const s=t.userCode,a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=a.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=$C(a,o,s,t.packedInputs),u=e.createProgram(l);let c=null;const h=e.getUniformLocation(u,"NAN",!1);1===q().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(u,"INFINITY",!1));const d={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n],s=!1;d[r]=e.getUniformLocation(u,r,s),d[`offset${r}`]=e.getUniformLocation(u,`offset${r}`,s)}return{program:t,source:l,webGLProgram:u,uniformLocations:d,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,e,l,u))),d=null!=this.activeTimers;let p;if(d&&(p=this.startTimer()),function(e,t,n,r,s){zC(t.inShapeInfos,n),zC([t.outShapeInfo],[r]);const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a,i[0],i[1]):e.setOutputMatrixTexture(a,i[0],i[1]),e.setProgram(t.webGLProgram),1===q().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const s=t.program.variableNames[r],a=t.uniformLocations[s],i=t.uniformLocations[`offset${s}`];if(null!=a)if(n.isUniform)if(b(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,a,r)})),null!=s&&s(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,h,l,u,r),o.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(p=this.endTimer(p),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(p)})),!q().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===s){const e=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),e}return a}compileAndRun(e,t,n,r,s=!1){n=n||t[0].dtype;const a=this.runWebGLProgram(e,t,n,r,s);return Xs().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(q().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Js((()=>{if(!q().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=q().getBool("DEBUG");q().set("DEBUG",!1);const t=this.abs(na(1e-8)).dataSync()[0];if(q().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=or());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=q().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?d(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=N(e);e=t.newShape}let r=b(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=YI(e);let n=2,s=2;return e.length&&([n,s]=JI(e)),r=t*(n/2)*(s/2),v(r).map((e=>2*e))}return v(r)}(n,o),t.texShape=c),null!=s){const e=ZI(n);let a,i=c[1],h=c[0];const d=s instanceof Uint8Array;o?([i,h]=MI(c[0],c[1]),a=new bC(e,[h,i],d)):a=new mC(e,[h,i],d);const p=this.makeTensorInfo([h,i],r);this.texData.get(p.dataId).usage=d?_I.PIXELS:_I.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),i,h,s);const f=!0,g=this.runWebGLProgram(a,[p],r,null,f),m=this.texData.get(g.dataId);t.texture=m.texture,t.texShape=m.texShape,t.isPacked=m.isPacked,t.usage=m.usage,this.disposeIntermediateTensorInfo(p),this.texData.delete(g.dataId),t.values=null,l&&(this.uploadWaitMs+=or()-u)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*A(t)}}_r()&&ea("webgl",(()=>new TN),2);class AN{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Ha(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class RN{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ha(t,n);const s=this.outputShape.length;let a="";if(r)if(0===s||1===b(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${LC(s)} coords = getOutputCoords();\n        `,1===s)a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=gN("coords",s);a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function FN(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const _N={kernelName:lt,backendName:"webgl",kernelFunc:FN};function DN(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=FN({inputs:{x:r},backend:n});n.texData.get(o.dataId).complexParentRefCount++;const l=FN({inputs:{x:s},backend:n});return n.texData.get(l.dataId).complexParentRefCount++,i.complexTensorInfos={real:o,imag:l},a}const LN={kernelName:ke,backendName:"webgl",kernelFunc:DN},ON="return (a < 0.) ? b * a : a;",MN="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",zN={kernelName:ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,i=n.makeTensorInfo([],"float32",ar(a,"float32")),o=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new RN(MN,s.shape,i.shape):new AN(ON,s.shape,i.shape),l=n.runWebGLProgram(o,[s,i],s.dtype);return n.disposeIntermediateTensorInfo(i),l}},BN="return (a < 0.) ? b * a : a;",PN="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",WN={kernelName:Xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new RN(PN,r.shape,s.shape):new AN(BN,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}};function UN({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:i}=s,o=a,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=q().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new NN(i.shape,t):new kN(i.shape,e),o.runWebGLProgram(u,[i],l)}}function VN({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(r&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new AN(e,l.shape,u.shape);return c.runWebGLProgram(i,[s,a],kr(n.dtype,r.dtype))})),a=DN({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||kr(l.dtype,u.dtype);if(c.shouldExecuteOnCPU([l,u])&&null!=s){const e=c.texData.get(l.dataId),t=c.texData.get(u.dataId),[n,r]=s(l.shape,u.shape,e.values,t.values,h),a=c.makeTensorInfo(r,h);return c.texData.get(a.dataId).values=n,a}let d;return d=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new RN(t,l.shape,u.shape,n):new AN(e,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function GN(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?PN:BN;if("leakyrelu"===e)return t?MN:ON;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class jN{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=r?e[1]:e[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",m="";i&&(g=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${g}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${y};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class HN{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ha(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const qN="return a * b;";function KN(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=kr(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new HN("return areal * breal - aimag * bimag;",r.shape,s.shape),i=new HN("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=DN({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[i,o]=tN(r.shape,s.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new RN(qN,r.shape,s.shape):new AN(qN,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}const XN={kernelName:zt,backendName:"webgl",kernelFunc:KN};function YN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=n,o=b(s.shape),l=I(a,o),u=b(l);p(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(s.dataId);return!c.isPacked||eC(s.shape,l)||null!==c.texture&&eC(c.shape,l)?(i.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const r=[YI(e.shape),...JI(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[YI(t),...JI(t)],i=new bN(a,r),o=n.runWebGLProgram(i,[s],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(s,l,i)}const JN={kernelName:tn,backendName:"webgl",kernelFunc:YN};class ZN{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${x(e)?e.toPrecision(2):e}, ones);`}let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class QN{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function e$(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=wl(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:l,outSize:u}=s[i];let c,h;c="mean"===n?0===i?new ZN({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new ZN({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new QN({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class t${constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=LC(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class n${constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=LC(this.rank),s=fN("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=s[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function r$(e,t,n){const r=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new n$(e.shape,t):new t$(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function s$(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;return function(e,t,n,r){const s=t,a=e.shape.length,i=C(s,e.shape);let o=i;const l=ki(o,a),u=null!=l;let c=e;u&&(c=r$(e,l,r),o=Ci(o.length,a)),wi("sum",o,a);const[h,d]=xi(c.shape,o);let p=h;n&&(p=vi(h,i));const f=b(d),g=YN({inputs:{x:c},attrs:{shape:[b(e.shape)/f,f]},backend:r}),m=e$(g,Ir(e.dtype),"sum",r),y=YN({inputs:{x:m},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(m),u&&r.disposeIntermediateTensorInfo(c),y}(s,a,i,n)}const a$={kernelName:wn,backendName:"webgl",kernelFunc:s$};function i$(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=s.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=s.shape[a[e]];let u;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId).values,t=dN(e,s.shape,s.dtype,a,l);u=i.makeTensorInfo(l,s.dtype),i.texData.get(u.dataId).values=t}else u=r$(s,a,i);return u}const o$={kernelName:Dn,backendName:"webgl",kernelFunc:i$};function l$({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=r?t.shape[c-1]:t.shape[c-2],f=n?e.shape[u-1]:e.shape[u-2],g=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),y=t.shape.slice(0,-2),x=b(m),v=b(y);p(u>=2&&c>=2&&(x===v||1===x||1===v),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${y}).`));const w=(x>v?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([f,g]);p(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const k=n?[x,h,f]:[x,f,h],I=r?[v,g,d]:[v,d,g],C=YN({inputs:{x:e},backend:s,attrs:{shape:k}}),N=YN({inputs:{x:t},backend:s,attrs:{shape:I}}),$=[C,N],S=Math.max(x,v),E=n?C.shape[1]:C.shape[2],T=null!=a,A=null!=i,R="leakyrelu"===l,F=null!=l?GN(l,!0):null;let _;if((1===f||1===g)&&E>1e3&&!1===(T||A||R||null!=F)){let e=C,t=N;n&&(e=i$({inputs:{x:C},backend:s,attrs:{perm:[0,2,1]}}),$.push(e)),r&&(t=i$({inputs:{x:N},backend:s,attrs:{perm:[0,2,1]}}),$.push(t));const a=1===g;let i=e;1!==g&&(i=YN({inputs:{x:e},backend:s,attrs:{shape:[S,E,1]}}),$.push(i));const o=1===g?2:1;let l=t;a&&(l=YN({inputs:{x:t},backend:s,attrs:{shape:[S,1,E]}}),$.push(l));const u=KN({inputs:{a:i,b:l},backend:s});_=s$({inputs:{x:u},backend:s,attrs:{axis:o,keepDims:!0}}),$.push(u)}else{const l=kr(e.dtype,t.dtype),u=new jN(k,I,[S,f,g],n,r,T,F,A,R),c=[C,N];if(null!=a&&c.push(a),A&&c.push(i),R){const e=s.makeTensorInfo([],"float32",ar(o,"float32"));c.push(e),$.push(e)}_=s.runWebGLProgram(u,c,l)}const D=YN({inputs:{x:_},backend:s,attrs:{shape:w}});$.push(_);for(const e of $)s.disposeIntermediateTensorInfo(e);return D}const u$={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return l$({a:s,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},c$="return abs(x);",h$={kernelName:Z,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=iN(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new NN(r.shape,c$):new kN(r.shape,c$),n.runWebGLProgram(s,[r],r.dtype)}},d$=UN({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),p$={kernelName:Q,backendName:"webgl",kernelFunc:d$},f$=UN({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),g$={kernelName:ee,backendName:"webgl",kernelFunc:f$},m$="return a + b;",b$=VN({opSnippet:m$,packedOpSnippet:m$,supportsComplex:!0,cpuKernelImpl:BC}),y$={kernelName:te,backendName:"webgl",kernelFunc:b$};class x${constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class v${constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const w$={kernelName:ne,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return FN({inputs:{x:s[0]},backend:r});if(s.length>q().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>kr(e,t))),i=s.map((e=>e.shape)),o=q().getBool("WEBGL_PACK")?new v$(s[0].shape,i):new x$(s[0].shape,i);return r.runWebGLProgram(o,s,a)}},k$={kernelName:re,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=C(a,s.shape);let u=l;const c=ki(u,o);let h=s;null!=c&&(h=i$({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Ci(u.length,o)),wi("all",u,o);const[d,p]=xi(h.shape,u),f=YN({inputs:{x:h},backend:n,attrs:{shape:[-1,b(p)]}}),g=e$(f,f.dtype,"all",n);let m;return m=YN(i?{inputs:{x:g},backend:n,attrs:{shape:vi(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),m}},I$={kernelName:se,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=C(a,s.shape);let u=l;const c=ki(u,o);let h=s;null!=c&&(h=i$({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Ci(u.length,o)),wi("any",u,o);const[d,p]=xi(h.shape,u),f=YN({inputs:{x:h},backend:n,attrs:{shape:[-1,b(p)]}}),g=e$(f,f.dtype,"any",n);let m;return m=YN(i?{inputs:{x:g},backend:n,attrs:{shape:vi(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),m}};class C${constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class N${constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,p(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=LC(o),u=gN("coords",o);let c,h;if(1===a){h=o+1;const e=LC(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),f="."+d[h-1],g=d.map((e=>"int "+e)),m=gN("sourceLocR",h-1).concat("inIdx.r"),b=gN("sourceLocG",h-1).concat("inIdx.g"),y=gN("sourceLocB",h-1).concat("inIdx.b"),x=gN("sourceLocA",h-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,k=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,I=r?"":`\n      float getBestIndicesAChannel(${g.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${g.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function $$(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const i=wl(a),o={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},l=new C$(o,n,null==r),u=[t];null!=r&&u.push(r);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=$$(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function S$(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=wl(s[s.length-1]),i=new N$(s,a,n,null==r),o=null==r?[t]:[t,r],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const r=S$(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function E$(e,t,n,r){const s=[n];if(wi("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!q().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[a,i]=xi(t.shape,s),o=b(i),l=YN({inputs:{x:t},backend:e,attrs:{shape:[-1,o]}});n.push(l);const u=$$(e,l,r);n.push(u);const c=YN({inputs:{x:u},backend:e,attrs:{shape:a}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),c}return S$(e,t,r)}const T$={kernelName:ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=C(a,s.shape);const o=ki(i,s.shape.length);let l=s;const u=[];null!=o&&(l=i$({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Ci(i.length,l.shape.length)),wi("argMax",[i[0]],l.shape.length);const c=E$(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},A$={kernelName:ie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=C(a,s.shape);const o=ki(i,s.shape.length);let l=s;const u=[];null!=o&&(l=i$({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Ci(i.length,l.shape.length)),wi("argMin",[i[0]],l.shape.length);const c=E$(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},R$=UN({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),F$={kernelName:oe,backendName:"webgl",kernelFunc:R$},_$=UN({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),D$={kernelName:le,backendName:"webgl",kernelFunc:_$},L$=UN({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),O$={kernelName:ue,backendName:"webgl",kernelFunc:L$},M$=VN({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),z$={kernelName:he,backendName:"webgl",kernelFunc:M$},B$=UN({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),P$={kernelName:ce,backendName:"webgl",kernelFunc:B$};class W${constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,m=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?g:m:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / count");const x=4*Math.floor(a/4),v=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class U${constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,g=e.padInfo.front,m=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${g}, ${m}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(a/4),k=a%4,I=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${g}, ${m}, ${b});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const V$={kernelName:de,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;iC(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;p(va(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=ca(s.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&y(u.inShape,u.outShape))return FN({inputs:{x:s},backend:n});const c=new W$(u,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},G$={kernelName:fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=ha(s.shape,a,i,[1,1,1],o,l,u),h=new U$(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class j${constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class H${constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,g=d-1-e.padInfo.left,m=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${g});\n      const float avgMultiplier = float(${m});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const q$={kernelName:ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=ha(i.shape,o,l,[1,1,1],u,c),d=new H$(h);return n.runWebGLProgram(d,[s],i.dtype)}},K$={kernelName:pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;iC([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=ca(i.shape,o,l,1,u),h=new j$(c);return n.runWebGLProgram(h,[s],i.dtype)}},X$={kernelName:me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return l$({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class Y${constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Ha(e,t),Ha(e,n);let i="0.0";null!=r&&(Ha(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(Ha(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class J${constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ha(e,t),Ha(e,n);let i="vec4(0.0)";null!=r&&(Ha(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(Ha(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Z$={kernelName:rt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:i,scale:o}=e;p(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),p(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),p(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,s,a];let c=null;null!=i&&(c=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));const d=q().getBool("WEBGL_PACK_NORMALIZATION")?new J$(r.shape,s.shape,a.shape,c,h,l):new Y$(r.shape,s.shape,a.shape,c,h,l);return t.runWebGLProgram(d,u,u[0].dtype)}};class Q${constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=LC(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return eS.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${eS[t]} = start[${t}] + coords.${eS[t]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const eS=["x","y","z","w","u","v"];class tS{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=LC(this.rank),n=gN("coords",this.rank),r=gN("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}function nS(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r,[o,l]=Vs(s,a,i);if(Ts(s,o,l),0===b(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=oN(e.values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:u}=n.texData.get(s.dataId),c=Ws(s.shape,o,l);if(u||!c){const e=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tS(l):new Q$(l),t=e.getCustomSetupFunc(o);return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),i=r.texData.get(a.dataId);Object.assign(i,s),i.complexParentRefCount=0,i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Us(t,O(e.shape));s.slice&&(o+=s.slice.flatOffset),i.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),a}(s,o,l,n)}const rS={kernelName:fn,backendName:"webgl",kernelFunc:nS},sS={kernelName:be,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;p(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=Il(s.shape,a,o),u=Cl(l.length,a.length),c=Nl(s.shape,a,o),h=$l(i,a.length),d=Sl(c,i,a.length),f=[],g=YN({inputs:{x:s},backend:n,attrs:{shape:l}}),m=i$({inputs:{x:g},backend:n,attrs:{perm:u}}),b=YN({inputs:{x:m},backend:n,attrs:{shape:c}}),y=nS({inputs:{x:b},backend:n,attrs:{begin:h,size:d}});return f.push(g),f.push(m),f.push(b),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},aS={kernelName:ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),l=n.readSync(a.dataId),u=PC(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},iS=VN({opSnippet:"return float(a != b);",dtype:"bool"}),oS={kernelName:Pt,backendName:"webgl",kernelFunc:iS};function lS(e){const{inputs:t,backend:n}=e,{input:r}=t;return FN({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const uS={kernelName:Zt,backendName:"webgl",kernelFunc:lS},cS={kernelName:xe,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return FN({inputs:{x:a},backend:r});const t=Ai(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=DN({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=lS({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!E(a.dtype,i)){const e=FN({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new kN(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",$("bool",1)),t=iS({inputs:{a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},hS="return ceil(x);",dS=UN({opSnippet:hS,packedOpSnippet:hS,cpuKernelImpl:UC}),pS={kernelName:ve,backendName:"webgl",kernelFunc:dS};class fS{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class gS{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const mS={kernelName:we,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let o;o=q().getBool("WEBGL_PACK_CLIP")?new gS(s.shape):new fS(s.shape);const l=o.getCustomSetupFunc(a,i);return n.runWebGLProgram(o,[s],s.dtype,l)}};class bS{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function yS(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const xS={kernelName:Ie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new bS(r.shape),i=[yS(r,s.complexTensorInfos.real),yS(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class vS{constructor(e){this.outputShape=[],this.outputShape=xl(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class wS{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=xl(e,t);const n=this.outputShape,r=n.length,s=LC(r),a=gN("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${kS(i,l,t)}),\n            vec2(${kS(u,l,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${kS(i,l,p)}),\n          vec2(${kS(u,l,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function kS(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function IS(e){const{inputs:t,backend:n}=e,{input:r}=t;return FN({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const CS={kernelName:ct,backendName:"webgl",kernelFunc:IS};function NS(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>lS({inputs:{input:e},backend:n}))),s=e.map((e=>IS({inputs:{input:e},backend:n}))),a=NS(r,t,n),i=NS(s,t,n),o=DN({inputs:{real:a,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}if("string"===r){const{tensors2D:s,outShape:a}=$S(e,t,n),i=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=1===s[0].shape[0],l=VC(i,a,r,o),u=xl(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,r,l);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>q().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),s=NS(e.slice(0,r),t,n),a=NS(e.slice(r),t,n),i=NS([s,a],t,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}if(q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const s=new wS(e.map((e=>e.shape)),t);return n.runWebGLProgram(s,e,r)}const{tensors2D:s,outShape:a}=$S(e,t,n),i=new vS(s.map((e=>e.shape))),o=n.runWebGLProgram(i,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));const l=YN({inputs:{x:o},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(o),l}function $S(e,t,n){const r=xl(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>YN({inputs:{x:e},attrs:{shape:[-1,b(e.shape.slice(t))]},backend:n}))),outShape:r}}function SS(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=C(s,t[0].shape)[0],i=xl(t.map((e=>e.shape)),a);if(0===b(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>b(e.shape)>0));return 1===o.length?FN({inputs:{x:o[0]},backend:n}):(yl(o.map((e=>e.shape)),a),NS(o,a,n))}const ES={kernelName:Ce,backendName:"webgl",kernelFunc:SS};class TS{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,g="channelsLast"===e.dataFormat,m=g?1:2,b=g?2:3,y=g?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${g}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${g}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${g}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${g}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class AS{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class RS{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:s,strideWidth:a,strideHeight:i,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:d,top:p}=o,f=s*r,g=lC(),m="channelsLast"===h,b=m?0:1,y=m?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${i} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[b]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${a}. - ${d}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${t[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${m}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${g.output} = result;\n      }\n    `}}function FS({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,u=r.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,f="channelsLast"===n.dataFormat;let g;const m=[],b=(1===h||1===d)&&c>1e3,y=l[2]%2!=0&&!!u.isPacked;if(!b&&q().getBool("WEBGL_LAZILY_UNPACK")&&q().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&y){const c=f?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,p(eC(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const b=YN({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(b);const y=l$({a:h,b,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),x=r.texData.get(y.dataId);p(x.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,x.shape=n.outShape,g=FN({inputs:{x:y},backend:r}),g.shape=n.outShape,m.push(y)}else{const u=YN({inputs:{x:e},backend:r,attrs:{shape:[1,f?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=YN({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=l$({a:u,b:c,transposeA:!1,transposeB:!1,backend:r,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i});g=YN({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(u),m.push(c),m.push(h)}for(const e of m)r.disposeIntermediateTensorInfo(e);return g}function _S({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,g=l*u*c,m=d*h,y=[g,m],x=[],v=YN({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),w=YN({inputs:{x:t},backend:r,attrs:{shape:[1,g,b(t.shape)/g]}});x.push(v),x.push(w);const k=new RS(y,v.shape,n),I=r.runWebGLProgram(k,[v],"float32"),C=YN({inputs:{x:I},backend:r,attrs:{shape:[1,y[0],y[1]]}});x.push(I),x.push(C);const N=null!=s,$=null!=a,S="leakyrelu"===o,E=o?GN(o,!0):null,T=new jN(C.shape,w.shape,[1,m,n.outChannels],!0,!1,N,E,$,S),A=[C,w];if(s&&A.push(s),$&&A.push(a),S){const e=r.makeTensorInfo([],"float32",ar(i,"float32"));A.push(e),x.push(e)}const R=r.runWebGLProgram(T,A,"float32"),F=YN({inputs:{x:R},backend:r,attrs:{shape:f?[1,d,h,n.outChannels]:[1,n.outChannels,d,h]}});x.push(R);for(const e of x)r.disposeIntermediateTensorInfo(e);return F}const DS={kernelName:Ne,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=wa(l),d=da(s.shape,a.shape,i,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(q().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])p=_S({x:s,filter:a,convInfo:d,backend:n});else{const e=new TS(d);p=n.runWebGLProgram(e,[s,a],"float32")}else p=FS({x:s,filter:a,convInfo:d,backend:n});const f=YN({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class LS{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class OS{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class MS{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zS{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const BS={kernelName:$e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=wa(l),d=da(s.shape,c,i,1,o,u,!1,h),p=new LS(d);return n.runWebGLProgram(p,[s,a],"float32")}},PS={kernelName:Se,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=wa(u),d=da(i,a.shape,o,1,l,c,!1,h),p=new OS(d);return n.runWebGLProgram(p,[s,a],"float32")}},WS={kernelName:Ee,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=pa(s.shape,a.shape,i,l,o),c=new AS(u);return n.runWebGLProgram(c,[s,a],"float32")}},US={kernelName:Te,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r,u=pa(s.shape,l,i,1,o),c=new MS(u);return n.runWebGLProgram(c,[s,a],"float32")}},VS={kernelName:Ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r,u=pa(l,a.shape,o,1,i),c=new zS(u);return n.runWebGLProgram(c,[s,a],"float32")}},GS=UN({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),jS={kernelName:Re,backendName:"webgl",kernelFunc:GS},HS=UN({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),qS={kernelName:Fe,backendName:"webgl",kernelFunc:HS};class KS{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[g,m,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${g});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${m};\n        float width_scale = ${x};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const XS={kernelName:De,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new KS(s.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[s,a,i],"float32")}};class YS{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,s=t?"0.0":`getX(${JS(r,"coords")})`,a=e[e.length-1];let i="",o="";t?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${LC(r)} coords = getOutputCoords();\n        int end = ${ZS(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${ZS(r,"coords")} = idx;\n          val += getX(${JS(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function JS(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function ZS(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const QS={kernelName:_e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r,l=s.shape.length,u=ki([a],l);let c=s;null!=u&&(c=i$({inputs:{x:s},backend:n,attrs:{perm:u}}));const h=Ci(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=${a}`);const d=c.shape[h];let p=FN({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){const t=new YS(c.shape,!1,o),r=t.getCustomSetupFunc(e),s=p;p=n.runWebGLProgram(t,[p],p.dtype,r),n.disposeIntermediateTensorInfo(s)}if(i){const e=new YS(c.shape,i,o),t=p;p=n.runWebGLProgram(e,[p],p.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){const e=i$({inputs:{x:p},backend:n,attrs:{perm:Ii(u)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),e}return p}},eE={kernelName:Le,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=PC(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=WC(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class tE{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const nE={kernelName:Oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;p(a>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`));const o=s.shape[0],l="NHWC"===i?s.shape[1]:s.shape[2],u="NHWC"===i?s.shape[2]:s.shape[3],c="NHWC"===i?s.shape[3]:s.shape[1],h=l*a,d=u*a,f=c/(a*a),g=new tE("NHWC"===i?[o,h,d,f]:[o,f,h,d],a,i);return n.runWebGLProgram(g,[s],s.dtype)}};class rE{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,g=e.outChannels/e.inChannels;let m="",b="";n&&(m=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${g};\n        int q = d2 - d1 * ${g};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${a}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${b}\n        setOutput(result);\n      }\n    `}}class sE{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const a=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,p=e.dilationWidth,f=e.filterHeight,g=e.filterWidth,m=g;let b="int xR; int xC; int xCOffset;";for(let e=0;e<f;e++)for(let t=0;t<g;t++)b+=`\n          vec4 xTexelR${e}C${2*t} = vec4(0.);\n          vec4 wR${e}C${t} = vec4(0.);\n          vec4 xR${e}C${t} = vec4(0.);`;for(let e=0;e<f;e++)for(let t=0;t<m;t++){const n=2*t;if(b+=`\n          xR = xRCorner + ${e*h};\n          xC = xCCorner + ${n*p};\n        `,1===c){if(n<g&&(b+=l%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    xTexelR${e}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${e}C${n} = vec4(previous.zw, xTexelR${e}C${n}.xy);\n                } else {\n                  xR${e}C${n} = vec4(0, 0, xTexelR${e}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xR${e}C${n} = xTexelR${e}C${n};\n              `,n+1<g)){const t=l%2==0?d(p):p;p%2==0&&l%2==1||p%2!=0&&l%2!=1?(b+=`\n                  xCOffset = xC + ${l%2} + ${t};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,p>1&&(b+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${a} &&\n                      xCOffset >= 0 && xCOffset < ${i}) {\n                      xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${e}C${n} = vec4(0.);\n                    }\n                  `),b+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.xy);\n                `):b+=`\n                  xCOffset = xC + ${t};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${e}C${n+1} = xTexelR${e}C${n+2};\n                `}}else n<g&&(b+=`\n              if(xR >= 0 && xR < ${a}) {\n            `,l%2==1?(b+=`\n                xCOffset = xC + 1 - ${c};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n              `,n+1<g&&(b+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${c};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${e}C${n+1} = vec4(xTexelR${e}C${n+2}.xy, final.xy);\n                `)):(b+=`\n                if(xC >= 0 && xC < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${c};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.xy, xTexelR${e}C${n+2}.xy);\n              `,n+1<g&&(b+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n                `)),b+="}");n<g&&(b+=`\n            vec4 wTexelR${e}C${n} = getW(${e}, ${n}, d1, q);\n            wR${e}C${n} = vec4(wTexelR${e}C${n}.xz, wTexelR${e}C${n}.xz);\n          `,n+1<g&&(b+=`\n              vec4 wTexelR${e}C${n+1} = getW(${e}, ${n+1}, d1, q);\n              wR${e}C${n+1} =\n                vec4(wTexelR${e}C${n+1}.xz, wTexelR${e}C${n+1}.xz);`))}for(let e=0;e<f;e++)for(let t=0;t<g;t++)b+=`dotProd += xR${e}C${t} * wR${e}C${t};`;let y="",x="";n&&(y=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,x="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${b}\n\n        vec4 result = dotProd;\n        ${v}\n        ${x}\n        setOutput(result);\n      }\n    `}}const aE={kernelName:Me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),p(va(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=da(s.shape,a.shape,i,c,o,u,!0);let d;return d=q().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new sE(h):new rE(h),n.runWebGLProgram(d,[s,a],"float32")}};class iE{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class oE{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const lE={kernelName:ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=da(s.shape,c,i,o,l,u,!0),d=new iE(h);return n.runWebGLProgram(d,[s,a],"float32")}},uE={kernelName:Be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=da(c,a.shape,i,o,l,u,!0),d=new oE(h);return n.runWebGLProgram(d,[s,a],"float32")}};class cE{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const hE={kernelName:Pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=b(r.shape),i=YN({inputs:{x:r},backend:n,attrs:{shape:[a]}}),o=new cE(a),l=n.runWebGLProgram(o,[i],i.dtype),u=YN({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class dE{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const pE={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=ua(s.shape,a.shape,i,o,"NHWC",l);let c;const h=new dE(u);c=n.runWebGLProgram(h,[s,a],"float32");const d=YN({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}},fE=UN({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),gE={kernelName:je,backendName:"webgl",kernelFunc:fE},mE={kernelName:He,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new RN("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new AN("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},bE=VN({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),yE={kernelName:Ke,backendName:"webgl",kernelFunc:bE},xE=UN({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Dl};\n  float a1 = ${Ll};\n  float a2 = ${Ol};\n  float a3 = ${Ml};\n  float a4 = ${zl};\n  float a5 = ${Bl};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),vE={kernelName:qe,backendName:"webgl",kernelFunc:xE},wE="return exp(x);",kE=UN({opSnippet:wE,packedOpSnippet:wE,cpuKernelImpl:GC}),IE={kernelName:Xe,backendName:"webgl",kernelFunc:kE};function CE(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let l=s;return s<0&&(p(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),YN({inputs:{x:a},backend:r,attrs:{shape:o}})}const NE={kernelName:Ye,backendName:"webgl",kernelFunc:CE},$E="return exp(x) - 1.0;",SE=UN({opSnippet:$E,packedOpSnippet:$E,cpuKernelImpl:jC}),EE={kernelName:Je,backendName:"webgl",kernelFunc:SE};class TE{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function AE(e,t,n){const r=n.texData.get(e.dataId),s=b(e.shape),a=e.shape[e.shape.length-1],i=YN({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),o=i.shape,l=new TE("real",o,t),u=new TE("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=DN({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=YN({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}const RE={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return AE(r,!1,n)}};class FE{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}function _E(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||_(s),"string"===a){const e=S(a,b(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new FE(r,s),n=e.getCustomSetupFunc(s);return t.runWebGLProgram(e,[],a,n)}}const DE={kernelName:Qe,backendName:"webgl",kernelFunc:_E};class LE{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const OE={kernelName:et,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new LE(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},ME="return floor(x);",zE=UN({opSnippet:ME,packedOpSnippet:ME,cpuKernelImpl:HC}),BE={kernelName:tt,backendName:"webgl",kernelFunc:zE},PE=VN({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),WE={kernelName:nt,backendName:"webgl",kernelFunc:PE};class UE{constructor(e){this.variableNames=["A"];const t=lC(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class VE{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=lC(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const GE={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,l="undefined"!=typeof ImageBitmap&&s instanceof ImageBitmap,[u,c]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],h=[c,u],d=[c,u,a];(o||i||l)&&(null==jE&&(jE=document.createElement("canvas").getContext("2d")),jE.canvas.width=u,jE.canvas.height=c,jE.drawImage(s,0,0,u,c),s=jE.canvas);const p=n.makeTensorInfo(h,"int32");n.texData.get(p.dataId).usage=_I.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const f=q().getBool("WEBGL_PACK")?new VE(d):new UE(d),g=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),g}};let jE;const HE={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,g=wa(c),m=da(s.shape,a.shape,l,h,u,d,!1,g);let b;const y=[];if(1!==m.filterHeight||1!==m.filterWidth||1!==m.dilationHeight||1!==m.dilationWidth||1!==m.strideHeight||1!==m.strideWidth||"SAME"!==m.padInfo.type&&"VALID"!==m.padInfo.type)if(q().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])b=_S({x:s,filter:a,convInfo:m,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,r="leakyrelu"===p,l=p?GN(p,!1):null,u=new TS(m,e,l,t,r),c=[s,a];if(i&&c.push(i),o&&c.push(o),r){const e=n.makeTensorInfo([],"float32",ar(f,"float32"));c.push(e),y.push(e)}b=n.runWebGLProgram(u,c,"float32")}else b=FS({x:s,filter:a,convInfo:m,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const x=YN({inputs:{x:b},backend:n,attrs:{shape:m.outShape}});return y.push(b),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},qE={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=r,g=[];let m=c;null==m&&(m=[1,1]),p(va(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const b=da(s.shape,a.shape,l,m,u,h,!0),y=q().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,x=d?GN(d,y):null,v=[s,a],w=null!=i,k=null!=o,I="leakyrelu"===d;if(w&&v.push(i),k&&v.push(o),I){const e=n.makeTensorInfo([],"float32",ar(f,"float32"));v.push(e),g.push(e)}let C;C=y?new sE(b,w,x,k,I):new rE(b,w,x,k,I);const N=n.runWebGLProgram(C,v,"float32");return g.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};class KE{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=LC(t.length),s=LC(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const XE={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,i=a[a.length-1],[o,l,u,c]=El(r,s),h=YN({inputs:{x:s},backend:n,attrs:{shape:[l,i]}}),d=YN({inputs:{x:r},backend:n,attrs:{shape:[b(r.shape)/u,u]}}),p=new KE(i,c,[l,u]),f=n.runWebGLProgram(p,[d,h],d.dtype),g=YN({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),g}};class YE{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=LC(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const JE={kernelName:st,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r,l=Ql(s,a,C(i,s.shape)[0],o),u=b(a.shape),c=[],h=YN({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=YN({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});c.push(h),c.push(d);const p=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(d),t=n.bufferSync(h),r=qC(t,e,p);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const f=new YE(h.shape,p),g=n.runWebGLProgram(f,[h,d],h.dtype);c.push(g);const m=YN({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}},ZE=VN({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:KC,dtype:"bool"}),QE={kernelName:it,backendName:"webgl",kernelFunc:ZE},eT=VN({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),tT={kernelName:ot,backendName:"webgl",kernelFunc:eT},nT={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return AE(r,!0,n)}},rT=UN({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),sT={kernelName:ht,backendName:"webgl",kernelFunc:rT},aT=UN({opSnippet:"return float(isinf(x));",dtype:"bool"}),iT={kernelName:dt,backendName:"webgl",kernelFunc:aT},oT=UN({opSnippet:"return float(isnan(x));",dtype:"bool"}),lT={kernelName:pt,backendName:"webgl",kernelFunc:oT},uT=VN({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:XC,dtype:"bool"}),cT={kernelName:gt,backendName:"webgl",kernelFunc:uT},hT=VN({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),dT={kernelName:mt,backendName:"webgl",kernelFunc:hT},pT={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=YC(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},fT=UN({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:JC}),gT={kernelName:yt,backendName:"webgl",kernelFunc:fT},mT=UN({opSnippet:"return log(1.0 + x);"}),bT={kernelName:xt,backendName:"webgl",kernelFunc:mT},yT=VN({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),xT={kernelName:vt,backendName:"webgl",kernelFunc:yT},vT=UN({opSnippet:"return float(!(x >= 1.0));"}),wT={kernelName:wt,backendName:"webgl",kernelFunc:vT},kT=VN({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),IT={kernelName:kt,backendName:"webgl",kernelFunc:kT};class CT{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class NT{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const $T={kernelName:It,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r,u=q().getBool("WEBGL_PACK_NORMALIZATION")?new NT(s.shape,a,i,o,l):new CT(s.shape,a,i,o,l);return n.runWebGLProgram(u,[s],s.dtype)}};class ST{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const ET={kernelName:Ct,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new ST(s.shape,o,l,u,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function TT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=s.shape.length,l=C(a,s.shape);let u=l;const c=ki(u,o),h=null!=c,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const r=dN(e,s.shape,s.dtype,c,t);p=n.makeTensorInfo(t,s.dtype),n.texData.get(p.dataId).values=r}else p=r$(s,c,n);u=Ci(u.length,o)}wi("max",u,o);const[f,g]=xi(p.shape,u);let m,y=f;if(i&&(y=vi(f,l)),d){const e=n.texData.get(p.dataId).values,t=ZC(e,b(g),y,s.dtype);m=n.makeTensorInfo(y,s.dtype),n.texData.get(m.dataId).values=t}else m=function(e,t,n,r){const s=b(t),a=YN({inputs:{x:e},attrs:{shape:[b(e.shape)/s,s]},backend:r}),i=e$(a,e.dtype,"max",r),o=YN({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(p,g,y,n);return h&&n.disposeIntermediateTensorInfo(p),m}const AT={kernelName:Nt,backendName:"webgl",kernelFunc:TT},RT=VN({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:QC}),FT={kernelName:$t,backendName:"webgl",kernelFunc:RT},_T={kernelName:St,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;iC(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;p(va(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=ca(s.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&y(u.inShape,u.outShape))return FN({inputs:{x:s},backend:n});const c=new W$(u,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},DT={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=ha(s.shape,a,i,[1,1,1],o,u,l),h=new U$(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class LT{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=a-1-e.padInfo.left,l=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class OT{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const MT={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=ha(i.shape,o,l,[1,1,1],u,c),d=new U$(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new OT(h),g=n.runWebGLProgram(f,[s,p],i.dtype);return n.disposeIntermediateTensorInfo(p),g}},zT={kernelName:Et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;iC([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=ca(o.shape,l,u,1,c,h),p=new W$(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),g=new LT(d),m=n.runWebGLProgram(g,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),m}},BT={kernelName:Rt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;p(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];p(va(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=ca(r.shape,s,a,u,i),[h,d]=function(e,t,n,r){let s=new W$(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new W$(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,o,c,l);return[h,d]}},PT={kernelName:Ft,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,i=n,o=r.shape.length,l=C(a,r.shape);let u=l;const c=ki(u,o),h=null!=c,d=i.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=dN(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=r$(r,c,i);p.push(f),u=Ci(u.length,o)}wi("sum",u,o);const[g,m]=xi(f.shape,u);let y=g;s&&(y=vi(g,l));const x=function(e,t,n,r){const s=b(t),a=YN({inputs:{x:e},attrs:{shape:[b(e.shape)/s,s]},backend:r}),i=e$(a,"float32","mean",r),o=YN({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(f,m,y,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return x}},WT={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=C(a,s.shape);let u=l;const c=ki(u,o);let h=s;null!=c&&(h=i$({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Ci(u.length,s.shape.length)),wi("min",u,o);const[d,p]=xi(h.shape,u),f=YN({inputs:{x:h},backend:n,attrs:{shape:[-1,b(p)]}}),g=e$(f,f.dtype,"min",n);let m;return m=YN(i?{inputs:{x:g},backend:n,attrs:{shape:vi(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),m}},UT=VN({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:eN}),VT={kernelName:Dt,backendName:"webgl",kernelFunc:UT};class GT{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=LC(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class jT{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=LC(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=gN("rc",r),l=gN("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const HT={kernelName:Lt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,i=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jT(r.shape,s,a):new GT(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},qT=VN({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),KT={kernelName:Ot,backendName:"webgl",kernelFunc:qT};class XT{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const YT=VN({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),JT={kernelName:Ge,backendName:"webgl",kernelFunc:YT},ZT="return a - b;",QT=VN({opSnippet:ZT,packedOpSnippet:ZT,supportsComplex:!0,cpuKernelImpl:uN}),eA={kernelName:Sn,backendName:"webgl",kernelFunc:QT};function tA(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=C([a],s.shape),o=TT({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=vi(o.shape,i),u=YN({inputs:{x:o},backend:n,attrs:{shape:l}}),c=QT({inputs:{a:s,b:u},backend:n}),h=kE({inputs:{x:c},backend:n}),d=s$({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=YN({inputs:{x:d},backend:n,attrs:{shape:l}}),f=YT({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const nA={kernelName:Cn,backendName:"webgl",kernelFunc:tA},rA={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,l=o?s:tA({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new XT(u,c,a),d=h.getCustomSetupFunc(i),p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},sA="return -x;",aA={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=nN(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new NN(r.shape,sA):new kN(r.shape,sA),n.runWebGLProgram(s,[r],r.dtype)}},iA=Mo,oA={kernelName:Wt,backendName:"webgl",kernelFunc:function(e){Pl("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=iA(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},lA=zo,uA={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){Pl("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=lA(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},cA=Bo,hA={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){Pl("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),d=i,p=o,f=l,g=u,{selectedIndices:m,selectedScores:b}=cA(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class dA{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const pA={kernelName:jt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:i,offValue:o}=r,l=b(s.shape),u=new dA(l,a,i,o),c=YN({inputs:{x:s},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[c],s.dtype);n.disposeIntermediateTensorInfo(c);const d=YN({inputs:{x:h},backend:n,attrs:{shape:[...s.shape,a]}});return n.disposeIntermediateTensorInfo(h),d}};function fA(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=lS({inputs:{input:r},backend:n}),t=fA({inputs:{x:e},backend:n}),s=IS({inputs:{input:r},backend:n}),a=fA({inputs:{x:s},backend:n}),i=DN({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return _E({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const gA={kernelName:zn,backendName:"webgl",kernelFunc:fA},mA={kernelName:Gt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=lS({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=IS({inputs:{input:s},backend:r}),i=fA({inputs:{x:a},backend:r}),o=DN({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return _E({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},bA={kernelName:Ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return CE({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{f(a,e.shape,"All tensors passed to stack must have matching shapes"),p(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=SS({inputs:t.map((e=>{const t=CE({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class yA{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=LC(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class xA{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=LC(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=gN("rc",r),l=gN("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(${n});\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const vA=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r,o=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xA(s.shape,a,i):new yA(s.shape,a,i);return n.runWebGLProgram(o,[s],s.dtype)},wA={kernelName:qt,backendName:"webgl",kernelFunc:vA},kA=VN({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),IA={kernelName:Kt,backendName:"webgl",kernelFunc:kA},CA={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=[],u=C(a,s.shape);let c=u;const h=ki(c,o);let d,p=s;if(null!=h&&(p=i$({inputs:{x:s},backend:n,attrs:{perm:h}}),c=Ci(c.length,o),l.push(p)),wi("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:s}=rN(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,s,t)}else{const[e,t]=xi(p.shape,c),r=b(t),a=YN({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),i=e$(a,Ir(s.dtype),"prod",n);d=YN({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(a),l.push(i)}if(i){l.push(d);const e=vi(d.shape,u);d=YN({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},NA=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=sN(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},$A={kernelName:Jt,backendName:"webgl",kernelFunc:NA},SA=UN({opSnippet:"return 1.0 / x;"}),EA={kernelName:Qt,backendName:"webgl",kernelFunc:SA},TA=UN({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),AA={kernelName:en,backendName:"webgl",kernelFunc:TA},RA=UN({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),FA={kernelName:on,backendName:"webgl",kernelFunc:RA};class _A{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class DA{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const LA={kernelName:sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new DA(s.shape,l,u,a,i):new _A(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],"float32")}};class OA{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const MA={kernelName:an,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new OA(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class zA{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const BA={kernelName:nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=new zA(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],s.dtype)}};class PA{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const WA={kernelName:rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new PA(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class UA{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=LC(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class VA{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=gN("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=LC(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const GA={kernelName:ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,i=s.shape.length,o=C(a,s.shape);if(0===i)return FN({inputs:{x:s},backend:n});const l=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new VA(s.shape,o):new UA(s.shape,o);return n.runWebGLProgram(l,[s],s.dtype)}};class jA{constructor(e,t,n,r){this.variableNames=["Image"],this.outputShape=[];const s=e[1],a=e[2],i=Math.sin(t).toFixed(3),o=Math.cos(t).toFixed(3);this.outputShape=e;const[l,u]=kl(r,s,a),c=l.toFixed(3),h=u.toFixed(3);let d="";d="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${c}) * ${o} - (float(y) - ${h}) * ${i};\n          float coordYFloat = (float(x) - ${c}) * ${i} + (float(y) - ${h}) * ${o};\n          int coordX = int(round(coordXFloat + ${c}));\n          int coordY = int(round(coordYFloat + ${h}));\n          ${d}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${s}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const HA={kernelName:Pn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,l=new jA(r.shape,s,a,i);return o.runWebGLProgram(l,[r],r.dtype)}},qA=UN({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),KA={kernelName:un,backendName:"webgl",kernelFunc:qA},XA=UN({opSnippet:"return inversesqrt(x);",cpuKernelImpl:aN}),YA={kernelName:cn,backendName:"webgl",kernelFunc:XA};class JA{constructor(e,t,n,r,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=LC(s.length),l=LC(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const ZA={kernelName:hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Rl(0,s,i),d=[h/u,u];if(0===h)return n.makeTensorInfo(i,s.dtype);const p=YN({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=YN({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),m=new JA(l,o,p.shape.length,f.shape.length,c,d),b=n.runWebGLProgram(m,[f,p,g],f.dtype),y=YN({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),y}};class QA{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=LC(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const eR={kernelName:dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=new QA(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,a],kr(s.dtype,a.dtype))}},tR=UN({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Fl};\n  float scale = ${_l};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),nR={kernelName:pn,backendName:"webgl",kernelFunc:tR},rR=UN({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),sR={kernelName:yn,backendName:"webgl",kernelFunc:rR},aR=UN({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),iR={kernelName:bn,backendName:"webgl",kernelFunc:aR},oR=UN({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),lR={kernelName:gn,backendName:"webgl",kernelFunc:oR},uR=UN({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),cR={kernelName:mn,backendName:"webgl",kernelFunc:uR},hR=UN({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),dR={kernelName:xn,backendName:"webgl",kernelFunc:hR},pR={kernelName:kn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;p(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<s.shape.length;++e)l.push([0,0]);const u=[],c=vA({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=Il(c.shape,a,o,!1),d=Cl(h.length,a.length,!1),f=Nl(c.shape,a,o,!1),g=YN({inputs:{x:c},backend:n,attrs:{shape:h}}),m=i$({inputs:{x:g},backend:n,attrs:{perm:d}}),b=YN({inputs:{x:m},backend:n,attrs:{shape:f}});return u.push(c),u.push(g),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},fR={kernelName:En,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:c,outputSize:h}=Rl(0,s,o),d=new JA(u,l,s.shape.length,a.shape.length,c,[h,1],!1),p=n.runWebGLProgram(d,[a,s,i],a.dtype),f=YN({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),f}},gR={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=C(i,s.shape)[0],l=Yl(s,a,o),u=s.shape.length,c=new Array(u).fill(0),h=s.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const r=nS({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},mR=UN({opSnippet:"return sqrt(x);"}),bR={kernelName:vn,backendName:"webgl",kernelFunc:mR},yR={kernelName:$n,backendName:"webgl",kernelFunc:UN({opSnippet:"return x * x;"})},xR="return (a - b) * (a - b);",vR=VN({opSnippet:xR,packedOpSnippet:xR}),wR={kernelName:Nn,backendName:"webgl",kernelFunc:vR},kR={kernelName:Bn,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new kN(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class IR{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=LC(n.length),a=LC(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const CR={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{nonStrided:p,$begin:f,$strides:g,size:m,newShape:b,outShape:y}=Gs(s.shape,a,i,o,l,u,c,h,d),x=YN({inputs:{x:s},backend:n,attrs:{shape:b}});let v;if(p){const e=nS({inputs:{x},backend:n,attrs:{begin:f,size:m}});v=YN({inputs:{x:e},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(e)}else if(y.some((e=>0===e)))v=n.makeTensorInfo(y,s.dtype,[]);else if(n.shouldExecuteOnCPU([x])){const e=n.texData.get(x.dataId).values,t=xs(x.shape,x.dtype,e),r=lN(y,t,g,f);v=n.makeTensorInfo(y,x.dtype,r.values)}else{const e=new IR(f,g,y);v=n.runWebGLProgram(e,[x],x.dtype)}const w=YN({inputs:{x:v},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}},NR=UN({opSnippet:"return tan(x);"}),$R={kernelName:An,backendName:"webgl",kernelFunc:NR},SR=UN({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),ER={kernelName:Rn,backendName:"webgl",kernelFunc:SR};class TR{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=LC(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function AR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype){const e=n.readSync(s.dataId).map((e=>ur(e))),t=xs(s.shape,s.dtype,e),r=cN(t,a);return n.makeTensorInfo(r.shape,r.dtype,r.values)}const i=new TR(s.shape,a);return n.runWebGLProgram(i,[s],s.dtype)}const RR={kernelName:Fn,backendName:"webgl",kernelFunc:AR},FR={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r,o=n.readSync(s.dataId),[l,u]=hN(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},_R={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;iC(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=pN(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},DR={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,l=s.shape[a],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(u[c++]=i.shape[e]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(l);for(let e=0;e<f.length;e++){d[a]=e;const t=nS({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),r=YN({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class LR{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const OR=[$T,ET,u$,h$,p$,g$,y$,w$,k$,I$,T$,A$,F$,D$,z$,O$,P$,G$,V$,q$,K$,X$,Z$,sS,aS,cS,pS,mS,xS,LN,ES,BS,PS,DS,US,VS,WS,jS,qS,XS,QS,eE,nE,lE,uE,aE,hE,pE,gE,mE,yE,vE,IE,NE,EE,RE,DE,OE,BE,WE,GE,HE,qE,XE,JE,QE,tT,_N,nT,CS,sT,iT,lT,zN,cT,dT,pT,bT,gT,xT,wT,IT,AT,DT,_T,MT,zT,BT,FT,PT,WT,VT,HT,KT,rA,XN,aA,oA,uA,hA,oS,pA,mA,bA,wA,IA,WN,CA,$A,uS,JT,EA,FA,AA,JN,LA,MA,BA,WA,GA,HA,KA,YA,ZA,eR,nR,sR,iR,lR,cR,rS,nA,dR,pR,fR,gR,bR,yR,wR,kR,CR,eA,a$,$R,ER,RR,FR,o$,_R,DR,{kernelName:Mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r,o=s.shape.length,l=[];let u=0;const c=ki([u],o);let h=s;null!=c&&(h=i$({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(h),u=Ci(1,o)[0]);const d=Zl(h.shape,u,i),p=b([h.shape[u]]),f=YN({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const g=Ir(s.dtype),m=(e,t,r,s,a)=>{const i=e.shape[0],o=e.shape[1],u=Jl(o,a),c=new LR({windowSize:u,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,r],s);if(l.push(h),h.shape[1]===a)return h;const d=NA({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),p=AR({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(p),m(h,t,p,s,a)},y=YN({inputs:{x:m(f,"unsortedSegmentSum",a,g,i)},backend:n,attrs:{shape:d}});let x=y;if(null!=c){l.push(y);const e=Ii(c);x=i$({inputs:{x},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},gA];for(const e of OR)Kn(e);var MR=n(9645),zR=n(2861),BR=n(906);const PR=function(){if("undefined"!=typeof globalThis)return globalThis;if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==n.g)return n.g;throw new Error("cannot find the global object")}(),WR=(PR.fetch.bind(PR),PR.performance,PR.navigator,!!PR.webkitOfflineAudioContext),UR=void 0!==PR.WorkerGlobalScope,VR=void 0!==n.g&&void 0!==n.g.process;var GR;VR?n(3300):window.fetch.bind(window),VR?n(858):window.performance,VR?n(8249):window.navigator,function(e){e[e.NONE=0]="NONE",e[e.WARN=5]="WARN",e[e.INFO=10]="INFO",e[e.DEBUG=20]="DEBUG"}(GR||(GR={}));const jR=function(e){if(e=WR?44100:e,UR)throw new Error("Cannot use offline audio context in a web worker.");const t=PR.webkitOfflineAudioContext;return WR?new t(1,e,e):new PR.OfflineAudioContext(1,e,e)}(16e3);async function HR(e){const t=new FileReader;return new Promise(((n,r)=>{t.onerror=()=>{t.abort(),r(new DOMException("Something went wrong reading that file."))},t.onload=()=>{n(t.result)},t.readAsArrayBuffer(e)})).then((e=>jR.decodeAudioData(e)))}function qR(e,t){t.power||(t.power=2);const n=function(e,t){const n=t.nFft||2048,r=t.winLength||n,s=t.hopLength||Math.floor(r/4);let a=function(e){const t=new Float32Array(e);for(let n=0;n<e;n++)t[n]=.5*(1-Math.cos(2*Math.PI*n/(e-1)));return t}(r);a=function(e,t){if(e.length>t)throw new Error("Data is longer than length.");const n=Math.floor((t-e.length)/2);return QR(e,[n,t-e.length-n])}(a,n);const i=function(e,t,n){const r=Math.floor((e.length-t)/n)+1,s=Array.from({length:r},((e,n)=>new Float32Array(t)));for(let a=0;a<r;a++){const r=a*n,i=e.slice(r,r+t);s[a].set(i),i.length}return s}(e=function(e,t){const n=QR(e,t);for(let e=0;e<t;e++)n[e]=n[2*t-e],n[n.length-e-1]=n[n.length-2*t+e-1];return n}(e,Math.floor(n/2)),n,s),o=[],l=i.length,u=n+2;for(let e=0;e<l;e++){const t=new Float32Array(u);o[e]=t}for(let e=0;e<l;e++){const t=eF(ZR(i[e],a));o[e].set(t.slice(0,u))}return o}(e,t),[r,s]=function(e,t){const n=e.map((e=>function(e,t){return e.map((e=>Math.pow(e,t)))}(function(e){const t=new Float32Array(e.length/2);for(let n=0;n<e.length/2;n++)t[n]=Math.sqrt(e[2*n]*e[2*n]+e[2*n+1]*e[2*n+1]);return t}(e),t)));return[n,e[0].length-1]}(n,t.power);t.nFft=s;const a=function(e){const t=e.fMin||0,n=e.fMax||e.sampleRate/2,r=e.nMels||128,s=e.nFft||2048,a=function(e,t){return tF(0,e/2,Math.floor(1+t/2))}(e.sampleRate,s),i=function(e,t,n){return tF(nF(t),nF(n),e).map((e=>function(e){return 700*(Math.exp(e/1125)-1)}(e)))}(r+2,t,n),o=function(e){const t=new Float32Array(e.length-1);for(let n=0;n<e.length;n++)t[n]=e[n+1]-e[n];return t}(i),l=function(e,t){const n=[];for(let r=0;r<e.length;r++)n[r]=new Float32Array(t.length);for(let r=0;r<e.length;r++)for(let s=0;s<t.length;s++)n[r][s]=e[r]-t[s];return n}(i,a),u=l[0].length,c=[];for(let e=0;e<r;e++){c[e]=new Float32Array(u);for(let t=0;t<l[e].length;t++){const n=-l[e][t]/o[e],r=l[e+2][t]/o[e+1],s=Math.max(0,Math.min(n,r));c[e][t]=s}}for(let e=0;e<c.length;e++){const t=2/(i[2+e]-i[e]);c[e]=c[e].map((e=>e*t))}return c}(t);return function(e,t){const n=[];for(let r=0;r<e.length;r++)n[r]=JR(e[r],t);return n}(r,a)}function KR(e,t=1e-10,n=80){const r=e.length,s=e[0].length,a=[];for(let e=0;e<r;e++)a[e]=new Float32Array(s);for(let n=0;n<r;n++)for(let r=0;r<s;r++){const s=e[n][r];a[n][r]=10*Math.log10(Math.max(t,s))}if(n){if(n<0)throw new Error("topDb must be non-negative.");for(let e=0;e<r;e++){const t=a[e].reduce(((e,t)=>Math.max(e,t)));for(let r=0;r<s;r++)a[e][r]=Math.max(a[e][r],t-n)}}return a}function XR(e){if(1===e.numberOfChannels)return e.getChannelData(0);if(2!==e.numberOfChannels)throw Error(`${e.numberOfChannels} channel audio is not supported.`);const t=e.getChannelData(0),n=e.getChannelData(1),r=new Float32Array(e.length);for(let s=0;s<e.length;++s)r[s]=(t[s]+n[s])/2;return r}async function YR(e,t=16e3){if(e.sampleRate===t)return XR(e);const n=e.sampleRate,r=e.length*t/n;if(WR){!function(e,t="Magenta.js",n=10){if(0===n)throw Error("Logging level cannot be NONE.");10>=n&&(5===n?console.warn:console.log)(`%c ${t} `,"background:magenta; color:white",e)}("Safari does not support WebAudio resampling, so this may be slow.","O&F",5);const t=XR(e),n=new Float32Array(r);return BR(zR(n,[r]),zR(t,[t.length])),n}{const n=new OfflineAudioContext(e.numberOfChannels,e.duration*t,t),r=n.createBufferSource();return r.buffer=e,r.connect(n.destination),r.start(),n.startRendering().then((e=>e.getChannelData(0)))}}function JR(e,t){if(e.length!==t[0].length)throw new Error(`Each entry in filterbank should have dimensions matching FFT. |mags| = ${e.length}, |filterbank[0]| = ${t[0].length}.`);const n=new Float32Array(t.length);for(let r=0;r<t.length;r++){const s=ZR(e,t[r]);n[r]=s.reduce(((e,t)=>e+t))}return n}function ZR(e,t){if(e.length!==t.length)return console.error(`Buffer length ${e.length} != window length ${t.length}.`),null;const n=new Float32Array(e.length);for(let r=0;r<e.length;r++)n[r]=t[r]*e[r];return n}function QR(e,t){let n,r;"object"==typeof t?[n,r]=t:n=r=t;const s=new Float32Array(e.length+n+r);return s.set(e,n),s}function eF(e){const t=new MR(e.length),n=t.createComplexArray(),r=t.toComplexArray(e);return t.transform(n,r),n}function tF(e,t,n){const r=(t-e)/(n-1),s=new Float32Array(n);for(let t=0;t<n;t++)s[t]=e+r*t;return s}function nF(e){return 1125*Math.log(1+e/700)}},8249:(e,t,n)=>{"use strict";n.r(t),n.d(t,{userAgent:()=>r});const r=""},858:(e,t,n)=>{"use strict";n.r(t),n.d(t,{now:()=>s,timing:()=>a});const r=n.g.process.hrtime(),s=()=>{const e=n.g.process.hrtime(r);return e[0]+e[1]/1e9},a={navigationStart:Date.now()}},5202:(e,t,n)=>{var r=n(176),s=n(5780),a=n(4410),i=n(4853),o=n(4648),l=n(8596),u=n(6397);u.alea=r,u.xor128=s,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},176:function(e,t,n){var r;!function(e,s,a){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.alea=l}(0,e=n.nmd(e),n.amdD)},8596:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.tychei=l}(0,e=n.nmd(e),n.amdD)},5780:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor128=l}(0,e=n.nmd(e),n.amdD)},4648:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,a=-32;a<l;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},4853:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},4410:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},6397:(e,t,n)=>{var r;!function(s,a){var i,o=this,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=b(m((t=1==t?{entropy:!0}:t||{}).entropy?[e,y(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),y(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,y(s)]}}():e,3),r),p=new f(r),x=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,b(y(p.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&g(r,p),e.state=function(){return g(p,{})}),n?(a.random=e,t):e})(x,d,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<l;)i[s]=s++;for(s=0;s<l;s++)i[s]=i[a=d&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=d&s+1],n=n*l+i[d&(i[s]=i[a=d&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(l)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(m(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function b(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=p,b(a.random(),s),e.exports){e.exports=p;try{i=n(6470)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}([],Math)},6823:(e,t,n)=>{var r=n(5948),s=n(3926),a=n(7686),i=n(5265),o=n(1144),l=n(8709),u=n(5068);u.alea=r,u.xor128=s,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},5948:function(e,t,n){var r;!function(e,s,a){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.alea=l}(0,e=n.nmd(e),n.amdD)},8709:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.tychei=l}(0,e=n.nmd(e),n.amdD)},3926:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor128=l}(0,e=n.nmd(e),n.amdD)},1144:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,a=-32;a<l;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},5265:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},7686:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},5068:(e,t,n)=>{var r;!function(s,a){var i,o=this,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=b(m((t=1==t?{entropy:!0}:t||{}).entropy?[e,y(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),y(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,y(s)]}}():e,3),r),p=new f(r),x=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,b(y(p.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&g(r,p),e.state=function(){return g(p,{})}),n?(a.random=e,t):e})(x,d,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<l;)i[s]=s++;for(s=0;s<l;s++)i[s]=i[a=d&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=d&s+1],n=n*l+i[d&(i[s]=i[a=d&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(l)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(m(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function b(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=p,b(a.random(),s),e.exports){e.exports=p;try{i=n(3522)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}([],Math)},719:(e,t,n)=>{var r=n(758),s=n(1167),a=n(6037),i=n(7470),o=n(3624),l=n(7021),u=n(3423);u.alea=r,u.xor128=s,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},758:function(e,t,n){var r;!function(e,s,a){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.alea=l}(0,e=n.nmd(e),n.amdD)},7021:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.tychei=l}(0,e=n.nmd(e),n.amdD)},1167:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor128=l}(0,e=n.nmd(e),n.amdD)},3624:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,a=-32;a<l;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},7470:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},6037:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},3423:(e,t,n)=>{var r;!function(s,a){var i,o=(0,eval)("this"),l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=b(m((t=1==t?{entropy:!0}:t||{}).entropy?[e,y(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),y(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,y(s)]}}():e,3),r),p=new f(r),x=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,b(y(p.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&g(r,p),e.state=function(){return g(p,{})}),n?(a.random=e,t):e})(x,d,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<l;)i[s]=s++;for(s=0;s<l;s++)i[s]=i[a=d&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=d&s+1],n=n*l+i[d&(i[s]=i[a=d&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(l)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(m(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function b(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=p,b(a.random(),s),e.exports){e.exports=p;try{i=n(2967)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}([],Math)},9742:(e,t)=>{"use strict";t.byteLength=function(e){var t=l(e),n=t[0],r=t[1];return 3*(n+r)/4-r},t.toByteArray=function(e){var t,n,a=l(e),i=a[0],o=a[1],u=new s(function(e,t,n){return 3*(t+n)/4-n}(0,i,o)),c=0,h=o>0?i-4:i;for(n=0;n<h;n+=4)t=r[e.charCodeAt(n)]<<18|r[e.charCodeAt(n+1)]<<12|r[e.charCodeAt(n+2)]<<6|r[e.charCodeAt(n+3)],u[c++]=t>>16&255,u[c++]=t>>8&255,u[c++]=255&t;return 2===o&&(t=r[e.charCodeAt(n)]<<2|r[e.charCodeAt(n+1)]>>4,u[c++]=255&t),1===o&&(t=r[e.charCodeAt(n)]<<10|r[e.charCodeAt(n+1)]<<4|r[e.charCodeAt(n+2)]>>2,u[c++]=t>>8&255,u[c++]=255&t),u},t.fromByteArray=function(e){for(var t,r=e.length,s=r%3,a=[],i=16383,o=0,l=r-s;o<l;o+=i)a.push(u(e,o,o+i>l?l:o+i));return 1===s?(t=e[r-1],a.push(n[t>>2]+n[t<<4&63]+"==")):2===s&&(t=(e[r-2]<<8)+e[r-1],a.push(n[t>>10]+n[t>>4&63]+n[t<<2&63]+"=")),a.join("")};for(var n=[],r=[],s="undefined"!=typeof Uint8Array?Uint8Array:Array,a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,o=a.length;i<o;++i)n[i]=a[i],r[a.charCodeAt(i)]=i;function l(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function u(e,t,r){for(var s,a,i=[],o=t;o<r;o+=3)s=(e[o]<<16&16711680)+(e[o+1]<<8&65280)+(255&e[o+2]),i.push(n[(a=s)>>18&63]+n[a>>12&63]+n[a>>6&63]+n[63&a]);return i.join("")}r["-".charCodeAt(0)]=62,r["_".charCodeAt(0)]=63},746:(e,t)=>{"use strict";function n(e){var t=32;return(e&=-e)&&t--,65535&e&&(t-=16),16711935&e&&(t-=8),252645135&e&&(t-=4),858993459&e&&(t-=2),1431655765&e&&(t-=1),t}t.INT_BITS=32,t.INT_MAX=2147483647,t.INT_MIN=-1<<31,t.sign=function(e){return(e>0)-(e<0)},t.abs=function(e){var t=e>>31;return(e^t)-t},t.min=function(e,t){return t^(e^t)&-(e<t)},t.max=function(e,t){return e^(e^t)&-(e<t)},t.isPow2=function(e){return!(e&e-1||!e)},t.log2=function(e){var t,n;return t=(e>65535)<<4,t|=n=((e>>>=t)>255)<<3,t|=n=((e>>>=n)>15)<<2,(t|=n=((e>>>=n)>3)<<1)|(e>>>=n)>>1},t.log10=function(e){return e>=1e9?9:e>=1e8?8:e>=1e7?7:e>=1e6?6:e>=1e5?5:e>=1e4?4:e>=1e3?3:e>=100?2:e>=10?1:0},t.popCount=function(e){return 16843009*((e=(858993459&(e-=e>>>1&1431655765))+(e>>>2&858993459))+(e>>>4)&252645135)>>>24},t.countTrailingZeros=n,t.nextPow2=function(e){return e+=0===e,--e,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,1+(e|=e>>>16)},t.prevPow2=function(e){return e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,(e|=e>>>16)-(e>>>1)},t.parity=function(e){return e^=e>>>16,e^=e>>>8,e^=e>>>4,27030>>>(e&=15)&1};var r=new Array(256);!function(e){for(var t=0;t<256;++t){var n=t,r=t,s=7;for(n>>>=1;n;n>>>=1)r<<=1,r|=1&n,--s;e[t]=r<<s&255}}(r),t.reverse=function(e){return r[255&e]<<24|r[e>>>8&255]<<16|r[e>>>16&255]<<8|r[e>>>24&255]},t.interleave2=function(e,t){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e&=65535)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t&=65535)|t<<8))|t<<4))|t<<2))|t<<1))<<1},t.deinterleave2=function(e,t){return(e=65535&((e=16711935&((e=252645135&((e=858993459&((e=e>>>t&1431655765)|e>>>1))|e>>>2))|e>>>4))|e>>>16))<<16>>16},t.interleave3=function(e,t,n){return e=1227133513&((e=3272356035&((e=251719695&((e=4278190335&((e&=1023)|e<<16))|e<<8))|e<<4))|e<<2),(e|=(t=1227133513&((t=3272356035&((t=251719695&((t=4278190335&((t&=1023)|t<<16))|t<<8))|t<<4))|t<<2))<<1)|(n=1227133513&((n=3272356035&((n=251719695&((n=4278190335&((n&=1023)|n<<16))|n<<8))|n<<4))|n<<2))<<2},t.deinterleave3=function(e,t){return(e=1023&((e=4278190335&((e=251719695&((e=3272356035&((e=e>>>t&1227133513)|e>>>2))|e>>>4))|e>>>8))|e>>>16))<<22>>22},t.nextCombination=function(e){var t=e|e-1;return t+1|(~t&-~t)-1>>>n(e)+1}},8764:(e,t,n)=>{"use strict";const r=n(9742),s=n(645),a="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.lW=l,t.h2=50;const i=2147483647;function o(e){if(e>i)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,l.prototype),t}function l(e,t,n){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return h(e)}return u(e,t,n)}function u(e,t,n){if("string"==typeof e)return function(e,t){if("string"==typeof t&&""!==t||(t="utf8"),!l.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const n=0|g(e,t);let r=o(n);const s=r.write(e,t);return s!==n&&(r=r.slice(0,s)),r}(e,t);if(ArrayBuffer.isView(e))return function(e){if(X(e,Uint8Array)){const t=new Uint8Array(e);return p(t.buffer,t.byteOffset,t.byteLength)}return d(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(X(e,ArrayBuffer)||e&&X(e.buffer,ArrayBuffer))return p(e,t,n);if("undefined"!=typeof SharedArrayBuffer&&(X(e,SharedArrayBuffer)||e&&X(e.buffer,SharedArrayBuffer)))return p(e,t,n);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const r=e.valueOf&&e.valueOf();if(null!=r&&r!==e)return l.from(r,t,n);const s=function(e){if(l.isBuffer(e)){const t=0|f(e.length),n=o(t);return 0===n.length||e.copy(n,0,0,t),n}return void 0!==e.length?"number"!=typeof e.length||Y(e.length)?o(0):d(e):"Buffer"===e.type&&Array.isArray(e.data)?d(e.data):void 0}(e);if(s)return s;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return l.from(e[Symbol.toPrimitive]("string"),t,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function c(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function h(e){return c(e),o(e<0?0:0|f(e))}function d(e){const t=e.length<0?0:0|f(e.length),n=o(t);for(let r=0;r<t;r+=1)n[r]=255&e[r];return n}function p(e,t,n){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(n||0))throw new RangeError('"length" is outside of buffer bounds');let r;return r=void 0===t&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,t):new Uint8Array(e,t,n),Object.setPrototypeOf(r,l.prototype),r}function f(e){if(e>=i)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i.toString(16)+" bytes");return 0|e}function g(e,t){if(l.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||X(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const n=e.length,r=arguments.length>2&&!0===arguments[2];if(!r&&0===n)return 0;let s=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return H(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return q(e).length;default:if(s)return r?-1:H(e).length;t=(""+t).toLowerCase(),s=!0}}function m(e,t,n){let r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return A(this,t,n);case"utf8":case"utf-8":return $(this,t,n);case"ascii":return E(this,t,n);case"latin1":case"binary":return T(this,t,n);case"base64":return N(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return R(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function b(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function y(e,t,n,r,s){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),Y(n=+n)&&(n=s?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(s)return-1;n=e.length-1}else if(n<0){if(!s)return-1;n=0}if("string"==typeof t&&(t=l.from(t,r)),l.isBuffer(t))return 0===t.length?-1:x(e,t,n,r,s);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?s?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):x(e,[t],n,r,s);throw new TypeError("val must be string, number or Buffer")}function x(e,t,n,r,s){let a,i=1,o=e.length,l=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;i=2,o/=2,l/=2,n/=2}function u(e,t){return 1===i?e[t]:e.readUInt16BE(t*i)}if(s){let r=-1;for(a=n;a<o;a++)if(u(e,a)===u(t,-1===r?0:a-r)){if(-1===r&&(r=a),a-r+1===l)return r*i}else-1!==r&&(a-=a-r),r=-1}else for(n+l>o&&(n=o-l),a=n;a>=0;a--){let n=!0;for(let r=0;r<l;r++)if(u(e,a+r)!==u(t,r)){n=!1;break}if(n)return a}return-1}function v(e,t,n,r){n=Number(n)||0;const s=e.length-n;r?(r=Number(r))>s&&(r=s):r=s;const a=t.length;let i;for(r>a/2&&(r=a/2),i=0;i<r;++i){const r=parseInt(t.substr(2*i,2),16);if(Y(r))return i;e[n+i]=r}return i}function w(e,t,n,r){return K(H(t,e.length-n),e,n,r)}function k(e,t,n,r){return K(function(e){const t=[];for(let n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function I(e,t,n,r){return K(q(t),e,n,r)}function C(e,t,n,r){return K(function(e,t){let n,r,s;const a=[];for(let i=0;i<e.length&&!((t-=2)<0);++i)n=e.charCodeAt(i),r=n>>8,s=n%256,a.push(s),a.push(r);return a}(t,e.length-n),e,n,r)}function N(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function $(e,t,n){n=Math.min(e.length,n);const r=[];let s=t;for(;s<n;){const t=e[s];let a=null,i=t>239?4:t>223?3:t>191?2:1;if(s+i<=n){let n,r,o,l;switch(i){case 1:t<128&&(a=t);break;case 2:n=e[s+1],128==(192&n)&&(l=(31&t)<<6|63&n,l>127&&(a=l));break;case 3:n=e[s+1],r=e[s+2],128==(192&n)&&128==(192&r)&&(l=(15&t)<<12|(63&n)<<6|63&r,l>2047&&(l<55296||l>57343)&&(a=l));break;case 4:n=e[s+1],r=e[s+2],o=e[s+3],128==(192&n)&&128==(192&r)&&128==(192&o)&&(l=(15&t)<<18|(63&n)<<12|(63&r)<<6|63&o,l>65535&&l<1114112&&(a=l))}}null===a?(a=65533,i=1):a>65535&&(a-=65536,r.push(a>>>10&1023|55296),a=56320|1023&a),r.push(a),s+=i}return function(e){const t=e.length;if(t<=S)return String.fromCharCode.apply(String,e);let n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=S));return n}(r)}l.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),l.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(l.prototype,"parent",{enumerable:!0,get:function(){if(l.isBuffer(this))return this.buffer}}),Object.defineProperty(l.prototype,"offset",{enumerable:!0,get:function(){if(l.isBuffer(this))return this.byteOffset}}),l.poolSize=8192,l.from=function(e,t,n){return u(e,t,n)},Object.setPrototypeOf(l.prototype,Uint8Array.prototype),Object.setPrototypeOf(l,Uint8Array),l.alloc=function(e,t,n){return function(e,t,n){return c(e),e<=0?o(e):void 0!==t?"string"==typeof n?o(e).fill(t,n):o(e).fill(t):o(e)}(e,t,n)},l.allocUnsafe=function(e){return h(e)},l.allocUnsafeSlow=function(e){return h(e)},l.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==l.prototype},l.compare=function(e,t){if(X(e,Uint8Array)&&(e=l.from(e,e.offset,e.byteLength)),X(t,Uint8Array)&&(t=l.from(t,t.offset,t.byteLength)),!l.isBuffer(e)||!l.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let n=e.length,r=t.length;for(let s=0,a=Math.min(n,r);s<a;++s)if(e[s]!==t[s]){n=e[s],r=t[s];break}return n<r?-1:r<n?1:0},l.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},l.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return l.alloc(0);let n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;const r=l.allocUnsafe(t);let s=0;for(n=0;n<e.length;++n){let t=e[n];if(X(t,Uint8Array))s+t.length>r.length?(l.isBuffer(t)||(t=l.from(t)),t.copy(r,s)):Uint8Array.prototype.set.call(r,t,s);else{if(!l.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(r,s)}s+=t.length}return r},l.byteLength=g,l.prototype._isBuffer=!0,l.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)b(this,t,t+1);return this},l.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)b(this,t,t+3),b(this,t+1,t+2);return this},l.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)b(this,t,t+7),b(this,t+1,t+6),b(this,t+2,t+5),b(this,t+3,t+4);return this},l.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?$(this,0,e):m.apply(this,arguments)},l.prototype.toLocaleString=l.prototype.toString,l.prototype.equals=function(e){if(!l.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===l.compare(this,e)},l.prototype.inspect=function(){let e="";const n=t.h2;return e=this.toString("hex",0,n).replace(/(.{2})/g,"$1 ").trim(),this.length>n&&(e+=" ... "),"<Buffer "+e+">"},a&&(l.prototype[a]=l.prototype.inspect),l.prototype.compare=function(e,t,n,r,s){if(X(e,Uint8Array)&&(e=l.from(e,e.offset,e.byteLength)),!l.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===s&&(s=this.length),t<0||n>e.length||r<0||s>this.length)throw new RangeError("out of range index");if(r>=s&&t>=n)return 0;if(r>=s)return-1;if(t>=n)return 1;if(this===e)return 0;let a=(s>>>=0)-(r>>>=0),i=(n>>>=0)-(t>>>=0);const o=Math.min(a,i),u=this.slice(r,s),c=e.slice(t,n);for(let e=0;e<o;++e)if(u[e]!==c[e]){a=u[e],i=c[e];break}return a<i?-1:i<a?1:0},l.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},l.prototype.indexOf=function(e,t,n){return y(this,e,t,n,!0)},l.prototype.lastIndexOf=function(e,t,n){return y(this,e,t,n,!1)},l.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}const s=this.length-t;if((void 0===n||n>s)&&(n=s),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");let a=!1;for(;;)switch(r){case"hex":return v(this,e,t,n);case"utf8":case"utf-8":return w(this,e,t,n);case"ascii":case"latin1":case"binary":return k(this,e,t,n);case"base64":return I(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return C(this,e,t,n);default:if(a)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),a=!0}},l.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const S=4096;function E(e,t,n){let r="";n=Math.min(e.length,n);for(let s=t;s<n;++s)r+=String.fromCharCode(127&e[s]);return r}function T(e,t,n){let r="";n=Math.min(e.length,n);for(let s=t;s<n;++s)r+=String.fromCharCode(e[s]);return r}function A(e,t,n){const r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);let s="";for(let r=t;r<n;++r)s+=J[e[r]];return s}function R(e,t,n){const r=e.slice(t,n);let s="";for(let e=0;e<r.length-1;e+=2)s+=String.fromCharCode(r[e]+256*r[e+1]);return s}function F(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function _(e,t,n,r,s,a){if(!l.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>s||t<a)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function D(e,t,n,r,s){U(t,r,s,e,n,7);let a=Number(t&BigInt(4294967295));e[n++]=a,a>>=8,e[n++]=a,a>>=8,e[n++]=a,a>>=8,e[n++]=a;let i=Number(t>>BigInt(32)&BigInt(4294967295));return e[n++]=i,i>>=8,e[n++]=i,i>>=8,e[n++]=i,i>>=8,e[n++]=i,n}function L(e,t,n,r,s){U(t,r,s,e,n,7);let a=Number(t&BigInt(4294967295));e[n+7]=a,a>>=8,e[n+6]=a,a>>=8,e[n+5]=a,a>>=8,e[n+4]=a;let i=Number(t>>BigInt(32)&BigInt(4294967295));return e[n+3]=i,i>>=8,e[n+2]=i,i>>=8,e[n+1]=i,i>>=8,e[n]=i,n+8}function O(e,t,n,r,s,a){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function M(e,t,n,r,a){return t=+t,n>>>=0,a||O(e,0,n,4),s.write(e,t,n,r,23,4),n+4}function z(e,t,n,r,a){return t=+t,n>>>=0,a||O(e,0,n,8),s.write(e,t,n,r,52,8),n+8}l.prototype.slice=function(e,t){const n=this.length;(e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e);const r=this.subarray(e,t);return Object.setPrototypeOf(r,l.prototype),r},l.prototype.readUintLE=l.prototype.readUIntLE=function(e,t,n){e>>>=0,t>>>=0,n||F(e,t,this.length);let r=this[e],s=1,a=0;for(;++a<t&&(s*=256);)r+=this[e+a]*s;return r},l.prototype.readUintBE=l.prototype.readUIntBE=function(e,t,n){e>>>=0,t>>>=0,n||F(e,t,this.length);let r=this[e+--t],s=1;for(;t>0&&(s*=256);)r+=this[e+--t]*s;return r},l.prototype.readUint8=l.prototype.readUInt8=function(e,t){return e>>>=0,t||F(e,1,this.length),this[e]},l.prototype.readUint16LE=l.prototype.readUInt16LE=function(e,t){return e>>>=0,t||F(e,2,this.length),this[e]|this[e+1]<<8},l.prototype.readUint16BE=l.prototype.readUInt16BE=function(e,t){return e>>>=0,t||F(e,2,this.length),this[e]<<8|this[e+1]},l.prototype.readUint32LE=l.prototype.readUInt32LE=function(e,t){return e>>>=0,t||F(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},l.prototype.readUint32BE=l.prototype.readUInt32BE=function(e,t){return e>>>=0,t||F(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},l.prototype.readBigUInt64LE=Z((function(e){V(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||G(e,this.length-8);const r=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,s=this[++e]+256*this[++e]+65536*this[++e]+n*2**24;return BigInt(r)+(BigInt(s)<<BigInt(32))})),l.prototype.readBigUInt64BE=Z((function(e){V(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||G(e,this.length-8);const r=t*2**24+65536*this[++e]+256*this[++e]+this[++e],s=this[++e]*2**24+65536*this[++e]+256*this[++e]+n;return(BigInt(r)<<BigInt(32))+BigInt(s)})),l.prototype.readIntLE=function(e,t,n){e>>>=0,t>>>=0,n||F(e,t,this.length);let r=this[e],s=1,a=0;for(;++a<t&&(s*=256);)r+=this[e+a]*s;return s*=128,r>=s&&(r-=Math.pow(2,8*t)),r},l.prototype.readIntBE=function(e,t,n){e>>>=0,t>>>=0,n||F(e,t,this.length);let r=t,s=1,a=this[e+--r];for(;r>0&&(s*=256);)a+=this[e+--r]*s;return s*=128,a>=s&&(a-=Math.pow(2,8*t)),a},l.prototype.readInt8=function(e,t){return e>>>=0,t||F(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},l.prototype.readInt16LE=function(e,t){e>>>=0,t||F(e,2,this.length);const n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},l.prototype.readInt16BE=function(e,t){e>>>=0,t||F(e,2,this.length);const n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},l.prototype.readInt32LE=function(e,t){return e>>>=0,t||F(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},l.prototype.readInt32BE=function(e,t){return e>>>=0,t||F(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},l.prototype.readBigInt64LE=Z((function(e){V(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||G(e,this.length-8);const r=this[e+4]+256*this[e+5]+65536*this[e+6]+(n<<24);return(BigInt(r)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),l.prototype.readBigInt64BE=Z((function(e){V(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||G(e,this.length-8);const r=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(r)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+n)})),l.prototype.readFloatLE=function(e,t){return e>>>=0,t||F(e,4,this.length),s.read(this,e,!0,23,4)},l.prototype.readFloatBE=function(e,t){return e>>>=0,t||F(e,4,this.length),s.read(this,e,!1,23,4)},l.prototype.readDoubleLE=function(e,t){return e>>>=0,t||F(e,8,this.length),s.read(this,e,!0,52,8)},l.prototype.readDoubleBE=function(e,t){return e>>>=0,t||F(e,8,this.length),s.read(this,e,!1,52,8)},l.prototype.writeUintLE=l.prototype.writeUIntLE=function(e,t,n,r){e=+e,t>>>=0,n>>>=0,r||_(this,e,t,n,Math.pow(2,8*n)-1,0);let s=1,a=0;for(this[t]=255&e;++a<n&&(s*=256);)this[t+a]=e/s&255;return t+n},l.prototype.writeUintBE=l.prototype.writeUIntBE=function(e,t,n,r){e=+e,t>>>=0,n>>>=0,r||_(this,e,t,n,Math.pow(2,8*n)-1,0);let s=n-1,a=1;for(this[t+s]=255&e;--s>=0&&(a*=256);)this[t+s]=e/a&255;return t+n},l.prototype.writeUint8=l.prototype.writeUInt8=function(e,t,n){return e=+e,t>>>=0,n||_(this,e,t,1,255,0),this[t]=255&e,t+1},l.prototype.writeUint16LE=l.prototype.writeUInt16LE=function(e,t,n){return e=+e,t>>>=0,n||_(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},l.prototype.writeUint16BE=l.prototype.writeUInt16BE=function(e,t,n){return e=+e,t>>>=0,n||_(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},l.prototype.writeUint32LE=l.prototype.writeUInt32LE=function(e,t,n){return e=+e,t>>>=0,n||_(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},l.prototype.writeUint32BE=l.prototype.writeUInt32BE=function(e,t,n){return e=+e,t>>>=0,n||_(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},l.prototype.writeBigUInt64LE=Z((function(e,t=0){return D(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),l.prototype.writeBigUInt64BE=Z((function(e,t=0){return L(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),l.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t>>>=0,!r){const r=Math.pow(2,8*n-1);_(this,e,t,n,r-1,-r)}let s=0,a=1,i=0;for(this[t]=255&e;++s<n&&(a*=256);)e<0&&0===i&&0!==this[t+s-1]&&(i=1),this[t+s]=(e/a>>0)-i&255;return t+n},l.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t>>>=0,!r){const r=Math.pow(2,8*n-1);_(this,e,t,n,r-1,-r)}let s=n-1,a=1,i=0;for(this[t+s]=255&e;--s>=0&&(a*=256);)e<0&&0===i&&0!==this[t+s+1]&&(i=1),this[t+s]=(e/a>>0)-i&255;return t+n},l.prototype.writeInt8=function(e,t,n){return e=+e,t>>>=0,n||_(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},l.prototype.writeInt16LE=function(e,t,n){return e=+e,t>>>=0,n||_(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},l.prototype.writeInt16BE=function(e,t,n){return e=+e,t>>>=0,n||_(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},l.prototype.writeInt32LE=function(e,t,n){return e=+e,t>>>=0,n||_(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},l.prototype.writeInt32BE=function(e,t,n){return e=+e,t>>>=0,n||_(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},l.prototype.writeBigInt64LE=Z((function(e,t=0){return D(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),l.prototype.writeBigInt64BE=Z((function(e,t=0){return L(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),l.prototype.writeFloatLE=function(e,t,n){return M(this,e,t,!0,n)},l.prototype.writeFloatBE=function(e,t,n){return M(this,e,t,!1,n)},l.prototype.writeDoubleLE=function(e,t,n){return z(this,e,t,!0,n)},l.prototype.writeDoubleBE=function(e,t,n){return z(this,e,t,!1,n)},l.prototype.copy=function(e,t,n,r){if(!l.isBuffer(e))throw new TypeError("argument should be a Buffer");if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);const s=r-n;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,n,r):Uint8Array.prototype.set.call(e,this.subarray(n,r),t),s},l.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!l.isEncoding(r))throw new TypeError("Unknown encoding: "+r);if(1===e.length){const t=e.charCodeAt(0);("utf8"===r&&t<128||"latin1"===r)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;let s;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(s=t;s<n;++s)this[s]=e;else{const a=l.isBuffer(e)?e:l.from(e,r),i=a.length;if(0===i)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(s=0;s<n-t;++s)this[s+t]=a[s%i]}return this};const B={};function P(e,t,n){B[e]=class extends n{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function W(e){let t="",n=e.length;const r="-"===e[0]?1:0;for(;n>=r+4;n-=3)t=`_${e.slice(n-3,n)}${t}`;return`${e.slice(0,n)}${t}`}function U(e,t,n,r,s,a){if(e>n||e<t){const r="bigint"==typeof t?"n":"";let s;throw s=a>3?0===t||t===BigInt(0)?`>= 0${r} and < 2${r} ** ${8*(a+1)}${r}`:`>= -(2${r} ** ${8*(a+1)-1}${r}) and < 2 ** ${8*(a+1)-1}${r}`:`>= ${t}${r} and <= ${n}${r}`,new B.ERR_OUT_OF_RANGE("value",s,e)}!function(e,t,n){V(t,"offset"),void 0!==e[t]&&void 0!==e[t+n]||G(t,e.length-(n+1))}(r,s,a)}function V(e,t){if("number"!=typeof e)throw new B.ERR_INVALID_ARG_TYPE(t,"number",e)}function G(e,t,n){if(Math.floor(e)!==e)throw V(e,n),new B.ERR_OUT_OF_RANGE(n||"offset","an integer",e);if(t<0)throw new B.ERR_BUFFER_OUT_OF_BOUNDS;throw new B.ERR_OUT_OF_RANGE(n||"offset",`>= ${n?1:0} and <= ${t}`,e)}P("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),P("ERR_INVALID_ARG_TYPE",(function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),P("ERR_OUT_OF_RANGE",(function(e,t,n){let r=`The value of "${e}" is out of range.`,s=n;return Number.isInteger(n)&&Math.abs(n)>2**32?s=W(String(n)):"bigint"==typeof n&&(s=String(n),(n>BigInt(2)**BigInt(32)||n<-(BigInt(2)**BigInt(32)))&&(s=W(s)),s+="n"),r+=` It must be ${t}. Received ${s}`,r}),RangeError);const j=/[^+/0-9A-Za-z-_]/g;function H(e,t){let n;t=t||1/0;const r=e.length;let s=null;const a=[];for(let i=0;i<r;++i){if(n=e.charCodeAt(i),n>55295&&n<57344){if(!s){if(n>56319){(t-=3)>-1&&a.push(239,191,189);continue}if(i+1===r){(t-=3)>-1&&a.push(239,191,189);continue}s=n;continue}if(n<56320){(t-=3)>-1&&a.push(239,191,189),s=n;continue}n=65536+(s-55296<<10|n-56320)}else s&&(t-=3)>-1&&a.push(239,191,189);if(s=null,n<128){if((t-=1)<0)break;a.push(n)}else if(n<2048){if((t-=2)<0)break;a.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;a.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;a.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return a}function q(e){return r.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(j,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function K(e,t,n,r){let s;for(s=0;s<r&&!(s+n>=t.length||s>=e.length);++s)t[s+n]=e[s];return s}function X(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function Y(e){return e!=e}const J=function(){const e="0123456789abcdef",t=new Array(256);for(let n=0;n<16;++n){const r=16*n;for(let s=0;s<16;++s)t[r+s]=e[n]+e[s]}return t}();function Z(e){return"undefined"==typeof BigInt?Q:e}function Q(){throw new Error("BigInt not supported")}},6239:(e,t,n)=>{"use strict";var r=n(5081);function s(){this.argTypes=[],this.shimArgs=[],this.arrayArgs=[],this.arrayBlockIndices=[],this.scalarArgs=[],this.offsetArgs=[],this.offsetArgIndex=[],this.indexArgs=[],this.shapeArgs=[],this.funcName="",this.pre=null,this.body=null,this.post=null,this.debug=!1}e.exports=function(e){var t=new s;t.pre=e.pre,t.body=e.body,t.post=e.post;var n=e.args.slice(0);t.argTypes=n;for(var a=0;a<n.length;++a){var i=n[a];if("array"===i||"object"==typeof i&&i.blockIndices){if(t.argTypes[a]="array",t.arrayArgs.push(a),t.arrayBlockIndices.push(i.blockIndices?i.blockIndices:0),t.shimArgs.push("array"+a),a<t.pre.args.length&&t.pre.args[a].count>0)throw new Error("cwise: pre() block may not reference array args");if(a<t.post.args.length&&t.post.args[a].count>0)throw new Error("cwise: post() block may not reference array args")}else if("scalar"===i)t.scalarArgs.push(a),t.shimArgs.push("scalar"+a);else if("index"===i){if(t.indexArgs.push(a),a<t.pre.args.length&&t.pre.args[a].count>0)throw new Error("cwise: pre() block may not reference array index");if(a<t.body.args.length&&t.body.args[a].lvalue)throw new Error("cwise: body() block may not write to array index");if(a<t.post.args.length&&t.post.args[a].count>0)throw new Error("cwise: post() block may not reference array index")}else if("shape"===i){if(t.shapeArgs.push(a),a<t.pre.args.length&&t.pre.args[a].lvalue)throw new Error("cwise: pre() block may not write to array shape");if(a<t.body.args.length&&t.body.args[a].lvalue)throw new Error("cwise: body() block may not write to array shape");if(a<t.post.args.length&&t.post.args[a].lvalue)throw new Error("cwise: post() block may not write to array shape")}else{if("object"!=typeof i||!i.offset)throw new Error("cwise: Unknown argument type "+n[a]);t.argTypes[a]="offset",t.offsetArgs.push({array:i.array,offset:i.offset}),t.offsetArgIndex.push(a)}}if(t.arrayArgs.length<=0)throw new Error("cwise: No array arguments specified");if(t.pre.args.length>n.length)throw new Error("cwise: Too many arguments in pre() block");if(t.body.args.length>n.length)throw new Error("cwise: Too many arguments in body() block");if(t.post.args.length>n.length)throw new Error("cwise: Too many arguments in post() block");return t.debug=!!e.printCode||!!e.debug,t.funcName=e.funcName||"cwise",t.blockSize=e.blockSize||64,r(t)}},1984:(e,t,n)=>{"use strict";var r=n(8706);function s(e,t,n){var r,s,a=e.length,i=t.arrayArgs.length,o=t.indexArgs.length>0,l=[],u=[],c=0,h=0;for(r=0;r<a;++r)u.push(["i",r,"=0"].join(""));for(s=0;s<i;++s)for(r=0;r<a;++r)h=c,c=e[r],0===r?u.push(["d",s,"s",r,"=t",s,"p",c].join("")):u.push(["d",s,"s",r,"=(t",s,"p",c,"-s",h,"*t",s,"p",h,")"].join(""));for(u.length>0&&l.push("var "+u.join(",")),r=a-1;r>=0;--r)c=e[r],l.push(["for(i",r,"=0;i",r,"<s",c,";++i",r,"){"].join(""));for(l.push(n),r=0;r<a;++r){for(h=c,c=e[r],s=0;s<i;++s)l.push(["p",s,"+=d",s,"s",r].join(""));o&&(r>0&&l.push(["index[",h,"]-=s",h].join("")),l.push(["++index[",c,"]"].join(""))),l.push("}")}return l.join("\n")}function a(e,t,n){for(var r=e.body,s=[],a=[],i=0;i<e.args.length;++i){var o=e.args[i];if(!(o.count<=0)){var l=new RegExp(o.name,"g"),u="",c=t.arrayArgs.indexOf(i);switch(t.argTypes[i]){case"offset":var h=t.offsetArgIndex.indexOf(i);c=t.offsetArgs[h].array,u="+q"+h;case"array":u="p"+c+u;var d="l"+i,p="a"+c;if(0===t.arrayBlockIndices[c])1===o.count?"generic"===n[c]?o.lvalue?(s.push(["var ",d,"=",p,".get(",u,")"].join("")),r=r.replace(l,d),a.push([p,".set(",u,",",d,")"].join(""))):r=r.replace(l,[p,".get(",u,")"].join("")):r=r.replace(l,[p,"[",u,"]"].join("")):"generic"===n[c]?(s.push(["var ",d,"=",p,".get(",u,")"].join("")),r=r.replace(l,d),o.lvalue&&a.push([p,".set(",u,",",d,")"].join(""))):(s.push(["var ",d,"=",p,"[",u,"]"].join("")),r=r.replace(l,d),o.lvalue&&a.push([p,"[",u,"]=",d].join("")));else{for(var f=[o.name],g=[u],m=0;m<Math.abs(t.arrayBlockIndices[c]);m++)f.push("\\s*\\[([^\\]]+)\\]"),g.push("$"+(m+1)+"*t"+c+"b"+m);if(l=new RegExp(f.join(""),"g"),u=g.join("+"),"generic"===n[c])throw new Error("cwise: Generic arrays not supported in combination with blocks!");r=r.replace(l,[p,"[",u,"]"].join(""))}break;case"scalar":r=r.replace(l,"Y"+t.scalarArgs.indexOf(i));break;case"index":r=r.replace(l,"index");break;case"shape":r=r.replace(l,"shape")}}}return[s.join("\n"),r,a.join("\n")].join("\n").trim()}function i(e){for(var t=new Array(e.length),n=!0,r=0;r<e.length;++r){var s=e[r],a=s.match(/\d+/);a=a?a[0]:"",0===s.charAt(0)?t[r]="u"+s.charAt(1)+a:t[r]=s.charAt(0)+a,r>0&&(n=n&&t[r]===t[r-1])}return n?t[0]:t.join("")}e.exports=function(e,t){for(var n=t[1].length-Math.abs(e.arrayBlockIndices[0])|0,o=new Array(e.arrayArgs.length),l=new Array(e.arrayArgs.length),u=0;u<e.arrayArgs.length;++u)l[u]=t[2*u],o[u]=t[2*u+1];var c=[],h=[],d=[],p=[],f=[];for(u=0;u<e.arrayArgs.length;++u){e.arrayBlockIndices[u]<0?(d.push(0),p.push(n),c.push(n),h.push(n+e.arrayBlockIndices[u])):(d.push(e.arrayBlockIndices[u]),p.push(e.arrayBlockIndices[u]+n),c.push(0),h.push(e.arrayBlockIndices[u]));for(var g=[],m=0;m<o[u].length;m++)d[u]<=o[u][m]&&o[u][m]<p[u]&&g.push(o[u][m]-d[u]);f.push(g)}var b=["SS"],y=["'use strict'"],x=[];for(m=0;m<n;++m)x.push(["s",m,"=SS[",m,"]"].join(""));for(u=0;u<e.arrayArgs.length;++u){for(b.push("a"+u),b.push("t"+u),b.push("p"+u),m=0;m<n;++m)x.push(["t",u,"p",m,"=t",u,"[",d[u]+m,"]"].join(""));for(m=0;m<Math.abs(e.arrayBlockIndices[u]);++m)x.push(["t",u,"b",m,"=t",u,"[",c[u]+m,"]"].join(""))}for(u=0;u<e.scalarArgs.length;++u)b.push("Y"+u);if(e.shapeArgs.length>0&&x.push("shape=SS.slice(0)"),e.indexArgs.length>0){var v=new Array(n);for(u=0;u<n;++u)v[u]="0";x.push(["index=[",v.join(","),"]"].join(""))}for(u=0;u<e.offsetArgs.length;++u){var w=e.offsetArgs[u],k=[];for(m=0;m<w.offset.length;++m)0!==w.offset[m]&&(1===w.offset[m]?k.push(["t",w.array,"p",m].join("")):k.push([w.offset[m],"*t",w.array,"p",m].join("")));0===k.length?x.push("q"+u+"=0"):x.push(["q",u,"=",k.join("+")].join(""))}var I=r([].concat(e.pre.thisVars).concat(e.body.thisVars).concat(e.post.thisVars));for((x=x.concat(I)).length>0&&y.push("var "+x.join(",")),u=0;u<e.arrayArgs.length;++u)y.push("p"+u+"|=0");e.pre.body.length>3&&y.push(a(e.pre,e,l));var C=a(e.body,e,l),N=function(e){for(var t=0,n=e[0].length;t<n;){for(var r=1;r<e.length;++r)if(e[r][t]!==e[0][t])return t;++t}return t}(f);N<n?y.push(function(e,t,n,r){for(var a=t.length,i=n.arrayArgs.length,o=n.blockSize,l=n.indexArgs.length>0,u=[],c=0;c<i;++c)u.push(["var offset",c,"=p",c].join(""));for(c=e;c<a;++c)u.push(["for(var j"+c+"=SS[",t[c],"]|0;j",c,">0;){"].join("")),u.push(["if(j",c,"<",o,"){"].join("")),u.push(["s",t[c],"=j",c].join("")),u.push(["j",c,"=0"].join("")),u.push(["}else{s",t[c],"=",o].join("")),u.push(["j",c,"-=",o,"}"].join("")),l&&u.push(["index[",t[c],"]=j",c].join(""));for(c=0;c<i;++c){for(var h=["offset"+c],d=e;d<a;++d)h.push(["j",d,"*t",c,"p",t[d]].join(""));u.push(["p",c,"=(",h.join("+"),")"].join(""))}for(u.push(s(t,n,r)),c=e;c<a;++c)u.push("}");return u.join("\n")}(N,f[0],e,C)):y.push(s(f[0],e,C)),e.post.body.length>3&&y.push(a(e.post,e,l)),e.debug&&console.log("-----Generated cwise routine for ",t,":\n"+y.join("\n")+"\n----------");var $=[e.funcName||"unnamed","_cwise_loop_",o[0].join("s"),"m",N,i(l)].join("");return new Function(["function ",$,"(",b.join(","),"){",y.join("\n"),"} return ",$].join(""))()}},5081:(e,t,n)=>{"use strict";var r=n(1984);e.exports=function(e){var t=["'use strict'","var CACHED={}"],n=[],s=e.funcName+"_cwise_thunk";t.push(["return function ",s,"(",e.shimArgs.join(","),"){"].join(""));for(var a=[],i=[],o=[["array",e.arrayArgs[0],".shape.slice(",Math.max(0,e.arrayBlockIndices[0]),e.arrayBlockIndices[0]<0?","+e.arrayBlockIndices[0]+")":")"].join("")],l=[],u=[],c=0;c<e.arrayArgs.length;++c){var h=e.arrayArgs[c];n.push(["t",h,"=array",h,".dtype,","r",h,"=array",h,".order"].join("")),a.push("t"+h),a.push("r"+h),i.push("t"+h),i.push("r"+h+".join()"),o.push("array"+h+".data"),o.push("array"+h+".stride"),o.push("array"+h+".offset|0"),c>0&&(l.push("array"+e.arrayArgs[0]+".shape.length===array"+h+".shape.length+"+(Math.abs(e.arrayBlockIndices[0])-Math.abs(e.arrayBlockIndices[c]))),u.push("array"+e.arrayArgs[0]+".shape[shapeIndex+"+Math.max(0,e.arrayBlockIndices[0])+"]===array"+h+".shape[shapeIndex+"+Math.max(0,e.arrayBlockIndices[c])+"]"))}for(e.arrayArgs.length>1&&(t.push("if (!("+l.join(" && ")+")) throw new Error('cwise: Arrays do not all have the same dimensionality!')"),t.push("for(var shapeIndex=array"+e.arrayArgs[0]+".shape.length-"+Math.abs(e.arrayBlockIndices[0])+"; shapeIndex--\x3e0;) {"),t.push("if (!("+u.join(" && ")+")) throw new Error('cwise: Arrays do not all have the same shape!')"),t.push("}")),c=0;c<e.scalarArgs.length;++c)o.push("scalar"+e.scalarArgs[c]);return n.push(["type=[",i.join(","),"].join()"].join("")),n.push("proc=CACHED[type]"),t.push("var "+n.join(",")),t.push(["if(!proc){","CACHED[type]=proc=compile([",a.join(","),"])}","return proc(",o.join(","),")}"].join("")),e.debug&&console.log("-----Generated thunk:\n"+t.join("\n")+"\n----------"),new Function("compile",t.join("\n"))(r.bind(void 0,e))}},6615:(e,t,n)=>{"use strict";var r=n(987),s=n(8706),a=0;function i(e,t,n){this.name=e,this.lvalue=t,this.rvalue=n,this.count=0}function o(e,t,n,r){this.body=e,this.args=t,this.thisVars=n,this.localVars=r}e.exports=function(e){for(var t=["(",e,")()"].join(""),l=r.parse(t,{range:!0}),u="_inline_"+a+++"_",c=function(e){for(var t=e.body[0].expression.callee.params,n=new Array(t.length),r=0;r<t.length;++r)n[r]=t[r].name;return n}(l),h=new Array(c.length),d=0;d<c.length;++d)h[d]=new i([u,"arg",d,"_"].join(""),!1,!1);for(var p=new Array(t.length),f=(d=0,t.length);d<f;++d)p[d]=t.charAt(d);var g,m=[],b=[];function y(e,t){for(var n=e.range[0],r=e.range[1],s=n+1;s<r;++s)p[s]="";p[n]=t}return function e(t,r){if(t.parent=r,"MemberExpression"===t.type)t.computed?(e(t.object,t),e(t.property,t)):"ThisExpression"===t.object.type?y(t,(x="this_"+t.property.name.replace(/\_/g,"__"),b.push(x),x)):e(t.object,t);else{if("ThisExpression"===t.type)throw new Error("cwise-parser: Computed this is not allowed");if("Identifier"===t.type){var s=t.name,a=c.indexOf(s);if(a>=0){var i=h[a],o=function(e){return"AssignmentExpression"===e.parent.type&&e.parent.left===e?"="===e.parent.operator?1:3:"UpdateExpression"===e.parent.type?3:2}(t);1&o&&(i.lvalue=!0),2&o&&(i.rvalue=!0),++i.count,y(t,i.name)}else(function(e){if("eval"===e)throw new Error("cwise-parser: eval() not allowed");return"undefined"!=typeof window?e in window:void 0!==n.g?e in n.g:"undefined"!=typeof self&&e in self})(s)||y(t,function(e){var t=u+e.replace(/\_/g,"__");return m.push(t),t}(s))}else if("Literal"===t.type)"string"==typeof t.value&&y(t,"'"+t.value.replace(/\_/g,"\\_").replace(/\'/g,"'")+"'");else{if("WithStatement"===t.type)throw new Error("cwise-parser: with() statements not allowed");for(var l=Object.keys(t),d=0,p=l.length;d<p;++d)if("parent"!==l[d]){var f=t[l[d]];if(f)if(f instanceof Array)for(var g=0;g<f.length;++g)f[g]&&"string"==typeof f[g].type&&e(f[g],t);else"string"==typeof f.type&&e(f,t)}}}var x}(l.body[0].expression.callee.body,void 0),s(m),s(b),new o((g=l.body[0].expression.callee.body,p.slice(g.range[0],g.range[1]).join("")),h,b,m)}},6780:(e,t,n)=>{"use strict";var r=n(6615),s=n(6239),a=["args","body"],i=["pre","post","printCode","funcName","blockSize"];e.exports=function(e){for(var t in e)a.indexOf(t)<0&&i.indexOf(t)<0&&console.warn("cwise: Unknown argument '"+t+"' passed to expression compiler");for(var n=0;n<a.length;++n)if(!e[a[n]])throw new Error("cwise: Missing argument: "+a[n]);return s({args:e.args,pre:r(e.pre||function(){}),body:r(e.body),post:r(e.post||function(){}),debug:!!e.printCode,funcName:e.funcName||e.body.name||"cwise",blockSize:e.blockSize||64})}},6841:e=>{"use strict";function t(e,n,r){var s=0|e[r];if(s<=0)return[];var a,i=new Array(s);if(r===e.length-1)for(a=0;a<s;++a)i[a]=n;else for(a=0;a<s;++a)i[a]=t(e,n,r+1);return i}e.exports=function(e,n){switch(void 0===n&&(n=0),typeof e){case"number":if(e>0)return function(e,t){var n,r;for(n=new Array(e),r=0;r<e;++r)n[r]=t;return n}(0|e,n);break;case"object":if("number"==typeof e.length)return t(e,n,0)}return[]}},987:function(e,t){var n,r;!function(s,a){"use strict";n=function(e){var t,n,r,s,a,i,o,l,u,c,h,d,p,f,g,m,b,y;function x(e,t){if(!e)throw new Error("ASSERT: "+t)}function v(e){return e>=48&&e<=57}function w(e){return"0123456789abcdefABCDEF".indexOf(e)>=0}function k(e){return"01234567".indexOf(e)>=0}function I(e){return 32===e||9===e||11===e||12===e||160===e||e>=5760&&[5760,6158,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279].indexOf(e)>=0}function C(e){return 10===e||13===e||8232===e||8233===e}function N(e){return 36===e||95===e||e>=65&&e<=90||e>=97&&e<=122||92===e||e>=128&&o.NonAsciiIdentifierStart.test(String.fromCharCode(e))}function $(e){return 36===e||95===e||e>=65&&e<=90||e>=97&&e<=122||e>=48&&e<=57||92===e||e>=128&&o.NonAsciiIdentifierPart.test(String.fromCharCode(e))}function S(e){switch(e){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"yield":case"let":return!0;default:return!1}}function E(e){return"eval"===e||"arguments"===e}function T(e){if(c&&S(e))return!0;switch(e.length){case 2:return"if"===e||"in"===e||"do"===e;case 3:return"var"===e||"for"===e||"new"===e||"try"===e||"let"===e;case 4:return"this"===e||"else"===e||"case"===e||"void"===e||"with"===e||"enum"===e;case 5:return"while"===e||"break"===e||"catch"===e||"throw"===e||"const"===e||"yield"===e||"class"===e||"super"===e;case 6:return"return"===e||"typeof"===e||"delete"===e||"switch"===e||"export"===e||"import"===e;case 7:return"default"===e||"finally"===e||"extends"===e;case 8:return"function"===e||"continue"===e||"debugger"===e;case 10:return"instanceof"===e;default:return!1}}function A(e,t,n,r,s){var a;x("number"==typeof n,"Comment must have valid position"),b.lastCommentStart>=n||(b.lastCommentStart=n,a={type:e,value:t},y.range&&(a.range=[n,r]),y.loc&&(a.loc=s),y.comments.push(a),y.attachComment&&(y.leadingComments.push(a),y.trailingComments.push(a)))}function R(e){var t,n,r,s;for(t=h-e,n={start:{line:d,column:h-p-e}};h<f;)if(r=u.charCodeAt(h),++h,C(r))return y.comments&&(s=u.slice(t+e,h-1),n.end={line:d,column:h-p-1},A("Line",s,t,h-1,n)),13===r&&10===u.charCodeAt(h)&&++h,++d,void(p=h);y.comments&&(s=u.slice(t+e,h),n.end={line:d,column:h-p},A("Line",s,t,h,n))}function F(){var e,t,n,r;for(y.comments&&(e=h-2,t={start:{line:d,column:h-p-2}});h<f;)if(C(n=u.charCodeAt(h)))13===n&&10===u.charCodeAt(h+1)&&++h,++d,++h,p=h,h>=f&&K({},i.UnexpectedToken,"ILLEGAL");else if(42===n){if(47===u.charCodeAt(h+1))return++h,++h,void(y.comments&&(r=u.slice(e+2,h-2),t.end={line:d,column:h-p},A("Block",r,e,h,t)));++h}else++h;K({},i.UnexpectedToken,"ILLEGAL")}function _(){var e,t;for(t=0===h;h<f;)if(I(e=u.charCodeAt(h)))++h;else if(C(e))++h,13===e&&10===u.charCodeAt(h)&&++h,++d,p=h,t=!0;else if(47===e)if(47===(e=u.charCodeAt(h+1)))++h,++h,R(2),t=!0;else{if(42!==e)break;++h,++h,F()}else if(t&&45===e){if(45!==u.charCodeAt(h+1)||62!==u.charCodeAt(h+2))break;h+=3,R(3)}else{if(60!==e)break;if("!--"!==u.slice(h+1,h+4))break;++h,++h,++h,++h,R(4)}}function D(e){var t,n,r,s=0;for(n="u"===e?4:2,t=0;t<n;++t){if(!(h<f&&w(u[h])))return"";r=u[h++],s=16*s+"0123456789abcdef".indexOf(r.toLowerCase())}return String.fromCharCode(s)}function L(){var e,t;for(e=u.charCodeAt(h++),t=String.fromCharCode(e),92===e&&(117!==u.charCodeAt(h)&&K({},i.UnexpectedToken,"ILLEGAL"),++h,(e=D("u"))&&"\\"!==e&&N(e.charCodeAt(0))||K({},i.UnexpectedToken,"ILLEGAL"),t=e);h<f&&$(e=u.charCodeAt(h));)++h,t+=String.fromCharCode(e),92===e&&(t=t.substr(0,t.length-1),117!==u.charCodeAt(h)&&K({},i.UnexpectedToken,"ILLEGAL"),++h,(e=D("u"))&&"\\"!==e&&$(e.charCodeAt(0))||K({},i.UnexpectedToken,"ILLEGAL"),t+=e);return t}function O(){var e,t;for(e=h++;h<f;){if(92===(t=u.charCodeAt(h)))return h=e,L();if(!$(t))break;++h}return u.slice(e,h)}function M(){var e,n,r,s,a=h,o=u.charCodeAt(h),l=u[h];switch(o){case 46:case 40:case 41:case 59:case 44:case 123:case 125:case 91:case 93:case 58:case 63:case 126:return++h,y.tokenize&&(40===o?y.openParenToken=y.tokens.length:123===o&&(y.openCurlyToken=y.tokens.length)),{type:t.Punctuator,value:String.fromCharCode(o),lineNumber:d,lineStart:p,start:a,end:h};default:if(61===(e=u.charCodeAt(h+1)))switch(o){case 43:case 45:case 47:case 60:case 62:case 94:case 124:case 37:case 38:case 42:return h+=2,{type:t.Punctuator,value:String.fromCharCode(o)+String.fromCharCode(e),lineNumber:d,lineStart:p,start:a,end:h};case 33:case 61:return h+=2,61===u.charCodeAt(h)&&++h,{type:t.Punctuator,value:u.slice(a,h),lineNumber:d,lineStart:p,start:a,end:h}}}return">>>="===(s=u.substr(h,4))?(h+=4,{type:t.Punctuator,value:s,lineNumber:d,lineStart:p,start:a,end:h}):">>>"===(r=s.substr(0,3))||"<<="===r||">>="===r?(h+=3,{type:t.Punctuator,value:r,lineNumber:d,lineStart:p,start:a,end:h}):l===(n=r.substr(0,2))[1]&&"+-<>&|".indexOf(l)>=0||"=>"===n?(h+=2,{type:t.Punctuator,value:n,lineNumber:d,lineStart:p,start:a,end:h}):"<>=!+-*%&|^/".indexOf(l)>=0?(++h,{type:t.Punctuator,value:l,lineNumber:d,lineStart:p,start:a,end:h}):void K({},i.UnexpectedToken,"ILLEGAL")}function z(){var e,n,r;if(x(v((r=u[h]).charCodeAt(0))||"."===r,"Numeric literal must start with a decimal digit or a decimal point"),n=h,e="","."!==r){if(e=u[h++],r=u[h],"0"===e){if("x"===r||"X"===r)return++h,function(e){for(var n="";h<f&&w(u[h]);)n+=u[h++];return 0===n.length&&K({},i.UnexpectedToken,"ILLEGAL"),N(u.charCodeAt(h))&&K({},i.UnexpectedToken,"ILLEGAL"),{type:t.NumericLiteral,value:parseInt("0x"+n,16),lineNumber:d,lineStart:p,start:e,end:h}}(n);if(k(r)&&function(){var e,t;for(e=h+1;e<f;++e){if("8"===(t=u[e])||"9"===t)return!1;if(!k(t))return!0}return!0}())return function(e){for(var n="0"+u[h++];h<f&&k(u[h]);)n+=u[h++];return(N(u.charCodeAt(h))||v(u.charCodeAt(h)))&&K({},i.UnexpectedToken,"ILLEGAL"),{type:t.NumericLiteral,value:parseInt(n,8),octal:!0,lineNumber:d,lineStart:p,start:e,end:h}}(n)}for(;v(u.charCodeAt(h));)e+=u[h++];r=u[h]}if("."===r){for(e+=u[h++];v(u.charCodeAt(h));)e+=u[h++];r=u[h]}if("e"===r||"E"===r)if(e+=u[h++],"+"!==(r=u[h])&&"-"!==r||(e+=u[h++]),v(u.charCodeAt(h)))for(;v(u.charCodeAt(h));)e+=u[h++];else K({},i.UnexpectedToken,"ILLEGAL");return N(u.charCodeAt(h))&&K({},i.UnexpectedToken,"ILLEGAL"),{type:t.NumericLiteral,value:parseFloat(e),lineNumber:d,lineStart:p,start:n,end:h}}function B(){var e,n,r,s;return m=null,_(),e=h,n=function(){var e,t,n,r;for(x("/"===(e=u[h]),"Regular expression literal must start with a slash"),t=u[h++],n=!1,r=!1;h<f;)if(t+=e=u[h++],"\\"===e)C((e=u[h++]).charCodeAt(0))&&K({},i.UnterminatedRegExp),t+=e;else if(C(e.charCodeAt(0)))K({},i.UnterminatedRegExp);else if(n)"]"===e&&(n=!1);else{if("/"===e){r=!0;break}"["===e&&(n=!0)}return r||K({},i.UnterminatedRegExp),{value:t.substr(1,t.length-2),literal:t}}(),r=function(){var e,t,n,r;for(t="",n="";h<f&&$((e=u[h]).charCodeAt(0));)if(++h,"\\"===e&&h<f)if("u"===(e=u[h])){if(r=++h,e=D("u"))for(n+=e,t+="\\u";r<h;++r)t+=u[r];else h=r,n+="u",t+="\\u";X({},i.UnexpectedToken,"ILLEGAL")}else t+="\\",X({},i.UnexpectedToken,"ILLEGAL");else n+=e,t+=e;return{value:n,literal:t}}(),s=function(e,t){var n;try{n=new RegExp(e,t)}catch(e){K({},i.InvalidRegExp)}return n}(n.value,r.value),y.tokenize?{type:t.RegularExpression,value:s,lineNumber:d,lineStart:p,start:e,end:h}:{literal:n.literal+r.literal,value:s,start:e,end:h}}function P(){var e,t,n,r;return _(),e=h,t={start:{line:d,column:h-p}},n=B(),t.end={line:d,column:h-p},y.tokenize||(y.tokens.length>0&&(r=y.tokens[y.tokens.length-1]).range[0]===e&&"Punctuator"===r.type&&("/"!==r.value&&"/="!==r.value||y.tokens.pop()),y.tokens.push({type:"RegularExpression",value:n.literal,range:[e,h],loc:t})),n}function W(){var e,n,s;return _(),h>=f?{type:t.EOF,lineNumber:d,lineStart:p,start:h,end:h}:N(e=u.charCodeAt(h))?(n=h,{type:1===(s=92===u.charCodeAt(h)?L():O()).length?t.Identifier:T(s)?t.Keyword:"null"===s?t.NullLiteral:"true"===s||"false"===s?t.BooleanLiteral:t.Identifier,value:s,lineNumber:d,lineStart:p,start:n,end:h}):40===e||41===e||59===e?M():39===e||34===e?function(){var e,n,r,s,a,o,l,c,g="",m=!1;for(l=d,c=p,x("'"===(e=u[h])||'"'===e,"String literal must starts with a quote"),n=h,++h;h<f;){if((r=u[h++])===e){e="";break}if("\\"===r)if((r=u[h++])&&C(r.charCodeAt(0)))++d,"\r"===r&&"\n"===u[h]&&++h,p=h;else switch(r){case"u":case"x":o=h,(a=D(r))?g+=a:(h=o,g+=r);break;case"n":g+="\n";break;case"r":g+="\r";break;case"t":g+="\t";break;case"b":g+="\b";break;case"f":g+="\f";break;case"v":g+="\v";break;default:k(r)?(0!==(s="01234567".indexOf(r))&&(m=!0),h<f&&k(u[h])&&(m=!0,s=8*s+"01234567".indexOf(u[h++]),"0123".indexOf(r)>=0&&h<f&&k(u[h])&&(s=8*s+"01234567".indexOf(u[h++]))),g+=String.fromCharCode(s)):g+=r}else{if(C(r.charCodeAt(0)))break;g+=r}}return""!==e&&K({},i.UnexpectedToken,"ILLEGAL"),{type:t.StringLiteral,value:g,octal:m,startLineNumber:l,startLineStart:c,lineNumber:d,lineStart:p,start:n,end:h}}():46===e?v(u.charCodeAt(h+1))?z():M():v(e)?z():y.tokenize&&47===e?function(){var e,t;if(!(e=y.tokens[y.tokens.length-1]))return P();if("Punctuator"===e.type){if("]"===e.value)return M();if(")"===e.value)return!(t=y.tokens[y.openParenToken-1])||"Keyword"!==t.type||"if"!==t.value&&"while"!==t.value&&"for"!==t.value&&"with"!==t.value?M():P();if("}"===e.value){if(y.tokens[y.openCurlyToken-3]&&"Keyword"===y.tokens[y.openCurlyToken-3].type){if(!(t=y.tokens[y.openCurlyToken-4]))return M()}else{if(!y.tokens[y.openCurlyToken-4]||"Keyword"!==y.tokens[y.openCurlyToken-4].type)return M();if(!(t=y.tokens[y.openCurlyToken-5]))return P()}return r.indexOf(t.value)>=0?M():P()}return P()}return"Keyword"===e.type&&"this"!==e.value?P():M()}():M()}function U(){var e,r,s;return _(),e={start:{line:d,column:h-p}},r=W(),e.end={line:d,column:h-p},r.type!==t.EOF&&(s=u.slice(r.start,r.end),y.tokens.push({type:n[r.type],value:s,range:[r.start,r.end],loc:e})),r}function V(){var e;return h=(e=m).end,d=e.lineNumber,p=e.lineStart,m=void 0!==y.tokens?U():W(),h=e.end,d=e.lineNumber,p=e.lineStart,e}function G(){var e,t,n;e=h,t=d,n=p,m=void 0!==y.tokens?U():W(),h=e,d=t,p=n}function j(e,t){this.line=e,this.column=t}function H(e,t,n,r){this.start=new j(e,t),this.end=new j(n,r)}function q(){var e,t,n,r;return e=h,t=d,n=p,_(),r=d!==t,h=e,d=t,p=n,r}function K(e,t){var n,r=Array.prototype.slice.call(arguments,2),s=t.replace(/%(\d)/g,(function(e,t){return x(t<r.length,"Message reference must be in range"),r[t]}));throw"number"==typeof e.lineNumber?((n=new Error("Line "+e.lineNumber+": "+s)).index=e.start,n.lineNumber=e.lineNumber,n.column=e.start-p+1):((n=new Error("Line "+d+": "+s)).index=h,n.lineNumber=d,n.column=h-p+1),n.description=s,n}function X(){try{K.apply(null,arguments)}catch(e){if(!y.errors)throw e;y.errors.push(e)}}function Y(e){if(e.type===t.EOF&&K(e,i.UnexpectedEOS),e.type===t.NumericLiteral&&K(e,i.UnexpectedNumber),e.type===t.StringLiteral&&K(e,i.UnexpectedString),e.type===t.Identifier&&K(e,i.UnexpectedIdentifier),e.type===t.Keyword){if(function(e){switch(e){case"class":case"enum":case"export":case"extends":case"import":case"super":return!0;default:return!1}}(e.value))K(e,i.UnexpectedReserved);else if(c&&S(e.value))return void X(e,i.StrictReservedWord);K(e,i.UnexpectedToken,e.value)}K(e,i.UnexpectedToken,e.value)}function J(e){var n=V();n.type===t.Punctuator&&n.value===e||Y(n)}function Z(e){var n=V();n.type===t.Keyword&&n.value===e||Y(n)}function Q(e){return m.type===t.Punctuator&&m.value===e}function ee(e){return m.type===t.Keyword&&m.value===e}function te(){var e,n=h,r=d,s=p,a=m;if(59===u.charCodeAt(h)||Q(";"))V();else{if(e=d,_(),d!==e)return h=n,d=r,p=s,void(m=a);m.type===t.EOF||Q("}")||Y(m)}}function ne(e){return e.type===s.Identifier||e.type===s.MemberExpression}function re(e,t){var n,r,s;return n=c,s=m,r=$e(),t&&c&&E(e[0].name)&&X(t,i.StrictParamName),c=n,g.markEnd(g.createFunctionExpression(null,e,[],r),s)}function se(){var e,n;return n=m,(e=V()).type===t.StringLiteral||e.type===t.NumericLiteral?(c&&e.octal&&X(e,i.StrictOctalLiteral),g.markEnd(g.createLiteral(e),n)):g.markEnd(g.createIdentifier(e.value),n)}function ae(){var e,n,r,s,a,o;return o=m,(e=m).type===t.Identifier?(r=se(),"get"!==e.value||Q(":")?"set"!==e.value||Q(":")?(J(":"),s=me(),g.markEnd(g.createProperty("init",r,s),o)):(n=se(),J("("),(e=m).type!==t.Identifier?(J(")"),X(e,i.UnexpectedToken,e.value),s=re([])):(a=[xe()],J(")"),s=re(a,e)),g.markEnd(g.createProperty("set",n,s),o)):(n=se(),J("("),J(")"),s=re([]),g.markEnd(g.createProperty("get",n,s),o))):e.type!==t.EOF&&e.type!==t.Punctuator?(n=se(),J(":"),s=me(),g.markEnd(g.createProperty("init",n,s),o)):void Y(e)}function ie(){var e,n,r,o;if(Q("("))return function(){var e;return J("("),e=be(),J(")"),e}();if(Q("["))return function(){var e,t=[];for(e=m,J("[");!Q("]");)Q(",")?(V(),t.push(null)):(t.push(me()),Q("]")||J(","));return V(),g.markEnd(g.createArrayExpression(t),e)}();if(Q("{"))return function(){var e,t,n,r,o,l=[],u={},h=String;for(o=m,J("{");!Q("}");)t=(e=ae()).key.type===s.Identifier?e.key.name:h(e.key.value),r="init"===e.kind?a.Data:"get"===e.kind?a.Get:a.Set,n="$"+t,Object.prototype.hasOwnProperty.call(u,n)?(u[n]===a.Data?c&&r===a.Data?X({},i.StrictDuplicateProperty):r!==a.Data&&X({},i.AccessorDataProperty):r===a.Data?X({},i.AccessorDataProperty):u[n]&r&&X({},i.AccessorGetSet),u[n]|=r):u[n]=r,l.push(e),Q("}")||J(",");return J("}"),g.markEnd(g.createObjectExpression(l),o)}();if(e=m.type,o=m,e===t.Identifier)r=g.createIdentifier(V().value);else if(e===t.StringLiteral||e===t.NumericLiteral)c&&m.octal&&X(m,i.StrictOctalLiteral),r=g.createLiteral(V());else if(e===t.Keyword){if(ee("function"))return function(){var e,t,n,r,s,a,o,l,u=null,h=[];return l=m,Z("function"),Q("(")||(e=m,u=xe(),c?E(e.value)&&X(e,i.StrictFunctionName):E(e.value)?(n=e,r=i.StrictFunctionName):S(e.value)&&(n=e,r=i.StrictReservedWord)),h=(s=Se(n)).params,t=s.stricted,n=s.firstRestricted,s.message&&(r=s.message),o=c,a=$e(),c&&n&&K(n,r),c&&t&&X(t,r),c=o,g.markEnd(g.createFunctionExpression(u,h,[],a),l)}();ee("this")?(V(),r=g.createThisExpression()):Y(V())}else e===t.BooleanLiteral?((n=V()).value="true"===n.value,r=g.createLiteral(n)):e===t.NullLiteral?((n=V()).value=null,r=g.createLiteral(n)):Q("/")||Q("/=")?(r=void 0!==y.tokens?g.createLiteral(P()):g.createLiteral(B()),G()):Y(V());return g.markEnd(r,o)}function oe(){var e=[];if(J("("),!Q(")"))for(;h<f&&(e.push(me()),!Q(")"));)J(",");return J(")"),e}function le(){var e,n;return n=m,function(e){return e.type===t.Identifier||e.type===t.Keyword||e.type===t.BooleanLiteral||e.type===t.NullLiteral}(e=V())||Y(e),g.markEnd(g.createIdentifier(e.value),n)}function ue(){return J("."),le()}function ce(){var e;return J("["),e=be(),J("]"),e}function he(){var e,t,n;return n=m,Z("new"),e=function(){var e,t,n;for(x(b.allowIn,"callee of new expression always allow in keyword."),n=m,e=ee("new")?he():ie();Q(".")||Q("[");)Q("[")?(t=ce(),e=g.createMemberExpression("[",e,t)):(t=ue(),e=g.createMemberExpression(".",e,t)),g.markEnd(e,n);return e}(),t=Q("(")?oe():[],g.markEnd(g.createNewExpression(e,t),n)}function de(){var e,n,r=m;return e=function(){var e,t,n,r,s=b.allowIn;for(r=m,b.allowIn=!0,e=ee("new")?he():ie();;){if(Q("."))n=ue(),e=g.createMemberExpression(".",e,n);else if(Q("("))t=oe(),e=g.createCallExpression(e,t);else{if(!Q("["))break;n=ce(),e=g.createMemberExpression("[",e,n)}g.markEnd(e,r)}return b.allowIn=s,e}(),m.type===t.Punctuator&&(!Q("++")&&!Q("--")||q()||(c&&e.type===s.Identifier&&E(e.name)&&X({},i.StrictLHSPostfix),ne(e)||X({},i.InvalidLHSInAssignment),n=V(),e=g.markEnd(g.createPostfixExpression(n.value,e),r))),e}function pe(){var e,n,r;return m.type!==t.Punctuator&&m.type!==t.Keyword?n=de():Q("++")||Q("--")?(r=m,e=V(),n=pe(),c&&n.type===s.Identifier&&E(n.name)&&X({},i.StrictLHSPrefix),ne(n)||X({},i.InvalidLHSInAssignment),n=g.createUnaryExpression(e.value,n),n=g.markEnd(n,r)):Q("+")||Q("-")||Q("~")||Q("!")?(r=m,e=V(),n=pe(),n=g.createUnaryExpression(e.value,n),n=g.markEnd(n,r)):ee("delete")||ee("void")||ee("typeof")?(r=m,e=V(),n=pe(),n=g.createUnaryExpression(e.value,n),n=g.markEnd(n,r),c&&"delete"===n.operator&&n.argument.type===s.Identifier&&X({},i.StrictDelete)):n=de(),n}function fe(e,n){var r=0;if(e.type!==t.Punctuator&&e.type!==t.Keyword)return 0;switch(e.value){case"||":r=1;break;case"&&":r=2;break;case"|":r=3;break;case"^":r=4;break;case"&":r=5;break;case"==":case"!=":case"===":case"!==":r=6;break;case"<":case">":case"<=":case">=":case"instanceof":r=7;break;case"in":r=n?7:0;break;case"<<":case">>":case">>>":r=8;break;case"+":case"-":r=9;break;case"*":case"/":case"%":r=11}return r}function ge(){var e,t,n,r,s;return s=m,e=function(){var e,t,n,r,s,a,i,o,l,u;if(e=m,l=pe(),0===(s=fe(r=m,b.allowIn)))return l;for(r.prec=s,V(),t=[e,m],a=[l,r,i=pe()];(s=fe(m,b.allowIn))>0;){for(;a.length>2&&s<=a[a.length-2].prec;)i=a.pop(),o=a.pop().value,l=a.pop(),n=g.createBinaryExpression(o,l,i),t.pop(),e=t[t.length-1],g.markEnd(n,e),a.push(n);(r=V()).prec=s,a.push(r),t.push(m),n=pe(),a.push(n)}for(n=a[u=a.length-1],t.pop();u>1;)n=g.createBinaryExpression(a[u-1].value,a[u-2],n),u-=2,e=t.pop(),g.markEnd(n,e);return n}(),Q("?")&&(V(),t=b.allowIn,b.allowIn=!0,n=me(),b.allowIn=t,J(":"),r=me(),e=g.createConditionalExpression(e,n,r),g.markEnd(e,s)),e}function me(){var e,n,r,a,o,l;return e=m,o=m,a=n=ge(),m.type===t.Punctuator&&("="===(l=m.value)||"*="===l||"/="===l||"%="===l||"+="===l||"-="===l||"<<="===l||">>="===l||">>>="===l||"&="===l||"^="===l||"|="===l)&&(ne(n)||X({},i.InvalidLHSInAssignment),c&&n.type===s.Identifier&&E(n.name)&&X(e,i.StrictLHSAssignment),e=V(),r=me(),a=g.markEnd(g.createAssignmentExpression(e.value,n,r),o)),a}function be(){var e,t=m;if(e=me(),Q(",")){for(e=g.createSequenceExpression([e]);h<f&&Q(",");)V(),e.expressions.push(me());g.markEnd(e,t)}return e}function ye(){var e,t;return t=m,J("{"),e=function(){for(var e,t=[];h<f&&!Q("}")&&void 0!==(e=Te());)t.push(e);return t}(),J("}"),g.markEnd(g.createBlockStatement(e),t)}function xe(){var e,n;return n=m,(e=V()).type!==t.Identifier&&Y(e),g.markEnd(g.createIdentifier(e.value),n)}function ve(e){var t,n,r=null;return n=m,t=xe(),c&&E(t.name)&&X({},i.StrictVarName),"const"===e?(J("="),r=me()):Q("=")&&(V(),r=me()),g.markEnd(g.createVariableDeclarator(t,r),n)}function we(e){var t=[];do{if(t.push(ve(e)),!Q(","))break;V()}while(h<f);return t}function ke(){var e,t,n,r,s,a,o,l,u,c,h=b.allowIn;return e=t=n=null,Z("for"),J("("),Q(";")?V():(ee("var")||ee("let")?(b.allowIn=!1,c=m,l=V(),u=we(),e=g.markEnd(g.createVariableDeclaration(u,l.value),c),b.allowIn=h,1===e.declarations.length&&ee("in")&&(V(),r=e,s=be(),e=null)):(b.allowIn=!1,e=be(),b.allowIn=h,ee("in")&&(ne(e)||X({},i.InvalidLHSInForIn),V(),r=e,s=be(),e=null)),void 0===r&&J(";")),void 0===r&&(Q(";")||(t=be()),J(";"),Q(")")||(n=be())),J(")"),o=b.inIteration,b.inIteration=!0,a=Ne(),b.inIteration=o,void 0===r?g.createForStatement(e,t,n,a):g.createForInStatement(r,s,a)}function Ie(){var e,t,n,r=[];for(n=m,ee("default")?(V(),e=null):(Z("case"),e=be()),J(":");h<f&&!(Q("}")||ee("default")||ee("case"));)t=Ne(),r.push(t);return g.markEnd(g.createSwitchCase(e,r),n)}function Ce(){var e,t,n,r,s=[],a=null;return Z("try"),e=ye(),ee("catch")&&s.push((r=m,Z("catch"),J("("),Q(")")&&Y(m),t=xe(),c&&E(t.name)&&X({},i.StrictCatchVariable),J(")"),n=ye(),g.markEnd(g.createCatchClause(t,n),r))),ee("finally")&&(V(),a=ye()),0!==s.length||a||K({},i.NoCatchOrFinally),g.createTryStatement(e,[],s,a)}function Ne(){var e,n,r,a,o,l,d,p,y,x=m.type;if(x===t.EOF&&Y(m),x===t.Punctuator&&"{"===m.value)return ye();if(a=m,x===t.Punctuator)switch(m.value){case";":return g.markEnd((J(";"),g.createEmptyStatement()),a);case"(":return g.markEnd(function(){var e=be();return te(),g.createExpressionStatement(e)}(),a)}if(x===t.Keyword)switch(m.value){case"break":return g.markEnd(function(){var e,n=null;return Z("break"),59===u.charCodeAt(h)?(V(),b.inIteration||b.inSwitch||K({},i.IllegalBreak),g.createBreakStatement(null)):q()?(b.inIteration||b.inSwitch||K({},i.IllegalBreak),g.createBreakStatement(null)):(m.type===t.Identifier&&(e="$"+(n=xe()).name,Object.prototype.hasOwnProperty.call(b.labelSet,e)||K({},i.UnknownLabel,n.name)),te(),null!==n||b.inIteration||b.inSwitch||K({},i.IllegalBreak),g.createBreakStatement(n))}(),a);case"continue":return g.markEnd(function(){var e,n=null;return Z("continue"),59===u.charCodeAt(h)?(V(),b.inIteration||K({},i.IllegalContinue),g.createContinueStatement(null)):q()?(b.inIteration||K({},i.IllegalContinue),g.createContinueStatement(null)):(m.type===t.Identifier&&(e="$"+(n=xe()).name,Object.prototype.hasOwnProperty.call(b.labelSet,e)||K({},i.UnknownLabel,n.name)),te(),null!==n||b.inIteration||K({},i.IllegalContinue),g.createContinueStatement(n))}(),a);case"debugger":return g.markEnd((Z("debugger"),te(),g.createDebuggerStatement()),a);case"do":return g.markEnd((Z("do"),y=b.inIteration,b.inIteration=!0,d=Ne(),b.inIteration=y,Z("while"),J("("),p=be(),J(")"),Q(";")&&V(),g.createDoWhileStatement(d,p)),a);case"for":return g.markEnd(ke(),a);case"function":return g.markEnd(Ee(),a);case"if":return g.markEnd(function(){var e,t,n;return Z("if"),J("("),e=be(),J(")"),t=Ne(),ee("else")?(V(),n=Ne()):n=null,g.createIfStatement(e,t,n)}(),a);case"return":return g.markEnd((l=null,Z("return"),b.inFunctionBody||X({},i.IllegalReturn),32===u.charCodeAt(h)&&N(u.charCodeAt(h+1))?(l=be(),te(),g.createReturnStatement(l)):q()?g.createReturnStatement(null):(Q(";")||Q("}")||m.type===t.EOF||(l=be()),te(),g.createReturnStatement(l))),a);case"switch":return g.markEnd(function(){var e,t,n,r,s;if(Z("switch"),J("("),e=be(),J(")"),J("{"),t=[],Q("}"))return V(),g.createSwitchStatement(e,t);for(r=b.inSwitch,b.inSwitch=!0,s=!1;h<f&&!Q("}");)null===(n=Ie()).test&&(s&&K({},i.MultipleDefaultsInSwitch),s=!0),t.push(n);return b.inSwitch=r,J("}"),g.createSwitchStatement(e,t)}(),a);case"throw":return g.markEnd(function(){var e;return Z("throw"),q()&&K({},i.NewlineAfterThrow),e=be(),te(),g.createThrowStatement(e)}(),a);case"try":return g.markEnd(Ce(),a);case"var":return g.markEnd((Z("var"),o=we(),te(),g.createVariableDeclaration(o,"var")),a);case"while":return g.markEnd(function(){var e,t,n;return Z("while"),J("("),e=be(),J(")"),n=b.inIteration,b.inIteration=!0,t=Ne(),b.inIteration=n,g.createWhileStatement(e,t)}(),a);case"with":return g.markEnd(function(){var e,t;return c&&(_(),X({},i.StrictModeWith)),Z("with"),J("("),e=be(),J(")"),t=Ne(),g.createWithStatement(e,t)}(),a)}return(e=be()).type===s.Identifier&&Q(":")?(V(),r="$"+e.name,Object.prototype.hasOwnProperty.call(b.labelSet,r)&&K({},i.Redeclaration,"Label",e.name),b.labelSet[r]=!0,n=Ne(),delete b.labelSet[r],g.markEnd(g.createLabeledStatement(e,n),a)):(te(),g.markEnd(g.createExpressionStatement(e),a))}function $e(){var e,n,r,a,o,l,d,p,y=[];for(p=m,J("{");h<f&&m.type===t.StringLiteral&&(n=m,e=Te(),y.push(e),e.expression.type===s.Literal);)"use strict"===u.slice(n.start+1,n.end-1)?(c=!0,r&&X(r,i.StrictOctalLiteral)):!r&&n.octal&&(r=n);for(a=b.labelSet,o=b.inIteration,l=b.inSwitch,d=b.inFunctionBody,b.labelSet={},b.inIteration=!1,b.inSwitch=!1,b.inFunctionBody=!0;h<f&&!Q("}")&&void 0!==(e=Te());)y.push(e);return J("}"),b.labelSet=a,b.inIteration=o,b.inSwitch=l,b.inFunctionBody=d,g.markEnd(g.createBlockStatement(y),p)}function Se(e){var t,n,r,s,a,o,l=[];if(J("("),!Q(")"))for(s={};h<f&&(n=m,t=xe(),a="$"+n.value,c?(E(n.value)&&(r=n,o=i.StrictParamName),Object.prototype.hasOwnProperty.call(s,a)&&(r=n,o=i.StrictParamDupe)):e||(E(n.value)?(e=n,o=i.StrictParamName):S(n.value)?(e=n,o=i.StrictReservedWord):Object.prototype.hasOwnProperty.call(s,a)&&(e=n,o=i.StrictParamDupe)),l.push(t),s[a]=!0,!Q(")"));)J(",");return J(")"),{params:l,stricted:r,firstRestricted:e,message:o}}function Ee(){var e,t,n,r,s,a,o,l,u,h;return u=m,Z("function"),n=m,e=xe(),c?E(n.value)&&X(n,i.StrictFunctionName):E(n.value)?(a=n,o=i.StrictFunctionName):S(n.value)&&(a=n,o=i.StrictReservedWord),h=(s=Se(a)).params,r=s.stricted,a=s.firstRestricted,s.message&&(o=s.message),l=c,t=$e(),c&&a&&K(a,o),c&&r&&X(r,o),c=l,g.markEnd(g.createFunctionDeclaration(e,h,[],t),u)}function Te(){if(m.type===t.Keyword)switch(m.value){case"const":case"let":return e=m.value,r=m,Z(e),n=we(e),te(),g.markEnd(g.createVariableDeclaration(n,e),r);case"function":return Ee();default:return Ne()}var e,n,r;if(m.type!==t.EOF)return Ne()}function Ae(){var e,n;return _(),G(),n=m,c=!1,e=function(){for(var e,n,r,a=[];h<f&&(n=m).type===t.StringLiteral&&(e=Te(),a.push(e),e.expression.type===s.Literal);)"use strict"===u.slice(n.start+1,n.end-1)?(c=!0,r&&X(r,i.StrictOctalLiteral)):!r&&n.octal&&(r=n);for(;h<f&&void 0!==(e=Te());)a.push(e);return a}(),g.markEnd(g.createProgram(e),n)}function Re(){var e,t,n,r=[];for(e=0;e<y.tokens.length;++e)n={type:(t=y.tokens[e]).type,value:t.value},y.range&&(n.range=t.range),y.loc&&(n.loc=t.loc),r.push(n);y.tokens=r}(n={})[(t={BooleanLiteral:1,EOF:2,Identifier:3,Keyword:4,NullLiteral:5,NumericLiteral:6,Punctuator:7,StringLiteral:8,RegularExpression:9}).BooleanLiteral]="Boolean",n[t.EOF]="<end>",n[t.Identifier]="Identifier",n[t.Keyword]="Keyword",n[t.NullLiteral]="Null",n[t.NumericLiteral]="Numeric",n[t.Punctuator]="Punctuator",n[t.StringLiteral]="String",n[t.RegularExpression]="RegularExpression",r=["(","{","[","in","typeof","instanceof","new","return","case","delete","throw","void","=","+=","-=","*=","/=","%=","<<=",">>=",">>>=","&=","|=","^=",",","+","-","*","/","%","++","--","<<",">>",">>>","&","|","^","!","~","&&","||","?",":","===","==",">=","<=","<",">","!=","!=="],s={AssignmentExpression:"AssignmentExpression",ArrayExpression:"ArrayExpression",BlockStatement:"BlockStatement",BinaryExpression:"BinaryExpression",BreakStatement:"BreakStatement",CallExpression:"CallExpression",CatchClause:"CatchClause",ConditionalExpression:"ConditionalExpression",ContinueStatement:"ContinueStatement",DoWhileStatement:"DoWhileStatement",DebuggerStatement:"DebuggerStatement",EmptyStatement:"EmptyStatement",ExpressionStatement:"ExpressionStatement",ForStatement:"ForStatement",ForInStatement:"ForInStatement",FunctionDeclaration:"FunctionDeclaration",FunctionExpression:"FunctionExpression",Identifier:"Identifier",IfStatement:"IfStatement",Literal:"Literal",LabeledStatement:"LabeledStatement",LogicalExpression:"LogicalExpression",MemberExpression:"MemberExpression",NewExpression:"NewExpression",ObjectExpression:"ObjectExpression",Program:"Program",Property:"Property",ReturnStatement:"ReturnStatement",SequenceExpression:"SequenceExpression",SwitchStatement:"SwitchStatement",SwitchCase:"SwitchCase",ThisExpression:"ThisExpression",ThrowStatement:"ThrowStatement",TryStatement:"TryStatement",UnaryExpression:"UnaryExpression",UpdateExpression:"UpdateExpression",VariableDeclaration:"VariableDeclaration",VariableDeclarator:"VariableDeclarator",WhileStatement:"WhileStatement",WithStatement:"WithStatement"},a={Data:1,Get:2,Set:4},i={UnexpectedToken:"Unexpected token %0",UnexpectedNumber:"Unexpected number",UnexpectedString:"Unexpected string",UnexpectedIdentifier:"Unexpected identifier",UnexpectedReserved:"Unexpected reserved word",UnexpectedEOS:"Unexpected end of input",NewlineAfterThrow:"Illegal newline after throw",InvalidRegExp:"Invalid regular expression",UnterminatedRegExp:"Invalid regular expression: missing /",InvalidLHSInAssignment:"Invalid left-hand side in assignment",InvalidLHSInForIn:"Invalid left-hand side in for-in",MultipleDefaultsInSwitch:"More than one default clause in switch statement",NoCatchOrFinally:"Missing catch or finally after try",UnknownLabel:"Undefined label '%0'",Redeclaration:"%0 '%1' has already been declared",IllegalContinue:"Illegal continue statement",IllegalBreak:"Illegal break statement",IllegalReturn:"Illegal return statement",StrictModeWith:"Strict mode code may not include a with statement",StrictCatchVariable:"Catch variable may not be eval or arguments in strict mode",StrictVarName:"Variable name may not be eval or arguments in strict mode",StrictParamName:"Parameter name eval or arguments is not allowed in strict mode",StrictParamDupe:"Strict mode function may not have duplicate parameter names",StrictFunctionName:"Function name may not be eval or arguments in strict mode",StrictOctalLiteral:"Octal literals are not allowed in strict mode.",StrictDelete:"Delete of an unqualified identifier in strict mode.",StrictDuplicateProperty:"Duplicate data property in object literal not allowed in strict mode",AccessorDataProperty:"Object literal may not have data and accessor property with the same name",AccessorGetSet:"Object literal may not have multiple get/set accessors with the same name",StrictLHSAssignment:"Assignment to eval or arguments is not allowed in strict mode",StrictLHSPostfix:"Postfix increment/decrement may not have eval or arguments operand in strict mode",StrictLHSPrefix:"Prefix increment/decrement may not have eval or arguments operand in strict mode",StrictReservedWord:"Use of future reserved word in strict mode"},o={NonAsciiIdentifierStart:new RegExp("[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԧԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠࢢ-ࢬऄ-हऽॐक़-ॡॱ-ॷॹ-ॿঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚗꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꪀ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]"),NonAsciiIdentifierPart:new RegExp("[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮ̀-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁ҃-҇Ҋ-ԧԱ-Ֆՙա-և֑-ׇֽֿׁׂׅׄא-תװ-ײؐ-ؚؠ-٩ٮ-ۓە-ۜ۟-۪ۨ-ۼۿܐ-݊ݍ-ޱ߀-ߵߺࠀ-࠭ࡀ-࡛ࢠࢢ-ࢬࣤ-ࣾऀ-ॣ०-९ॱ-ॷॹ-ॿঁ-ঃঅ-ঌএঐও-নপ-রলশ-হ়-ৄেৈো-ৎৗড়ঢ়য়-ৣ০-ৱਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹ਼ਾ-ੂੇੈੋ-੍ੑਖ਼-ੜਫ਼੦-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૯ଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହ଼-ୄେୈୋ-୍ୖୗଡ଼ଢ଼ୟ-ୣ୦-୯ୱஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௯ఁ-ఃఅ-ఌఎ-ఐఒ-నప-ళవ-హఽ-ౄె-ైొ-్ౕౖౘౙౠ-ౣ౦-౯ಂಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕೖೞೠ-ೣ೦-೯ೱೲംഃഅ-ഌഎ-ഐഒ-ഺഽ-ൄെ-ൈൊ-ൎൗൠ-ൣ൦-൯ൺ-ൿංඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟෲෳก-ฺเ-๎๐-๙ກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟༀ༘༙༠-༩༹༵༷༾-ཇཉ-ཬཱ-྄྆-ྗྙ-ྼ࿆က-၉ၐ-ႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፟ᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-᜔ᜠ-᜴ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲᝳក-៓ៗៜ៝០-៩᠋-᠍᠐-᠙ᠠ-ᡷᢀ-ᢪᢰ-ᣵᤀ-ᤜᤠ-ᤫᤰ-᤻᥆-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧙ᨀ-ᨛᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙ᪧᬀ-ᭋ᭐-᭙᭫-᭳ᮀ-᯳ᰀ-᰷᱀-᱉ᱍ-ᱽ᳐-᳔᳒-ᳶᴀ-ᷦ᷼-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼ‌‍‿⁀⁔ⁱⁿₐ-ₜ⃐-⃥⃜⃡-⃰ℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯ⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿⸯ々-〇〡-〯〱-〵〸-〼ぁ-ゖ゙゚ゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘫꙀ-꙯ꙴ-꙽ꙿ-ꚗꚟ-꛱ꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠧꡀ-ꡳꢀ-꣄꣐-꣙꣠-ꣷꣻ꤀-꤭ꤰ-꥓ꥠ-ꥼꦀ-꧀ꧏ-꧙ꨀ-ꨶꩀ-ꩍ꩐-꩙ꩠ-ꩶꩺꩻꪀ-ꫂꫛ-ꫝꫠ-ꫯꫲ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯪ꯬꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻ︀-️︠-︦︳︴﹍-﹏ﹰ-ﹴﹶ-ﻼ０-９Ａ-Ｚ＿ａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]")},l={name:"SyntaxTree",processComment:function(e){var t,n;if(!(e.type===s.Program&&e.body.length>0)){for(y.trailingComments.length>0?y.trailingComments[0].range[0]>=e.range[1]?(n=y.trailingComments,y.trailingComments=[]):y.trailingComments.length=0:y.bottomRightStack.length>0&&y.bottomRightStack[y.bottomRightStack.length-1].trailingComments&&y.bottomRightStack[y.bottomRightStack.length-1].trailingComments[0].range[0]>=e.range[1]&&(n=y.bottomRightStack[y.bottomRightStack.length-1].trailingComments,delete y.bottomRightStack[y.bottomRightStack.length-1].trailingComments);y.bottomRightStack.length>0&&y.bottomRightStack[y.bottomRightStack.length-1].range[0]>=e.range[0];)t=y.bottomRightStack.pop();t?t.leadingComments&&t.leadingComments[t.leadingComments.length-1].range[1]<=e.range[0]&&(e.leadingComments=t.leadingComments,delete t.leadingComments):y.leadingComments.length>0&&y.leadingComments[y.leadingComments.length-1].range[1]<=e.range[0]&&(e.leadingComments=y.leadingComments,y.leadingComments=[]),n&&(e.trailingComments=n),y.bottomRightStack.push(e)}},markEnd:function(e,t){return y.range&&(e.range=[t.start,h]),y.loc&&(e.loc=new H(void 0===t.startLineNumber?t.lineNumber:t.startLineNumber,t.start-(void 0===t.startLineStart?t.lineStart:t.startLineStart),d,h-p),this.postProcess(e)),y.attachComment&&this.processComment(e),e},postProcess:function(e){return y.source&&(e.loc.source=y.source),e},createArrayExpression:function(e){return{type:s.ArrayExpression,elements:e}},createAssignmentExpression:function(e,t,n){return{type:s.AssignmentExpression,operator:e,left:t,right:n}},createBinaryExpression:function(e,t,n){return{type:"||"===e||"&&"===e?s.LogicalExpression:s.BinaryExpression,operator:e,left:t,right:n}},createBlockStatement:function(e){return{type:s.BlockStatement,body:e}},createBreakStatement:function(e){return{type:s.BreakStatement,label:e}},createCallExpression:function(e,t){return{type:s.CallExpression,callee:e,arguments:t}},createCatchClause:function(e,t){return{type:s.CatchClause,param:e,body:t}},createConditionalExpression:function(e,t,n){return{type:s.ConditionalExpression,test:e,consequent:t,alternate:n}},createContinueStatement:function(e){return{type:s.ContinueStatement,label:e}},createDebuggerStatement:function(){return{type:s.DebuggerStatement}},createDoWhileStatement:function(e,t){return{type:s.DoWhileStatement,body:e,test:t}},createEmptyStatement:function(){return{type:s.EmptyStatement}},createExpressionStatement:function(e){return{type:s.ExpressionStatement,expression:e}},createForStatement:function(e,t,n,r){return{type:s.ForStatement,init:e,test:t,update:n,body:r}},createForInStatement:function(e,t,n){return{type:s.ForInStatement,left:e,right:t,body:n,each:!1}},createFunctionDeclaration:function(e,t,n,r){return{type:s.FunctionDeclaration,id:e,params:t,defaults:n,body:r,rest:null,generator:!1,expression:!1}},createFunctionExpression:function(e,t,n,r){return{type:s.FunctionExpression,id:e,params:t,defaults:n,body:r,rest:null,generator:!1,expression:!1}},createIdentifier:function(e){return{type:s.Identifier,name:e}},createIfStatement:function(e,t,n){return{type:s.IfStatement,test:e,consequent:t,alternate:n}},createLabeledStatement:function(e,t){return{type:s.LabeledStatement,label:e,body:t}},createLiteral:function(e){return{type:s.Literal,value:e.value,raw:u.slice(e.start,e.end)}},createMemberExpression:function(e,t,n){return{type:s.MemberExpression,computed:"["===e,object:t,property:n}},createNewExpression:function(e,t){return{type:s.NewExpression,callee:e,arguments:t}},createObjectExpression:function(e){return{type:s.ObjectExpression,properties:e}},createPostfixExpression:function(e,t){return{type:s.UpdateExpression,operator:e,argument:t,prefix:!1}},createProgram:function(e){return{type:s.Program,body:e}},createProperty:function(e,t,n){return{type:s.Property,key:t,value:n,kind:e}},createReturnStatement:function(e){return{type:s.ReturnStatement,argument:e}},createSequenceExpression:function(e){return{type:s.SequenceExpression,expressions:e}},createSwitchCase:function(e,t){return{type:s.SwitchCase,test:e,consequent:t}},createSwitchStatement:function(e,t){return{type:s.SwitchStatement,discriminant:e,cases:t}},createThisExpression:function(){return{type:s.ThisExpression}},createThrowStatement:function(e){return{type:s.ThrowStatement,argument:e}},createTryStatement:function(e,t,n,r){return{type:s.TryStatement,block:e,guardedHandlers:t,handlers:n,finalizer:r}},createUnaryExpression:function(e,t){return"++"===e||"--"===e?{type:s.UpdateExpression,operator:e,argument:t,prefix:!0}:{type:s.UnaryExpression,operator:e,argument:t,prefix:!0}},createVariableDeclaration:function(e,t){return{type:s.VariableDeclaration,declarations:e,kind:t}},createVariableDeclarator:function(e,t){return{type:s.VariableDeclarator,id:e,init:t}},createWhileStatement:function(e,t){return{type:s.WhileStatement,test:e,body:t}},createWithStatement:function(e,t){return{type:s.WithStatement,object:e,body:t}}},e.version="1.2.5",e.tokenize=function(e,n){var r;"string"==typeof e||e instanceof String||(e=String(e)),g=l,h=0,d=(u=e).length>0?1:0,p=0,f=u.length,m=null,b={allowIn:!0,labelSet:{},inFunctionBody:!1,inIteration:!1,inSwitch:!1,lastCommentStart:-1},y={},(n=n||{}).tokens=!0,y.tokens=[],y.tokenize=!0,y.openParenToken=-1,y.openCurlyToken=-1,y.range="boolean"==typeof n.range&&n.range,y.loc="boolean"==typeof n.loc&&n.loc,"boolean"==typeof n.comment&&n.comment&&(y.comments=[]),"boolean"==typeof n.tolerant&&n.tolerant&&(y.errors=[]);try{if(G(),m.type===t.EOF)return y.tokens;for(V();m.type!==t.EOF;)try{V()}catch(e){if(y.errors){y.errors.push(e);break}throw e}Re(),r=y.tokens,void 0!==y.comments&&(r.comments=y.comments),void 0!==y.errors&&(r.errors=y.errors)}catch(e){throw e}finally{y={}}return r},e.parse=function(e,t){var n,r;r=String,"string"==typeof e||e instanceof String||(e=r(e)),g=l,h=0,d=(u=e).length>0?1:0,p=0,f=u.length,m=null,b={allowIn:!0,labelSet:{},inFunctionBody:!1,inIteration:!1,inSwitch:!1,lastCommentStart:-1},y={},void 0!==t&&(y.range="boolean"==typeof t.range&&t.range,y.loc="boolean"==typeof t.loc&&t.loc,y.attachComment="boolean"==typeof t.attachComment&&t.attachComment,y.loc&&null!==t.source&&void 0!==t.source&&(y.source=r(t.source)),"boolean"==typeof t.tokens&&t.tokens&&(y.tokens=[]),"boolean"==typeof t.comment&&t.comment&&(y.comments=[]),"boolean"==typeof t.tolerant&&t.tolerant&&(y.errors=[]),y.attachComment&&(y.range=!0,y.comments=[],y.bottomRightStack=[],y.trailingComments=[],y.leadingComments=[]));try{n=Ae(),void 0!==y.comments&&(n.comments=y.comments),void 0!==y.tokens&&(Re(),n.tokens=y.tokens),void 0!==y.errors&&(n.errors=y.errors)}catch(e){throw e}finally{y={}}return n},e.Syntax=function(){var e,t={};for(e in"function"==typeof Object.create&&(t=Object.create(null)),s)s.hasOwnProperty(e)&&(t[e]=s[e]);return"function"==typeof Object.freeze&&Object.freeze(t),t}()},void 0===(r=n.apply(t,[t]))||(e.exports=r)}()},9645:e=>{"use strict";function t(e){if(this.size=0|e,this.size<=1||0!=(this.size&this.size-1))throw new Error("FFT size must be a power of two and bigger than 1");this._csize=e<<1;for(var t=new Array(2*this.size),n=0;n<t.length;n+=2){const e=Math.PI*n/this.size;t[n]=Math.cos(e),t[n+1]=-Math.sin(e)}this.table=t;for(var r=0,s=1;this.size>s;s<<=1)r++;this._width=r%2==0?r-1:r,this._bitrev=new Array(1<<this._width);for(var a=0;a<this._bitrev.length;a++){this._bitrev[a]=0;for(var i=0;i<this._width;i+=2){var o=this._width-i-2;this._bitrev[a]|=(a>>>i&3)<<o}}this._out=null,this._data=null,this._inv=0}e.exports=t,t.prototype.fromComplexArray=function(e,t){for(var n=t||new Array(e.length>>>1),r=0;r<e.length;r+=2)n[r>>>1]=e[r];return n},t.prototype.createComplexArray=function(){const e=new Array(this._csize);for(var t=0;t<e.length;t++)e[t]=0;return e},t.prototype.toComplexArray=function(e,t){for(var n=t||this.createComplexArray(),r=0;r<n.length;r+=2)n[r]=e[r>>>1],n[r+1]=0;return n},t.prototype.completeSpectrum=function(e){for(var t=this._csize,n=t>>>1,r=2;r<n;r+=2)e[t-r]=e[r],e[t-r+1]=-e[r+1]},t.prototype.transform=function(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._out=e,this._data=t,this._inv=0,this._transform4(),this._out=null,this._data=null},t.prototype.realTransform=function(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._out=e,this._data=t,this._inv=0,this._realTransform4(),this._out=null,this._data=null},t.prototype.inverseTransform=function(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._out=e,this._data=t,this._inv=1,this._transform4();for(var n=0;n<e.length;n++)e[n]/=this.size;this._out=null,this._data=null},t.prototype._transform4=function(){var e,t,n=this._out,r=this._csize,s=1<<this._width,a=r/s<<1,i=this._bitrev;if(4===a)for(e=0,t=0;e<r;e+=a,t++){const n=i[t];this._singleTransform2(e,n,s)}else for(e=0,t=0;e<r;e+=a,t++){const n=i[t];this._singleTransform4(e,n,s)}var o=this._inv?-1:1,l=this.table;for(s>>=2;s>=2;s>>=2){var u=(a=r/s<<1)>>>2;for(e=0;e<r;e+=a)for(var c=e+u,h=e,d=0;h<c;h+=2,d+=s){const e=h,t=e+u,r=t+u,s=r+u,a=n[e],i=n[e+1],c=n[t],p=n[t+1],f=n[r],g=n[r+1],m=n[s],b=n[s+1],y=a,x=i,v=l[d],w=o*l[d+1],k=c*v-p*w,I=c*w+p*v,C=l[2*d],N=o*l[2*d+1],$=f*C-g*N,S=f*N+g*C,E=l[3*d],T=o*l[3*d+1],A=m*E-b*T,R=m*T+b*E,F=y+$,_=x+S,D=y-$,L=x-S,O=k+A,M=I+R,z=o*(k-A),B=o*(I-R),P=F+O,W=_+M,U=F-O,V=_-M,G=D+B,j=L-z,H=D-B,q=L+z;n[e]=P,n[e+1]=W,n[t]=G,n[t+1]=j,n[r]=U,n[r+1]=V,n[s]=H,n[s+1]=q}}},t.prototype._singleTransform2=function(e,t,n){const r=this._out,s=this._data,a=s[t],i=s[t+1],o=s[t+n],l=s[t+n+1],u=a+o,c=i+l,h=a-o,d=i-l;r[e]=u,r[e+1]=c,r[e+2]=h,r[e+3]=d},t.prototype._singleTransform4=function(e,t,n){const r=this._out,s=this._data,a=this._inv?-1:1,i=2*n,o=3*n,l=s[t],u=s[t+1],c=s[t+n],h=s[t+n+1],d=s[t+i],p=s[t+i+1],f=s[t+o],g=s[t+o+1],m=l+d,b=u+p,y=l-d,x=u-p,v=c+f,w=h+g,k=a*(c-f),I=a*(h-g),C=m+v,N=b+w,$=y+I,S=x-k,E=m-v,T=b-w,A=y-I,R=x+k;r[e]=C,r[e+1]=N,r[e+2]=$,r[e+3]=S,r[e+4]=E,r[e+5]=T,r[e+6]=A,r[e+7]=R},t.prototype._realTransform4=function(){var e,t,n=this._out,r=this._csize,s=1<<this._width,a=r/s<<1,i=this._bitrev;if(4===a)for(e=0,t=0;e<r;e+=a,t++){const n=i[t];this._singleRealTransform2(e,n>>>1,s>>>1)}else for(e=0,t=0;e<r;e+=a,t++){const n=i[t];this._singleRealTransform4(e,n>>>1,s>>>1)}var o=this._inv?-1:1,l=this.table;for(s>>=2;s>=2;s>>=2){var u=(a=r/s<<1)>>>1,c=u>>>1,h=c>>>1;for(e=0;e<r;e+=a)for(var d=0,p=0;d<=h;d+=2,p+=s){var f=e+d,g=f+c,m=g+c,b=m+c,y=n[f],x=n[f+1],v=n[g],w=n[g+1],k=n[m],I=n[m+1],C=n[b],N=n[b+1],$=y,S=x,E=l[p],T=o*l[p+1],A=v*E-w*T,R=v*T+w*E,F=l[2*p],_=o*l[2*p+1],D=k*F-I*_,L=k*_+I*F,O=l[3*p],M=o*l[3*p+1],z=C*O-N*M,B=C*M+N*O,P=$+D,W=S+L,U=$-D,V=S-L,G=A+z,j=R+B,H=o*(A-z),q=o*(R-B),K=P+G,X=W+j,Y=U+q,J=V-H;if(n[f]=K,n[f+1]=X,n[g]=Y,n[g+1]=J,0!==d){if(d!==h){var Z=U+-o*q,Q=-o*H-V,ee=P+-o*G,te=-W- -o*j,ne=e+c-d,re=e+u-d;n[ne]=Z,n[ne+1]=Q,n[re]=ee,n[re+1]=te}}else{var se=P-G,ae=W-j;n[m]=se,n[m+1]=ae}}}},t.prototype._singleRealTransform2=function(e,t,n){const r=this._out,s=this._data,a=s[t],i=s[t+n],o=a+i,l=a-i;r[e]=o,r[e+1]=0,r[e+2]=l,r[e+3]=0},t.prototype._singleRealTransform4=function(e,t,n){const r=this._out,s=this._data,a=this._inv?-1:1,i=2*n,o=3*n,l=s[t],u=s[t+n],c=s[t+i],h=s[t+o],d=l+c,p=l-c,f=u+h,g=a*(u-h),m=d+f,b=p,y=-g,x=d-f,v=p,w=g;r[e]=m,r[e+1]=0,r[e+2]=b,r[e+3]=y,r[e+4]=x,r[e+5]=0,r[e+6]=v,r[e+7]=w}},645:(e,t)=>{t.read=function(e,t,n,r,s){var a,i,o=8*s-r-1,l=(1<<o)-1,u=l>>1,c=-7,h=n?s-1:0,d=n?-1:1,p=e[t+h];for(h+=d,a=p&(1<<-c)-1,p>>=-c,c+=o;c>0;a=256*a+e[t+h],h+=d,c-=8);for(i=a&(1<<-c)-1,a>>=-c,c+=r;c>0;i=256*i+e[t+h],h+=d,c-=8);if(0===a)a=1-u;else{if(a===l)return i?NaN:1/0*(p?-1:1);i+=Math.pow(2,r),a-=u}return(p?-1:1)*i*Math.pow(2,a-r)},t.write=function(e,t,n,r,s,a){var i,o,l,u=8*a-s-1,c=(1<<u)-1,h=c>>1,d=23===s?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:a-1,f=r?1:-1,g=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(o=isNaN(t)?1:0,i=c):(i=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-i))<1&&(i--,l*=2),(t+=i+h>=1?d/l:d*Math.pow(2,1-h))*l>=2&&(i++,l/=2),i+h>=c?(o=0,i=c):i+h>=1?(o=(t*l-1)*Math.pow(2,s),i+=h):(o=t*Math.pow(2,h-1)*Math.pow(2,s),i=0));s>=8;e[n+p]=255&o,p+=f,o/=256,s-=8);for(i=i<<s|o,u+=s;u>0;e[n+p]=255&i,p+=f,i/=256,u-=8);e[n+p-f]|=128*g}},6907:e=>{"use strict";e.exports=function(e){for(var t=new Array(e),n=0;n<e;++n)t[n]=n;return t}},8738:e=>{function t(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}e.exports=function(e){return null!=e&&(t(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&t(e.slice(0,0))}(e)||!!e._isBuffer)}},1587:(e,t,n)=>{"use strict";var r=n(8897),s=n(2861),a=n(316),i=n(5082);e.exports=function(e,t,n){var o,l,u=t.shape,c=u.length,h=1,d=new Array(c),p=0;for(o=c-1;o>=0;--o)if(d[o]=h,h*=u[o],p=Math.max(p,i.scratchMemory(u[o])),t.shape[o]!==n.shape[o])throw new Error("Shape mismatch, real and imaginary arrays must have same size");var f,g=4*h+p;f="array"===t.dtype||"float64"===t.dtype||"custom"===t.dtype?a.mallocDouble(g):a.mallocFloat(g);var m,b,y,x,v=s(f,u.slice(0),d,0),w=s(f,u.slice(0),d.slice(0),h),k=s(f,u.slice(0),d.slice(0),2*h),I=s(f,u.slice(0),d.slice(0),3*h),C=4*h;for(r.assign(v,t),r.assign(w,n),o=c-1;o>=0&&(i(e,h/u[o],u[o],f,v.offset,w.offset,C),0!==o);--o){for(b=1,y=k.stride,x=I.stride,l=o-1;l<c;++l)x[l]=y[l]=b,b*=u[l];for(l=o-2;l>=0;--l)x[l]=y[l]=b,b*=u[l];r.assign(k,v),r.assign(I,w),m=v,v=k,k=m,m=w,w=I,I=m}r.assign(t,v),r.assign(n,w),a.free(f)}},5082:(e,t,n)=>{var r=n(746);function s(e,t,n,s,a,i){var o,l,u,c,h,d,p,f,g,m,b,y,x,v,w,k,I,C,N,$,S,E,T,A;for(e|=0,t|=0,a|=0,i|=0,o=n|=0,l=r.log2(o),C=0;C<t;++C){for(p=o>>1,h=0,u=0;u<o-1;u++){for(u<h&&(x=s[a+u],s[a+u]=s[a+h],s[a+h]=x,x=s[i+u],s[i+u]=s[i+h],s[i+h]=x),d=p;d<=h;)h-=d,d>>=1;h+=d}for(b=-1,y=0,m=1,f=0;f<l;f++){for(g=m,m<<=1,k=1,I=0,h=0;h<g;h++){for(u=h;u<o;u+=m)N=s[a+(c=u+g)],$=s[i+c],S=s[a+u],E=s[i+u],v=(T=k*(N+$))-$*(k+I),w=T+(A=N*(I-k)),s[a+c]=S-v,s[i+c]=E-w,s[a+u]+=v,s[i+u]+=w;A=k*(y-b),k=(T=b*(k+I))-I*(b+y),I=T+A}y=Math.sqrt((1-b)/2),e<0&&(y=-y),b=Math.sqrt((1+b)/2)}if(e<0){var R=1/o;for(u=0;u<o;u++)s[a+u]*=R,s[i+u]*=R}a+=n,i+=n}}e.exports=function(e,t,n,a,i,o,l){e|=0,t|=0,n|=0,i|=0,o|=0,r.isPow2(n)?s(e,t,n,a,i,o):function(e,t,n,a,i,o,l){e|=0,t|=0,n|=0,i|=0,o|=0,l|=0;var u,c,h,d,p,f,g,m,b,y=r.nextPow2(2*n+1),x=l,v=x+n,w=v+n,k=w+y,I=k+y,C=I+y,N=-e*Math.PI/n;for(b=0;b<n;++b)c=N*(b*b%(2*n)),d=Math.cos(c),p=Math.sin(c),a[I+(y-b)]=a[I+b]=a[x+b]=d,a[C+(y-b)]=a[C+b]=a[v+b]=p;for(b=n;b<=y-n;++b)a[I+b]=0;for(b=n;b<=y-n;++b)a[C+b]=0;for(s(1,1,y,a,I,C),N=e<0?1/n:1,u=0;u<t;++u){for(b=0;b<n;++b)c=a[i+b],h=a[o+b],f=(d=a[x+b])*(c+h),g=c*((p=-a[v+b])-d),m=h*(d+p),a[w+b]=f-m,a[k+b]=f+g;for(b=n;b<y;++b)a[w+b]=0;for(b=n;b<y;++b)a[k+b]=0;for(s(1,1,y,a,w,k),b=0;b<y;++b)c=a[w+b],h=a[k+b],f=(d=a[I+b])*(c+h),g=c*((p=a[C+b])-d),m=h*(d+p),a[w+b]=f-m,a[k+b]=f+g;for(s(-1,1,y,a,w,k),b=0;b<n;++b)c=a[w+b],h=a[k+b],f=(d=a[x+b])*(c+h),g=c*((p=-a[v+b])-d),m=h*(d+p),a[i+b]=N*(f-m),a[o+b]=N*(f+g);i+=n,o+=n}}(e,t,n,a,i,o,l)},e.exports.scratchMemory=function(e){return r.isPow2(e)?0:2*e+4*r.nextPow2(2*e+1)}},8897:(e,t,n)=>{"use strict";var r=n(6239),s={body:"",args:[],thisVars:[],localVars:[]};function a(e){if(!e)return s;for(var t=0;t<e.args.length;++t){var n=e.args[t];e.args[t]=0===t?{name:n,lvalue:!0,rvalue:!!e.rvalue,count:e.count||1}:{name:n,lvalue:!1,rvalue:!0,count:1}}return e.thisVars||(e.thisVars=[]),e.localVars||(e.localVars=[]),e}function i(e){for(var t=[],n=0;n<e.args.length;++n)t.push("a"+n);return new Function("P",["return function ",e.funcName,"_ndarrayops(",t.join(","),") {P(",t.join(","),");return a0}"].join(""))(function(e){return r({args:e.args,pre:a(e.pre),body:a(e.body),post:a(e.proc),funcName:e.funcName})}(e))}var o={add:"+",sub:"-",mul:"*",div:"/",mod:"%",band:"&",bor:"|",bxor:"^",lshift:"<<",rshift:">>",rrshift:">>>"};!function(){for(var e in o){var n=o[e];t[e]=i({args:["array","array","array"],body:{args:["a","b","c"],body:"a=b"+n+"c"},funcName:e}),t[e+"eq"]=i({args:["array","array"],body:{args:["a","b"],body:"a"+n+"=b"},rvalue:!0,funcName:e+"eq"}),t[e+"s"]=i({args:["array","array","scalar"],body:{args:["a","b","s"],body:"a=b"+n+"s"},funcName:e+"s"}),t[e+"seq"]=i({args:["array","scalar"],body:{args:["a","s"],body:"a"+n+"=s"},rvalue:!0,funcName:e+"seq"})}}();var l={not:"!",bnot:"~",neg:"-",recip:"1.0/"};!function(){for(var e in l){var n=l[e];t[e]=i({args:["array","array"],body:{args:["a","b"],body:"a="+n+"b"},funcName:e}),t[e+"eq"]=i({args:["array"],body:{args:["a"],body:"a="+n+"a"},rvalue:!0,count:2,funcName:e+"eq"})}}();var u={and:"&&",or:"||",eq:"===",neq:"!==",lt:"<",gt:">",leq:"<=",geq:">="};!function(){for(var e in u){var n=u[e];t[e]=i({args:["array","array","array"],body:{args:["a","b","c"],body:"a=b"+n+"c"},funcName:e}),t[e+"s"]=i({args:["array","array","scalar"],body:{args:["a","b","s"],body:"a=b"+n+"s"},funcName:e+"s"}),t[e+"eq"]=i({args:["array","array"],body:{args:["a","b"],body:"a=a"+n+"b"},rvalue:!0,count:2,funcName:e+"eq"}),t[e+"seq"]=i({args:["array","scalar"],body:{args:["a","s"],body:"a=a"+n+"s"},rvalue:!0,count:2,funcName:e+"seq"})}}();var c=["abs","acos","asin","atan","ceil","cos","exp","floor","log","round","sin","sqrt","tan"];!function(){for(var e=0;e<c.length;++e){var n=c[e];t[n]=i({args:["array","array"],pre:{args:[],body:"this_f=Math."+n,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(b)",thisVars:["this_f"]},funcName:n}),t[n+"eq"]=i({args:["array"],pre:{args:[],body:"this_f=Math."+n,thisVars:["this_f"]},body:{args:["a"],body:"a=this_f(a)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:n+"eq"})}}();var h=["max","min","atan2","pow"];!function(){for(var e=0;e<h.length;++e){var n=h[e];t[n]=i({args:["array","array","array"],pre:{args:[],body:"this_f=Math."+n,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(b,c)",thisVars:["this_f"]},funcName:n}),t[n+"s"]=i({args:["array","array","scalar"],pre:{args:[],body:"this_f=Math."+n,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(b,c)",thisVars:["this_f"]},funcName:n+"s"}),t[n+"eq"]=i({args:["array","array"],pre:{args:[],body:"this_f=Math."+n,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(a,b)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:n+"eq"}),t[n+"seq"]=i({args:["array","scalar"],pre:{args:[],body:"this_f=Math."+n,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(a,b)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:n+"seq"})}}();var d=["atan2","pow"];!function(){for(var e=0;e<d.length;++e){var n=d[e];t[n+"op"]=i({args:["array","array","array"],pre:{args:[],body:"this_f=Math."+n,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(c,b)",thisVars:["this_f"]},funcName:n+"op"}),t[n+"ops"]=i({args:["array","array","scalar"],pre:{args:[],body:"this_f=Math."+n,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(c,b)",thisVars:["this_f"]},funcName:n+"ops"}),t[n+"opeq"]=i({args:["array","array"],pre:{args:[],body:"this_f=Math."+n,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(b,a)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:n+"opeq"}),t[n+"opseq"]=i({args:["array","scalar"],pre:{args:[],body:"this_f=Math."+n,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(b,a)",thisVars:["this_f"]},rvalue:!0,count:2,funcName:n+"opseq"})}}(),t.any=r({args:["array"],pre:s,body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:1}],body:"if(a){return true}",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:"return false"},funcName:"any"}),t.all=r({args:["array"],pre:s,body:{args:[{name:"x",lvalue:!1,rvalue:!0,count:1}],body:"if(!x){return false}",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:"return true"},funcName:"all"}),t.sum=r({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:1}],body:"this_s+=a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"sum"}),t.prod=r({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=1"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:1}],body:"this_s*=a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"prod"}),t.norm2squared=r({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:2}],body:"this_s+=a*a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"norm2squared"}),t.norm2=r({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:2}],body:"this_s+=a*a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return Math.sqrt(this_s)"},funcName:"norm2"}),t.norminf=r({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:4}],body:"if(-a>this_s){this_s=-a}else if(a>this_s){this_s=a}",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"norminf"}),t.norm1=r({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:3}],body:"this_s+=a<0?-a:a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"norm1"}),t.sup=r({args:["array"],pre:{body:"this_h=-Infinity",args:[],thisVars:["this_h"],localVars:[]},body:{body:"if(_inline_1_arg0_>this_h)this_h=_inline_1_arg0_",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_h"],localVars:[]},post:{body:"return this_h",args:[],thisVars:["this_h"],localVars:[]}}),t.inf=r({args:["array"],pre:{body:"this_h=Infinity",args:[],thisVars:["this_h"],localVars:[]},body:{body:"if(_inline_1_arg0_<this_h)this_h=_inline_1_arg0_",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_h"],localVars:[]},post:{body:"return this_h",args:[],thisVars:["this_h"],localVars:[]}}),t.argmin=r({args:["index","array","shape"],pre:{body:"{this_v=Infinity;this_i=_inline_0_arg2_.slice(0)}",args:[{name:"_inline_0_arg0_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg1_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg2_",lvalue:!1,rvalue:!0,count:1}],thisVars:["this_i","this_v"],localVars:[]},body:{body:"{if(_inline_1_arg1_<this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2},{name:"_inline_1_arg1_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_i","this_v"],localVars:["_inline_1_k"]},post:{body:"{return this_i}",args:[],thisVars:["this_i"],localVars:[]}}),t.argmax=r({args:["index","array","shape"],pre:{body:"{this_v=-Infinity;this_i=_inline_0_arg2_.slice(0)}",args:[{name:"_inline_0_arg0_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg1_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg2_",lvalue:!1,rvalue:!0,count:1}],thisVars:["this_i","this_v"],localVars:[]},body:{body:"{if(_inline_1_arg1_>this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2},{name:"_inline_1_arg1_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_i","this_v"],localVars:["_inline_1_k"]},post:{body:"{return this_i}",args:[],thisVars:["this_i"],localVars:[]}}),t.random=i({args:["array"],pre:{args:[],body:"this_f=Math.random",thisVars:["this_f"]},body:{args:["a"],body:"a=this_f()",thisVars:["this_f"]},funcName:"random"}),t.assign=i({args:["array","array"],body:{args:["a","b"],body:"a=b"},funcName:"assign"}),t.assigns=i({args:["array","scalar"],body:{args:["a","b"],body:"a=b"},funcName:"assigns"}),t.equals=r({args:["array","array"],pre:s,body:{args:[{name:"x",lvalue:!1,rvalue:!0,count:1},{name:"y",lvalue:!1,rvalue:!0,count:1}],body:"if(x!==y){return false}",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:"return true"},funcName:"equals"})},906:(e,t,n)=>{"use strict";var r=n(1587),s=n(9219),a=n(8897),i=n(6780)({args:["array","array","scalar","scalar","scalar"],body:function(e,t,n,r,s){var a=t*n;a<r&&(a=r),a>s&&(a=s)}});e.exports=function(e,t,n,o){void 0===n&&(n=-1/0),void 0===o&&(o=1/0);var l=t.shape,u=e.shape;if(t.shape.length!==e.shape.length)throw new Error("ndarray-resample: input and output arrays should have the same dimensions");var c,h=l.map((function(){return 0}));if(1===e.size)return(c=a.sum(t)/t.size)<n&&(c=n),c>o&&(c=o),void e.set.apply(e,h.concat(c));if(1===t.size)return(c=t.get.apply(t,h))<n&&(c=n),c>o&&(c=o),void a.assigns(e,c);for(var d=l.length,p=new Array(d),f=!1,g=0;g<d;g++)p[g]=Math.min(u[g],l[g]),u[g]>l[g]&&(f=!0);var m=s.malloc(l),b=s.malloc(l);a.assign(m,t),a.assigns(b,0),r(1,m,b);var y=m.lo,x=m.hi,v=s.malloc(u),w=s.malloc(u);f&&(a.assigns(v,0),a.assigns(w,0));var k=new Array(d),I=new Array(d),C=new Array(d),N=new Array(d);for(g=0;g<1<<d;++g){for(var $=0;$<d;++$)if(g&1<<$){if(k[$]=p[$]-(p[$]+1>>>1),0===k[$])continue;I[$]=u[$]-k[$],C[$]=l[$]-k[$],N[$]=1&p[$]?0:1}else k[$]=p[$]+1>>>1,I[$]=0,C[$]=0,N[$]=0;a.assign(x.apply(y.apply(v,I),k),x.apply(y.apply(m,C),k)),a.assign(y.apply(x.apply(y.apply(w,I),k),N),y.apply(x.apply(y.apply(b,C),k),N)),a.assigns(x.apply(x.apply(y.apply(w,I),k),N),0)}r(-1,v,w),i(e,v,e.size/t.size,n,o),s.free(m),s.free(b),s.free(v),s.free(w)}},9219:(e,t,n)=>{"use strict";var r=n(2861),s=n(8897),a=n(316);t.clone=function(e){var t=e.dtype;"generic"!==t&&"array"!==t||(t="double");var n=a.malloc(e.size,t),i=r(n,e.shape);return s.assign(i,e),i},t.malloc=function(e,t){t||(t="double");for(var n=1,s=new Array(e.length),i=e.length-1;i>=0;--i)s[i]=n,n*=e[i];return r(a.malloc(n,t),e,s,0)},t.free=function(e){"generic"!==e.dtype&&"array"!==e.dtype&&a.free(e.data)},t.zeros=function(e,t){t||(t="double");for(var n=1,s=new Array(e.length),i=e.length-1;i>=0;--i)s[i]=n,n*=e[i];var o=a.malloc(n,t);for(i=0;i<n;++i)o[i]=0;return r(o,e,s,0)},t.ones=function(e,t){t||(t="double");for(var n=1,s=new Array(e.length),i=e.length-1;i>=0;--i)s[i]=n,n*=e[i];var o=a.malloc(n,t);for(i=0;i<n;++i)o[i]=1;return r(o,e,s,0)},t.eye=function(e,t){var n,s;t||(t="double");var i=1,o=new Array(e.length);for(n=e.length-1;n>=0;--n)o[n]=i,i*=e[n];var l=a.malloc(i,t);for(n=0;n<i;++n)l[n]=0;var u=1/0,c=0;for(n=e.length-1;n>=0;n--)c+=o[n],u=Math.min(u,e[n]);for(n=0,s=0;n<u;n++,s+=c)l[s]=1;return r(l,e,o,0)}},2861:(e,t,n)=>{var r=n(6907),s=n(8738),a="undefined"!=typeof Float64Array;function i(e,t){return e[0]-t[0]}function o(){var e,t=this.stride,n=new Array(t.length);for(e=0;e<n.length;++e)n[e]=[Math.abs(t[e]),e];n.sort(i);var r=new Array(n.length);for(e=0;e<r.length;++e)r[e]=n[e][1];return r}function l(e,t){var n=["View",t,"d",e].join("");t<0&&(n="View_Nil"+e);var s="generic"===e;if(-1===t){var a="function "+n+"(a){this.data=a;};var proto="+n+".prototype;proto.dtype='"+e+"';proto.index=function(){return -1};proto.size=0;proto.dimension=-1;proto.shape=proto.stride=proto.order=[];proto.lo=proto.hi=proto.transpose=proto.step=function(){return new "+n+"(this.data);};proto.get=proto.set=function(){};proto.pick=function(){return null};return function construct_"+n+"(a){return new "+n+"(a);}";return new Function(a)()}if(0===t)return a="function "+n+"(a,d) {this.data = a;this.offset = d};var proto="+n+".prototype;proto.dtype='"+e+"';proto.index=function(){return this.offset};proto.dimension=0;proto.size=1;proto.shape=proto.stride=proto.order=[];proto.lo=proto.hi=proto.transpose=proto.step=function "+n+"_copy() {return new "+n+"(this.data,this.offset)};proto.pick=function "+n+"_pick(){return TrivialArray(this.data);};proto.valueOf=proto.get=function "+n+"_get(){return "+(s?"this.data.get(this.offset)":"this.data[this.offset]")+"};proto.set=function "+n+"_set(v){return "+(s?"this.data.set(this.offset,v)":"this.data[this.offset]=v")+"};return function construct_"+n+"(a,b,c,d){return new "+n+"(a,d)}",new Function("TrivialArray",a)(u[e][0]);a=["'use strict'"];var i=r(t),l=i.map((function(e){return"i"+e})),c="this.offset+"+i.map((function(e){return"this.stride["+e+"]*i"+e})).join("+"),h=i.map((function(e){return"b"+e})).join(","),d=i.map((function(e){return"c"+e})).join(",");a.push("function "+n+"(a,"+h+","+d+",d){this.data=a","this.shape=["+h+"]","this.stride=["+d+"]","this.offset=d|0}","var proto="+n+".prototype","proto.dtype='"+e+"'","proto.dimension="+t),a.push("Object.defineProperty(proto,'size',{get:function "+n+"_size(){return "+i.map((function(e){return"this.shape["+e+"]"})).join("*"),"}})"),1===t?a.push("proto.order=[0]"):(a.push("Object.defineProperty(proto,'order',{get:"),t<4?(a.push("function "+n+"_order(){"),2===t?a.push("return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})"):3===t&&a.push("var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);if(s0>s1){if(s1>s2){return [2,1,0];}else if(s0>s2){return [1,2,0];}else{return [1,0,2];}}else if(s0>s2){return [2,0,1];}else if(s2>s1){return [0,1,2];}else{return [0,2,1];}}})")):a.push("ORDER})")),a.push("proto.set=function "+n+"_set("+l.join(",")+",v){"),s?a.push("return this.data.set("+c+",v)}"):a.push("return this.data["+c+"]=v}"),a.push("proto.get=function "+n+"_get("+l.join(",")+"){"),s?a.push("return this.data.get("+c+")}"):a.push("return this.data["+c+"]}"),a.push("proto.index=function "+n+"_index(",l.join(),"){return "+c+"}"),a.push("proto.hi=function "+n+"_hi("+l.join(",")+"){return new "+n+"(this.data,"+i.map((function(e){return["(typeof i",e,"!=='number'||i",e,"<0)?this.shape[",e,"]:i",e,"|0"].join("")})).join(",")+","+i.map((function(e){return"this.stride["+e+"]"})).join(",")+",this.offset)}");var p=i.map((function(e){return"a"+e+"=this.shape["+e+"]"})),f=i.map((function(e){return"c"+e+"=this.stride["+e+"]"}));a.push("proto.lo=function "+n+"_lo("+l.join(",")+"){var b=this.offset,d=0,"+p.join(",")+","+f.join(","));for(var g=0;g<t;++g)a.push("if(typeof i"+g+"==='number'&&i"+g+">=0){d=i"+g+"|0;b+=c"+g+"*d;a"+g+"-=d}");for(a.push("return new "+n+"(this.data,"+i.map((function(e){return"a"+e})).join(",")+","+i.map((function(e){return"c"+e})).join(",")+",b)}"),a.push("proto.step=function "+n+"_step("+l.join(",")+"){var "+i.map((function(e){return"a"+e+"=this.shape["+e+"]"})).join(",")+","+i.map((function(e){return"b"+e+"=this.stride["+e+"]"})).join(",")+",c=this.offset,d=0,ceil=Math.ceil"),g=0;g<t;++g)a.push("if(typeof i"+g+"==='number'){d=i"+g+"|0;if(d<0){c+=b"+g+"*(a"+g+"-1);a"+g+"=ceil(-a"+g+"/d)}else{a"+g+"=ceil(a"+g+"/d)}b"+g+"*=d}");a.push("return new "+n+"(this.data,"+i.map((function(e){return"a"+e})).join(",")+","+i.map((function(e){return"b"+e})).join(",")+",c)}");var m=new Array(t),b=new Array(t);for(g=0;g<t;++g)m[g]="a[i"+g+"]",b[g]="b[i"+g+"]";for(a.push("proto.transpose=function "+n+"_transpose("+l+"){"+l.map((function(e,t){return e+"=("+e+"===undefined?"+t+":"+e+"|0)"})).join(";"),"var a=this.shape,b=this.stride;return new "+n+"(this.data,"+m.join(",")+","+b.join(",")+",this.offset)}"),a.push("proto.pick=function "+n+"_pick("+l+"){var a=[],b=[],c=this.offset"),g=0;g<t;++g)a.push("if(typeof i"+g+"==='number'&&i"+g+">=0){c=(c+this.stride["+g+"]*i"+g+")|0}else{a.push(this.shape["+g+"]);b.push(this.stride["+g+"])}");return a.push("var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}"),a.push("return function construct_"+n+"(data,shape,stride,offset){return new "+n+"(data,"+i.map((function(e){return"shape["+e+"]"})).join(",")+","+i.map((function(e){return"stride["+e+"]"})).join(",")+",offset)}"),new Function("CTOR_LIST","ORDER",a.join("\n"))(u[e],o)}var u={float32:[],float64:[],int8:[],int16:[],int32:[],uint8:[],uint16:[],uint32:[],array:[],uint8_clamped:[],bigint64:[],biguint64:[],buffer:[],generic:[]};e.exports=function(e,t,n,r){if(void 0===e)return(0,u.array[0])([]);"number"==typeof e&&(e=[e]),void 0===t&&(t=[e.length]);var i=t.length;if(void 0===n){n=new Array(i);for(var o=i-1,c=1;o>=0;--o)n[o]=c,c*=t[o]}if(void 0===r)for(r=0,o=0;o<i;++o)n[o]<0&&(r-=(t[o]-1)*n[o]);for(var h=function(e){if(s(e))return"buffer";if(a)switch(Object.prototype.toString.call(e)){case"[object Float64Array]":return"float64";case"[object Float32Array]":return"float32";case"[object Int8Array]":return"int8";case"[object Int16Array]":return"int16";case"[object Int32Array]":return"int32";case"[object Uint8Array]":return"uint8";case"[object Uint16Array]":return"uint16";case"[object Uint32Array]":return"uint32";case"[object Uint8ClampedArray]":return"uint8_clamped";case"[object BigInt64Array]":return"bigint64";case"[object BigUint64Array]":return"biguint64"}return Array.isArray(e)?"array":"generic"}(e),d=u[h];d.length<=i+1;)d.push(l(h,d.length-1));return(0,d[i+1])(e,t,n,r)}},3300:(e,t)=>{"use strict";var n=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==n)return n;throw new Error("unable to locate global object")}();e.exports=t=n.fetch,n.fetch&&(t.default=n.fetch.bind(n)),t.Headers=n.Headers,t.Request=n.Request,t.Response=n.Response},316:(e,t,n)=>{"use strict";var r=n(746),s=n(6841),a=n(8764).lW;n.g.__TYPEDARRAY_POOL||(n.g.__TYPEDARRAY_POOL={UINT8:s([32,0]),UINT16:s([32,0]),UINT32:s([32,0]),BIGUINT64:s([32,0]),INT8:s([32,0]),INT16:s([32,0]),INT32:s([32,0]),BIGINT64:s([32,0]),FLOAT:s([32,0]),DOUBLE:s([32,0]),DATA:s([32,0]),UINT8C:s([32,0]),BUFFER:s([32,0])});var i="undefined"!=typeof Uint8ClampedArray,o="undefined"!=typeof BigUint64Array,l="undefined"!=typeof BigInt64Array,u=n.g.__TYPEDARRAY_POOL;u.UINT8C||(u.UINT8C=s([32,0])),u.BIGUINT64||(u.BIGUINT64=s([32,0])),u.BIGINT64||(u.BIGINT64=s([32,0])),u.BUFFER||(u.BUFFER=s([32,0]));var c=u.DATA,h=u.BUFFER;function d(e){if(e){var t=e.length||e.byteLength,n=r.log2(t);c[n].push(e)}}function p(e){e=r.nextPow2(e);var t=r.log2(e),n=c[t];return n.length>0?n.pop():new ArrayBuffer(e)}function f(e){return new Uint8Array(p(e),0,e)}function g(e){return new Uint16Array(p(2*e),0,e)}function m(e){return new Uint32Array(p(4*e),0,e)}function b(e){return new Int8Array(p(e),0,e)}function y(e){return new Int16Array(p(2*e),0,e)}function x(e){return new Int32Array(p(4*e),0,e)}function v(e){return new Float32Array(p(4*e),0,e)}function w(e){return new Float64Array(p(8*e),0,e)}function k(e){return i?new Uint8ClampedArray(p(e),0,e):f(e)}function I(e){return o?new BigUint64Array(p(8*e),0,e):null}function C(e){return l?new BigInt64Array(p(8*e),0,e):null}function N(e){return new DataView(p(e),0,e)}function $(e){e=r.nextPow2(e);var t=r.log2(e),n=h[t];return n.length>0?n.pop():new a(e)}t.free=function(e){if(a.isBuffer(e))h[r.log2(e.length)].push(e);else{if("[object ArrayBuffer]"!==Object.prototype.toString.call(e)&&(e=e.buffer),!e)return;var t=e.length||e.byteLength,n=0|r.log2(t);c[n].push(e)}},t.freeUint8=t.freeUint16=t.freeUint32=t.freeBigUint64=t.freeInt8=t.freeInt16=t.freeInt32=t.freeBigInt64=t.freeFloat32=t.freeFloat=t.freeFloat64=t.freeDouble=t.freeUint8Clamped=t.freeDataView=function(e){d(e.buffer)},t.freeArrayBuffer=d,t.freeBuffer=function(e){h[r.log2(e.length)].push(e)},t.malloc=function(e,t){if(void 0===t||"arraybuffer"===t)return p(e);switch(t){case"uint8":return f(e);case"uint16":return g(e);case"uint32":return m(e);case"int8":return b(e);case"int16":return y(e);case"int32":return x(e);case"float":case"float32":return v(e);case"double":case"float64":return w(e);case"uint8_clamped":return k(e);case"bigint64":return C(e);case"biguint64":return I(e);case"buffer":return $(e);case"data":case"dataview":return N(e);default:return null}return null},t.mallocArrayBuffer=p,t.mallocUint8=f,t.mallocUint16=g,t.mallocUint32=m,t.mallocInt8=b,t.mallocInt16=y,t.mallocInt32=x,t.mallocFloat32=t.mallocFloat=v,t.mallocFloat64=t.mallocDouble=w,t.mallocUint8Clamped=k,t.mallocBigUint64=I,t.mallocBigInt64=C,t.mallocDataView=N,t.mallocBuffer=$,t.clearCache=function(){for(var e=0;e<32;++e)u.UINT8[e].length=0,u.UINT16[e].length=0,u.UINT32[e].length=0,u.INT8[e].length=0,u.INT16[e].length=0,u.INT32[e].length=0,u.FLOAT[e].length=0,u.DOUBLE[e].length=0,u.BIGUINT64[e].length=0,u.BIGINT64[e].length=0,u.UINT8C[e].length=0,c[e].length=0,h[e].length=0}},8706:e=>{"use strict";e.exports=function(e,t,n){return 0===e.length?e:t?(n||e.sort(t),function(e,t){for(var n=1,r=e.length,s=e[0],a=e[0],i=1;i<r;++i)if(a=s,t(s=e[i],a)){if(i===n){n++;continue}e[n++]=s}return e.length=n,e}(e,t)):(n||e.sort(),function(e){for(var t=1,n=e.length,r=e[0],s=e[0],a=1;a<n;++a,s=r)if(s=r,(r=e[a])!==s){if(a===t){t++;continue}e[t++]=r}return e.length=t,e}(e))}},4327:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=class{static isWebGLAvailable(){try{const e=document.createElement("canvas");return!(!window.WebGLRenderingContext||!e.getContext("webgl")&&!e.getContext("experimental-webgl"))}catch(e){return!1}}static isWebGL2Available(){try{const e=document.createElement("canvas");return!(!window.WebGL2RenderingContext||!e.getContext("webgl2"))}catch(e){return!1}}static getWebGLErrorMessage(){return this.getErrorMessage(1)}static getWebGL2ErrorMessage(){return this.getErrorMessage(2)}static getErrorMessage(e){const t={1:window.WebGLRenderingContext,2:window.WebGL2RenderingContext};let n='Your $0 does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">$1</a>';const r=document.createElement("div");return r.id="webglmessage",r.style.fontFamily="monospace",r.style.fontSize="13px",r.style.fontWeight="normal",r.style.textAlign="center",r.style.background="#fff",r.style.color="#000",r.style.padding="1.5em",r.style.width="400px",r.style.margin="5em auto 0",n=t[e]?n.replace("$0","graphics card"):n.replace("$0","browser"),n=n.replace("$1",{1:"WebGL",2:"WebGL 2"}[e]),r.innerHTML=n,r}}}}]);
//# sourceMappingURL=bundle.4dfcb792ac3f627c6249.js.map