{"version":3,"file":"bundle.8ef06e107805af6eb0a0.js","mappings":"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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///./src/automaton/script.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/amd define","webpack:///webpack/runtime/amd options","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import '../style.css';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport Stats from 'three/examples/jsm/libs/stats.module';\nimport WebGL from 'three/examples/jsm/capabilities/WebGL.js';\nimport {loadAudioFromFile, resampleAndMakeMono, melSpectrogram, powerToDb} from '@magenta/music/esm/core/audio_utils';\nimport { Texture, Vector3 } from 'three';\n\n\n// import msp from './audio-processors/melspectrogram-processor.js?raw'\n\n// console.log(msp);\nif ( WebGL.isWebGL2Available() === false ) {\n \n document.body.appendChild( WebGL.getWebGL2ErrorMessage() );\n \n}\n \nlet camera,\n scene,\n renderer,\n controls,\n stats,\n raycaster\n \nlet planeMesh,\n debugPlaneMesh,\n volumeMesh,\n pointer,\n specTexture,\n clock,\n curveMesh,\n curve_data\n \nlet analyser\n \nlet AudioContext;\n// global var for web audio API AudioContext\nlet audioCtx;\nlet bufferSize = 1024;\nlet hopSize = 512;\nlet melNumBands = 96;\n\nlet exports = {};\n\n// From a series of URL to js files, get an object URL that can be loaded in an\n// AudioWorklet. This is useful to be able to use multiple files (utils, data\n// structure, main DSP, etc.) without either using static imports, eval, manual\n// concatenation with or without a build step, etc.\nfunction URLFromFiles(files) {\n  const promises = files\n      .map((file) => fetch(file)\n          .then((response) => response.text()));\n  return Promise\n      .all(promises)\n      .then((texts) => {\n          texts.unshift(\"var exports = {};\"); // hack to make injected umd modules work\n          const text = texts.join('');\n          const blob = new Blob([text], {type: \"text/javascript\"});\n         \n          return URL.createObjectURL(blob);\n      });\n }\n// Ringbuf code\n'use strict';\n\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n// Send audio interleaved audio frames between threads, wait-free.\n//\n// Those classes allow communicating between a non-real time thread (browser\n// main thread or worker) and a real-time thread (in an AudioWorkletProcessor).\n// Write and Reader cannot change role after setup, unless externally\n// synchronized.\n//\n// GC _can_ happen during the initial construction of this object when hopefully\n// no audio is being output. This depends on how implementations schedule GC\n// passes. After the setup phase no GC is triggered on either side of the queue..\n\n// Interleaved -> Planar audio buffer conversion\n//\n// `input` is an array of n*128 frames arrays, interleaved, where n is the\n// channel count.\n// output is an array of 128-frames arrays.\n//\n// This is useful to get data from a codec, the network, or anything that is\n// interleaved, into planar format, for example a Web Audio API AudioBuffer or\n// the output parameter of an AudioWorkletProcessor.\nfunction deinterleave(input, output) {\n  var channel_count = input.length / 256;\n  if (output.length != channel_count) {\n    throw \"not enough space in output arrays\";\n  }\n  for (var i = 0; i < channelCount; i++) {\n    let out_channel = output[i];\n    let interleaved_idx = i;\n    for (var j = 0; j < 128; ++j) {\n      out_channel[j] = input[interleaved_idx];\n      interleaved_idx += channel_count;\n    }\n  }\n}\n// Planar -> Interleaved audio buffer conversion\n//\n// Input is an array of `n` 128 frames Float32Array that hold the audio data.\n// output is a Float32Array that is n*128 elements long. This function is useful\n// to get data from the Web Audio API (that does planar audio), into something\n// that codec or network streaming library expect.\nfunction interleave(input, output) {\n  if (input.length * 128 != output.length) {\n    throw \"input and output of incompatible sizes\";\n  }\n  var out_idx = 0;\n  for (var i = 0; i < 128; i++) {\n    for (var channel = 0; j < output.length; j++) {\n      output[out_idx] = input[channel][i];\n      out_idx++;\n    }\n  }\n}\n\nclass AudioWriter {\n  // From a RingBuffer, build an object that can enqueue enqueue audio in a ring\n  // buffer.\n  constructor(ringbuf) {\n    if (ringbuf.type() != \"Float32Array\") {\n      throw \"This class requires a ring buffer of Float32Array\";\n    }\n    this.ringbuf = ringbuf;\n  }\n  // Enqueue a buffer of interleaved audio into the ring buffer.\n  // Returns the number of samples that have been successfuly written to the\n  // queue. `buf` is not written to during this call, so the samples that\n  // haven't been written to the queue are still available.\n  enqueue(buf) {\n    return this.ringbuf.push(buf);\n  }\n  // Query the free space in the ring buffer. This is the amount of samples that\n  // can be queued, with a guarantee of success.\n  available_write() {\n    return this.ringbuf.available_write();\n  }\n}\n\nclass AudioReader {\n  constructor(ringbuf) {\n    if (ringbuf.type() != \"Float32Array\") {\n      throw \"This class requires a ring buffer of Float32Array\";\n    }\n    this.ringbuf = ringbuf;\n  }\n  // Attempt to dequeue at most `buf.length` samples from the queue. This\n  // returns the number of samples dequeued. If greater than 0, the samples are\n  // at the beginning of `buf`\n  dequeue(buf) {\n    if (this.ringbuf.empty()) {\n      return 0;\n    }\n    return this.ringbuf.pop(buf);\n  }\n  // Query the occupied space in the queue. This is the amount of samples that\n  // can be read with a guarantee of success.\n  available_read() {\n    return this.ringbuf.available_read();\n  }\n}\n\n// Communicate parameter changes, lock free, no gc.\n//\n// between a UI thread (browser main thread or worker) and a real-time thread\n// (in an AudioWorkletProcessor). Write and Reader cannot change role after\n// setup, unless externally synchronized.\n//\n// GC can happen during the initial construction of this object when hopefully\n// no audio is being output. This depends on the implementation.\n//\n// Parameter changes are like in the VST framework: an index and a float value\n// (no restriction on the value).\n//\n// This class supports up to 256 parameters, but this is easy to extend if\n// needed.\n//\n// An element is a index, that is an unsigned byte, and a float32, which is 4\n// bytes.\n\nclass ParameterWriter {\n  // From a RingBuffer, build an object that can enqueue a parameter change in\n  // the queue.\n  constructor(ringbuf) {\n    if (ringbuf.type() != \"Uint8Array\") {\n      throw \"This class requires a ring buffer of Uint8Array\";\n    }\n    const SIZE_ELEMENT = 5;\n    this.ringbuf = ringbuf;\n    this.mem = new ArrayBuffer(SIZE_ELEMENT);\n    this.array = new Uint8Array(this.mem);\n    this.view = new DataView(this.mem);\n  }\n  // Enqueue a parameter change for parameter of index `index`, with a new value\n  // of `value`.\n  // Returns true if enqueuing suceeded, false otherwise.\n  enqueue_change(index, value) {\n    const SIZE_ELEMENT = 5;\n    this.view.setUint8(0, index);\n    this.view.setFloat32(1, value);\n    if (this.ringbuf.available_write() < SIZE_ELEMENT) {\n      return false;\n    }\n    return this.ringbuf.push(this.array) == SIZE_ELEMENT;\n  }\n}\n\nclass ParameterReader {\n  constructor(ringbuf) {\n    const SIZE_ELEMENT = 5;\n    this.ringbuf = ringbuf;\n    this.mem = new ArrayBuffer(SIZE_ELEMENT);\n    this.array = new Uint8Array(this.mem);\n    this.view = new DataView(this.mem);\n  }\n  dequeue_change(o) {\n    if (this.ringbuf.empty()) {\n      return false;\n    }\n    var rv = this.ringbuf.pop(this.array);\n    o.index = this.view.getUint8(0);\n    o.value = this.view.getFloat32(1);\n\n    return true;\n  }\n}\n\n// A Single Producer - Single Consumer thread-safe wait-free ring buffer.\n//\n// The producer and the consumer can be separate thread, but cannot change role,\n// except with external synchronization.\n\nclass RingBuffer {\n  static getStorageForCapacity(capacity, type) {\n    if (!type.BYTES_PER_ELEMENT) {\n      throw \"Pass in a ArrayBuffer subclass\";\n    }\n    var bytes = 8 + (capacity + 1) * type.BYTES_PER_ELEMENT;\n    return new SharedArrayBuffer(bytes);\n  }\n  // `sab` is a SharedArrayBuffer with a capacity calculated by calling\n  // `getStorageForCapacity` with the desired capacity.\n  constructor(sab, type) {\n    if (!ArrayBuffer.__proto__.isPrototypeOf(type) &&\n      type.BYTES_PER_ELEMENT !== undefined) {\n      throw \"Pass a concrete typed array class as second argument\";\n    }\n\n    // Maximum usable size is 1<<32 - type.BYTES_PER_ELEMENT bytes in the ring\n    // buffer for this version, easily changeable.\n    // -4 for the write ptr (uint32_t offsets)\n    // -4 for the read ptr (uint32_t offsets)\n    // capacity counts the empty slot to distinguish between full and empty.\n    this._type = type;\n    this.capacity = (sab.byteLength - 8) / type.BYTES_PER_ELEMENT;\n    this.buf = sab;\n    this.write_ptr = new Uint32Array(this.buf, 0, 1);\n    this.read_ptr = new Uint32Array(this.buf, 4, 1);\n    this.storage = new type(this.buf, 8, this.capacity);\n  }\n  // Returns the type of the underlying ArrayBuffer for this RingBuffer. This\n  // allows implementing crude type checking.\n  type() {\n    return this._type.name;\n  }\n  // Push bytes to the ring buffer. `bytes` is an typed array of the same type\n  // as passed in the ctor, to be written to the queue.\n  // Returns the number of elements written to the queue.\n  push(elements) {\n    var rd = Atomics.load(this.read_ptr, 0);\n    var wr = Atomics.load(this.write_ptr, 0);\n\n    if ((wr + 1) % this._storage_capacity() == rd) {\n      // full\n      return 0;\n    }\n\n    let to_write = Math.min(this._available_write(rd, wr), elements.length);\n    let first_part = Math.min(this._storage_capacity() - wr, to_write);\n    let second_part = to_write - first_part;\n\n    this._copy(elements, 0, this.storage, wr, first_part);\n    this._copy(elements, first_part, this.storage, 0, second_part);\n\n    // publish the enqueued data to the other side\n    Atomics.store(\n      this.write_ptr,\n      0,\n      (wr + to_write) % this._storage_capacity()\n    );\n\n    return to_write;\n  }\n  // Read `elements.length` elements from the ring buffer. `elements` is a typed\n  // array of the same type as passed in the ctor.\n  // Returns the number of elements read from the queue, they are placed at the\n  // beginning of the array passed as parameter.\n  pop(elements) {\n    var rd = Atomics.load(this.read_ptr, 0);\n    var wr = Atomics.load(this.write_ptr, 0);\n\n    if (wr == rd) {\n      return 0;\n    }\n\n    let to_read = Math.min(this._available_read(rd, wr), elements.length);\n\n    let first_part = Math.min(this._storage_capacity() - rd, elements.length);\n    let second_part = to_read - first_part;\n\n    this._copy(this.storage, rd, elements, 0, first_part);\n    this._copy(this.storage, 0, elements, first_part, second_part);\n\n    Atomics.store(this.read_ptr, 0, (rd + to_read) % this._storage_capacity());\n\n    return to_read;\n  }\n\n  // True if the ring buffer is empty false otherwise. This can be late on the\n  // reader side: it can return true even if something has just been pushed.\n  empty() {\n    var rd = Atomics.load(this.read_ptr, 0);\n    var wr = Atomics.load(this.write_ptr, 0);\n\n    return wr == rd;\n  }\n\n  // True if the ring buffer is full, false otherwise. This can be late on the\n  // write side: it can return true when something has just been poped.\n  full() {\n    var rd = Atomics.load(this.read_ptr, 0);\n    var wr = Atomics.load(this.write_ptr, 0);\n\n    return (wr + 1) % this.capacity != rd;\n  }\n\n  // The usable capacity for the ring buffer: the number of elements that can be\n  // stored.\n  capacity() {\n    return this.capacity - 1;\n  }\n\n  // Number of elements available for reading. This can be late, and report less\n  // elements that is actually in the queue, when something has just been\n  // enqueued.\n  available_read() {\n    var rd = Atomics.load(this.read_ptr, 0);\n    var wr = Atomics.load(this.write_ptr, 0);\n    return this._available_read(rd, wr);\n  }\n\n  // Number of elements available for writing. This can be late, and report less\n  // elemtns that is actually available for writing, when something has just\n  // been dequeued.\n  available_write() {\n    var rd = Atomics.load(this.read_ptr, 0);\n    var wr = Atomics.load(this.write_ptr, 0);\n    return this._available_write(rd, wr);\n  }\n\n  // private methods //\n\n  // Number of elements available for reading, given a read and write pointer..\n  _available_read(rd, wr) {\n    if (wr > rd) {\n      return wr - rd;\n    } else {\n      return wr + this._storage_capacity() - rd;\n    }\n  }\n\n  // Number of elements available from writing, given a read and write pointer.\n  _available_write(rd, wr) {\n    let rv = rd - wr - 1;\n    if (wr >= rd) {\n      rv += this._storage_capacity();\n    }\n    return rv;\n  }\n\n  // The size of the storage for elements not accounting the space for the index.\n  _storage_capacity() {\n    return this.capacity;\n  }\n\n  // Copy `size` elements from `input`, starting at offset `offset_input`, to\n  // `output`, starting at offset `offset_output`.\n  _copy(input, offset_input, output, offset_output, size) {\n    for (var i = 0; i < size; i++) {\n      output[offset_output + i] = input[offset_input + i];\n    }\n  }\n}\n\nexports.AudioReader = AudioReader;\nexports.AudioWriter = AudioWriter;\nexports.ParameterReader = ParameterReader;\nexports.ParameterWriter = ParameterWriter;\nexports.RingBuffer = RingBuffer;\nexports.deinterleave = deinterleave;\nexports.interleave = interleave;\n\n\ntry {\n   AudioContext = window.AudioContext || window.webkitAudioContext;\n   audioCtx = new AudioContext();\n} catch (e) {\n   throw \"Could not instantiate AudioContext: \" + e.message;\n}\n// global var getUserMedia mic stream\nlet gumStream;\n// global audio node variables\nlet mic;\nlet gain;\nlet melspectrogramNode;\n\n// Shared data with AudioWorkletGlobalScope\nlet audioReader;\n\n// Volume constants\nconst x_dim = 4;\nconst y_dim = 4;\nconst z_dim = 4;\nconst x_scale = 1;\nconst y_scale = 1;\nconst z_scale = 1;\n \n// Magenta Music  spectrogram constants\nconst SAMPLE_RATE = 16000;\nconst MEL_SPEC_BINS = 229;\nconst SPEC_HOP_LENGTH = 512;\n \n// Live Audio spectrogram constants\nconst FFT_SIZE = 2048;\nconst NUM_FRAMES = 100;\nconst MIN_DB = -80;\nconst MAX_DB = -10;\n \n// Curve constants\nconst NUM_CURVE_POINTS = 5;\n \n \n// Setup audio\n \nlet navigatorCopy = navigator;\nif (navigatorCopy.mediaDevices === undefined) {\n navigatorCopy.mediaDevices = {};\n}\n// Some browsers partially implement mediaDevices. We can't assign an object\n// with getUserMedia as it would overwrite existing properties.\n// Add the getUserMedia property if it's missing.\n \n// Set up UI Elements\nconst fileInput = document.getElementById('loadFileInput');\nconst recordButton = document.getElementById('recordButton');\n \n// Set up event listeners\n \naddEventListener('change', () => loadFile(fileInput, 'loadFileBtn'));\n// Load audio file, generate mel spectrogram\n// and return the spectrogram's data texture\nfunction loadFile(inputElement, prefix) {\n //document.getElementById(`${prefix}_fileBtn`).setAttribute('disabled', '');\n const audioBuffer = loadAudioFromFile(inputElement.files[0]);\n return audioBuffer\n .then(\n   (buffer) => {return preprocessAudio(buffer)})\n .then(\n   (melSpec) => {\n     return createMMSpectrumDataTexture(melSpec, melSpec.length, MEL_SPEC_BINS)\n     }\n )\n .then(\n   (dataTexture) => {return setMeshTexture(dataTexture)}\n );\n}\n \n// Compute mel spectrogram\nasync function preprocessAudio(audioBuffer) {\n const resampledMonoAudio = await resampleAndMakeMono(audioBuffer);\n return powerToDb(melSpectrogram(resampledMonoAudio, {\n   sampleRate: SAMPLE_RATE,\n   hopLength: SPEC_HOP_LENGTH,\n   nMels: MEL_SPEC_BINS,\n   // temporal resolution\n   nFft: 2048,\n   fMin: 30,\n }));\n}\n\n// Shaders\nconst raycastVertexShader = /* glsl */`\nuniform vec3 volume_scale;\nout vec3 vray_dir;\nflat out vec3 transformed_eye;\nvoid main(void) {\n // TODO: For non-uniform size volumes we need to transform them differently as well\n // to center them properly\n vec3 volume_translation = vec3(0.5) - volume_scale * 0.5;\n gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1);\n transformed_eye = (cameraPosition - volume_translation) / volume_scale;\n vray_dir = position - transformed_eye;\n}`;\nconst raycastFragmentShader = /* glsl */`\nprecision highp int;\nprecision highp float;\nuniform highp sampler3D volume;\nuniform highp sampler2D spectrum;\nuniform highp sampler2D curve_data;\nuniform ivec3 volume_dims;\nuniform vec3 volume_scale;\nuniform float dt_scale;\nuniform vec3 aabb_min;\nuniform vec3 aabb_max;\nuniform float time;\nin vec3 vray_dir;\nflat in vec3 transformed_eye;\n \nvec2 intersect_box(vec3 aabbMin, vec3 aabbMax, vec3 orig, vec3 dir) {\n \n vec3 inv_dir = 1.0 / dir;\n vec3 tmin_tmp = (aabbMin - orig) * inv_dir;\n vec3 tmax_tmp = (aabbMax - orig) * inv_dir;\n vec3 tmin = min(tmin_tmp, tmax_tmp);\n vec3 tmax = max(tmin_tmp, tmax_tmp);\n float t0 = max(tmin.x, max(tmin.y, tmin.z));\n float t1 = min(tmax.x, min(tmax.y, tmax.z));\n return vec2(t0, t1);\n}\n// Pseudo-random number gen from\n// http://www.reedbeta.com/blog/quick-and-easy-gpu-random-numbers-in-d3d11/\n// with some tweaks for the range of values\nfloat wang_hash(int seed) {\n seed = (seed ^ 61) ^ (seed >> 16);\n seed *= 9;\n seed = seed ^ (seed >> 4);\n seed *= 0x27d4eb2d;\n seed = seed ^ (seed >> 15);\n return float(seed % 2147483647) / float(2147483647);\n}\nfloat linear_to_srgb(float x) {\n if (x <= 0.0031308f) {\n   return 12.92f * x;\n }\n return 1.055f * pow(x, 1.f / 2.4f) - 0.055f;\n}\nvec4 color_transfer(float intensity)\n{\n vec3 high = vec3(0.0, 0.0, 0.0);\n vec3 low = vec3(1.0, 1.0, 1.0);\n float alpha = (exp(intensity) - 1.0) / (exp(1.0) - 1.0);\n return vec4(intensity * high + (1.0 - intensity) * low, alpha);\n}\n \nfloat sdSphere( vec3 p, vec3 offset, float scale )\n{\n float dist = length(p - offset) - scale;\n return 1.0 - clamp(dist, 0.0, 1.0);\n}\nfloat distCurve(vec3 p){\n float min_dist = 10.0;\n float du = 0.2;\n float u = 0.0;\n while(u < 1.0 ){\n   vec2 v_pos = vec2(u, 0.0);\n   // point normals are stored in the 3rd row of the texture\n   // whose UV.v coordinate is 0.75\n   vec2 v_norm = vec2(u, 0.75);\n   vec3 dir_vec = p - texture(curve_data, v_pos).rgb ;\n \n   min_dist = min(min_dist, length(dir_vec));\n   u += du;\n }\n \n return min_dist;\n}\n \nvoid main(void) {\n vec3 ray_dir = normalize(vray_dir);\n vec4 color = vec4(0.0);\n vec2 t_hit = intersect_box(aabb_min, aabb_max, transformed_eye, ray_dir);\n if (t_hit.x > t_hit.y) {\n   discard;\n }\n t_hit.x = max(t_hit.x, 0.0);\n vec3 dt_vec = 1.0 / (vec3(volume_dims) * abs(ray_dir));\n float dt = dt_scale * min(dt_vec.x, min(dt_vec.y, dt_vec.z));\n vec3 p = transformed_eye + (t_hit.x + dt) * ray_dir;\n int step = 0;\n int maxStep = 100 ;\n for (float t = t_hit.x; t < t_hit.y; t += dt) {\n   if (step > maxStep){\n     break;\n   }\n   // use distance function\n   // infinite tube\n   float dist = length(p.xy) - 0.01;\n   // sphere\n   // float dist = clamp(length(p), 0.0, 1.0);\n   // curve\n   // float dist = distCurve(p) * 1.0;\n   // sample spectrogram\n   vec4 spec_val = texture(spectrum, vec2(0.5,  0.03 / dist));\n   vec4 val_color = vec4(pow(spec_val.r,10.0) ,pow(spec_val.r, 2.0),0.0 * pow(spec_val.r,0.0),spec_val.r);\n   //vec4 val_color = vec4(pow(dist,8.0),dist,dist,dist);\n   // Opacity correction\n   val_color.w = 1.0 - pow(1.0 - val_color.w, dt_scale);\n \n   // Alpha-blending\n   color.xyz += (1.0 - color.w) * val_color.w * val_color.xyz;\n   color.w += (1.0 - color.w) * val_color.w;\n   // if (color.w > 0.99) {\n   //   break;\n   // }\n   if (val_color.w < 0.0) {\n     discard;\n   }\n   p += ray_dir * dt;\n   step++;\n }\n color.x = linear_to_srgb(color.x);\n color.y = linear_to_srgb(color.y);\n color.z = linear_to_srgb(color.z);\n gl_FragColor = color;\n //gl_FragColor = vec4(texture(spectrum,vec2(0.0,0.0)).rgb * 255.0, 1.0);\n \n}\n`;\n \n// Main body\ninit();\nanimate();\n \n \nfunction init() {\n scene = new THREE.Scene();\n \n // Renderer\n renderer = new THREE.WebGLRenderer({antialias: true});\n renderer.setPixelRatio( window.devicePixelRatio );\n renderer.setSize( window.innerWidth, window.innerHeight );\n //document.body.appendChild( renderer.domElement );\n \n // Camera\n // Perspective\n const aspect = window.innerWidth / window.innerHeight;\n camera = new THREE.PerspectiveCamera( 45, aspect, 0.01, 1000 );\n // // Orthographic\n // const width = 5;\n // const h = 2 * width; // frustum height\n // const aspect = window.innerWidth / window.innerHeight;\n // camera = new THREE.OrthographicCamera( - h * aspect / 2, h * aspect / 2, h / 2, - h / 2, 0.01, 1000 );\n camera.position.set( 0, 0, 10 );\n  scene.add(camera);\n \n // Controls\n controls = new OrbitControls( camera, renderer.domElement );\n controls.addEventListener( 'change', render );\n controls.minZoom = 0.1;\n controls.maxZoom = 10;\n controls.enablePan = false;\n controls.update();\n \n // Debug spectrogram texture\n let planeGeo1 = new THREE.PlaneGeometry(2, 2);\n let planeMat1 = new THREE.MeshBasicMaterial({ map: createDataTexture(x_dim, y_dim), side: THREE.DoubleSide});\n debugPlaneMesh = new THREE.Mesh(planeGeo1, planeMat1);\n debugPlaneMesh .position.set( -2, 0, -1 );\n scene.add(debugPlaneMesh);\n \n // Volume\n const volumeGeometry = new THREE.BoxGeometry( x_scale, y_scale, z_scale);\n clock = new THREE.Clock();\n \n const curve = initCurveData(NUM_CURVE_POINTS);\n const points = curve.getPoints( 5 );\n const geometry = new THREE.BufferGeometry().setFromPoints( points );\n const material = new THREE.LineBasicMaterial( { color: 0xff0000 } );\n \n // Create curveMesh to add to the scene\n curveMesh = new THREE.Line( geometry, material );\n curveMesh.matrixAutoUpdate = false;\n scene.add(curveMesh);\n \n const volumeUniforms =  {\n   'volume_scale': { value: new THREE.Vector3( x_scale, y_scale, z_scale ) },\n   'volume': { value: create3dDataTexture(x_dim, y_dim, z_dim) },\n   'volume_dims': { value: new THREE.Vector3( x_dim, y_dim, z_dim) },\n   'aabb_min': { value: new THREE.Vector3()},\n   'aabb_max': { value: new THREE.Vector3()},\n   'dt_scale': { value: 0.1},\n   'spectrum': { value: createDataTexture(NUM_FRAMES, FFT_SIZE / 2) },\n   'curve_data': { value: createCurveDataTexture(curve_data) },\n   'time': {value: clock.getElapsedTime()}\n };\n \n const volumeMaterial = new THREE.ShaderMaterial({\n   uniforms: volumeUniforms,\n   vertexShader: raycastVertexShader,\n   fragmentShader: raycastFragmentShader,\n   side: THREE.DoubleSide,\n   transparent: true\n });\n \n volumeMesh = new THREE.Mesh( volumeGeometry, volumeMaterial);\n volumeMesh.matrixAutoUpdate = true;\n volumeMesh.geometry.computeBoundingBox();\n \n (volumeMesh.material).uniforms['aabb_min']['value'] = volumeMesh.geometry.boundingBox.min;\n (volumeMesh.material).uniforms['aabb_max']['value'] = volumeMesh.geometry.boundingBox.max;\n scene.add(volumeMesh);\n \n pointer = new THREE.Vector2();\n \n window.addEventListener('pointerMove', onPointerMove);\n \n const planeGeo = new THREE.PlaneGeometry(25, 25);\n const planeMat = new THREE.MeshBasicMaterial({visible: false});\n planeMesh = new THREE.Mesh(planeGeo, planeMat);\n planeMesh.rotation.x = -0.5 * Math.PI;\n scene.add(planeMesh);\n planeMesh.name = 'plane';\n \n raycaster = new THREE.Raycaster();\n \n // Add helpers\n addHelpers(scene);\n render();\n document.addEventListener( 'pointermove', onPointerMove );\n window.addEventListener( 'resize', onWindowResize ); \n recordButton.addEventListener('click', onRecordClickHandler);\n}\n \nfunction onWindowResize() {\n \n // renderer.setSize( window.innerWidth, window.innerHeight );\n \n // const aspect = window.innerWidth / window.innerHeight;\n \n // const frustumHeight = camera.top - camera.bottom;\n \n // camera.left = - frustumHeight * aspect / 2;\n // camera.right = frustumHeight * aspect / 2;\n \n // camera.updateProjectionMatrix();\n camera.aspect = window.innerWidth / window.innerHeight;\n camera.updateProjectionMatrix();\n \n renderer.setSize( window.innerWidth, window.innerHeight );\n \n render();\n \n}\n \nfunction onPointerMove(event) {\n \n pointer.x = (event.clientX / window.innerWidth) * 2 - 1;\n pointer.y = - (event.clientY / window.innerHeight) * 2 + 1;\n \n}\n \nfunction addHelpers (scene) {\n const gridHelper = new THREE.GridHelper( 10, 10);\n scene.add( gridHelper );\n stats = Stats();\n document.body.appendChild(stats.dom)\n const axesHelper = new THREE.AxesHelper( 3 );\n scene.add( axesHelper );\n}\n \nfunction updateUniforms(){\n (volumeMesh.material).uniforms['time']['value'] = clock.getElapsedTime();\n (volumeMesh.material).uniforms['curve_data']['value'] =  updateCurveData(curveMesh, NUM_CURVE_POINTS);\n}\nfunction animate(){\n requestAnimationFrame(animate);\n updateUniforms();\n stats.update();\n //displayLiveSpectrum();\n render();\n}\n \n// Creates 3D texture with RGB gradient along the XYZ axes\nfunction create3dDataTexture(width, height, depth) {\n const d = new Uint8Array( width * height * depth * 4 );\n let stride = 0;\n \n for ( let z = 0; z < depth; z ++ ) {\n   for ( let y = 0; y < height; y ++ ) {\n     for ( let x = 0; x < width; x ++ ) {\n       d[stride + 0] = (x / width) * 255;\n       d[stride + 1] = (y / height) * 255;\n       d[stride + 2] = (z / depth) * 255;\n       // debug: looking at texture from side should give accumulated alpha of 1\n       d[stride + 3] = 255;\n       stride += 4;\n     }\n   }\n }\n const texture = new THREE.Data3DTexture( d, width, height, depth );\n texture.format = THREE.RGBAFormat;\n //texture.type = THREE.FloatType;\n // texture.minFilter = THREE.NearestFilter;\n // texture.magFilter = THREE.NearestFilter;\n texture.unpackAlignment = 1;\n texture.needsUpdate = true;\n \n return texture;\n}\nfunction createDataTexture(width, height) {\n \n const d = new Float32Array( width * height * 4 );\n \n let stride = 0;\n for ( let y = 0; y < height; y ++ ) {\n   for ( let x = 0; x < width; x ++ ) {\n     d[stride + 0] = 1;\n     d[stride + 1] = 0;\n     d[stride + 2] = 0;\n     d[stride + 3] = 1;\n     stride += 4;\n   }\n }\n const texture = new THREE.DataTexture( d, width, height );\n texture.format = THREE.RGBAFormat;\n texture.type = THREE.FloatType;\n texture.minFilter = THREE.NearestFilter;\n texture.magFilter = THREE.NearestFilter;\n texture.unpackAlignment = 1;\n texture.needsUpdate = true;\n \n return texture;\n}\nfunction createMMSpectrumDataTexture(data, width, height) {\n const d = new Float32Array( width * height * 4 );\n let stride = 0;\n for ( let y = 0; y < height; y ++ ) {\n   for ( let x = 0; x < width; x ++ ) {\n     d[stride + 0] = data[x][y];\n     d[stride + 1] = 0;\n     d[stride + 2] = 0;\n     d[stride + 3] = 0;\n     stride += 4;\n   }\n }\n var max = -Infinity;\n var min = Infinity;\n for(var i = 0; i < d.length; i++ ) if (d[i] > max) max = d[i];\n for(var i = 0; i < d.length; i++ ) if (d[i] < min) min = d[i];\n \n // normalize array\n stride = 0;\n while(stride < width * height * 4 ){\n   d[stride] = (d[stride] - min) / (max - min);\n   stride +=4;\n }\n const texture = new THREE.DataTexture( d, width, height );\n texture.format = THREE.RGBAFormat;\n texture.type = THREE.FloatType;\n texture.minFilter = THREE.NearestFilter;\n texture.magFilter = THREE.NearestFilter;\n texture.unpackAlignment = 1;\n texture.needsUpdate = true;\n \n return texture;\n}\nfunction createSpectrumDataTexture(width, height) {\n let data = [];\n for (let x = 0; x < width; x++){\n   data.push(new Float32Array(height));\n }\n return data;\n}\n \nfunction updateSpectrumData(texture, new_data) {\n const width = NUM_FRAMES;\n const height = FFT_SIZE / 2;\n const data = texture.image.data;\n let stride = 0;\n for (let y = 0; y < height; y++) {\n   for (let x = 0; x < width; x++) {\n     if (x < width - 10) {\n       // see https://webaudio.github.io/web-audio-api/#dom-analysernode-getbytefrequencydata\n       data[stride] = new_data[y] ;\n     } else {\n       data[stride] = data[stride + 4] ;\n     }\n     //data[stride] = Math.abs(Math.sin(clock.getElapsedTime()));\n     data[stride + 1] = 0;\n     data[stride + 2] = 0;\n     data[stride + 3] = 1;\n     stride += 4;\n   }\n }\n // const d_max = Math.max.apply(null, data);\n // const d_min = Math.min.apply(null, data);\n // // normalize array\n // stride = 0;\n // while(stride < width * height * 4 ){\n //   data[stride] = (data[stride] - d_min) / (d_max - d_min);\n //   stride +=4;\n // }\n // console.log(d_max);\n}\nfunction createCurveDataTexture(data){\n const d = new Float32Array( data.numPoints *  4 * 4 );\n let stride = 0;\n const pt_data = [data.positions, data.tangents, data.normals, data.binormals];\n for ( let j = 0; j < 4; j ++ ) {\n   for ( let k = 0; k < data.numPoints; k ++ ) {\n     d[stride + 0] = pt_data[j][k].x;\n     d[stride + 1] = pt_data[j][k].y;\n     d[stride + 2] = pt_data[j][k].z;\n     d[stride + 3] = 1.0;\n     stride += 4;\n   }\n }\n const texture = new THREE.DataTexture( d, data.numPoints, 1 );\n texture.type = THREE.FloatType;\n texture.format = THREE.RGBAFormat;\n texture.minFilter = THREE.NearestFilter;\n texture.magFilter = THREE.NearestFilter;\n texture.unpackAlignment = 1;\n texture.needsUpdate = true;\n return texture\n}\n \nfunction initCurveData(num_points){\n \n const curve = new THREE.CatmullRomCurve3( [\n   new THREE.Vector3( 0, 0.0, -0.5 ),\n   new THREE.Vector3(0, 0.0,  -0.25 ),\n   new THREE.Vector3( 0, 0.0 , 0),\n   new THREE.Vector3( 0, 0.0, 0.25 ),\n   new THREE.Vector3( 0, 0.0, 0.5 )\n ] );\n const cPoints = curve.getSpacedPoints(num_points);\n const  cObjects = curve.computeFrenetFrames(num_points, true);\n \n curve_data =  {\n   positions : cPoints,\n   tangents :cObjects.tangents,\n   normals : cObjects.normals,\n   binormals : cObjects.binormals,\n   numPoints : num_points\n }\n return curve;\n}\n \nfunction updateCurveData(curve_mesh, num_points){\n \n const geo_array = curve_mesh.geometry.attributes.position.array;\n \n // rebuild the curve\n const positions = Array(num_points);\n let i3 = 0;\n for (let i = 0; i < num_points ; i ++ ) {\n   if(i == num_points - 1){\n     positions[i] = new THREE.Vector3(\n       geo_array[i3 + 0],\n       geo_array[i3 + 1] + Math.abs(Math.sin(clock.getElapsedTime())),\n       geo_array[i3 + 2]);\n   }\n   else{\n     positions[i] = new THREE.Vector3(\n       geo_array[i3 + 0],\n       geo_array[i3 + 1],\n       geo_array[i3 + 2]);  \n   }\n   i3 += 3;\n }\n \n const curve = new THREE.CatmullRomCurve3(positions);\n const cPoints = curve.getSpacedPoints(num_points);\n const  cObjects = curve.computeFrenetFrames(num_points, true);\n \n // update curve_data interface\n curve_data =  {\n   positions : cPoints,\n   tangents :cObjects.tangents,\n   normals : cObjects.normals,\n   binormals : cObjects.binormals,\n   numPoints : num_points\n }\n \n return createCurveDataTexture(curve_data);\n}\nfunction setMeshTexture(texture){\n (debugPlaneMesh.material).map = texture;\n (debugPlaneMesh.material).dispose();\n (volumeMesh.material).uniforms['spectrum']['value'] = texture;\n (volumeMesh.material).dispose();\n}\nfunction render() {\n renderer.render(scene, camera);\n}\n// function onAudioMute(muteBtn: HTMLElement, gainNode: GainNode) {\n//   if (muteBtn.id == \"\") {\n//     gainNode.gain.value = 0;\n//     muteBtn.id = \"activated\";\n//     muteBtn.innerHTML = \"Unmute\";\n//   } else {\n//     gainNode.gain.value = 1;\n//     muteBtn.id = \"\";\n//     muteBtn.innerHTML = \"Mute\";\n//   }\n// }\n \n\n\nlet animationLoopId;\nconst spectrumAccum2 = []; \nlet scaledMelspectrum;\n// Utils:\nfunction arraySum(total, num) {\n    return total + num;\n}\n\nfunction onRecordClickHandler() {\n   let recording = recordButton.classList.contains(\"recording\");\n     if (!recording) {\n       recordButton.setAttribute(\"disabled\", true);\n       // start microphone stream using getUserMedia and runs the feature extraction\n       startMicRecordStream();\n     } else {\n       stopMicRecordStream();\n     }\n}\n \n// record native microphone input and do further audio processing on each audio buffer using the given callback functions\nfunction startMicRecordStream() {\n   if (navigator.mediaDevices.getUserMedia) {\n       console.log(\"Initializing audio...\");\n       navigator.mediaDevices.getUserMedia({ audio: true, video: false })\n       .then(startAudioProcessing)\n       .catch(function(message) {\n               throw \"Could not access microphone - \" + message;\n       });\n   } else {\n       throw \"Could not access microphone - getUserMedia not available\";\n   }\n}\n \nfunction startAudioProcessing(stream) {\n   gumStream = stream;\n   if (gumStream.active) {\n       // In most platforms where the sample rate is 44.1 kHz or 48 kHz,\n       // and the default bufferSize will be 4096, giving 10-12 updates/sec.\n       if (audioCtx.state == \"closed\") {\n           audioCtx = new AudioContext();\n       }\n       else if (audioCtx.state == \"suspended\") {\n           audioCtx.resume();\n       }\n \n       mic = audioCtx.createMediaStreamSource(gumStream);\n       gain = audioCtx.createGain();\n       gain.gain.setValueAtTime(0, audioCtx.currentTime);\n \n\n       let codeForProcessorModule = [\"https://cdn.jsdelivr.net/npm/essentia.js@0.1.3/dist/essentia-wasm.umd.js\",\n       \"https://cdn.jsdelivr.net/npm/essentia.js@0.1.3/dist/essentia.js-extractor.umd.js\", \n       \"https://raw.githack.com/MTG/essentia.js/master/examples/demos/melspectrogram-rt/melspectrogram-processor.js\",\n       \"https://unpkg.com/ringbuf.js@0.1.0/dist/index.js\"];\n \n       // inject Essentia.js code into AudioWorkletGlobalScope context, then setup audio graph and start animation\n       URLFromFiles(codeForProcessorModule)\n       .then((concatenatedCode) => {\n           audioCtx.audioWorklet.addModule(concatenatedCode)\n           .then(setupAudioGraph)\n           .catch( function moduleLoadRejected(msg) {\n               console.log(`There was a problem loading the AudioWorklet module code: \\n ${msg}`);\n           });\n       })\n       .catch((msg) => {\n           console.log(`There was a problem retrieving the AudioWorklet module code: \\n ${msg}`);\n       })\n       // set button to stop\n       recordButton.classList.add(\"recording\");\n       recordButton.innerHTML = \"STOP\";\n       recordButton.setAttribute(\"disabled\", false);\n   } else {\n       throw \"Mic stream not active\";\n   }\n}\n \nfunction setupAudioGraph() {\n   // 50ms of buffer, increase in case of glitches\n   let sab = exports.RingBuffer.getStorageForCapacity(melNumBands*18, Float32Array);\n   let rb = new exports.RingBuffer(sab, Float32Array);\n   audioReader = new exports.AudioReader(rb);\n \n   melspectrogramNode = new AudioWorkletNode(audioCtx, 'melspectrogram-processor', {\n       processorOptions: {\n           bufferSize: bufferSize,\n           hopSize: hopSize,\n           melNumBands: melNumBands,\n           sampleRate: audioCtx.sampleRate,\n       }\n   });\n \n   try {\n       melspectrogramNode.port.postMessage({\n           sab: sab,\n       });\n   } catch(_){\n       alert(\"No SharedArrayBuffer transfer support, try another browser.\");\n       recordButton.setAttribute(\"disabled\", true);\n       return;\n   }\n \n   // It seems necessary to connect the stream to a sink for the pipeline to work, contrary to documentataions.\n   // As a workaround, here we create a gain node with zero gain, and connect temp to the system audio output.\n   mic.connect(melspectrogramNode);\n   melspectrogramNode.connect(gain);\n   gain.connect(audioCtx.destination);\n \n   requestAnimationFrame(animateSpectrogram); // start plot animation\n}\n \nlet animationStart;\nlet elapsed;\n// draw melspectrogram frames\nfunction animateSpectrogram(timestamp) {\n   if (animationStart === undefined)\n       animationStart = timestamp;\n   elapsed = timestamp - animationStart;\n   animationLoopId = requestAnimationFrame(animateSpectrogram);\n   /* SAB method */\n   let melspectrumBuffer = new Float32Array(melNumBands);\n   if (audioReader.available_read() >= melNumBands) {\n       let toread = audioReader.dequeue(melspectrumBuffer);\n       if (toread !== 0) {\n           // scale spectrum values to 0 - 255\n           scaledMelspectrum = melspectrumBuffer.map(x => Math.round(x*35.5))\n           // save into full spectrogram for drawing on stop\n           spectrumAccum2.push(scaledMelspectrum);\n           console.log(scaledMelspectrum.length);\n       }\n   }\n}\n\n\nfunction stopMicRecordStream() {\n  if (animationLoopId) {\n      cancelAnimationFrame(animationLoopId);\n      drawFullSpectrogram();\n  }\n\n  // stop mic stream\n  gumStream.getAudioTracks().forEach(function(track) {\n      track.stop();\n      gumStream.removeTrack(track);\n  });\n  \n  audioCtx.close().then(function() {\n      // manage button state\n      recordButton.classList.rwmove(\"recording\");\n      recordButton.innerHTML = 'Mic';\n      \n      // disconnect nodes\n      mic.disconnect();\n      melspectrogramNode.disconnect();\n      gain.disconnect();\n      mic = undefined; \n      melspectrogramNode = undefined; \n      gain = undefined;\n\n      console.log(\"Stopped recording ...\");\n  });\n}\n \n \n\n \n \n \n \n \n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdD = function () {\n\tthrow new Error('define cannot be used indirect');\n};","__webpack_require__.amdO = {};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t947: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk\"] = self[\"webpackChunk\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [365,53,124], () => (__webpack_require__(761)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","camera","scene","renderer","controls","stats","raycaster","planeMesh","debugPlaneMesh","volumeMesh","pointer","clock","curveMesh","curve_data","AudioContext","audioCtx","WebGL","document","body","appendChild","gumStream","mic","gain","melspectrogramNode","audioReader","exports","Object","defineProperty","value","AudioReader","constructor","ringbuf","type","this","dequeue","buf","empty","pop","available_read","AudioWriter","enqueue","push","available_write","ParameterReader","mem","ArrayBuffer","array","Uint8Array","view","DataView","dequeue_change","o","index","getUint8","getFloat32","ParameterWriter","enqueue_change","setUint8","setFloat32","RingBuffer","static","capacity","BYTES_PER_ELEMENT","bytes","SharedArrayBuffer","sab","__proto__","isPrototypeOf","undefined","_type","byteLength","write_ptr","Uint32Array","read_ptr","storage","name","elements","rd","Atomics","load","wr","_storage_capacity","to_write","Math","min","_available_write","length","first_part","second_part","_copy","store","to_read","_available_read","full","rv","input","offset_input","output","offset_output","size","i","deinterleave","channel_count","channelCount","out_channel","interleaved_idx","j","interleave","out_idx","window","webkitAudioContext","e","message","navigatorCopy","navigator","mediaDevices","fileInput","getElementById","recordButton","onWindowResize","aspect","innerWidth","innerHeight","updateProjectionMatrix","setSize","render","onPointerMove","event","x","clientX","y","clientY","create3dDataTexture","width","height","depth","d","stride","z","texture","THREE","format","unpackAlignment","needsUpdate","createDataTexture","Float32Array","minFilter","magFilter","createCurveDataTexture","data","numPoints","pt_data","positions","tangents","normals","binormals","k","animationLoopId","addEventListener","loadFile","inputElement","loadAudioFromFile","files","then","buffer","async","audioBuffer","resampledMonoAudio","resampleAndMakeMono","powerToDb","melSpectrogram","sampleRate","hopLength","nMels","nFft","fMin","preprocessAudio","melSpec","max","Infinity","createMMSpectrumDataTexture","dataTexture","material","map","dispose","uniforms","antialias","setPixelRatio","devicePixelRatio","position","set","add","OrbitControls","domElement","minZoom","maxZoom","enablePan","update","planeGeo1","planeMat1","side","volumeGeometry","points","num_points","curve","cPoints","getSpacedPoints","cObjects","computeFrenetFrames","initCurveData","getPoints","geometry","setFromPoints","color","matrixAutoUpdate","volumeUniforms","FFT_SIZE","getElapsedTime","volumeMaterial","vertexShader","fragmentShader","transparent","computeBoundingBox","boundingBox","planeGeo","planeMat","visible","rotation","PI","gridHelper","Stats","dom","axesHelper","addHelpers","onRecordClickHandler","init","animate","requestAnimationFrame","curve_mesh","geo_array","attributes","Array","i3","abs","sin","updateCurveData","spectrumAccum2","scaledMelspectrum","animationStart","elapsed","classList","contains","cancelAnimationFrame","drawFullSpectrogram","getAudioTracks","forEach","track","stop","removeTrack","close","rwmove","innerHTML","disconnect","console","log","setAttribute","getUserMedia","audio","video","startAudioProcessing","catch","startMicRecordStream","stream","active","state","resume","createMediaStreamSource","createGain","setValueAtTime","currentTime","promises","file","fetch","response","text","Promise","all","texts","unshift","join","blob","Blob","URL","createObjectURL","URLFromFiles","concatenatedCode","audioWorklet","addModule","setupAudioGraph","msg","getStorageForCapacity","melNumBands","rb","AudioWorkletNode","processorOptions","bufferSize","hopSize","port","postMessage","_","alert","connect","destination","animateSpectrogram","timestamp","melspectrumBuffer","round","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","id","loaded","__webpack_modules__","call","m","amdD","Error","amdO","O","result","chunkIds","fn","priority","notFulfilled","fulfilled","keys","every","key","splice","r","definition","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}