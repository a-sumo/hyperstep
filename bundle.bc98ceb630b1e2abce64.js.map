{"version":3,"file":"bundle.bc98ceb630b1e2abce64.js","mappings":"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","sources":["webpack:///./node_modules/three/examples/jsm/controls/OrbitControls.js"],"sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t    removePointer( event );\n\n\t\t    if ( pointers.length === 0 ) {\n\n\t\t        scope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t        scope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t        scope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t    }\n\n\t\t    scope.dispatchEvent( _endEvent );\n\n\t\t    state = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onPointerCancel( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n"],"names":["_changeEvent","type","_startEvent","_endEvent","OrbitControls","constructor","object","domElement","super","undefined","console","warn","document","error","this","style","touchAction","enabled","target","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MIDDLE","touches","ONE","TWO","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","update","state","STATE","NONE","offset","quat","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","handleTouchMovePan","handleTouchMoveDolly","setPointerCapture","pointerId","push","addPointer","pointerType","trackPointer","onTouchStart","mouseAction","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","removePointer","releasePointerCapture","preventDefault","handleMouseWheel","needsUpdate","code","handleKeyDown","i","splice","pointer","passive"],"sourceRoot":""}