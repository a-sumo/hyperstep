(()=>{var e,n={2812:(e,n,t)=>{"use strict";var o=t(9477),a=t(9365),r=(t(5079),t(4327)),i=t(2524),s=t(6013);const l=t.p+"3e3ec63d65dbac197668e8a818ca1190.mp3";let _,c,d,m,u,p,f,v,x,b,h,y,g;t(8597),console.log(l),!1===r.Z.isWebGL2Available()&&document.body.appendChild(r.Z.getWebGL2ErrorMessage());try{g=new(window.AudioContext||window.webkitAudioContext)}catch(e){throw"Could not instantiate AudioContext: "+e.message}b=g.createAnalyser();const w=new s.GUI({width:200}),z={df_type:0,dist_func_tube:1,dist_func_box:1,dist_func_plane:1,df_sphere_tube:0,df_sphere_box:0,df_sphere_plane:0,df_tube_box:0,df_tube_plane:0,df_plane_box:0,scale_x:1,scale_y:1,scale_z:1,global_scale:.03,min_dist:0,max_dist:1,rot_x:0,rot_y:0,rot_z:0,translation_x:0,translation_y:0,translation_z:0,playback_rate:1,color_mode:0,color_preset_type:0,color_space:0,uni_color:"#9838ff",color_1:"#000000",color_2:"#ffffff",sample_rate:16e3,mel_spec_bins:229,fft_size:2048,spec_hop_length:512,f_min:30,f_max:8e3,dt_scale:.1,max_steps:100},C=document.getElementById("loadFileInput"),P=document.getElementById("audio"),k=window.URL||window.webkitURL;function F(){d.render(c,_)}function T(){_.aspect=window.innerWidth/window.innerHeight,_.updateProjectionMatrix(),d.setSize(window.innerWidth,window.innerHeight),F()}function E(e,n,t){const a=new Uint8Array(e*n*t*4);let r=0;for(let o=0;o<t;o++)for(let i=0;i<n;i++)for(let s=0;s<e;s++)a[r+0]=s/e*255,a[r+1]=i/n*255,a[r+2]=o/t*255,a[r+3]=255,r+=4;const i=new o.JUT(a,e,n,t);return i.format=o.wk1,i.minFilter=o.TyD,i.magFilter=o.TyD,i.unpackAlignment=1,i.needsUpdate=!0,i}function O(e,n){const t=new Float32Array(e*n*4);let a=0;for(let o=0;o<n;o++)for(let n=0;n<e;n++)t[a+0]=0,t[a+1]=0,t[a+2]=0,t[a+3]=1,a+=4;const r=new o.IEO(t,e,n);return r.format=o.wk1,r.type=o.VzW,r.minFilter=o.TyD,r.magFilter=o.TyD,r.unpackAlignment=1,r.needsUpdate=!0,r}function A(e){const n=new Float32Array(4*e.numPoints*4);let t=0;const a=[e.positions,e.tangents,e.normals,e.binormals];for(let o=0;o<4;o++)for(let r=0;r<e.numPoints;r++)n[t+0]=a[o][r].x,n[t+1]=a[o][r].y,n[t+2]=a[o][r].z,n[t+3]=1,t+=4;const r=new o.IEO(n,e.numPoints,1);return r.type=o.VzW,r.format=o.wk1,r.minFilter=o.TyD,r.magFilter=o.TyD,r.unpackAlignment=1,r.needsUpdate=!0,r}C.addEventListener("change",(()=>{return e=C,y=(0,i.lj)(e.files[0]),h=k.createObjectURL(e.files[0]),P.src=h,y.then((e=>async function(e){const n=await(0,i.qn)(e);return(0,i.ZP)((0,i.k5)(n,{sampleRate:z.sample_rate,hopLength:z.spec_hop_length,nMels:z.mel_spec_bins,nFft:z.fft_size,fMin:z.f_min,fMax:z.f_max}))}(e))).then((e=>function(e,n,t){const a=new Float32Array(n*t*4);let r=0;for(let o=0;o<t;o++)for(let t=0;t<n;t++)a[r+0]=e[t][o],a[r+1]=0,a[r+2]=0,a[r+3]=0,r+=4;for(var i=-1/0,s=1/0,l=0;l<a.length;l++)a[l]>i&&(i=a[l]);for(l=0;l<a.length;l++)a[l]<s&&(s=a[l]);for(r=0;r<n*t*4;)a[r]=(a[r]-s)/(i-s),r+=4;const _=new o.IEO(a,n,t);return _.format=o.wk1,_.type=o.VzW,_.minFilter=o.TyD,_.magFilter=o.TyD,_.unpackAlignment=1,_.needsUpdate=!0,_}(e,e.length,229))).then((e=>{return n=e,u.material.map=n,u.material.dispose(),p.material.uniforms.spectrum.value=n,void p.material.dispose();var n}));var e})),function(){c=new o.xsS,d=new o.CP7({antialias:!0}),d.setPixelRatio(window.devicePixelRatio),d.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(d.domElement);const e=window.innerWidth/window.innerHeight;_=new o.cPb(45,e,.01,1e3),_.position.set(-2,1,2),c.add(_),f=new o.SUY,m=new a.z(_,d.domElement),m.addEventListener("change",F),m.minZoom=.1,m.maxZoom=10,m.enablePan=!1,m.update(),function(){w.add(z,"playback_rate").step(.001).name("playback_rate").onChange((function(e){p.material.uniforms.playback_rate.value=1/e,P.playbackRate=e}));const e=w.addFolder("distance function");e.add(z,"min_dist").step(.01).name("min_dist").onChange((function(e){p.material.uniforms.min_dist.value=e})),e.add(z,"max_dist").step(.01).name("max_dist").onChange((function(e){p.material.uniforms.max_dist.value=e})),e.add(z,"df_type",{"Sphere - Tube":0,"Sphere - Box":1,"Sphere - Plane":2,"Tube - Box":3,"Tube - Plane":4,"Plane - Box":5}).name("sphere/tube").onChange((function(e){p.material.uniforms.df_type.value=e})),e.add(z,"df_sphere_tube",0,1).step(.01).name("sphere/tube").onChange((function(e){p.material.uniforms.df_sphere_tube.value=e})),e.add(z,"df_sphere_box",0,1).step(.01).name("sphere/box").onChange((function(e){p.material.uniforms.df_sphere_box.value=e})),e.add(z,"df_sphere_plane",0,1).step(.01).name("sphere/plane").onChange((function(e){p.material.uniforms.df_sphere_plane.value=e})),e.add(z,"df_tube_box",0,1).step(.01).name("tube/box").onChange((function(e){p.material.uniforms.df_tube_box.value=e})),e.add(z,"df_tube_plane",0,1).step(.01).name("tube/plane").onChange((function(e){p.material.uniforms.df_tube_plane.value=e})),e.add(z,"df_plane_box",0,1).step(.01).name("plane/box").onChange((function(e){p.material.uniforms.df_plane_box.value=e})),e.add(z,"global_scale").step(1e-4).name("global_scale").onChange((function(e){p.material.uniforms.global_scale.value=e}));const n=w.addFolder("transforms");n.add(z,"scale_x",0,1).step(1e-5).name("scale_x").onChange((function(e){p.material.uniforms.df_scale.value=new o.Pa4(e,z.scale_y,z.scale_z)})),n.add(z,"scale_y",0,1).step(1e-5).name("scale_y").onChange((function(e){p.material.uniforms.df_scale.value=new o.Pa4(z.scale_x,e,z.scale_z)})),n.add(z,"scale_z",0,1).step(1e-5).name("scale_z").onChange((function(e){p.material.uniforms.df_scale.value=new o.Pa4(z.scale_x,z.scale_y,e)})),n.add(z,"rot_x",-360,360).step(.1).name("rotate_x").onChange((function(e){p.material.uniforms.df_rot.value=new o.Pa4(e,z.rot_y,z.rot_z)})),n.add(z,"rot_y",-360,360).step(.1).name("rotate_y").onChange((function(e){p.material.uniforms.df_rot.value=new o.Pa4(z.rot_x,e,z.rot_z)})),n.add(z,"rot_z",-360,360).step(.1).name("rotate_z").onChange((function(e){p.material.uniforms.df_rot.value=new o.Pa4(z.rot_x,z.rot_y,e)})),n.add(z,"translation_x").step(.01).name("translate_x").onChange((function(e){p.material.uniforms.df_translation.value=new o.Pa4(e,z.translation_y,z.translation_z)})),n.add(z,"translation_y").step(.01).name("translate_y").onChange((function(e){p.material.uniforms.df_translation.value=new o.Pa4(z.translation_x,e,z.translation_z)})),n.add(z,"translation_z").step(.01).name("translate_z").onChange((function(e){p.material.uniforms.df_translation.value=new o.Pa4(z.translation_x,z.translation_y,e)}));const t=w.addFolder("color");t.add(z,"color_mode",{Presets:0,Gradient:1,Unicolor:2}).name("color_mode").onChange((function(e){p.material.uniforms.color_mode.value=e})),t.add(z,"color_preset_type",0,4).step(1).name("color_preset").onChange((function(e){p.material.uniforms.color_preset_type.value=e})),t.add(z,"color_space",{RBG:0,HSV:1}).name("color_space").onChange((function(e){p.material.uniforms.color_space.value=e})),t.addColor(z,"uni_color").name("unicolor").onChange((function(e){p.material.uniforms.uni_color.value=new o.Ilk(e)})),t.addColor(z,"color_1").name("color_1").onChange((function(e){p.material.uniforms.color_1.value=new o.Ilk(e)})),t.addColor(z,"color_2").name("color_2").onChange((function(e){p.material.uniforms.color_2.value=new o.Ilk(e)}));const a=w.addFolder("spectrogram");a.add(z,"sample_rate",16e3,41e3).step(1e3).name("sample_rate").onChange((function(e){})),a.add(z,"mel_spec_bins",229,512).step(1).name("mel_spec_bins"),a.add(z,"f_min",30).step(10).name("f_min"),a.add(z,"f_max",30,16e3).step(10).name("f_max");const r=w.addFolder("raycasting");r.add(z,"dt_scale",.005).step(.001).name("dt_scale").onChange((function(e){p.material.uniforms.dt_scale.value=e})),r.add(z,"max_steps",1).step(1).name("max_steps").onChange((function(e){p.material.uniforms.max_steps.value=e}))}();let n=new o._12(2,2),t=new o.vBJ({map:O(4,4),side:o.ehD});u=new o.Kj0(n,t),u.position.set(-2,0,-1);const r=function(e){const n=new o.YT8([new o.Pa4(0,0,-.5),new o.Pa4(0,0,-.25),new o.Pa4(0,0,0),new o.Pa4(0,0,.25),new o.Pa4(0,0,.5)]),t=n.getSpacedPoints(5),a=n.computeFrenetFrames(5,!0);return x={positions:t,tangents:a.tangents,normals:a.normals,binormals:a.binormals,numPoints:5},n}().getPoints(5),i=(new o.u9r).setFromPoints(r),s=new o.nls({color:16711680});v=new o.x12(i,s),v.matrixAutoUpdate=!1;const l=new o.DvJ(1,1,1),b={volume_scale:{value:new o.Pa4(1,1,1)},volume:{value:E(4,4,4)},volume_dims:{value:new o.Pa4(4,4,4)},min_dist:{value:z.min_dist},max_dist:{value:z.max_dist},color_mode:{value:z.color_mode},color_preset_type:{value:z.color_preset_type},color_space:{value:z.color_space},uni_color:{value:new o.Ilk(z.uni_color)},color_1:{value:new o.Ilk(z.color_1)},color_2:{value:new o.Ilk(z.color_2)},aabb_min:{value:new o.Pa4},aabb_max:{value:new o.Pa4},dt_scale:{value:z.dt_scale},max_steps:{value:z.max_steps},spectrum:{value:O(1024,1024)},curve_data:{value:A(x)},time:{value:f.getElapsedTime()},playback_progress:{value:0},df_sphere_tube:{value:z.df_sphere_tube},df_sphere_box:{value:z.df_sphere_box},df_sphere_plane:{value:z.df_sphere_plane},df_tube_box:{value:z.df_tube_box},df_tube_plane:{value:z.df_tube_plane},df_plane_box:{value:z.df_plane_box},playback_rate:{value:1},df_translation:{value:new o.Pa4(z.translation_x,z.translation_y,z.translation_z)},df_rot:{value:new o.Pa4(z.rot_x,z.rot_y,z.rot_z)},df_scale:{value:new o.Pa4(z.scale_x,z.scale_y,z.scale_z)},global_scale:{value:z.global_scale},df_type:{value:0}},h=new o.jyz({uniforms:b,vertexShader:"\nuniform vec3 volume_scale;\nout vec3 vray_dir;\nflat out vec3 transformed_eye;\n\nvoid main(void) {\n\tvec3 volume_translation = vec3(0.5) - volume_scale * 0.5;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1);\n\ttransformed_eye = (cameraPosition - volume_translation) / volume_scale;\n\tvray_dir = position - transformed_eye;\n}",fragmentShader:"\nprecision highp int;\nprecision highp float;\nin vec3 vray_dir;\nflat in vec3 transformed_eye;\nconst float Epsilon = 1e-10;\n// Scene\nuniform highp sampler3D volume;\nuniform highp sampler2D spectrum;\nuniform highp sampler2D curve_data;\nuniform vec3 aabb_min;\nuniform vec3 aabb_max;\n\n// playback \nuniform float time;\nuniform float playback_progress;\nuniform float playback_rate;\n\n//distance field \nuniform int df_type;\nuniform vec3 df_scale;\nuniform float global_scale;\nuniform float df_sphere_tube;\nuniform float df_sphere_box;\nuniform float df_sphere_plane;\nuniform float df_tube_box;\nuniform float df_tube_plane;\nuniform float df_plane_box;\nuniform vec3 df_rot;\nuniform vec3 df_translation;\nuniform float min_dist;\nuniform float max_dist;\n\n// raycasting volume\nuniform float dt_scale;\nuniform int max_steps;\nuniform ivec3 volume_dims;\nuniform vec3 volume_scale;\nuniform int color_space;\nuniform int color_mode;\nuniform int color_preset_type;\nuniform vec3 uni_color;\nuniform vec3 color_1;\nuniform vec3 color_2;\n\n\n// Axis-Aligned Bounding Box intersection\nvec2 intersect_box(vec3 aabbMin, vec3 aabbMax, vec3 orig, vec3 dir) {\n\n\tvec3 inv_dir = 1.0 / dir;\n\tvec3 tmin_tmp = (aabbMin - orig) * inv_dir;\n\tvec3 tmax_tmp = (aabbMax - orig) * inv_dir;\n\tvec3 tmin = min(tmin_tmp, tmax_tmp);\n\tvec3 tmax = max(tmin_tmp, tmax_tmp);\n\tfloat t0 = max(tmin.x, max(tmin.y, tmin.z));\n\tfloat t1 = min(tmax.x, min(tmax.y, tmax.z));\n\treturn vec2(t0, t1);\n}\n// Color conversions\n// from: http://lolengine.net/blog/2013/07/27/rgb-to-hsv-in-gls\nvec3 rgb2hsv(vec3 c) {\n  vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n  vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n  vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n  float d = q.x - min(q.w, q.y);\n  float e = 1.0e-10;\n  return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c) {\n  c = vec3(c.x, clamp(c.yz, 0.0, 1.0));\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat linear_to_srgb(float x) {\n\tif (x <= 0.0031308f) {\n\t\treturn 12.92f * x;\n\t}\n\treturn 1.055f * pow(x, 1.f / 2.4f) - 0.055f;\n}\n\n// Clamping\nfloat smoothClamp(float x, float a, float b)\n{\n    return smoothstep(0., 1., (x - a)/(b - a))*(b - a) + a;\n}\n\nfloat softClamp(float x, float a, float b)\n{\n    return smoothstep(0., 1., (2./3.)*(x - a)/(b - a) + (1./6.))*(b - a) + a;\n}\n\nfloat sdSphere( vec3 p, vec3 offset, float scale )\n{\n  float dist = length(p - offset) - scale;\n  return 1.0 - clamp(dist, 0.0, 1.0);\n}\n\nfloat sdPlane( vec3 p, vec3 n, float h )\n{\n  // n must be normalized\n  return dot(p,n) + h;\n}\n\nfloat sdRoundBox( vec3 p, vec3 b, float r )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n}\n\n//3d rotation: https://gist.github.com/yiwenl/3f804e80d0930e34a0b33359259b556c\nmat4 rotationMatrix(vec3 axis, float angle) {\n  axis = normalize(axis);\n  float s = sin(angle);\n  float c = cos(angle);\n  float oc = 1.0 - c;\n  \n  return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,\n              oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,\n              oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,\n              0.0,                                0.0,                                0.0,                                1.0);\n}\n\nvec3 rotate(vec3 v, vec3 axis, float angle) {\n  mat4 m = rotationMatrix(axis, angle);\n  return (m * vec4(v, 1.0)).xyz;\n}\nfloat distCurve(vec3 p){\n  // Experimental: compute distance from 3d curve\n  float min_d = 10.0;\n  float du = 0.2;\n  float u = 0.0;\n  while(u < 1.0 ){\n    vec2 v_pos = vec2(u, 0.0);\n    // point normals are stored in the 3rd row of the texture\n    // whose UV.v coordinate is 0.75\n    vec2 v_norm = vec2(u, 0.75);\n    vec3 dir_vec = p - texture(curve_data, v_pos).rgb ;\n\n    min_d = min(min_d, length(dir_vec));\n    u += du;\n  }\n  return min_dist;\n}\n\nvoid main(void) {\n\tvec3 ray_dir = normalize(vray_dir);\n  vec4 color = vec4(0.0);\n\tvec2 t_hit = intersect_box(aabb_min, aabb_max, transformed_eye, ray_dir);\n\n\tif (t_hit.x > t_hit.y) {\n\t\tdiscard;\n\t}\n\n\tt_hit.x = max(t_hit.x, 0.0);\n\tvec3 dt_vec = 1.0 / (vec3(volume_dims) * abs(ray_dir));\n\tfloat dt = dt_scale * min(dt_vec.x, min(dt_vec.y, dt_vec.z));\n\tvec3 p = transformed_eye + (t_hit.x + dt) * ray_dir;\n\n  vec4 spec_val = texture(spectrum, vec2(0.0, 0.0));\n  spec_val.rgba = vec4(0.0);\n\n  // Frequency coordinate\n  float u_coords = 0.0;\n  // Time coordinate\n  float v_coords = 0.0;\n\n  float dist = 0.0;\n\n  int step = 0;\n\tfor (float t = t_hit.x; t < t_hit.y; t += dt) {\n    if (step > max_steps){\n      break;\n    }\n\n    // position used for distance field calculation\n    vec3 p_dist = p;\n    vec3 p_dist_r = vec3(0.0);\n    vec3 p_dist_t = vec3(0.0);\n    vec3 p_dist_r_t = vec3(0.0);\n\n    // rotate\n    p_dist_r = rotate(p_dist, vec3(1.0, 0.0, 0.0) , radians( df_rot.x));\n    p_dist_r = rotate(p_dist_r, vec3(0.0, 1.0, 0.0) , radians( df_rot.y));\n    p_dist_r = rotate(p_dist_r, vec3(0.0, 0.0, 1.0) , radians( df_rot.z));\n\n    // translate\n    p_dist_t = p_dist - df_translation;\n    \n    // rotate then translate \n    p_dist_r_t = p_dist_r - df_translation;\n\n    // distance function\n    // sphere\n    float dist_sphere = clamp(length(p_dist_r_t), 0.0, 1.0);\n    float u_coords_sphere = playback_progress;\n\n    // tube\n    float dist_tube = length(p_dist_r_t.xy);\n    float u_coords_tube = (p_dist_r_t.z - 0.5) / playback_rate + playback_progress;\n\n    // plane\n    // normal vector \n    vec3 plane_n = vec3(0.0);\n    plane_n = rotate(vec3(0.0,1.0,0.0), vec3(1.0, 0.0, 0.0) , radians( df_rot.x));\n    plane_n = rotate(plane_n, vec3(0.0, 1.0, 0.0) , radians( df_rot.y));\n    plane_n = rotate(plane_n, vec3(0.0, 0.0, 1.0) , radians( df_rot.z));\n    float dist_plane = dot(p_dist_t, plane_n);\n    float u_coords_plane = playback_progress;\n\n    // round box \n    float dist_box = sdRoundBox(p_dist_r_t, df_scale * global_scale * 1.3, 0.0);\n    float u_coords_box = u_coords_sphere;\n\n    // TODO: curve\n    float dist_curve = distCurve(p_dist);\n    float u_coords_curve = u_coords_tube;\n\n    // Interpolate between distance functions\n    if(df_type ==  0){\n      u_coords =  mix(u_coords_sphere, u_coords_tube, df_sphere_tube);\n      dist =  mix(dist_sphere, dist_tube, df_sphere_tube);\n    }\n    else if ( df_type == 1){\n      u_coords =  mix(u_coords_sphere, u_coords_box, df_sphere_box);\n      dist =  mix(dist_sphere, dist_box, df_sphere_box);      \n    }\n    else if ( df_type == 2){\n      u_coords =  mix(u_coords_sphere, u_coords_plane, df_sphere_plane);\n      dist =  mix(dist_sphere, dist_plane, df_sphere_plane);         \n    }\n    else if ( df_type == 3){\n      u_coords =  mix(u_coords_tube, u_coords_box, df_tube_box);\n      dist =  mix(dist_tube, dist_box, df_tube_box);   \n    }\n    else if (df_type == 4){\n      u_coords =  mix(u_coords_tube, u_coords_plane, df_tube_plane);\n      dist =  mix(dist_tube, dist_plane, df_tube_plane);   \n    }\n    else if (df_type == 5){\n      u_coords =  mix(u_coords_plane, u_coords_box, df_plane_box);\n      dist =  mix(dist_plane, dist_box, df_plane_box);   \n    }\n\n    v_coords = length(df_scale) * global_scale / max(pow(dist,2.0), Epsilon);\n\n    spec_val = texture(spectrum, vec2(u_coords, v_coords));\n\n    // THREE.js sets values outside texture borders(outside the [0,1] x [0,1] range) \n    // to the values at the borders\n    // This an undesired effect for our purposes so we set those values \n    // to zero. \n    if (u_coords < 0. || u_coords > 1. || \n      v_coords < 0. || v_coords > 1.){\n      spec_val = vec4(0.0);\n    }\n    // Soft Clamp values\n    if (dist < min_dist || dist > max_dist){\n      spec_val *= softClamp(dist - max_dist, 0., 1.);\n    }\n    vec4 val_color = vec4(0.0);\n\n    float mixValue = max(dist, Epsilon);\n    vec3 mix_color = vec3(0.0);\n    if (color_mode == 0) {\n      // Use color presets\n      vec4 preset_color = vec4(pow(spec_val.r,10.0) * 1./dist,\n      pow(spec_val.r, 2.0),\n      pow(spec_val.r, 0.0) * 1./dist, spec_val.r) ;\n\n      // swizzle color components to define presets\n      if ( color_preset_type == 0){\n        val_color = preset_color.xyzw;\n      }\n      if ( color_preset_type == 1){\n        val_color = preset_color.zxyw;\n      }\n      else if(color_preset_type == 2) {\n        val_color = preset_color.zyxw;\n      }\n      else if(color_preset_type == 3) {\n        val_color = preset_color.xzyw;\n      }\n      else if(color_preset_type == 4) {\n        val_color = preset_color.yxzw;\n      }\n    }\n    else if (color_mode == 1) {\n      // Use color  gradient\n      if (color_space == 0) {\n        // mix color in rgb space\n        mix_color = mix(color_1, color_2, mixValue);\n      }\n      else if (color_space == 1) {\n        // Mix color in  hsv space\n        vec3 hsv1 = rgb2hsv(color_1);\n        vec3 hsv2 = rgb2hsv(color_2);\n        float hue = (mod(mod((hsv2.x - hsv1.x), 1.) + 1.5, 1.) - 0.5) * mixValue + hsv1.x;\n        vec3 hsv = vec3(hue, mix(hsv1.yz, hsv2.yz, mixValue));\n        mix_color = hsv2rgb(hsv);\n      }\n      val_color = vec4(mix_color, spec_val.r);\n    }\n    else if (color_mode == 2) {\n      // Use unique color\n\n      val_color = vec4(\n        pow(spec_val.r, (1.0 - uni_color.x) * 10.0), \n        pow(spec_val.r, (1.0 - uni_color.y) * 10.0), \n        pow(spec_val.r, (1.0 - uni_color.z) * 10.0), \n        spec_val.r);\n        val_color.xyz *= 1.0 / max(dist, Epsilon);\n    }\n    // Opacity correction\n    val_color.w = 1.0 - pow(1.0 - val_color.w, dt_scale);\n\n    // Alpha-blending\n    color.xyz += (1.0 - color.w) * val_color.w * val_color.xyz;\n    color.w += (1.0 - color.w) * val_color.w;\n    if (color.w > 0.99) {\n      break;\n    }\n    if (val_color.w < 0.0) {\n      discard;\n    }\n    // step along the ray direction\n\t\tp += ray_dir * dt;\n    step++;\n\t}\n\n  color.x = linear_to_srgb(color.x);\n  color.y = linear_to_srgb(color.y);\n  color.z = linear_to_srgb(color.z);\n\n  gl_FragColor = color;\n\n}\n",side:o.ehD,transparent:!0});p=new o.Kj0(l,h),p.matrixAutoUpdate=!0,p.geometry.computeBoundingBox(),p.material.uniforms.aabb_min.value=p.geometry.boundingBox.min,p.material.uniforms.aabb_max.value=p.geometry.boundingBox.max,c.add(p),window.addEventListener("resize",T),F()}(),function e(){requestAnimationFrame(e),p.material.uniforms.time.value=f.getElapsedTime(),p.material.uniforms.curve_data.value=function(e,n){const t=e.geometry.attributes.position.array,a=Array(5);let r=0;for(let e=0;e<5;e++)a[e]=4==e?new o.Pa4(t[r+0],t[r+1]+Math.abs(Math.sin(f.getElapsedTime())),t[r+2]):new o.Pa4(t[r+0],t[r+1],t[r+2]),r+=3;const i=new o.YT8(a),s=i.getSpacedPoints(5),l=i.computeFrenetFrames(5,!0);return x={positions:s,tangents:l.tangents,normals:l.normals,binormals:l.binormals,numPoints:5},A(x)}(v),p.material.uniforms.playback_progress.value=P.currentTime/P.duration,F()}()},6470:()=>{},5751:()=>{},4673:()=>{},3522:()=>{},7159:()=>{},2664:()=>{},2967:()=>{}},t={};function o(e){var a=t[e];if(void 0!==a)return a.exports;var r=t[e]={id:e,loaded:!1,exports:{}};return n[e].call(r.exports,r,r.exports,o),r.loaded=!0,r.exports}o.m=n,o.amdD=function(){throw new Error("define cannot be used indirect")},o.amdO={},e=[],o.O=(n,t,a,r)=>{if(!t){var i=1/0;for(c=0;c<e.length;c++){for(var[t,a,r]=e[c],s=!0,l=0;l<t.length;l++)(!1&r||i>=r)&&Object.keys(o.O).every((e=>o.O[e](t[l])))?t.splice(l--,1):(s=!1,r<i&&(i=r));if(s){e.splice(c--,1);var _=a();void 0!==_&&(n=_)}}return n}r=r||0;for(var c=e.length;c>0&&e[c-1][2]>r;c--)e[c]=e[c-1];e[c]=[t,a,r]},o.d=(e,n)=>{for(var t in n)o.o(n,t)&&!o.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),o.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),o.p="/hyperstep",(()=>{var e={414:0};o.O.j=n=>0===e[n];var n=(n,t)=>{var a,r,[i,s,l]=t,_=0;if(i.some((n=>0!==e[n]))){for(a in s)o.o(s,a)&&(o.m[a]=s[a]);if(l)var c=l(o)}for(n&&n(t);_<i.length;_++)r=i[_],o.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return o.O(c)},t=self.webpackChunk=self.webpackChunk||[];t.forEach(n.bind(null,0)),t.push=n.bind(null,t.push.bind(t))})();var a=o.O(void 0,[365,53,671],(()=>o(2812)));a=o.O(a)})();
//# sourceMappingURL=bundle.579ad9e31ed0976e378e.js.map