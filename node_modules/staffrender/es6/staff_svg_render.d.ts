export interface NoteInfo {
    start: number;
    length: number;
    pitch: number;
    intensity: number;
}
export interface TempoInfo {
    start: number;
    qpm: number;
}
export interface KeySignatureInfo {
    start: number;
    key: number;
}
export interface TimeSignatureInfo {
    start: number;
    numerator: number;
    denominator: number;
}
export interface ScoreInfo {
    notes: NoteInfo[];
    tempos?: TempoInfo[];
    keySignatures?: KeySignatureInfo[];
    timeSignatures?: TimeSignatureInfo[];
}
export interface QNote {
    start: number;
    length: number;
    vSteps: number;
    accidental: number;
    opacity: number;
    pitch: number;
    xHeadRight: number;
    tiedFrom?: QNote;
    g?: SVGElement;
}
export interface MusicBlock {
    maxVStep: number;
    minVStep: number;
    restToNextLength: number;
    isBarBeginning: boolean;
    notes: QNote[];
}
export declare const MAX_QUARTER_DIVISION = 16;
export declare enum ScrollType {
    PAGE = 0,
    NOTE = 1,
    BAR = 2
}
export interface StaffRenderConfig {
    noteHeight?: number;
    noteSpacing?: number;
    pixelsPerTimeStep?: number;
    noteRGB?: string;
    activeNoteRGB?: string;
    defaultKey?: number;
    scrollType?: ScrollType;
}
export declare class StaffSVGRender {
    scoreInfo: ScoreInfo;
    private config;
    private height;
    private width;
    private parentElement;
    private div;
    private staffSVG;
    private staffG;
    private linesG;
    private musicG;
    private signaturesG;
    private overlaySVG;
    private overlayG;
    private signaturesQuarters;
    private signaturesBlinking;
    private scale;
    private vStepSize;
    private hStepSize;
    private staffOffset;
    private clef;
    private key;
    private lastBar;
    private barAccidentals;
    private timeSignatureNumerator;
    private timeSignatureDenominator;
    private signaturesList;
    private signatureCurrent;
    private signatureNext;
    private initialRest;
    private musicBlockMap;
    private playingNotes;
    private scrollType;
    private ticking;
    private lastKnownScrollLeft;
    private lastQ;
    constructor(score: ScoreInfo, config: StaffRenderConfig, div: HTMLDivElement);
    clear(): void;
    private isPaintingActiveNote;
    redraw(activeNote?: NoteInfo, scrollIntoView?: boolean): number;
    private drawMusicBlock;
    private drawBarIfNeeded;
    private drawRests;
    private redrawStaff;
    private clearSignatureOverlay;
    private drawSignaturesIfNeeded;
    private drawSignatures;
    private changeKeySignatureIfNeeded;
    private changeTimeSignatureIfNeeded;
    private changeAndDrawSignaturesIfNeeded;
    private getBarLength;
    private handleScrollEvent;
    private scrollIntoViewIfNeeded;
    private updateVerticalBoundaries;
    private setFill;
    private setStroke;
    private getColor;
    private getOpacity;
    private getGroup;
    private highlightElement;
    private getBarBeginnings;
    private quartersToTime;
    private timeToQuarters;
    private setDetails;
    private getQNote;
    private splitQNote;
    private analyzePitch;
    private getPitchDetails;
}
